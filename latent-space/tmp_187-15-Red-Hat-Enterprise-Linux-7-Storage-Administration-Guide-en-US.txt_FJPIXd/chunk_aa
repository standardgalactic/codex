Red Hat Enterprise Linux 7
Storage Administration Guide
Deploying and configuring single-node storage in Red Hat Enterprise Linux 7
Last Updated: 2018-08-28


Red Hat Enterprise Linux 7 Storage Administration Guide
Deploying and configuring single-node storage in Red Hat Enterprise Linux 7
Milan Navrátil
Red Hat Customer Content Services
Jacquelynn East
Red Hat Customer Content Services
Don Domingo
Red Hat Customer Content Services
Josef Bacik
Server Development Kernel File System
jwhiter@redhat.com
Disk Quotas
Kamil Dudka
Base Operating System Core Services - BRNO
kdudka@redhat.com
Access Control Lists
Hans de Goede
Base Operating System Installer
hdegoede@redhat.com
Partitions
Harald Hoyer
Engineering Software Engineering
harald@redhat.com
File Systems
Dennis Keefe
Base Operating Systems Kernel Storage
dkeefe@redhat.com
VDO
Doug Ledford
Server Development Hardware Enablement
dledford@redhat.com
RAID
Daniel Novotny
Base Operating System Core Services - BRNO
dnovotny@redhat.com
The /proc File System
Nathan Straz
Quality Engineering QE - Platform
nstraz@redhat.com

GFS2
Andy Walsh
Base Operating Systems Kernel Storage
awalsh@redhat.com
VDO
David Wysochanski
Server Development Kernel Storage
dwysocha@redhat.com
LVM/LVM2
Michael Christie
Server Development Kernel Storage
mchristi@redhat.com
Online Storage
Sachin Prabhu
Software Maintenance Engineering
sprabhu@redhat.com
NFS
Rob Evers
Server Development Kernel Storage
revers@redhat.com
Online Storage
David Howells
Server Development Hardware Enablement
dhowells@redhat.com
FS-Cache
David Lehman
Base Operating System Installer
dlehman@redhat.com
Storage configuration during installation
Jeff Moyer
Server Development Kernel File System
jmoyer@redhat.com
Solid-State Disks
Eric Sandeen
Server Development Kernel File System
esandeen@redhat.com
ext3, ext4, XFS, Encrypted File Systems
Mike Snitzer
Server Development Kernel Storage
msnitzer@redhat.com
I/O Stack and Limits
Legal Notice
Copyright © 2018 Red Hat, Inc.
This document is licensed by Red Hat under the Creative Commons Attribution-ShareAlike 3.0
Unported License. If you distribute this document, or a modified version of it, you must provide
attribution to Red Hat, Inc. and provide a link to the original. If the document is modified, all Red Hat
trademarks must be removed.
Red Hat, as the licensor of this document, waives the right to enforce, and agrees not to assert,
Section 4d of CC-BY-SA to the fullest extent permitted by applicable law.
Red Hat, Red Hat Enterprise Linux, the Shadowman logo, JBoss, OpenShift, Fedora, the Infinity
logo, and RHCE are trademarks of Red Hat, Inc., registered in the United States and other
countries.
Linux ® is the registered trademark of Linus Torvalds in the United States and other countries.
Java ® is a registered trademark of Oracle and/or its affiliates.
XFS ® is a trademark of Silicon Graphics International Corp. or its subsidiaries in the United States
and/or other countries.
MySQL ® is a registered trademark of MySQL AB in the United States, the European Union and
other countries.
Node.js ® is an official trademark of Joyent. Red Hat Software Collections is not formally related to
or endorsed by the official Joyent Node.js open source or commercial project.
The OpenStack ® Word Mark and OpenStack logo are either registered trademarks/service marks
or trademarks/service marks of the OpenStack Foundation, in the United States and other countries
and are used with the OpenStack Foundation's permission. We are not affiliated with, endorsed or
sponsored by the OpenStack Foundation, or the OpenStack community.
All other trademarks are the property of their respective owners.
Abstract
This guide provides instructions on how to effectively manage storage devices and file systems on
Red Hat Enterprise Linux 7. It is intended for use by system administrators with basic to
intermediate knowledge of Red Hat Enterprise Linux or Fedora.

Red Hat Subject Matter Experts
Contributors
Edited by
Marek Suchánek
Red Hat Customer Content Services
msuchane@redhat.com
Apurva Bhide
Red Hat Customer Content Services
abhide@redhat.com

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
Table of Contents
CHAPTER 1. OVERVIEW
1.1. NEW FEATURES AND ENHANCEMENTS IN RED HAT ENTERPRISE LINUX 7
PART I. FILE SYSTEMS
CHAPTER 2. FILE SYSTEM STRUCTURE AND MAINTENANCE
2.1. OVERVIEW OF FILESYSTEM HIERARCHY STANDARD (FHS)
2.2. SPECIAL RED HAT ENTERPRISE LINUX FILE LOCATIONS
2.3. THE /PROC VIRTUAL FILE SYSTEM
2.4. DISCARD UNUSED BLOCKS
CHAPTER 3. THE XFS FILE SYSTEM
3.1. CREATING AN XFS FILE SYSTEM
3.2. MOUNTING AN XFS FILE SYSTEM
3.3. XFS QUOTA MANAGEMENT
3.4. INCREASING THE SIZE OF AN XFS FILE SYSTEM
3.5. REPAIRING AN XFS FILE SYSTEM
3.6. SUSPENDING AN XFS FILE SYSTEM
3.7. BACKING UP AND RESTORING XFS FILE SYSTEMS
3.8. CONFIGURING ERROR BEHAVIOR
3.9. OTHER XFS FILE SYSTEM UTILITIES
3.10. MIGRATING FROM EXT4 TO XFS
CHAPTER 4. THE EXT3 FILE SYSTEM
4.1. CREATING AN EXT3 FILE SYSTEM
4.2. CONVERTING TO AN EXT3 FILE SYSTEM
4.3. REVERTING TO AN EXT2 FILE SYSTEM
CHAPTER 5. THE EXT4 FILE SYSTEM
5.1. CREATING AN EXT4 FILE SYSTEM
5.2. MOUNTING AN EXT4 FILE SYSTEM
5.3. RESIZING AN EXT4 FILE SYSTEM
5.4. BACKING UP EXT2, EXT3, OR EXT4 FILE SYSTEMS
5.5. RESTORING EXT2, EXT3, OR EXT4 FILE SYSTEMS
5.6. OTHER EXT4 FILE SYSTEM UTILITIES
CHAPTER 6. BTRFS (TECHNOLOGY PREVIEW)
6.1. CREATING A BTRFS FILE SYSTEM
6.2. MOUNTING A BTRFS FILE SYSTEM
6.3. RESIZING A BTRFS FILE SYSTEM
6.4. INTEGRATED VOLUME MANAGEMENT OF MULTIPLE DEVICES
6.5. SSD OPTIMIZATION
6.6. BTRFS REFERENCES
CHAPTER 7. GLOBAL FILE SYSTEM 2
CHAPTER 8. NETWORK FILE SYSTEM (NFS)
8.1. INTRODUCTION TO NFS
8.2. PNFS
8.3. CONFIGURING NFS CLIENT
8.4. AUTOFS
8.5. COMMON NFS MOUNT OPTIONS
8.6. STARTING AND STOPPING THE NFS SERVER
8.7. CONFIGURING THE NFS SERVER
7
7
9
10
10
18
18
19
20
21
22
23
25
26
26
27
30
32
33
37
38
39
39
41
42
44
44
45
46
49
51
51
51
52
55
58
59
60
61
61
64
65
66
72
74
75
Table of Contents
1

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8. SECURING NFS
8.9. NFS AND RPCBIND
8.10. NFS REFERENCES
CHAPTER 9. SERVER MESSAGE BLOCK (SMB)
9.1. PROVIDING SMB SHARES
9.2. MOUNTING AN SMB SHARE
CHAPTER 10. FS-CACHE
10.1. PERFORMANCE GUARANTEE
10.2. SETTING UP A CACHE
10.3. USING THE CACHE WITH NFS
10.4. SETTING CACHE CULL LIMITS
10.5. STATISTICAL INFORMATION
10.6. FS-CACHE REFERENCES
PART II. STORAGE ADMINISTRATION
CHAPTER 11. STORAGE CONSIDERATIONS DURING INSTALLATION
11.1. SPECIAL CONSIDERATIONS
CHAPTER 12. FILE SYSTEM CHECK
12.1. BEST PRACTICES FOR FSCK
12.2. FILE SYSTEM-SPECIFIC INFORMATION FOR FSCK
CHAPTER 13. PARTITIONS
Manipulating Partitions on Devices in Use
Modifying the Partition Table
13.1. VIEWING THE PARTITION TABLE
13.2. CREATING A PARTITION
13.3. REMOVING A PARTITION
13.4. SETTING A PARTITION TYPE
13.5. RESIZING A PARTITION WITH FDISK
CHAPTER 14. CREATING AND MAINTAINING SNAPSHOTS WITH SNAPPER
14.1. CREATING INITIAL SNAPPER CONFIGURATION
14.2. CREATING A SNAPPER SNAPSHOT
14.3. TRACKING CHANGES BETWEEN SNAPPER SNAPSHOTS
14.4. REVERSING CHANGES IN BETWEEN SNAPSHOTS
14.5. DELETING A SNAPPER SNAPSHOT
CHAPTER 15. SWAP SPACE
15.1. ADDING SWAP SPACE
15.2. REMOVING SWAP SPACE
15.3. MOVING SWAP SPACE
CHAPTER 16. SYSTEM STORAGE MANAGER (SSM)
16.1. SSM BACK ENDS
16.2. COMMON SSM TASKS
16.3. SSM RESOURCES
CHAPTER 17. DISK QUOTAS
17.1. CONFIGURING DISK QUOTAS
17.2. MANAGING DISK QUOTAS
17.3. DISK QUOTA REFERENCES
84
86
88
89
89
89
95
96
96
97
99
100
100
101
102
102
104
104
105
109
109
109
110
112
115
116
116
119
119
120
124
127
129
130
131
133
135
136
136
138
145
147
147
152
154
Storage Administration Guide
2

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
CHAPTER 18. REDUNDANT ARRAY OF INDEPENDENT DISKS (RAID)
18.1. RAID TYPES
18.2. RAID LEVELS AND LINEAR SUPPORT
18.3. LINUX RAID SUBSYSTEMS
18.4. RAID SUPPORT IN THE ANACONDA INSTALLER
18.5. CONVERTING ROOT DISK TO RAID1 AFTER INSTALLATION
18.6. CONFIGURING RAID SETS
18.7. CREATING ADVANCED RAID DEVICES
CHAPTER 19. USING THE MOUNT COMMAND
19.1. LISTING CURRENTLY MOUNTED FILE SYSTEMS
19.2. MOUNTING A FILE SYSTEM
19.3. UNMOUNTING A FILE SYSTEM
19.4. MOUNT COMMAND REFERENCES
CHAPTER 20. THE VOLUME_KEY FUNCTION
20.1. VOLUME_KEY COMMANDS
20.2. USING VOLUME_KEY AS AN INDIVIDUAL USER
20.3. USING VOLUME_KEY IN A LARGER ORGANIZATION
20.4. VOLUME_KEY REFERENCES
CHAPTER 21. SOLID-STATE DISK DEPLOYMENT GUIDELINES
Deployment Considerations
Performance Tuning Considerations
CHAPTER 22. WRITE BARRIERS
22.1. IMPORTANCE OF WRITE BARRIERS
22.2. ENABLING AND DISABLING WRITE BARRIERS
22.3. WRITE BARRIER CONSIDERATIONS
CHAPTER 23. STORAGE I/O ALIGNMENT AND SIZE
23.1. PARAMETERS FOR STORAGE ACCESS
23.2. USERSPACE ACCESS
23.3. I/O STANDARDS
23.4. STACKING I/O PARAMETERS
23.5. LOGICAL VOLUME MANAGER
23.6. PARTITION AND FILE SYSTEM TOOLS
CHAPTER 24. SETTING UP A REMOTE DISKLESS SYSTEM
24.1. CONFIGURING A TFTP SERVICE FOR DISKLESS CLIENTS
24.2. CONFIGURING DHCP FOR DISKLESS CLIENTS
24.3. CONFIGURING AN EXPORTED FILE SYSTEM FOR DISKLESS CLIENTS
CHAPTER 25. ONLINE STORAGE MANAGEMENT
25.1. TARGET SETUP
25.2. CREATING AN ISCSI INITIATOR
25.3. FIBRE CHANNEL
25.4. CONFIGURING A FIBRE CHANNEL OVER ETHERNET INTERFACE
25.5. CONFIGURING AN FCOE INTERFACE TO AUTOMATICALLY MOUNT AT BOOT
25.6. ISCSI
25.7. PERSISTENT NAMING
25.8. REMOVING A STORAGE DEVICE
25.9. REMOVING A PATH TO A STORAGE DEVICE
25.10. ADDING A STORAGE DEVICE OR PATH
25.11. SCANNING STORAGE INTERCONNECTS
156
156
157
159
159
160
160
161
163
163
164
173
174
175
175
176
177
179
180
180
182
183
183
183
184
186
186
187
188
189
189
189
191
191
192
193
195
195
204
205
208
209
211
212
216
218
218
220
Table of Contents
3

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
25.12. ISCSI DISCOVERY CONFIGURATION
25.13. CONFIGURING ISCSI OFFLOAD AND INTERFACE BINDING
25.14. SCANNING ISCSI INTERCONNECTS
25.15. LOGGING IN TO AN ISCSI TARGET
25.16. RESIZING AN ONLINE LOGICAL UNIT
25.17. ADDING/REMOVING A LOGICAL UNIT THROUGH RESCAN-SCSI-BUS.SH
25.18. MODIFYING LINK LOSS BEHAVIOR
25.19. CONTROLLING THE SCSI COMMAND TIMER AND DEVICE STATUS
25.20. TROUBLESHOOTING ONLINE STORAGE CONFIGURATION
25.21. CONFIGURING MAXIMUM TIME FOR ERROR RECOVERY WITH EH_DEADLINE
CHAPTER 26. DEVICE MAPPER MULTIPATHING AND VIRTUAL STORAGE
26.1. VIRTUAL STORAGE
26.2. DM-MULTIPATH
CHAPTER 27. EXTERNAL ARRAY MANAGEMENT (LIBSTORAGEMGMT)
27.1. INTRODUCTION TO LIBSTORAGEMGMT
27.2. LIBSTORAGEMGMT TERMINOLOGY
27.3. INSTALLING LIBSTORAGEMGMT
27.4. USING LIBSTORAGEMGMT
CHAPTER 28. PERSISTENT MEMORY: NVDIMMS
NVDIMMs Interleaving
Persistent Memory Access Modes
28.1. CONFIGURING PERSISTENT MEMORY WITH NDCTL
28.2. CONFIGURING PERSISTENT MEMORY FOR USE AS A BLOCK DEVICE (LEGACY MODE)
28.3. CONFIGURING PERSISTENT MEMORY FOR FILE SYSTEM DIRECT ACCESS (DAX)
28.4. CONFIGURING PERSISTENT MEMORY FOR USE IN DEVICE DAX MODE
28.5. TROUBLESHOOTING
PART III. DATA DEDUPLICATION AND COMPRESSION WITH VDO
CHAPTER 29. VDO INTEGRATION
29.1. THEORETICAL OVERVIEW OF VDO
29.2. SYSTEM REQUIREMENTS
29.3. GETTING STARTED WITH VDO
29.4. ADMINISTERING VDO
29.5. DEPLOYMENT SCENARIOS
29.6. TUNING VDO
29.7. VDO COMMANDS
29.8. STATISTICS FILES IN /SYS
CHAPTER 30. VDO EVALUATION
30.1. INTRODUCTION
30.2. TEST ENVIRONMENT PREPARATIONS
30.3. DATA EFFICIENCY TESTING PROCEDURES
30.4. PERFORMANCE TESTING PROCEDURES
30.5. ISSUE REPORTING
30.6. CONCLUSION
APPENDIX A. RED HAT CUSTOMER PORTAL LABS RELEVANT TO STORAGE ADMINISTRATION
SCSI DECODER
FILE SYSTEM LAYOUT CALCULATOR
LVM RAID CALCULATOR
ISCSI HELPER
221
222
226
229
229
233
233
236
237
238
240
240
240
242
242
243
245
246
251
251
251
252
255
255
256
257
258
259
259
262
265
269
278
279
285
303
305
305
305
309
317
322
323
324
324
324
324
324
Storage Administration Guide
4

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
SAMBA CONFIGURATION HELPER
MULTIPATH HELPER
NFS HELPER
MULTIPATH CONFIGURATION VISUALIZER
RHEL BACKUP AND RESTORE ASSISTANT
APPENDIX B. REVISION HISTORY
INDEX
324
324
325
325
325
326
327
Table of Contents
5

Storage Administration Guide
6

CHAPTER 1. OVERVIEW
The Storage Administration Guide contains extensive information on supported file systems and data
storage features in Red Hat Enterprise Linux 7. This book is intended as a quick reference for
administrators managing single-node (that is, non-clustered) storage solutions.
The Storage Administration Guide is split into the following parts: File Systems, Storage Administration,
and Data Deduplication and Compression with VDO.
The File Systems part details the various file systems Red Hat Enterprise Linux 7 supports. It describes
them and explains how best to utilize them.
The Storage Administration part details the various tools and storage administration tasks Red Hat
Enterprise Linux 7 supports. It describes them and explains how best to utilize them.
The Data Deduplication and Compression with VDO part describes the Virtual Data Optimizer (VDO). It
explains how to use VDO to reduce your storage requirements.
1.1. NEW FEATURES AND ENHANCEMENTS IN RED HAT
ENTERPRISE LINUX 7
Red Hat Enterprise Linux 7 features the following file system enhancements:
eCryptfs not included
As of Red Hat Enterprise Linux 7, eCryptfs is not included. For more information on encrypting file
systems, see Red Hat's Security Guide.
System Storage Manager
Red Hat Enterprise Linux 7 includes a new application called System Storage Manager which provides a
command-line interface to manage various storage technologies. For more information, see Chapter 16,
System Storage Manager (SSM).
XFS Is the Default File System
As of Red Hat Enterprise Linux 7, XFS is the default file system. For more information about the XFS file
system, see Chapter 3, The XFS File System.
File System Restructure
Red Hat Enterprise Linux 7 introduces a new file system structure. The directories /bin, /sbin, /lib,
and /lib64 are now nested under /usr.
Snapper
Red Hat Enterprise Linux 7 introduces a new tool called Snapper that allows for the easy creation and
management of snapshots for LVM and Btrfs. For more information, see Chapter 14, Creating and
Maintaining Snapshots with Snapper.
Btrfs (Technology Preview)
CHAPTER 1. OVERVIEW
7

NOTE
Btrfs is available as a Technology Preview feature in Red Hat Enterprise Linux 7 but has
been deprecated since the Red Hat Enterprise Linux 7.4 release. It will be removed in a
future major release of Red Hat Enterprise Linux.
For more information, see Deprecated Functionality in the Red Hat Enterprise Linux 7.4
Release Notes.
Btrfs is a local file system that aims to provide better performance and scalability, including integrated
LVM operations. This file system is not fully supported by Red Hat and as such is a technology preview.
For more information on Btrfs, see Chapter 6, Btrfs (Technology Preview).
NFSv2 No Longer Supported
As of Red Hat Enterprise Linux 7, NFSv2 is no longer supported.
Storage Administration Guide
8

PART I. FILE SYSTEMS
The File Systems section provides information on the file system structure and maintenance, the Btrfs
Technology Preview, and file systems that Red Hat fully supports: ext3, ext4, GFS2, XFS, NFS, and FS-
Cache.
NOTE
Btrfs is available as a Technology Preview feature in Red Hat Enterprise Linux 7 but has
been deprecated since the Red Hat Enterprise Linux 7.4 release. It will be removed in a
future major release of Red Hat Enterprise Linux.
For more information, see Deprecated Functionality in the Red Hat Enterprise Linux 7.4
Release Notes.
For an overview of Red Hat Enterprise Linux file systems and storage limits, see Red Hat
Enterprise Linux technology capabilities and limits at Red Hat Knowledgebase.
XFS is the default file system in Red Hat Enterprise Linux 7 and Red Hat, and Red Hat recommends you
to use XFS unless you have a strong reason to use another file system. For general information on
common file systems and their properties, see the following Red Hat Knowledgebase article: How to
Choose your Red Hat Enterprise Linux File System.
PART I. FILE SYSTEMS
9

CHAPTER 2. FILE SYSTEM STRUCTURE AND MAINTENANCE
The file system structure is the most basic level of organization in an operating system. The way an
operating system interacts with its users, applications, and security model nearly always depends on
how the operating system organizes files on storage devices. Providing a common file system structure
ensures users and programs can access and write files.
File systems break files down into two logical categories:
Shareable and unsharable files
Shareable files can be accessed locally and by remote hosts. Unsharable files are only available
locally.
Variable and static files
Variable files, such as documents, can be changed at any time. Static files, such as binaries, do not
change without an action from the system administrator.
Categorizing files in this manner helps correlate the function of each file with the permissions assigned
to the directories which hold them. How the operating system and its users interact with a file determines
the directory in which it is placed, whether that directory is mounted with read-only or read and write
permissions, and the level of access each user has to that file. The top level of this organization is
crucial; access to the underlying directories can be restricted, otherwise security problems could arise if,
from the top level down, access rules do not adhere to a rigid structure.
2.1. OVERVIEW OF FILESYSTEM HIERARCHY STANDARD (FHS)
Red Hat Enterprise Linux uses the Filesystem Hierarchy Standard (FHS) file system structure, which
defines the names, locations, and permissions for many file types and directories.
The FHS document is the authoritative reference to any FHS-compliant file system, but the standard
leaves many areas undefined or extensible. This section is an overview of the standard and a description
of the parts of the file system not covered by the standard.
The two most important elements of FHS compliance are:
Compatibility with other FHS-compliant systems
The ability to mount a /usr/ partition as read-only. This is crucial, since /usr/ contains
common executables and should not be changed by users. In addition, since /usr/ is mounted
as read-only, it should be mountable from the CD-ROM drive or from another machine via a
read-only NFS mount.
2.1.1. FHS Organization
The directories and files noted here are a small subset of those specified by the FHS document. For the
most complete information, see the latest FHS documentation at
http://refspecs.linuxfoundation.org/FHS_3.0/fhs-3.0.pdf; the file-hierarchy(7) man page also provides an
overview.
NOTE
The directories that are available depend on what is installed on any given system. The
following lists are only an example of what may be found.
Storage Administration Guide
10

2.1.1.1. Gathering File System Information
df Command
The df command reports the system's disk space usage. Its output looks similar to the following:
Example 2.1. df Command Output
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/mapper/VolGroup00-LogVol00
                       11675568   6272120   4810348  57% / /dev/sda1
                  100691      9281     86211  10% /boot
none                     322856         0    322856   0% /dev/shm
By default, df shows the partition size in 1 kilobyte blocks and the amount of used and available disk
space in kilobytes. To view the information in megabytes and gigabytes, use the command df -h. The 
-h argument stands for "human-readable" format. The output for df -h looks similar to the following:
Example 2.2. df -h Command Output
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/VolGroup00-LogVol00
                        12G  6.0G  4.6G  57% / /dev/sda1
   99M  9.1M   85M  10% /boot
none    316M     0  316M   0% /dev/shm
NOTE
In the given examples, the mounted partition /dev/shm represents the system's virtual
memory file system.
du Command
The du command displays the estimated amount of space being used by files in a directory, displaying
the disk usage of each subdirectory. The last line in the output of du shows the total disk usage of the
directory. To see only the total disk usage of a directory in human-readable format, use du -hs. For
more options, see man du.
Gnome System Monitor
To view the system's partitions and disk space usage in a graphical format, use the Gnome System 
Monitor by clicking on Applications → System Tools → System Monitor or using the command 
gnome-system-monitor. Select the File Systems tab to view the system's partitions. The following
figure illustrates the File Systems tab.
CHAPTER 2. FILE SYSTEM STRUCTURE AND MAINTENANCE
11

Figure 2.1. File Systems Tab in GNOME System Monitor
2.1.1.2. The /boot/ Directory
The /boot/ directory contains static files required to boot the system, for example, the Linux kernel.
These files are essential for the system to boot properly.
WARNING
Do not remove the /boot/ directory. Doing so renders the system unbootable.
2.1.1.3. The /dev/ Directory
The /dev/ directory contains device nodes that represent the following device types:
devices attached to the system;
virtual devices provided by the kernel.
These device nodes are essential for the system to function properly. The udevd daemon creates and
removes device nodes in /dev/ as needed.
Devices in the /dev/ directory and subdirectories are defined as either character (providing only a serial

Storage Administration Guide
12

stream of input and output, for example, mouse or keyboard) or block (accessible randomly, such as a
hard drive or a floppy drive). If GNOME or KDE is installed, some storage devices are automatically
detected when connected (such as with USB) or inserted (such as a CD or DVD drive), and a pop-up
window displaying the contents appears.
Table 2.1. Examples of Common Files in the /dev Directory
File
Description
/dev/hda
The master device on the primary IDE channel.
/dev/hdb
The slave device on the primary IDE channel.
/dev/tty0
The first virtual console.
/dev/tty1
The second virtual console.
/dev/sda
The first device on the primary SCSI or SATA
channel.
/dev/lp0
The first parallel port.
A valid block device can be one of two types of entries:
Mapped device
A logical volume in a volume group, for example, /dev/mapper/VolGroup00-LogVol02.
Static device
A traditional storage volume, for example, /dev/sdbX, where sdb is a storage device name and X is
the partition number. /dev/sdbX can also be /dev/disk/by-id/WWID, or /dev/disk/by-
uuid/UUID. For more information, see Section 25.7, "Persistent Naming".
2.1.1.4. The /etc/ Directory
The /etc/ directory is reserved for configuration files that are local to the machine. It should not contain
any binaries; if there are any binaries, move them to /usr/bin/ or /usr/sbin/.
For example, the /etc/skel/ directory stores "skeleton" user files, which are used to populate a home
directory when a user is first created. Applications also store their configuration files in this directory and
may reference them when executed. The /etc/exports file controls which file systems export to
remote hosts.
2.1.1.5. The /mnt/ Directory
The /mnt/ directory is reserved for temporarily mounted file systems, such as NFS file system mounts.
For all removable storage media, use the /media/ directory. Automatically detected removable media is
mounted in the /media directory.
CHAPTER 2. FILE SYSTEM STRUCTURE AND MAINTENANCE
13

IMPORTANT
The /mnt directory must not be used by installation programs.
2.1.1.6. The /opt/ Directory
The /opt/ directory is normally reserved for software and add-on packages that are not part of the
default installation. A package that installs to /opt/ creates a directory bearing its name, for example, 
/opt/packagename/. In most cases, such packages follow a predictable subdirectory structure; most
store their binaries in /opt/packagename/bin/ and their man pages in /opt/packagename/man/.
2.1.1.7. The /proc/ Directory
The /proc/ directory contains special files that either extract information from the kernel or send
information to it. Examples of such information include system memory, CPU information, and hardware
configuration. For more information about /proc/, see Section 2.3, "The /proc Virtual File System".
2.1.1.8. The /srv/ Directory
The /srv/ directory contains site-specific data served by a Red Hat Enterprise Linux system. This
directory gives users the location of data files for a particular service, such as FTP, WWW, or CVS. Data
that only pertains to a specific user should go in the /home/ directory.
2.1.1.9. The /sys/ Directory
The /sys/ directory utilizes the new sysfs virtual file system specific to the kernel. With the increased
support for hot plug hardware devices in the kernel, the /sys/ directory contains information similar to
that held by /proc/, but displays a hierarchical view of device information specific to hot plug devices.
2.1.1.10. The /usr/ Directory
The /usr/ directory is for files that can be shared across multiple machines. The /usr/ directory is
often on its own partition and is mounted read-only. At a minimum, /usr/ should contain the following
subdirectories:
/usr/bin
This directory is used for binaries.
/usr/etc
This directory is used for system-wide configuration files.
/usr/games
This directory stores games.
/usr/include
This directory is used for C header files.
/usr/kerberos
This directory is used for Kerberos-related binaries and files.
Storage Administration Guide
14

/usr/lib
This directory is used for object files and libraries that are not designed to be directly utilized by shell
scripts or users.
As of Red Hat Enterprise Linux 7.0, the /lib/ directory has been merged with /usr/lib. Now it
also contains libraries needed to execute the binaries in /usr/bin/ and /usr/sbin/. These
shared library images are used to boot the system or execute commands within the root file system.
/usr/libexec
This directory contains small helper programs called by other programs.
/usr/sbin
As of Red Hat Enterprise Linux 7.0, /sbin has been moved to /usr/sbin. This means that it
contains all system administration binaries, including those essential for booting, restoring,
recovering, or repairing the system. The binaries in /usr/sbin/ require root privileges to use.
/usr/share
This directory stores files that are not architecture-specific.
/usr/src
This directory stores source code.
/usr/tmp linked to /var/tmp
This directory stores temporary files.
The /usr/ directory should also contain a /local/ subdirectory. As per the FHS, this subdirectory is
used by the system administrator when installing software locally, and should be safe from being
overwritten during system updates. The /usr/local directory has a structure similar to /usr/, and
contains the following subdirectories:
/usr/local/bin
/usr/local/etc
/usr/local/games
/usr/local/include
/usr/local/lib
/usr/local/libexec
/usr/local/sbin
/usr/local/share
/usr/local/src
Red Hat Enterprise Linux's usage of /usr/local/ differs slightly from the FHS. The FHS states that 
/usr/local/ should be used to store software that should remain safe from system software
upgrades. Since the RPM Package Manager can perform software upgrades safely, it is not necessary
CHAPTER 2. FILE SYSTEM STRUCTURE AND MAINTENANCE
15

to protect files by storing them in /usr/local/.
Instead, Red Hat Enterprise Linux uses /usr/local/ for software local to the machine. For instance, if
the /usr/ directory is mounted as a read-only NFS share from a remote host, it is still possible to install
a package or program under the /usr/local/ directory.
2.1.1.11. The /var/ Directory
Since the FHS requires Linux to mount /usr/ as read-only, any programs that write log files or need 
spool/ or lock/ directories should write them to the /var/ directory. The FHS states /var/ is for
variable data, which includes spool directories and files, logging data, transient and temporary files.
Following are some of the directories found within the /var/ directory:
/var/account/
/var/arpwatch/
/var/cache/
/var/crash/
/var/db/
/var/empty/
/var/ftp/
/var/gdm/
/var/kerberos/
/var/lib/
/var/local/
/var/lock/
/var/log/
/var/mail linked to /var/spool/mail/
/var/mailman/
/var/named/
/var/nis/
/var/opt/
/var/preserve/
/var/run/
/var/spool/
Storage Administration Guide
16

/var/tmp/
/var/tux/
/var/www/
/var/yp/
IMPORTANT
The /var/run/media/user directory contains subdirectories used as mount points for
removable media such as USB storage media, DVDs, CD-ROMs, and Zip disks. Note that
previously, the /media/ directory was used for this purpose.
System log files, such as messages and lastlog, go in the /var/log/ directory. The 
/var/lib/rpm/ directory contains RPM system databases. Lock files go in the /var/lock/ directory,
usually in directories for the program using the file. The /var/spool/ directory has subdirectories that
store data files for some programs. These subdirectories include:
/var/spool/at/
/var/spool/clientmqueue/
/var/spool/cron/
/var/spool/cups/
/var/spool/exim/
/var/spool/lpd/
/var/spool/mail/
/var/spool/mailman/
/var/spool/mqueue/
/var/spool/news/
/var/spool/postfix/
/var/spool/repackage/
/var/spool/rwho/
/var/spool/samba/
/var/spool/squid/
/var/spool/squirrelmail/
/var/spool/up2date/
/var/spool/uucp/
CHAPTER 2. FILE SYSTEM STRUCTURE AND MAINTENANCE
17

/var/spool/uucppublic/
/var/spool/vbox/
2.2. SPECIAL RED HAT ENTERPRISE LINUX FILE LOCATIONS
Red Hat Enterprise Linux extends the FHS structure slightly to accommodate special files.
Most files pertaining to RPM are kept in the /var/lib/rpm/ directory. For more information on RPM,
see man rpm.
The /var/cache/yum/ directory contains files used by the Package Updater, including RPM header
information for the system. This location may also be used to temporarily store RPMs downloaded while
updating the system. For more information about the Red Hat Network, see https://rhn.redhat.com/.
Another location specific to Red Hat Enterprise Linux is the /etc/sysconfig/ directory. This directory
stores a variety of configuration information. Many scripts that run at boot time use the files in this
directory.
2.3. THE /PROC VIRTUAL FILE SYSTEM
Unlike most file systems, /proc contains neither text nor binary files. Because it houses virtual files, the 
/proc is referred to as a virtual file system. These virtual files are typically zero bytes in size, even if
they contain a large amount of information.
The /proc file system is not used for storage. Its main purpose is to provide a file-based interface to
hardware, memory, running processes, and other system components. Real-time information can be
retrieved on many system components by viewing the corresponding /proc file. Some of the files within
/proc can also be manipulated (by both users and applications) to configure the kernel.
The following /proc files are relevant in managing and monitoring system storage:
/proc/devices
Displays various character and block devices that are currently configured.
/proc/filesystems
Lists all file system types currently supported by the kernel.
/proc/mdstat
Contains current information on multiple-disk or RAID configurations on the system, if they exist.
/proc/mounts
Lists all mounts currently used by the system.
/proc/partitions
Contains partition block allocation information.
For more information about the /proc file system, see the Red Hat Enterprise Linux 7 Deployment
Guide.
Storage Administration Guide
18

2.4. DISCARD UNUSED BLOCKS
Batch discard and online discard operations are features of mounted file systems that discard blocks not
in use by the file system. They are useful for both solid-state drives and thinly-provisioned storage.
Batch discard operations are run explicitly by the user with the fstrim command. This
command discards all unused blocks in a file system that match the user's criteria.
Online discard operations are specified at mount time, either with the -o discard option as
part of a mount command or with the discard option in the /etc/fstab file. They run in real
time without user intervention. Online discard operations only discard blocks that are
transitioning from used to free.
Both operation types are supported for use with ext4 file systems as of Red Hat Enterprise Linux 6.2 and
later and with XFS file systems since Red Hat Enterprise Linux 6.4. Also, the block device underlying the
file system must support physical discard operations. Physical discard operations are supported if the
value stored in the /sys/block/device/queue/discard_max_bytes file is not zero.
If you are executing the fstrim command on:
a device that does not support discard operations, or
a logical device (LVM or MD) comprised of multiple devices, where any one of the device does
not support discard operations
the following message will be displayed:
fstrim -v /mnt/non_discard
fstrim: /mnt/non_discard: the discard operation is not supported
NOTE
The mount command allows you to mount a device that does not support discard
operations with the -o discard option.
Red Hat recommends batch discard operations unless the system's workload is such that batch discard
is not feasible, or online discard operations are necessary to maintain performance.
For more information, see the fstrim(8) and mount(8) man pages.
CHAPTER 2. FILE SYSTEM STRUCTURE AND MAINTENANCE
19

CHAPTER 3. THE XFS FILE SYSTEM
XFS is a highly scalable, high-performance file system which was originally designed at Silicon Graphics,
Inc. XFS is the default file system for Red Hat Enterprise Linux 7.
Main Features of XFS
XFS supports metadata journaling, which facilitates quicker crash recovery.
The XFS file system can be defragmented and enlarged while mounted and active.
In addition, Red Hat Enterprise Linux 7 supports backup and restore utilities specific to XFS.
Allocation Features
XFS features the following allocation schemes:
Extent-based allocation
Stripe-aware allocation policies
Delayed allocation
Space pre-allocation
Delayed allocation and other performance optimizations affect XFS the same way that they do ext4.
Namely, a program's writes to an XFS file system are not guaranteed to be on-disk unless the
program issues an fsync() call afterwards.
For more information on the implications of delayed allocation on a file system (ext4 and XFS), see
Allocation Features in Chapter 5, The ext4 File System.
NOTE
Creating or expanding files occasionally fails with an unexpected ENOSPC write
failure even though the disk space appears to be sufficient. This is due to XFS's
performance-oriented design. In practice, it does not become a problem since it only
occurs if remaining space is only a few blocks.
Other XFS Features
The XFS file system also supports the following:
