






© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_1





1. Introduction to Programming in GAMS




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




The General Algebraic Modeling System (GAMS) is a modeling tool for mathematical programming and optimization purpose. This chapter provides the instruction on different programming elements in GAMS. It can be used in solving different types of optimization problems. Some basic optimization models used in power system literature are described in this chapter.

1.1 Optimization Problems in Power System
The power system optimization problems are broadly categorized as operation and planning problems. The operation problems are usually related to how to exploit the existing devices/power plants. For example, optimal power flow is an operation problem. The planning problems usually refer to those problems which investigate whether to invest or not in some assets. For example, the decisions regarding the transmission network expansion belong to planning category. Some of these problems are shown in Fig. 1.1. Some power system planning problems are listed as follows:
Fig. 1.1Some optimization problems in power system studies


Generation expansion planning (GEP) [1, 2]: In GEP, the decision maker is trying to find out the investment decision regarding the generation technology, size, and time of investment.Transmission expansion planning (TEP) [3, 4]. In TEP, the decision maker is trying to find out the investment decision regarding the planning option and time of investment. The planning options include but not limited to: building new lines, reconductoring the existing lines, building, or reinforcing the substations.Distribution network planning [5]: this problem is trying to make smart investments in new feeders/substations to meet the technical constraints.FACTS device allocation [6]: This problem is a subset of transmission planning problem. The FACTS devices can control the power flowing through a line and make the transmission network more flexible.Distributed generation (DG) allocation in distribution networks [7-9]: The optimal location (or size) of DG unit in a distribution network.Capacitor allocation in distribution networks [10]: The capacitor allocation is usually done at the distribution level. The purpose is usually improving the voltage profile in the network.PMU allocation [11, 12]: The system observability is improved using optimal placement of phasor measurement units in the network.Energy Storage System (ESS) allocation [13, 14]: The ESS can deliver value to customers. This highly depends on how they are operated and located in the system. This problem tries to maximize its benefits by finding the optimal connection point of ESS to the grid.Risk and uncertainty modeling in planning studies: the decision-making process highly relies on accuracy of input data. As a matter of fact, the input data for any decision-making problem (especially in practical problems) are subject to uncertainty. If these uncertainties are not treated and handled properly, then costly consequences might occur. Based on the data availability some of the following techniques are applicable: Information gap decision theory (IGDT): ESS allocation [15]Scenario-based uncertainty modeling: DG planning [16]Monte Carlo simulation: FACTS allocation [17]Robust optimization: Transmission expansion planning [18]Fuzzy modeling: distribution network planning [19]


Some power system operation problems are listed as follows: Distribution feeder reconfiguration [20]: the on/off statuses of switches are optimally determined to change the network configuration. In distribution networks, it can reduce the active losses by improving the voltage profile and reliability.Generation scheduling: UC [21, 22], Dynamic economic dispatch [23], Economic dispatch [24]: the generation level of power plants are determined to minimize the operating costs or maximizing the economic benefits.Maintenance scheduling [25]: The maintenance period of assets are determined to keep the adequacy level of the remaining system sufficient while minimizing the costs.Optimal power flow: DC OPF [26] and AC OPF [27] are two forms of OPF. In an OPF problem, the decision variables are generation and voltage level of generating units to minimize the operating costs. In DC OPF, it is assumed that all voltage values are 1 pu.Active power Loss minimization: minimizing the active losses is a way of improving the efficiency of power system [28].Voltage profile improvement [29]: keeping the voltage magnitudes within the normal operating limits is done by changing different decision variables such as reactive power management and demand response.Optimal transmission switching [30]: transmission network switching is a technique for changing network topology at the transmission level. It is demonstrated that this can lead to operating cost reduction if it is optimally managed.Electric vehicle charging [31]: the charging and discharging of electric vehicles are optimally determined to provide some flexibilities for distribution network operator.Offering strategy [32, 33]: the generating units submit their offers to the market operator. The purpose is to maximize the financial benefits.Scheduling of reserve [34, 35]: finding the optimal reserve quantity makes the system robust against contingencies and disturbances.Loss payments minimization [36]: this approach tries to minimize the payments toward the losses, not the losses by considering the market issues.Congestion management [37, 38]: network congestion would reduce the competition level at electricity market. Reducing the congestion would improve the market efficiency.Demand side management [39, 40]: the demand side management is harvesting the flexibility from the demand side. The customers are encouraged to shift/reduce their demands to minimize the system requirements for providing services.Risk and uncertainty modeling in operation studies: Information gap decision theory (IGDT): Wind operation modeling in OPF [41], unit commitment [42]Scenario-based uncertainty modeling [43]Monte Carlo simulation: reliability and risk analysis [44]Robust optimization: Demand response [40], loss payments minimization [36]Fuzzy modeling: DG impact assessment [45]


The methods used for solving the aforementioned optimization problems are categorized into classic and heuristic methods as shown in Fig. 1.2.
Fig. 1.2Optimization methods in power system studies

Some of the classic methods are listed as follows: Interior point: optimal reactive dispatch [46]Branch and bound: economic dispatch with disjoint prohibited zones considering network losses [47]Benders decomposition: transmission network design problems [48]Semi-definite programming: large scale OPF [49, 50]Lagrange Multipliers: pricing energy and ancillary services [51]Karush-Kuhn-Tucker (KKT) optimality condition: formulation of the terrorist threat problem [52]Newton method: Optimal power flow [53, 54]Sequential quadratic programming (SQP): UC [55], VAr compensation [56]

Most of the classic methods are gradient-based techniques (in nonlinear problems). This makes them unsuitable for large scale optimization problems. Solving the nonlinear problems with integer variables or non-convex constraints would be another challenge for classic techniques.
The heuristic methods are inspired by nature. The basic concept of these techniques is described in Fig. 1.3. In every heuristic method, an initial random population is generated, and it is tried to improve it by using some operator that modify the population (solution). The way each method modifies the population distinguishes that method from the other techniques. For example, the genetic algorithm uses the crossover and mutation operators to improve the solution regarding optimizing the objective function while satisfying the constraints. The particle swarm optimization uses the best solution found by the group and the individual particle to find the optimal solutions. The heuristic methods are also called iterative techniques. The number of iterations needed for optimizing the objective function has an inverse relation with the population number. If the population number is increased, then it can better explore the solution space; however, it takes more time to run. There is always a tradeoff between these two quantities. There are some challenges associated with heuristic techniques. Some of them are listed as follows: The parameter tuning is a challenge in these techniques which is usually problem dependent and should be tuned by the decision maker.It is not easy to check if the obtained solution is globally optimal or not.These methods are usually computationally expensive. In other words, it takes a long time for the decision maker to run. This makes these methods inconvenient for real-time applications.Since these methods are iterative, at every iteration, a new solution might be found (which is somehow better than the solution found in previous iterations). Unfortunately, if the problem is solved again (even with the same tuning parameters), it is not guaranteed to reach the similar results.Setting the stopping criteria is difficult. This is because the optimal solution of the problem in unknown. When to stop? It is a challenging question to answer. The decision maker usually ends the procedure when there is no significant change in objective function to a maximum number of iterations so reached.These solutions are not generally well accepted by the industry.
Fig. 1.3The structure of heuristic optimization techniques

Some of the heuristic methods applied to power system studies are given as follows: Single objective genetic algorithm (GA): network reconfiguration [57]Multi-objective Non-dominated sorting genetic algorithm (NSGA): Transmission expansion planning [58]Particle swarm optimization (PSO): DG planning [16]Immune algorithm (IA): secondary voltage control [59]Simulated annealing (SA): maintenance scheduling [60]Quantum-inspired evolutionary algorithm: Real and Reactive Power Dispatch [61]Seeker Optimization Algorithm: Reactive Power Dispatch [62], coordination of directional over-current relays [63]Cuckoo search algorithm: Non-convex economic dispatch [64], capacitor allocation [65]Shuffled frog leaping algorithm: unit commitment [66]Imperialist competition algorithm: dynamic economic power dispatch [67]Tabu search: Economic dispatch [68]Ant colony algorithm: Reconfiguration and capacitor placement for loss reduction of distribution systems [69]



1.2 GAMS Installation
The first step is downloading the appropriate installation file from the following address:

https://​www.​gams.​com/​download/​

The GAMS installation package is available for the following platforms:
PlatformDescriptionMS Windows 32 bitWindows Vista or newer on AMD- or Intel-based (x86) architectures.MS Windows 64 bitWindows Vista or newer on AMD- or Intel-based (x64) architectures.Linux 64 bitAMD- or Intel-based 64-bit (x64) Linux systems with glibc 2.7 or higher.MacOS XIntel-based 64-bit (x64) Macintosh system with MacOS X 10.10 (Yosemite) or higher.Solaris i86pcAMD- or Intel-based 64-bit (x64) Solaris system. Built on Solaris 11.0.Solaris SPARC 64bitSparc-based 64-bit (sparc-64) Solaris system. Built on Solaris 10.IBM AIXPowerPC based 64-bit (ppc-64) AIX system. Built on AIX 6.1

The GAMS interface is depicted in Fig. 1.4.Fig. 1.4The GAMS interface



1.3 GAMS Elements
Each GAMS model consists of the following main elements: Sets: sets are used to define the indices in the algebraic representations of models. For example, set of generating units, set of network buses, set of slack buses, set of time periods, etc.Data: The input data of each GAMS model are expressed in the form of Parameters, Tables, or Scalars. The parameters and tables are defined over the sets. The scalars are single value quantities.Variables: The variables are decision sets and are unknown before solving the model.Equations: The equations describe the relations between the data and variables.Model and Solve Statements: The model is defined as a set of equations which contain an objective function. The solve statement asks GAMS to solve the model.Output: There are several ways to see the outputs of the solved model such as saving them in XLS file and displaying them.

The General GAMS code structure and elements are shown in Fig. 1.5.Fig. 1.5General GAMS code structure and elements

The GAMS elements are explained in a simple example as follows: Suppose a factory produces tree types of products P
1,2,3. Each product should be processed on two different machines. The available machine hours per day and the time required for each product are considered as the input data. The profits/kg of each item is also known. The input data of this example is described in Table 1.1.
Table 1.1Data for illustrative exampleRequired time for task completion (h)Machine
P
1

P
2

P
3

M
1
252
M
2
341Profit per kg ($/kg)Machine availability (h)
P
1
10
M
1
16
P
2
12
M
2
12
P
3
13.5  


Sets: Two sets should be defined: machines (M) and products (P) Sets M∕m1 ∗ m2∕, P∕p1 ∗ p3∕;Data: Looking at Table 1.1 shows that we have a table (required time for task completion) and two parameters (Profit per item and Machine availability). The task completion table is defined over two sets (machines and products), the profit per item parameter is defined over products while the machine availability is defined over product set. It is assumed that the minimum required amount of each product is 1 kg.​​​​Parameter profit(P)/p1 10p2 12p3 13.5/;Parameter availability(M)/m1 16m2 12/;Table task(m,p)p1 p2 p3m1 2 5 2m2 3 4 1;Variables: We are about to decide how many kg should be produced of each product. This variable is defined over product set. Another variable should be defined as the total profits which should be optimized. This variable (objective function) should not have any set index. Variables are OF, X(p).Equations: One equation should describe the objective function and another one should enforce the constraint for availability of each machine.​​​​Equations eq1, eq2;eq1(m).. sum(p, task(m,p)*x(p))=l=availability(M);eq2.. of=e=sum(p, profit(p)*x(p));As it can be seen in this example, there are two types of equations as follows: Scalar equation: eq2 is an example of a scalar equation which is not defined over any set.Indexed equation: eq1 is an example of the indexed equation. We have to define the equation on index m since the index m exists in the formulation. In other words, the equation is valid for any element in the set M.
Three different relations can be defined in equations as follows: =e= Equality: this means that both sides of the equations should be equal to each other.=g= Greater than or equal: this means that the left-hand side of the equation should be greater than or equal to the right-hand side of the equation=l= Less than or equal: this means that the left-hand side of the equation should be less than or equal to the right-hand side of the equation
Model: This example has two equations. Both should be included in the model definition.Model example /all/;It can also be defined as follows:Model example /eq1,eq2/;Solve statement: The solve statement tells GAMS that the model is linear and the direction of the optimization should be toward maximizing the total benefits.Solve example us LP Max OF;The model type used in this code is linear programming (LP). There are various models that can be coded in GAMS coding as follows:​​​​LP: linear programmingQCP: Quadratic programming (the model can only contain linear and quadratic terms)NLP: Nonlinear problem with continuous constraintsDNLP: Nonlinear problem with discontinuous constraintsMIP: Mixed-integer linear programmingMIQCP: Mixed-integer quadratic constraint programmingMINLP: Mixed-integer nonlinear programmingRMIP: Mixed-integer problem where the integer variables are relaxedOutput: The outputs of the GAMS model can be displayed and also saved in an XSL file.
Display X.l,Of.l;execute_unload "Example.gdx" X.lexecute 'gdxxrw.exe Example.gdx var=X rng=Product!a1'execute_unload "Example.gdx" OF.lexecute 'gdxxrw.exe Example.gdx var=OF rng=OF!a1'


The overall GAMS code for solving the illustrative example is provided in GCode 1.1.

GCode 1.1 Illustrative GAMS example

Sets M /m1*m2/, P /p1*p3/ ;variables OF,X(p);parameter profit(P)/p1 10p2 12p3 13.5/;parameter availability (M)/m1 16m2 12/;Table task(m,p)   p1   p2   p3m1 2    5   2m2 3    4   1 ;equations eq1,eq2;eq1(m).. sum(p, task(m,p)*x(p))=l=availability(M);eq2  .. of=l=sum(p, profit(p)*x(p));X.lo(p)=1;model example /all/;Solve example us LP max OF;display X.l,Of.l;execute_unload "Example.gdx" X.lexecute 'gdxxrw.exe Example.gdx var=X rng=Product!a1'execute_unload "Example.gdx" OF.lexecute 'gdxxrw.exe Example.gdx var=OF rng=OF!a1'


Once the model is solved the solve summary is available by clicking on the file.lst. The structure of GAMS listing file is shown in Fig. 1.6.
Fig. 1.6The structure of GAMS listing file

The listing file is explained as follows:
S O L V E S U M M A R Y
MODEL example OBJECTIVE OF
TYPE LP DIRECTION MAXIMIZE
SOLVER CPLEX FROM LINE 23
**** SOLVER STATUS 1 Normal Completion
**** MODEL STATUS 1 Optimal
**** OBJECTIVE VALUE 82.7500
The summary shows that the name of the model is example. The objective function to be optimized is named OF. The type of the model is linear programming (LP). The direction of the optimization is maximization. The solver used for solving the LP model is CPLEX. The solver status is 1 which means that the model is normally solved without error. The model status is 1 optimal. It means that the global optimal solution is found. The value of the objective function (OF) is 82.75. Different solver status might be reported once the model is solved.
SOLVER STATUS CODE DESCRIPTION
1 Normal Completion
2 Iteration Interrupt
3 Resource Interrupt
4 Terminated by Solver
5 Evaluation Error Limit
6 Capability Problems
7 Licensing Problems
8 User Interrupt
9 Error Setup Failure
10 Error Solver Failure
11 Error Internal Solver Error
12 Solve Processing Skipped
13 Error System Failure
Different model status might be reported once the model is solved.
MODEL STATUS CODE DESCRIPTION
1 Optimal
2 Locally Optimal
3 Unbounded
4 Infeasible
5 Locally Infeasible
6 Intermediate Infeasible
7 Intermediate Nonoptimal
8 Integer Solution
9 Intermediate Non-Integer
10 Integer Infeasible
11 Licensing Problems - No Solution
12 Error Unknown
13 Error No Solution
14 No Solution Returned
15 Solved Unique
16 Solved
17 Solved Singular
18 Unbounded - No Solution
19 Infeasible - No Solution
The model statistic can provide some useful information regarding the developed model. It is indicating that there are two blocks of equations (eq1,eq2) in the developed model. The single equations are three because eq1 has two single equations (m1, m2) and the eq2 has only one equation. There are two blocks of variables x, OF but since X has three variables (p1, p2, p3), then the number of total variables is 4.
MODEL STATISTICS
BLOCKS OF EQUATIONS 2 SINGLE EQUATIONS 3
BLOCKS OF VARIABLES 2 SINGLE VARIABLES 4
By clicking on the SolVar tab, some useful information regarding the variables will be obtained as follows:
LOWER LEVEL UPPER MARGINAL
—- VAR OF -INF 82.750 +INF.
—- VAR X
LOWER LEVEL UPPER MARGINAL
p1 1.000 1.000 +INF -3.500
p2 1.000 1.000 +INF -21.750
p3 1.000 4.500 +INF.
This means that the minimum limit of variable X is 1 and the upper limits are + ∞. The marginal values are also revealed. Each variable in GAMS has five attributes as follows: Variable.lo: indicates the minimum limit of a variableVariable.up: indicates the maximum limit of a variableVariable.l: indicates the level of the variable. In other words, this is the actual value of the variable.Variable.fx: indicates the level of the variable is fixed and is not changing. It has the same impact of defining the low and up attributes the same as each other.Variable.m: indicates the marginal value of a variable. It shows how much sensitive is the objective function to the changes of this variable. For example, X. m(p1) = −3. 5 this means that for 1 unit of increase in X(p1) the objective function will reduce by − 3. 5.

The variables used in this code are all real variables; however, different types of variables can be defined in GAMS as follows:
Variable typeDescriptionLower limitUpper limitFreeNo bounds on variable. Both bounds can be changed from the default values by the user−∞
+ ∞
PositiveThe positive variable can only take positive values0+ ∞
NegativeThe negative variable can only take negative values−∞
0BinaryDiscrete variable that can only take values of 0 or 101IntegerDiscrete variable that can only take integer values between the limits0100

It should be noted that the default values for variable limits can be modified by the user.


1.4 Conditional Statements
The Dollar ($) condition is broadly used in GAMS coding. Various applications are explained through some examples. Suppose we need to have a conditional statement like this if A = C then B = D. This statement is modeled as follows:(B=D)$(A=C)

If (A ≠ C) then no assignment to B will happen. If A = C then B = D otherwise B = 0. This statement is modeled as follows:B=D$(A=C)Suppose that we need to filter some elements in eq1(m). In other words, this equation should be valid for every m elements except some of them.eq1(m)$(ord(m)=1).. sum(p, task(m,p)*x(p))=l=availability(M);This would force the equation only for m1.eq1(m)$(ord(m) ≥ 2).. sum(p, task(m,p)*x(p))=l=availability(M);This would force the equation only for m2 and m3. It should be noted that no variable can exist in conditional statement.If A and B then C = D, this is coded as follows:(C=D)$( A and B)



1.5 Loop Definition in GAMS
The looping is used for executing one or more statements repeatedly. There are different forms of looping in GAMS as follows:

1.5.1 LOOP Statement
One of the techniques for defining the loop in GAMS is loop statement.
Loop(setname,
Statement 1;
Statement 2;
Statement 3;
);
The statements 1-3 are executed N times. N is equal to the cardinality of the "setname." These statements can assign values to the variable limits or describe the relation between some parameters (not the variables). No variable can appear in the loop statements.
set counter /c1*c4/;
Loop(counter,
X.lo(p)=0.1*ord(counter);
Solve example us LP max OF;
);
In the first counter, the minimum values of all X variables would be 0. 1 ∗ 1 and the model is solved. The second counter sets the minimum values of X variable equal to 0. 1 ∗ 2 = 0. 2 and then the model is solved. The point that should be noted here is that the set/parameter/variable/model definition should be outside the loop.
This kind of modeling would be useful in conducting sensitivity analysis. Some parameters are varied and then the impacts on the objective function are investigated as follows:
set counter /c1*c4/;
parameter report(counter,*);
Loop(counter,
X.lo(p)=0.1*ord(counter);
Solve example us LP max OF;
report(counter,'lowerlimit')=0.1*ord(counter);
report(counter,'OF')=OF.l;
);


1.5.2 WHILE Statement
One of the techniques for defining the loop in GAMS is while statement.
while (condition,
Statement 1;
Statement 2;
Statement 3;
);
The statements 1-3 are executed as far as the condition is true. The condition will be changed inside the loop based on some logic otherwise the loop will continue forever!


1.5.3 FOR Statement
One of the techniques for defining the loop in GAMS is FOR statement.
scalar Itermax /10/;
scalar iteration;
for (iteration=1 to Itermax,
Statement 1;
Statement 2;
Statement 3;
);
The statements 1-3 are executed for Itermax times.


1.5.4 REPEAT-UNTIL Statement
One of the techniques for defining the loop in GAMS is Repeat-until statement.
repeat ( Statement 1;
Statement 2;
Statement 3;
until condition );
The statements 1-3 are executed until the condition becomes logically true (it should be initially false).



1.6 Linking GAMS and Excels

1.6.1 Reading from Excel
GAMS is able to read the data from xls files. It is also convenient to use xls as an interface between GAMS and other platforms. Reading the data from xls file is straightforward as follows:

Parameter Level(m,p);∖$CALL GDXXRW.EXE Example.xls par=Level rng=task!E5:H7∖$GDXIN Example.gdx∖$LOAD Level

In this case, a parameter like Level (m, p) is defined. The xls file name (Example.xls) is indicated and the range of data is specified (sheet=task, cells: E5:H7). The data is read from xls file and is written on Example.gdx file. The parameter level is loaded and can be used in the code.


1.6.2 Writing to Excel
It is usually desirable to save the output of a GAMS code in an excel file. The procedure is quite straightforward.
For variables, the following commands should be executed. The user can indicate which variable (X.l,OF.l) should be written in Excel file. The name of the excel file (Example.xls) and what would be the sheet name (product, OF). The cell a1 is chosen as the starting cell in the specified sheet for writing the data.

execute_unload "Example.gdx" X.lexecute 'gdxxrw.exe Example.gdx var=X rng=Product!a1'execute_unload "Example.gdx" OF.lexecute 'gdxxrw.exe Example.gdx var=OF rng=OF!a1'

If the user wants to write the parameter X to an excel file then the command would be as follows:

execute_unload "Example.gdx" Xexecute 'gdxxrw.exe Example.gdx Par=X rng=Product!a1'

In this case, no '.l' is needed since it is a parameter, not a variable.



1.7 Error Debugging in GAMS
Once the code is written the "Shift key + F9" should be pressed. The GAMS compiler will check the developed code without executing it. The coding errors are unavoidable in every programming language, and GAMS is not an exception. Usually, a list of errors is generated which should be taken care of. The first thing to keep in mind is to start from the first error and fix them one by one. In this section, some common coding errors and best way of debugging them are explained. Error 140: Unknown symbol: GAMS compiler generates this error when there are some undefined symbols in the model.Error 246: Objective variable is not a free variableThis error will usually happen when the objective function (which should be minimized/maximized) is not set as a free variable. For example, it is defined as a positive/negative variable. In case that the decision maker needs the objective function be a positive variable, the lower limit of the variable should be specified using. lo = 0 command.Error: Unbounded variable:This means that the objective function is equal to −∞ or + ∞. This usually happens when the bounds of the objective function are not properly defined, or optimization direction is not properly defined in solve statement. For example, if the objective is to be minimized but it is maximized by mistake. The following error will be generated by GAMS.​​​​**** ERRORS/WARNINGS IN VARIABLE OF1 error(s): Unbounded variableError 149: Uncontrolled set entered as constantThis error usually happens when the statements are not properly written. Consider the following line of codeeq1.. sum(p, task(m,p)*x(p))=l=availability(M);The equation should be valid for every m, but the equation label is not defined over the set m. The correct format for defining this equation is as follows:eq1(m).. sum(p, task(m,p)*x(p))=l=availability(M);Error 143: A suffix is missingThis error will happen when a variable is used outside of the equation environment. For example, the following line is trying to assign a value to variable X(p) but not in any equation:x(p)=1;This is not a valid way of doing this. If the variable X(p) should be fixed to a constant value it should be defined as follows:x.fx(p)=1;As a general rule, the variables cannot appear outside the equations. Only the variable's attributes can be modified outside the equation environment. This means X. lo(p), X. l(p), X. up(p) can be changed without using equation environment.Another situation that this error might happen is in display command. Consider the following part of a GAMS code:Solve example us LP max Z; Display X, Of.l;This will generate the following error:​​​​143 A suffix is missing**** 1 ERROR(S) 0 WARNING(S)This is because X is a variable and display command can only show the attributes of the X variable. The correct form for showing the value of X variable is as follows:​​​​solve example us LP max Z;Display X.l, Of.l;Error 245: Objective variable not referenced in modelThis means that the solve statement is trying to minimize/maximize a variable which does not exist in the defined model.Error 141: Symbol declared, but no values have been assignedThis error happens when the variable or parameter is defined, but it is not implicitly assigned any value and also does not appear in any equation. In other words, GAMS has no info about this symbol, but we are asking GAMS some information about it. Consider the following GAMS code:​​​​Sets M /m1*m2/, P /p1*p3/;Variables OF,x(p),Z;parameter profit(P)/p1 10p2 12p3 13.5/;Parameter availability (M)/m1 16m2 12/;Table task(m,p)p1 p2 p3m1 2 5 2m2 3 4 1;Equations eq1,eq2;eq1(m).. sum(p, task(m,p)*x(p))=l=availability(M);eq2.. of=l=sum(p, profit(p)*x(p));X.lo(p)=1;Model example /all/;Solve example us LP max OF;display X.l, Of.l, Z.l;This code would generate Error 141 because although variable Z is defined but since it has no initial assignment and does not appear in the model then GAMS knows nothing about it.Error 225: Floating entry ignoredThis error is a very common error specially for beginners. This happens when a table is not properly typed in GAMS. All data should be aligned under the column label.
 
P1
P2
P3 
M125 2
M2341 
The correct form of typing the above table is as follows:
 
P1
P2
P3
M1252
M2341
Handling the large tables in GAMS would be much easier if the tool named "xls2gams.exe" is used. This tool is available in the same folder that GAMS is installed. The function of this tool is copying data from xls file into GAMS format. Using this tool to import xls data to GAMS is highly recommended.Error 56: Endogenous operands for * not allowed in linear modelsConsider the following code:​​​​Sets M /m1*m2/, P /p1*p3/;Variables OF,x(p),Z;parameter profit(P)/p1 10p2 12p3 13.5/;Parameter availability (M)/m1 16m2 12/;Table task(m,p)p1 p2 p3m1 2 5 2m2 3 4 1;Equations eq1,eq2;eq1(m).. sum(p, task(m,p)*x(p))=l=availability(M);eq2.. of=l=sum(p, profit(p)*x(p)*x(p));X.lo(p)=1;Model example /all/;Solve example us LP max OF;display X.l, Of.l, Z.l;The following error will be generated after compiling this code. In order to find out why this error is happening we should double-check the model. The solve statement is indicating that the model is LP but in eq2 we can see profit(p) ∗ x(p) ∗ x(p). This means that the model is not LP and solve statement should be modified as follows:​​​​Solve example us NLP max OF;orSolve example us QCP max OF;Error 37:Consider the following line in a GAMS code:eq2.. of=sum(p, profit(p)*x(p));This line is not properly defined because the correct operator for stating the equality is not used in equation environment. The only operators that can be used are '=l=' or '=e=' or '=g='. the correct format is as follows:eq2.. of=e=sum(p, profit(p)*x(p));Error 409:Consider the following lines in a GAMS code:​​​​eq1(m).. sum(p, task(m,p)*x(p))=l=availability(M)eq2.. of=sum(p, profit(p)*x(p)*x(p));This is because a semicolon (;) is missing at the end of eq1.



1.8 General Programming Remarks
Like other programming languages, there are different ways of modeling the problem in GAMS. The so-called "best way" is yet to be discovered. Some programming tips are given in this section as follows:

GAMS compiler is not case sensitive. The lowercase letters and capital letters are not distinguished. For example, P(t) is the same as p(T) or P(T) or p(t).Try to add explanations for your equations and symbols you define in your code. Use * for commenting a line or $ontext $offtext for a block of comments.Choose the symbol names carefully and meaningfully. For example for the power generated by power plants, P(g) is a better choice than X(i). You can define g as the set of generating units and variable P as the generated power.Don't get frightened by the errors once your code is compiled. The best thing to see is the error flag. Sometimes although the model does not generate any error flag (since you have obeyed the GAMS syntax) but it is not correctly modeling the given problem.Keep in mind that the machine is always right so GAMS cannot go wrong. Debugging is also a part of the coding process.Always check the GAMS output. The variables, model statistics, and solver statistics should be checked to see if any flag is raised. If the output of GAMS model is not what you expect then there should be something wrong with your model (not the GAMS). Double-check the equations and see if the developed model is actually what it is desired to be or not.If you need to specify some limits for your variables then try to do it using.lo or.up attributes. Although creating a new equation for modeling this constraint is "legal", however, it is totally "inappropriate". For example, you need to state that the minimum value of variable P(g) is 1 then it can be easily done using P.lo(g) = 1. Sometimes the variables should be limited using some tables of parameters. For example, the minimum values of P(g) are stored in a parameter Pmin(g) then P.lo(g) = Pmin(g) will do the job. As far as no variable exists then no equation is needed. If Pmin(g) is a variable, then the following line will be appropriate for modeling this constraint.eq(g).. P(g)=g=Pmin(g);It should be noted that eq is defined over the set g since the inequality should be valid for every element belonging to the set g.Although GAMS is a robust programming language less number of variables and equations are always welcome. Try to avoid unnecessary equations and variables. Use filtering to omit unnecessary equations. For example, we need to define an equation which calculates the power flow of a line connecting 'bus' to 'node' in DC power flow formulation. The following GAMS code might be the first attempt to model it.Eq(bus,node).. Pij(bus,node)=e=(d(bus)-d(node))/data(bus,node,'x');Suppose the network has 186 lines and 118 buses. This kind of coding would create two problems: The parameter data(bus, node,'x') is zero when bus and node are not connected to each other. GAMS might generate a division by Zero error! It's not always easy to find and remove the cause of error.If you check the model you can see that this equation adds 13,924 single equations to the model. You might ask yourself why? We were expecting to have only 186 equations (or double that since flow in opposite direction should also be calculated). It is almost 74 times bigger than what we were expecting to have. This is because GAMS is considering every combination between "bus" and "node" (118*118).
The better way to code this line is as follows:​​​​Eq(bus,node)$branch(bus,node,'x')..Pij(bus,node)=e=(d(bus)-d(node))/data(bus,node,'x');In this way, the equation is filtered and is only valid for those lines which have nonzero reactance values. It also reduces the computation time and the chance of difficulties in finding a feasible/optimal solution.Don't forget to put a semicolon (;) at the end of every line (sometimes it is not necessary but if you have just started coding in GAMS, do it).Different solvers might use different approaches to solve the model. Try different solver to find out which one is more successful/faster in finding a solution for your problem.The default value for undefined elements of a table or parameter is zero. For example, consider a parameter like Data(bus,node) representing the line reactance; Suppose that we define Data('2','4')=0.5; If this parameter is displayed, you can see that all elements are zero except Data('2','4'). If you are a power engineer, you know that the reactance between bus number 2 and bus number 4 should be the same as reactance between bus number 4 and bus number 2. In other words, it should be symmetrical. Unfortunately (or fortunately) GAMS is not a power system engineer and does not understand even a word from power system or electrical engineering. GAMS only understands whatever it is told by the user (code developer).Go to your GAMS model library and have a look at those developed codes. There are loads of new things to learn even for experienced GAMS code developers. The GAMS model library can be accessed through the interface as shown in Fig. 1.7.
Fig. 1.7GAMS model library
Try to provide all of the variables appropriate upper and lower limits as well as initial starting values. The initial values can be assigned to the variables using.l expression (do it before solving statement). For example, voltage variables can be assigned 1 per unit values as the initial starting values. This is a double-edged sword. This is because providing a good starting value can highly improve the solution procedure especially in nonlinear or mixed integer nonlinear models but a poor starting value might slowdown the solver.It is very likely that you get an infeasible status for your model. Especially when the model is large and includes a large number of variables. The following steps might be helpful in resolving the problem: Check to see if you can better express your model. It is always desired to stay as close as possible to the linear form of expressing the equations.Provide better initial values for your variables.Relax the variable limits, rerun the model. If the problem is resolved, then it means that the variable limits should be revised. If your model contains integer/binary variables, then you can solve the model using relaxed option. For example, the MIP model can be solved using RMIP. This would ask the GAMS to neglect integer nature of the variables (the variable limits remain unchanged). For relaxing the MINLP and MIQCP, you should use RMINLP and RMIQCP, respectively.Remove some equations or add some slack variables to the model to see if you can find the trouble making equationsAsk support from those experienced GAMS code developers (if they have time and are willing to contribute to your project). This option is intentionally placed at the end of suggestion list.


There is a set of good resources that can be accessed through the GAMS interface as it is shown in Fig. 1.8. Additionally, some other useful tutorials are listed as follows:
Fig. 1.8GAMS help menu


A GAMS tutorial [70]GAMS language guide [71]GAMS—Modeling and Solving Optimization Problems [72]GAMS and MATLAB interface [73-75]Grid-enabled optimization with GAMS [76]Practical financial optimization in GAMS [77]



1.9 Book Structure
The objectives pursued in this book are the following: Familiarizing the readers with optimization concept through multiple examplesIntroducing different optimization problems that the decision makers might face in power system studiesProviding robust solutions for different operation/planning problems in power system studiesExploring the capabilities of GAMS in conducting sensitivity analysis

This book consists of ten chapters. A brief description of each chapter is provided here: Chapter 1 provides the instructions on how to start coding in GAMS. Different programming elements and some coding tricks are introduced and explained. Reading this chapter would be helpful to understand what to expect from GAMS in dealing with optimization problems.Chapter 2 provides some insights to the reader on how to solve simple optimization problems through some illustrative examples. These examples are pure mathematics, and no power system or electrical engineering background is required for the readers. This chapter can also be used for those who might be only interested in learning GAMS for interdisciplinary applications.Chapter 3 discusses how to model the dispatching problem of different power plants in a single snapshot (single period). Different power plant technologies are explained such as thermal power, wind turbine, CHP, and hydro-power plants.Chapter 4 provides a solution for dynamic economic dispatch problem (multi-period problems). The time-dependent optimal dispatch decisions are modeled and solved.Chapter 5 explains how unit commitment problem can be modeled and solved in GAMS. The developed codes in this chapter are linear and categorized as mixed integer linear programming (MIP) models. The inputs are generator's characteristics, electricity prices, and demands. The outputs of these codes are on/off status of units and their operating schedules.Chapter 6 provides a solution for optimal power flow (OPF) problem. The active/reactive power output of generating units as well as the network variables (voltage magnitudes and angles) are determined in OPF to minimize total operating costs. Different OPF models are investigated such as single and multi-period DC/AC optimal power flow. The appropriate linear/nonlinear models are developed and solved in this chapter.Chapter 7 provides a solution for modeling the operation and planning problems of energy storage systems (ESS). The inputs are generator's characteristics, electricity prices, demands, and network topology. The outputs of this code are operating schedules/locations and sizes of ESS units.Chapter 8 provides a solution for allocation of Phasor Measurement Units (PMU) problem in transmission networks to maximize the power system observability. The PMU can measure the voltage phasor at the connection bus, and also it measures the current phasor of any branch connected to the bus hosting the PMU. Different cases are analyzed, and the problem is tested on some standard IEEE cases.Chapter 9 provides a solution for some transmission network operation and planning studies in GAMS. The transmission investment regarding building new lines and power flow controllers (phase shifter), sensitivity factors, and transmission switching have been discussed in this chapter. The GAMS code for solving each optimization problem is developed and discussed.Chapter 10 provides a solution for Energy System Integration (ESI) problem in GAMS. The question which is answered in this chapter is how to harvest the flexibilities in different energy sectors by coordinated operation of these sectors.



References


1.
J.L.C. Meza, M.B. Yildirim, A.S.M. Masud, A model for the multiperiod multiobjective power generation expansion problem. IEEE Trans. Power Syst. 22(2), 871-878 (2007)Crossref


2.
S. Kannan, S. Baskar, J.D. McCalley, P. Murugan, Application of NSGA-II algorithm to generation expansion planning. IEEE Trans. Power Syst. 24(1), 454-461 (2009)Crossref


3.
R. Fang, D.J. Hill, A new strategy for transmission expansion in competitive electricity markets. IEEE Trans. Power Syst. 18(1), 374-380 (2003)Crossref


4.
R. Romero, A. Monticelli, A. Garcia, S. Haffner, Test systems and mathematical models for transmission network expansion planning. IEE Proc. Gener. Transm. Distrib. 149(1), 27-36 (2002)Crossref


5.
V. Miranda, J.V. Ranito, L.M. Proenca, Genetic algorithms in optimal multistage distribution network planning. IEEE Trans. Power Syst. 9(4), 1927-1933 (1994)Crossref


6.
S. Gerbex, R. Cherkaoui, A.J. Germond, Optimal location of multi-type facts devices in a power system by means of genetic algorithms. IEEE Trans. Power Syst. 16(3), 537-544 (2001)Crossref


7.
C. Wang, M.H. Nehrir, Analytical approaches for optimal placement of distributed generation sources in power systems. IEEE Trans. Power Syst. 19(4), 2068-2076 (2004)Crossref


8.
W. El-Khattam, K. Bhattacharya, Y. Hegazy, M.M.A. Salama, Optimal investment planning for distributed generation in a competitive electricity market. IEEE Trans. Power Syst. 19(3), 1674-1684 (2004)Crossref


9.
A. Keane, M. O'Malley, Optimal allocation of embedded generation on distribution networks. IEEE Trans. Power Syst. 20(3), 1640-1646 (2005)Crossref


10.
S. Sundhararajan, A. Pahwa, Optimal selection of capacitors for radial distribution systems using a genetic algorithm. IEEE Trans. Power Syst. 9(3), 1499-1507 (1994)Crossref


11.
B. Milosevic, M. Begovic, Nondominated sorting genetic algorithm for optimal phasor measurement placement. IEEE Trans. Power Syst. 18(1), 69-75 (2003)Crossref


12.
B. Gou, Generalized integer linear programming formulation for optimal PMU placement. IEEE Trans. Power Syst. 23(3), 1099-1104 (2008)Crossref


13.
Y.M. Atwa, E.F. El-Saadany, Optimal allocation of ESS in distribution systems with a high penetration of wind energy. IEEE Trans. Power Syst. 25(4), 1815-1822 (2010)Crossref


14.
H. Oh, Optimal planning to include storage devices in power systems. IEEE Trans. Power Syst. 26(3), 1118-1128 (2011)Crossref


15.
P. Maghouli, A. Soroudi, A. Keane, Robust computational framework for mid-term techno-economical assessment of energy storage. IET Gener. Transm. Distrib. 10(3), 822-831 (2016)Crossref


16.
A. Soroudi, M. Afrasiab, Binary PSO-based dynamic multi-objective model for distributed generation planning under uncertainty. IET Renew. Power Gener. 6(2), 67-78 (2012)Crossref


17.
G. Blanco, F. Olsina, F. Garces, C. Rehtanz, Real option valuation of facts investments based on the least square monte carlo method. IEEE Trans. Power Syst. 26(3), 1389-1398 (2011)Crossref


18.
B. Chen, J. Wang, L. Wang, Y. He, Z. Wang, Robust optimization for transmission expansion planning: minimax cost vs. minimax regret. IEEE Trans. Power Syst. 29(6), 3069-3077 (2014)


19.

V. Miranda, M.A.C.C. Matos, Distribution system planning with fuzzy models and techniques, in 10th International Conference on Electricity Distribution, 1989 (CIRED 1989), vol. 6, Brighton (1989), pp. 472-476


20.
S. Civanlar, J.J. Grainger, H. Yin, S.S.H. Lee, Distribution feeder reconfiguration for loss reduction. IEEE Trans. Power Delivery 3(3), 1217-1223 (1988)Crossref


21.
M. Carrion, J.M. Arroyo, A computationally efficient mixed-integer linear formulation for the thermal unit commitment problem. IEEE Trans. Power Syst. 21(3), 1371-1378 (2006)Crossref


22.
J.M. Arroyo, A.J. Conejo, Optimal response of a thermal unit to an electricity spot market. IEEE Trans. Power Syst. 15(3), 1098-1104 (2000)Crossref


23.
D.W. Ross, S. Kim, Dynamic economic dispatch of generation. IEEE Trans. Power Apparatus Syst. PAS-99(6), 2060-2068 (1980)Crossref


24.
Z.-L. Gaing, Particle swarm optimization to solving the economic dispatch considering the generator constraints. IEEE Trans. Power Syst. 18(3), 1187-1195 (2003)Crossref


25.
J. Endrenyi, S. Aboresheid, R.N. Allan, G.J. Anders, S. Asgarpoor, R. Billinton, N. Chowdhury, E.N. Dialynas, M. Fipper, R.H. Fletcher, C. Grigg, J. McCalley, S. Meliopoulos, T.C. Mielnik, P. Nitu, N. Rau, N.D. Reppen, L. Salvaderi, A. Schneider, C. Singh, The present status of maintenance strategies and the impact of maintenance on reliability. IEEE Trans. Power Syst. 16(4), 638-646 (2001)Crossref


26.
A.G. Bakirtzis, P.N. Biskas, A decentralized solution to the DC-OPF of interconnected power systems. IEEE Trans. Power Syst. 18(3), 1007-1013 (2003)Crossref


27.
R.D. Zimmerman, C.E. Murillo-Sanchez, R.J. Thomas, Matpower: steady-state operations, planning, and analysis tools for power systems research and education. IEEE Trans. Power Syst. 26(1), 12-19 (2011)Crossref


28.
Y.M. Atwa, E.F. El-Saadany, M.M.A. Salama, R. Seethapathy, Optimal renewable resources mix for distribution system energy loss minimization. IEEE Trans. Power Syst. 25(1), 360-370 (2010)Crossref


29.
K.R.C. Mamandur, R.D. Chenoweth, Optimal control of reactive power flow for improvements in voltage profiles and for real power loss minimization. IEEE Trans. Power Apparatus Syst. PAS-100(7), 3185-3194 (1981)Crossref


30.
Y. Bai, H. Zhong, Q. Xia, C. Kang, A two-level approach to ac optimal transmission switching with an accelerating technique. IEEE Trans. Power Syst. 32(2), 1616-1625 (2017)


31.
N. Rotering, M. Ilic, Optimal charge control of plug-in hybrid electric vehicles in deregulated electricity markets. IEEE Trans. Power Syst. 26(3), 1021-1029 (2011)Crossref


32.
F. Wen, A.K. David, Optimal bidding strategies and modeling of imperfect information among competitive generators. IEEE Trans. Power Syst. 16(1), 15-21 (2001)Crossref


33.
A. Baillo, M. Ventosa, M. Rivier, A. Ramos, Optimal offering strategies for generation companies operating in electricity spot markets. IEEE Trans. Power Syst. 19(2), 745-753 (2004)Crossref


34.
H.B. Gooi, D.P. Mendes, K.R.W. Bell, D.S. Kirschen, Optimal scheduling of spinning reserve. IEEE Trans. Power Syst. 14(4), 1485-1492 (1999)Crossref


35.
K.A. Papadogiannis, N.D. Hatziargyriou, Optimal allocation of primary reserve services in energy markets. IEEE Trans. Power Syst. 19(1), 652-659 (2004)Crossref


36.
A. Soroudi, P. Siano, A. Keane, Optimal DR and ESS scheduling for distribution losses payments minimization under electricity price uncertainty. IEEE Trans. Smart Grid 7(1), 261-272 (2016)Crossref


37.
S. Dutta, S.P. Singh, Optimal rescheduling of generators for congestion management based on particle swarm optimization. IEEE Trans. Power Syst. 23(4), 1560-1569 (2008)Crossref


38.
C. Murphy, A. Soroudi, A. Keane, Information gap decision theory-based congestion and voltage management in the presence of uncertain wind power. IEEE Trans. Sust. Energy 7(2), 841-849 (2016)Crossref


39.
B. Hayes, I. Hernando-Gil, A. Collin, G. Harrison, S. Djoki, Optimal power flow for maximizing network benefits from demand-side management. IEEE Trans. Power Syst. 29(4), 1739-1747 (2014)Crossref


40.
A.J. Conejo, J.M. Morales, L. Baringo, Real-time demand response model. IEEE Trans. Smart Grid 1(3), 236-242 (2010)Crossref


41.
A. Rabiee, A. Soroudi, A. Keane, Information gap decision theory based OPF with HVDC connected wind farms. IEEE Trans. Power Syst. 30(6), 3396-3406 (2015)Crossref


42.
A. Soroudi, A. Rabiee, A. Keane, Information gap decision theory approach to deal with wind power uncertainty in unit commitment. Electr. Power Syst. Res. 145, 137-148 (2017)Crossref


43.
A.J. Conejo, M. Carrión, J.M. Morales, Decision Making Under Uncertainty in Electricity Markets, vol. 1 (Springer, New York, 2010)CrossrefMATH


44.
E. Zio, The Monte Carlo Simulation Method for System Reliability and Risk Analysis (Springer, London, 2013)Crossref


45.
A. Soroudi, Possibilistic-scenario model for DG impact assessment on distribution networks in an uncertain environment. IEEE Trans. Power Syst. 27(3), 1283-1293 (2012)Crossref


46.
S. Granville, Optimal reactive dispatch through interior point methods. IEEE Trans. Power Syst. 9(1), 136-146 (1994)Crossref


47.
T. Ding, R. Bo, F. Li, H. Sun, A bi-level branch and bound method for economic dispatch with disjoint prohibited zones considering network losses. IEEE Trans. Power Syst. 30(6), 2841-2855 (2015)Crossref


48.
S. Binato, M.V.F. Pereira, S. Granville, A new benders decomposition approach to solve power transmission network design problems. IEEE Trans. Power Syst. 16(2), 235-240 (2001)Crossref


49.
D.K. Molzahn, J.T. Holzer, B.C. Lesieutre, C.L. DeMarco, Implementation of a large-scale optimal power flow solver based on semidefinite programming. IEEE Trans. Power Syst. 28(4), 3987-3998 (2013)Crossref


50.
R.A. Jabr, Exploiting sparsity in SDP relaxations of the OPF problem. IEEE Trans. Power Syst. 27(2), 1138-1139 (2012)Crossref


51.
T. Wu, M. Rothleder, Z. Alaywan, A.D. Papalexopoulos, Pricing energy and ancillary services in integrated market systems by an optimal power flow. IEEE Trans. Power Syst. 19(1), 339-347 (2004)Crossref


52.
J.M. Arroyo, F.D. Galiana, On the solution of the bilevel programming formulation of the terrorist threat problem. IEEE Trans. Power Syst. 20(2), 789-797 (2005)Crossref


53.
D.I. Sun, B. Ashley, B. Brewer, A. Hughes, W.F. Tinney, Optimal power flow by Newton approach. IEEE Trans. Power Apparatus Syst. PAS-103(10), 2864-2880 (1984)Crossref


54.
F. Milano, Continuous Newton's method for power flow analysis. IEEE Trans. Power Syst. 24(1), 50-57 (2009)MathSciNetCrossref


55.
E.C. Finardi, E.L. da Silva, Solving the hydro unit commitment problem via dual decomposition and sequential quadratic programming. IEEE Trans. Power Syst. 21(2), 835-844 (2006)Crossref


56.
I.P. Abril, J.A.G. Quintero, Var compensation by sequential quadratic programming. IEEE Trans. Power Syst. 18(1), 36-41 (2003)Crossref


57.
B. Enacheanu, B. Raison, R. Caire, O. Devaux, W. Bienia, N. HadjSaid, Radial network reconfiguration using genetic algorithm based on the matroid theory. IEEE Trans. Power Syst. 23(1), 186-195 (2008)Crossref


58.
P. Maghouli, S.H. Hosseini, M.O. Buygi, M. Shahidehpour, A scenario-based multi-objective model for multi-stage transmission expansion planning. IEEE Trans. Power Syst. 26(1), 470-478 (2011)Crossref


59.
T. Amraee, A.M Ranjbar, R. Feuillet. Immune-based selection of pilot nodes for secondary voltage control. Eur. Trans. Electr. Power 20(7), 938-951 (2010)


60.
T. Satoh, K. Nara, Maintenance scheduling by using simulated annealing method [for power plants]. IEEE Trans. Power Syst. 6(2), 850-857 (1991)Crossref


61.
J.G. Vlachogiannis, K.Y. Lee. Quantum-inspired evolutionary algorithm for real and reactive power dispatch. IEEE Trans. Power Syst. 23(4), 1627-1636 (2008)Crossref


62.
C. Dai, W. Chen, Y. Zhu, X. Zhang, Seeker optimization algorithm for optimal reactive power dispatch. IEEE Trans. Power Syst. 24(3), 1218-1231 (2009)


63.
T. Amraee, Coordination of directional overcurrent relays using seeker algorithm. IEEE Trans. Power Delivery 27(3), 1415-1422 (2012)Crossref


64.
D.N. Vo, P. Schegner, W. Ongsakul, Cuckoo search algorithm for non-convex economic dispatch. IET Gener. Transm. Distrib. 7(6), 645-654 (2013)Crossref


65.
A.A. El-fergany, A.Y. Abdelaziz, Capacitor allocations in radial distribution networks using cuckoo search algorithm. IET Gener. Transm. Distrib. 8(2), 223-232 (2014)Crossref


66.
M. Barati, M.M. Farsangi, Solving unit commitment problem by a binary shuffled frog leaping algorithm. IET Gener. Transm. Distrib. 8(6), 1050-1060 (2014)Crossref


67.
R. Roche, L. Idoumghar, B. Blunier, A. Miraoui, Imperialist competitive algorithm for dynamic optimization of economic dispatch in power systems, in International Conference on Artificial Evolution (Evolution Artificielle) (Springer, Berlin, 2011), pp. 217-228


68.
W.-M. Lin, F.-S. Cheng, M.-T. Tsay, An improved tabu search for economic dispatch with multiple minima. IEEE Trans. Power Syst. 17(1), 108-112 (2002)Crossref


69.
C.F. Chang, Reconfiguration and capacitor placement for loss reduction of distribution systems by ant colony search algorithm. IEEE Trans. Power Syst. 23(4), 1747-1755 (2008)Crossref


70.
R.E. Rosenthal, A GAMS tutorial. Technical note (1992)


71.
A. Brooke, D. Kendrick, A. Meeraus, R. Raman, R.E. Rosenthal, Gams. A Users Guide (GAMS Development Corporation, Washington, DC, 2005)


72.
A. Geletu, Gams-Modeling and Solving Optimization Problems (TU-Ilmenau, Faculty of Mathematics and Natural Sciences, Department of Operation Research & Stochastrics, Ilmenau, 2008)


73.
M.C. Ferris, Matlab and GAMS: interfacing optimization and visualization software. Mathematical Programming Technical Report, 98:19 (1998)


74.
L. Wong et al., Linking Matlab and Gams: A Supplement (University of Victoria, Department of Economics, Victoria, BC, 2009)


75.
M.C. Ferris, R. Jain, S. Dirkse, Gdxmrw: Interfacing GAMS and matlab (2011). http://​www.​gams.​com/​dd/​docs/​tools/​gdxmrw.​pdf



76.
M.R. Bussieck, M.C. Ferris, A. Meeraus, Grid-enabled optimization with GAMS. INFORMS J. Comput. 21(3), 349-362 (2009)MathSciNetCrossrefMATH


77.
S.S. Nielson, A. Consiglio, Practical Financial Optimization: A Library of GAMS Models (Wiley, New York, 2010)














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_2





2. Simple Examples in GAMS




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




The main concept that is developed in this chapter is explaining some optimization categories that can be modeled in GAMS. These models include linear programming (LP), mixed integer programming (MIP), nonlinear programming (NLP), quadratic programming (QCP), mixed integer non-linear programming (MINLP), and multi-objective optimization problems.
Understanding the materials presented and discussed in this chapter does not require any background in power system studies. This makes it suitable for anybody who might be interested to start optimization modeling in GAMS.

2.1 Different Types of Optimization Models
The general form of an optimization problem is as follows:  (2.1a)  (2.1b)  (2.1c) where f is objective function, G and H are set of equality and inequality constraints, respectively, I is the input data of the optimization problem, and X is the set of decision variables that should not only satisfy G and H but also optimizes the f value.

2.1.1 Linear Programming (LP)
The linear programming problems are those that f, G, H are all linear in (2.1).

2.1.1.1 LP Example
A simple linear programming example is as follows:  (2.2a)  (2.2b)  (2.2c)  (2.2d)


GCode 2.1 LP Example (2.2)

variables  x1, x2, x3, of;Equationseq1eq2eq3eq4;eq1 ..  x1 +2* x2 = g=3;eq2 ..  x3 + x2 = g=5;eq3 ..  x1 + x3 = e=4;eq4 ..  x1 +3* x2 +3* x3 = e = OF;model LP1 /all/;Solve LP1 US LP min of;display  x1. l, x2. l, x3. l, of. l;


The optimal solution is . Clicking on the model statistic tap shows that this model has four blocks of equations (four single equations). It has also four variables (x
1,2,3, OF). The solution report would be as follows:
S O L V E S U M M A R Y
MODEL LP1 OBJECTIVE of
TYPE LP DIRECTION MINIMIZE
SOLVER CPLEX FROM LINE 12
**** SOLVER STATUS 1 Normal Completion
**** MODEL STATUS 1 Optimal
**** OBJECTIVE VALUE 15.3333
RESOURCE USAGE, LIMIT 0.016 1000.000
ITERATION COUNT, LIMIT 2 2000000000
It means that the solver has successfully solved the model and the solution is globally optimal. The solver used for solving the model is CPLEX [1]. It states that the value of objective function is 15.333. It also gives the user some info regarding the computational burden needed for solving the problem. RESOURCE USAGE is indicating how much time was needed to solve the model in seconds (0.016 s) and what was the maximum time allowed to do so (1000 s). The number of iterations needed for finding the optimal solution is two in this case. The default value for this limit is 2,000,000,000.
Clicking on the SolEQU tab would show the following info regarding the model:
   LOWERLEVELUPPERMARGINAL—-EQUeq133+INF0.333—-EQUeq255+INF2.333—-EQUeq34440.667—-EQUeq4000-1

The lower limits of eq1,eq2 have some finite values (3,5) but their upper limits are +∞. This means that these two equations are of ≥ type. Equations eq3,eq4 have equal values for lower and upper limits. This means that these equations are of equality type. The interesting part of the analysis is given in marginal column (the last column). As it can be seen, the level values of eq1,eq2,eq3 are equal to their lower limits. This has a certain meaning that these constraints are binding constraints. This means that if the lower limits are changed then the objective function value would change. The marginal values actually show the sensitivity coefficients of objective function to these equations. Let's check them in more detail. The marginal value of eq1 is 0.333. This means that . The right-hand side of eq1 is 3 so if it is increased to 3.2 then ΔRHS eq1 = 3. 2 − 3 = 0. 2. The marginal value indicates that the new objective function would be 15. 333 + 0. 333 ∗ 0. 2 = 15. 3996. If the GAMS model is solved using the new RHS value of eq1 (3.​2) then OF would be 15.4. The obtained value is close but not exactly what we were expecting but why? This is because the marginal values are accurate for very small change in RHS values of the equations. If the variations are small enough then the approximation would be accurate enough.
The marginal values constitute the values of dual variables. The decision maker can understand which constraint is binding (has nonzero marginal value) and also shows the most influential constraint on objective function (the biggest marginal value).
Clicking on the SolVAR tab would show the following info regarding the model:
   LOWERLEVELUPPERMARGINAL—-VARx1-INF0.333+INF0—-VARx2-INF1.333+INF0—-VARx3-INF3.667+INF0—-VAROF-INF15.333+INF0

The variable attributes are given in the table above. The lower and upper limits of all variables are −∞ and + ∞, respectively. The marginal values are zero (this is because no bound is defined for variables). Suppose that we define a lower limit for x
2 which is 2 ≤ x
2. Let's see the impact on marginal values of equations and variables: The code would be as follows:
Variables x1,x2,x3,of;
Equations eq1,eq2,eq3,eq4;
eq1.. x1+2*x2 =g=3;
eq2.. x3+x2 =g=5;
eq3.. x1+x3 =e=4;
eq4.. x1+3*x2 +3*x3=e=OF;
Model LP1 /all/;
x2.lo=2;
Solve LP1 US LP min of;
display x1.l,x2.l,x3.l,of.l;
Clicking on the SolEQU tab would show the following info regarding the model:
   LOWERLEVELUPPERMARGINAL—-EQUeq135+INF0—-EQUeq255+INF2—-EQUeq34441—-EQUeq4000-1

This table shows that eq1 is no longer the binding equation. This means that small change of RHS (which is 3 here) won't change the objective function. The marginal value of this equation is zero. The eq2 and eq3 are binding equations (they have nonzero marginal values and also their level is equal to their lower value).
Clicking on the SolVAR tab would show the following info regarding the model:
   LOWERLEVELUPPERMARGINAL—-VARx1-INF1+INF0—-VARx222+INF1—-VARx3-INF3+INF0—-VAROF-INF16+INF0

The marginal values of all variables are zero except x2 which is 1. This means that setting a lower limit for x2 caused this situation. Originally, the optimal value of x2 was 1.333 and now the lower limit (which is set to be 2) stops it from reaching its optimal value. Any possible decrease in x2 can help reducing the overall objective function.

GCode 2.2 Finding the boundaries of a variable example (2.3)

Variables  x1, x2, x3, of;Equationseq1, eq2, eq3, eq4;eq1 ..  x1 +2* x2 =l =3;eq2 ..  x3 + x2 =l =2;eq3 ..  x1 + x2 + x3 = e=4;eq4 ..  x1 +2* x2 −3*x3 = e = OF;Model LP1 /all/;x1. lo =0; x1. up=5; x2. lo =0; x2. up=3; x3. lo =0; x3. up=2;Solve LP1 US LP max  of;display  x1. l, x2. l, x3. l, of. l;Solve LP1 US LP min of;display  x1. l, x2. l, x3. l, of. l;




2.1.1.2 Boundary Determination Example
Sometimes it is needed to find the maximum and minimum of the objective function for a given model. This means that the problem should be solved two times. The example given in (2.3) is describing such a situation.  (2.3a)  (2.3b)  (2.3c)  (2.3d)  (2.3e)  (2.3f)  (2.3g)

Please pay special attention to (2.3e)-(2.3g). These three constraints can be easily treated in GAMS using. lo and. up statements. In order to reduce the number of equations in the model it should be avoided defining them as six extra equations. The Gcode 2.2 for solving (2.3) is provided as follows:
The problem is solved and the solutions are obtained as  and ​​​​​​. The application of this model is in interval optimization [2], fuzzy optimization [3], and DC power flow (which will be discussed in Chap. 6)



2.1.2 Mixed Integer Programming (MIP)
In mixed integer programming (MIP) problems, the decision maker is faced with constraints and objective function that are linear but there exist some integer/binary variables.

2.1.2.1 MIP Example
A MIP example is given for clarification as follows:

GCode 2.3 MIP example (2.4)

Variables  x, of;Binary variable  y;Equations eq1,  eq2, eq3;eq1 ..  −3*x +2* y = g=1;eq2 ..  −8*x+10*y =l =10;eq3 ..    x + y = e = OF;Model MIP1 /all/;x. up=0.3;Solve MIP1 US MIP  max  of;display  y. l, x. l, of. l;



 (2.4a)  (2.4b)  (2.4c)  (2.4d) y is a binary variable and x is a real number. The GAMS code for solving (2.4) is provided in GCode 2.3:
By running the GAMS code the optimal solution is found as follows: 



2.1.2.2 N-Queen Example
The N-queen problem is a classic MIP problem [4]. In this problem, it is tried to maximize the number of queens that can sit on a chessboard without attacking each other. The procedure is simple as follows: First of all, it is needed to define a variable x

ij
 which is a binary variable (0/1) and states whether the queen should sit (1) on block ij (row i, column j) or not (0). Additionally, if the queen is on block ij then no other queen can sit on row i or column j or the diagonal that contains cell ij. This is mathematically stated as follows:  (2.5a)  (2.5b)  (2.5c)  (2.5d) If a queen is on a cell then no other queen can exist on the same column (2.5b) or the same row (2.5c) or the same diagonal (2.5d). The GAMS code for solving N-queen problem (2.5) is given in GCode 2.4:
The N-queen problem is solved two times in Gcode 2.4. Two models are defined in this code namely MIP2a and MIP2b. The Queen placement is solved on a 4 × 4 board, Fig. 2.1a shows the wrong placement. This solution is obtained from MIP2a and considers eq
1,2,3. This is because we are not considering diagonal movement of queen. In order to overcome this shortcoming two additional constraints eq
4,5 are considered in Model MIP2b. The correct solution is depicted in Fig. 2.1b.Fig. 2.1Queen placement on a 4 × 4 board: (a) wrong placement, (b) optimal placement

It should be noted that the solution for the defined problem is optimal but not unique. This means that other configurations might be obtained that can satisfy the defined constraints. The developed GCode 2.4 is general and can be used for solving the problem for various sizes of the board. The optimal solution for queen placement on a (a) 8 × 8 chessboard and (b) 16 × 16 board is shown in Fig. 2.2.Fig. 2.2Queen placement on a (a) 8 × 8 chessboard, (b) 16 × 16 board


GCode 2.4 N-queen example (2.5)

Sets i  /1*4/,  j  / 1 * 4 /; a l i a s ( i, row); a l i a s ( j, col );variable  of;binary variable  x( i, j );Equations eq1, eq2, eq3, eq4, eq5;eq1 ( j ) ..  sum( i, x( i, j ) ) =l =1;eq2 ( i ) ..  sum( j, x( i, j ) ) =l =1;eq3    ..  sum(( i, j ),x( i, j ) )= e = OF;eq4 ( i, j ) ..   sum(( row, col )$ (( ord (row) −ord ( i ) )=(ord ( col ) −ord ( j ) ) ),x(row, col ) )=l =1;eq5 ( i, j ) ..   sum(( row, col )$ (( ord (row) −ord ( i ) )=−(ord ( col ) −ord ( j ) ) ),x(row, col ) )=l =1;Model MIP2a /eq1, eq2, eq3 /;Model MIP2b /all/;Solve MIP2a US MIP  max  of;display  x. l, of. l;Solve MIP2b US MIP  max  of;display  x. l, of. l;




2.1.2.3 Emergency Center Allocation
Consider six cities (1-6) which are located at different distances to each other. Each city should have access to an emergency center within a short period of time. The time required for moving from one city to another one is given in the following table in minutes. 1234561030162224292 0543243243  04450284   014435    0126     0

It should be noted that the values of this table are symmetrical. For example, distance from city 1 to city 2 is 30 min. It means that the distance from city 2 to city 1 is also 30 min. The critical time for reaching to the emergency center is assumed to be 20 min. The question is what is the minimum number of cities that should host emergency center? Which cities should be chosen?
By observing the first row of distance matrix, it is understood that if city 1 or city 6 have the emergency center then city 1 meets the access requirement. The same concept applies for city 2. City 2 should definitely have an emergency center because no other city is located within 20 min distance of this city. If the allocation decision is defined as a binary variable x

i
 then the following inequality should be satisfied for city 1:  (2.6) The following inequality should be satisfied for city 2:  (2.7) The overall constraints are as follows:

 (2.8)
 (2.9)
 (2.10)
 (2.11)
 (2.12)
 (2.13)

Two different approaches will be presented here for modeling this problem.
Scalar equations:
In this approach, we initially analyzed the distance data and understood what kind of relations should be enforced for different variables. The GCode 2.5 is describing how to do this.

GCode 2.5 Scalar equations for emergency centre allocation

binary variable  x1, x2, x3, x4, x5, x6;variable  OF;equationseq1, eq2, eq3, eq4, eq5, eq6, eq7;eq1 ..  x1 + x6 = g=1;eq2 ..  x2 = g=1;eq3 ..  x3 + x5 = g=1;eq4 ..  x4 + x5 = g=1;eq5 ..  x3 + x4 + x5 + x6 = g=1;eq6 ..  x1 + x5 + x6 = g=1;eq7 ..  x1 + x2 + x3 + x4 + x5 + x6 = e = OF;Model emergency /all/;Solve emergency us mip min of;


The optimal answer is OF = 3 (three cities should host emergency centers). The candidate cities are x
1, x
2, x
5. The problem with this kind of modeling is that it needs pre-processing of the raw data and also in case, the number of cities are changed then it is need to extensively modify the code. A much more efficient way of coding this problem is using the extended equations.
Indexed equations:

GCode 2.6 Indexed equations for emergency centre allocation


set city  / 1 * 6 /       ; a l i a s ( city, town);binary variable  x( city );variable  OF;table  data ( city, town)     1    2    3    4    5    61    0    30   46   22   24   192         0    54   32   43   243              0    44   16   284                   0    14   435                        0    126                             0;data ( city, town) $data (town, city )=data (town, city );scalar  c r i t i c a l t i m e  /20/;Equationseq1, eq2;eq1 ( city ) ..  sum(town$( data ( city, town)<c r i t i c a l t i m e ), x(town) ) =g=1;eq2 ..  OF=e=sum( city, x( city ) );Model emergency /all/;Solve emergency us mip min of;


The developed code will provide the same answer as before but it has the following features: It is not needed to manually write one equation for each constraint.It works for any number of cities.The distance data is fed to the model using a table. This will be useful for cases that the input data might change.Debugging and tracing the code are much easier for the users.The code does not change if the critical access time is updated.

The following line of the code is to make the data matrix symmetrical.
data(city,town)$data(town,city)=data(town,city);
The following line describes the condition for accessing the emergency center (for each city). The equation eq1 is defined over the set "city."
eq1(city).. sum(town$(data(city,town)¡criticaltime), x(town)) =g=1;
The optimal solution is:
—- VAR x
LOWER LEVEL UPPER MARGINAL
1.. 1.000 1.000
2. 1.000 1.000 1.000
3.. 1.000 1.000
4.. 1.000 1.000
5. 1.000 1.000 1.000
6. 1.000 1.000 1.000



2.1.3 Nonlinear Programming (NLP)
In nonlinear programming problems, at least one of f, G, H in (2.1) is nonlinear.

2.1.3.1 NLP Example (2.14)

 (2.14a)  (2.14b)  (2.14c)  (2.14d) The GAMS code for solving example (2.14) is given in GCode 2.7:

GCode 2.7 Example (2.14)

variable  of, x1, x2, x3, x4;equationseq1, eq2, eq3;eq1 ..  x1 * x4 * ( x1 + x2 + x3)+x2 = e = OF;eq2 ..  x1 * x2 * x3 * x4 = g=20;eq3 ..  x1 * x1 + x2 * x2 + x3 * x3 + x4 * x4 = e=30;x1. lo =1;x1. up=3;x2. lo =1;x2. up=3;x3. lo =1;x3. up=3;x4. lo =1;x4. up=3;Model NLP1 /all/;Solve NLP1 US NLP  max  of;


The solution for example (2.14) obtained by GCode 2.7 is as follows:
VariablesLowerLevelUpperMarginalof−∞
73.605+ ∞
0
x11.0003.0003.00021.025
x21.0002.5753.0000
x31.0002.3173.0000
x41.0003.0003.00012.025

It is worth noting that providing a starting point for the variables can help the GAMS in finding a better solution. Generally speaking, finding the optimal solution of the model is not guaranteed in NLP problems. The initial values for variables are set by "X.l=initial value" command before solve statement.


2.1.3.2 Circle Placement Example (2.15)
Suppose there are n circles with known radius values (R

i
). The question is: what is the minimum surface of the table that these circles can be placed on it without any overlapping. The concept of optimal circle placement on a given table is shown in Fig. 2.3. The decision variables of this problem are table dimensions  and center locations . The objective function is defined as the surface of the table (OF = w × h). The constraints are described as: Each circle should be completely on the table. This requires: R

i
 ≤ x

i
 ≤ w − R

i
 and similarly R

i
 ≤ y

i
 ≤ h − R

i
.For every two circles, no overlap should happen. This means that: (x

i
 − x

j
)2 + (y

i
 − y

j
)2 ≥ (R

i
 + R

j
)2

Fig. 2.3Optimal circle placement on a given surface

The circle placement problem is formulated as:  (2.15a)  (2.15b)  (2.15c)  (2.15d) It is assumed that R

i
 are known in advance and they are treated as input data. It is also assumed that there are six circles available. The GAMS code for solving circle placement example (2.15) is as GCode 2.8:

GCode 2.8 Circle placement example (2.15)


set i  / 1 * 6 /;  a l i a s ( i, j );Positive  variables  x( i ),y( i ),w, h;  variable  of;parameter radius ( i )/1 22 1.23 1.84 0.95 3.26 0.7/;Equations eq1, eq2, eq3, eq4;eq1 ..  w * h=e=OF;eq2 ( i ) ..  x( i )=l=w−radius ( i );eq3 ( i ) ..  y( i )=l=h−radius ( i );eq4 ( i, j )$( ord ( i )<>ord ( j ) ).. power (y( j )−y( i ),2)+power (x( j )−x( i ),2)=g=(radius ( i )+radius ( j ),2);x. lo ( i )=radius ( i );  y. lo ( i )=radius ( i );Model NLP1 /all/;Solve NLP1 US NLP min of;parameter report ( i, * );report ( i, 'X' )=x. l ( i );  report ( i, 'y ' )=y. l ( i );report ( i, 'R' )=radius ( i );display  report, of. l,w. l, h. l;


As it is observable in GCode 2.8, the radius of circles are given as parameters. The constraint given in (2.15b) is actually two constraints R

i
 ≤ x

i
 and x

i
 ≤ w − R

i
. The first one should be treated using. lo statement and the second one should be modeled using equations. This is because it involves two variables x

i
, w which should be valid for every member of set i. This is why the equation eq2 is defined over set i.
The optimal solution of circle placement on a table is given in Fig. 2.4.Fig. 2.4The optimal solution of circle placement on a surface



2.1.3.3 Maximizing the Area of a Right Triangle with Constant Circumference
Suppose that we have some limited meters of wire fences (C) and are requested to enclose an area (right triangle shape). Determine the dimensions of such a triangle. Considering Fig. 2.5, the following optimization should be solved:  (2.16a)  (2.16b) where C is the length of the available wire fence. H and B are the height and base of the triangle, respectively. The GCode 2.9 provides the solution for maximizing the area of a triangle with constant circumference.Fig. 2.5Maximizing the area of a triangle with constant circumference


GCode 2.9 Maximizing the area of a triangle

Positive  variables  h,  b;Variable OF;Scalar  C   /15/; h. up = C;  b. up = C;Equations eq1, eq2;eq1 ..  h + b + sqrt(h * h + b * b)=e = C;eq2 ..  OF = e =0.5* h * b;Model triangle  /all/;Solve triangle  us nlp min of;





2.1.4 Quadratic Constrained Programming (QCP)
The quadratic programming is a special case of NLP problems. In QCP problems, at least one of f, G, H in (2.1) is nonlinear but nonlinearity is of quadratic form.

2.1.4.1 QCP Example (2.17)
Consider the following QCP optimization problem:  (2.17a)  (2.17b)  (2.17c) The GAMS code for solving example (2.17) is as GCode 2.10:

GCode 2.10 QCP Example (2.17)

variable  of, x1, x2;equationseq1, eq2, eq3;eq1 ..  −3*x1 * x1 −10*x1 + x2 * x2 −3* x2 = e = OF;eq2 ..  x1 + x2 * x2 = g=2.5;eq3 ..  2 * x1 + x2 = e=1;Model QCP1  /all/;Solve QCP1  US QCP  max  of;


The solution for example (2.17) obtained by GCode 2.10 is as follows:
VariablesLowerLevelUpperMarginalof−∞
−9.550+ ∞
0
x1− ∞
1.093+ ∞
0
x2−∞
−1.186+ ∞
0



2.1.4.2 QCP Example (2.18)
Another simple QCP problem is described as follows:  (2.18a)  (2.18b)  (2.18c)


GCode 2.11 Example (2.18)

Variable of, x1, x2;Equations eq1, eq2, eq3;eq1 ..  x1 * x1 −10*x1 + x2 * x2 −3* x2 = e = OF;eq2 ..  x1 * x1 + x2 =l =5;eq3 ..  2 * x1 − x2 = g=1;Model QCP1  /all/;Solve QCP1  US QCP  min of;


The solution for example (2.18) (obtained by GCode 2.11) is as follows:
VariablesLowerLevelUpperMarginalof−∞
−18.054+ ∞
0
x1− ∞
2.054+ ∞
0
x2−∞
0.783+ ∞
0




2.1.5 Mixed Integer Nonlinear Programming (MINLP)
In MINLP problems, at least one of f, G, H in (2.1) is nonlinear and integer variables are involved.

2.1.5.1 Minimum Transportation Cost Example (2.19)
The transportation problem is a classic example which has been modified for this example. There are some suppliers (node i) and some demands (node j) which should be supplied. The problem is to determine how much each supplier should produce and how to transfer them to the demand points. The transportation costs should be minimized.
The cost of transportation is assumed to be related to the square of quantity transported from node i to node j. The transportation costs are proportional to the square of product transported from i to j and the length of the rout. The object is minimizing the total transportation costs and supplying all demand in different nodes. The optimal transportation problem is depicted in Fig. 2.6. The cost coefficient and maximum flow of each rout (C

ij
), demand (D

j
), and capacity of each producer are known.Fig. 2.6Optimal transportation problem


GCode 2.12 Example (2.19)

setsi  /s1 * s3/j  /D1 * D4/;table  C( i, j )   d1           d2            d3           d4s1 0.0755       0.0655        0.0498       0.0585s2 0.0276       0.0163        0.096        0.0224s3 0.068        0.0119        0.034        0.0751;table  data ( i, * )   'Pmin '  'Pmax 's1  100    450s2  50     350s3  30     500;parameter demand( j )/d1 217d2 150d3 145d4 244/;variable  of, x( i, j ),P( i );binary variable  U( i );equationseq1, eq2, eq3, eq4, eq5;eq1 ..  OF = e = sum(( i, j ),C( i, j ) * x( i, j ) * x( i, j ) );eq2 ( i ) ..    P( i )= l=data ( i, 'Pmax ' ) * U( i );eq3 ( i ) ..    P( i )=g =data ( i, 'Pmin ' ) * U( i );eq4 ( j ) ..  sum( i, x( i, j ))=g = demand( j );eq5 ( i ) ..  sum( j, x( i, j ))=e = P( i );P. lo ( i )=0;P. up( i )=data ( i, 'Pmax ' );x. lo ( i, j )=0;x. up( i, j )=100;Model minlp1 /all/;Solve minlp1 US minlp min of;


The optimal transportation problem is formulated in (2.19).  (2.19a)  (2.19b)  (2.19c)  (2.19d)  (2.19e)

The road flow limit is assumed to be . 
P

i

min

P

i

max

j

i
1004500.07550.06550.04980.0585 503500.02760.01630.0960.0224 305000.0680.01190.0340.0751
D

j

  217150145244

The GAMS code for solving example (2.19) is as GCode 2.12:
The solution for example (2.19) obtained by GCode 2.12 is as follows:

P

i


X

ij

199.24555.44314.25548.60180.946282.49410057.28225.212100274.26161.55778.46371.18763.054



2.1.5.2 Benefit Maximization Transportation Example (2.20)
Reconsider the optimal transportation problem formulated in (2.19). This problem is a minimum cost problem and the goal is service provision to the consumers. Now suppose that the objective is benefit maximization. The machine (i) will produce equal to P

i
 and sell it to different consumer j. The maximum value of purchase that a consumer may procure is D

j
. The revenue that is obtained from selling product is k$/unit. Now the benefit maximization is modeled as follows:  (2.20a)  (2.20b)  (2.20c)  (2.20d)  (2.20e) The GAMS code for solving the example (2.20) is given in GCode 2.13.
The solution for example (2.20) obtained by GCode 2.13 is as follows:
 
P

i


X

ij


i
00000 137.37732.60955.2159.37540.179 00000





2.2 Random Numbers in GAMS
Random number generation in GAMS is a simple task. There are different built-in probability density function that can be used for generating random numbers. Some popular random number generators are listed as follows: Beta function  (2.21)


The format of this function in GAMS is beta(α,β) Uniform function (continuous)  (2.22) The format of this function in GAMS is uniform (a, b)Uniform function (discrete)  (2.23)



GCode 2.13 Example (2.20)

setsi  /s1 * s3/j  /D1 * D4/;scalar  k /1.8/;table  C( i, j )   d1           d2            d3           d4s1 0.0755       0.0655        0.0498       0.0585s2 0.0276       0.0163        0.096        0.0224s3 0.068        0.0119        0.034        0.0751;table  data ( i, * )   'Pmin '  'Pmax 's1  100    450s2  50     350s3  30     500;parameter demand( j )/d1 217d2 150d3 145d4 244/;variable  of, x( i, j ),P( i );binary variable  U( i );equationseq1, eq2, eq3, eq4, eq5;eq1 ..  OF = e = sum( i, k * P( i ))−sum(( i, j ),C( i, j ) * x( i, j ) * x( i, j ) );eq2 ( i ) ..    P( i )= l=data ( i, 'Pmax ' ) * U( i );eq3 ( i ) ..    P( i )=g =data ( i, 'Pmin ' ) * U( i );eq4 ( j ) ..  sum( i, x( i, j ))= l= demand( j );eq5 ( i ) ..  sum( j, x( i, j ))=e = P( i );P. lo ( i )=0;P. up( i )=data ( i, 'Pmax ' );x. lo ( i, j )=0;x. up( i, j )=100;Model minlp2 /all/;Solve minlp2 US minlp max  of;


where N is the total integer numbers in [a, b] interval. The format of this function in GAMS is uniformint(a, b)

2.2.1 Estimating the π Number
Calculating the π number is investigated and coded in GAMS. Consider a circle inscribed in a square as shown in Fig. 2.7. If a point is randomly dropped on this square then the probability of sitting on the circle would be . In order to calculate the π number a simple experience is done. The point is dropped on the square area for N times. The number of events that the point is on circle area would be n. The following equation would be valid if N is a big number. The GAMS code for solving this problem is described in GCode 2.14.  (2.24)  (2.25)
Fig. 2.7Estimating the π number


GCode 2.14 π number estimation

scalar  low /0/, High /1/, pistimate;
set counter /c1 * c200 /;parameter report ( counter, * );report ( counter, 'x ')=uniform ( LOW,HIGH);report ( counter, 'y ')=uniform ( LOW,HIGH);pistimate =4*sum( counter$ ( power ( report ( counter, 'x ' )−0.5,2)+power ( report ( counter, 'y ' ) −0.5,2) <=0.25),1)/ card ( counter );display  report  ,  pistimate;


As it can be seen in GCode 2.14, there is no solve statement needed. This is because no variable is defined in the model and no optimization is going to take place.


2.2.2 Integration Calculation
The random numbers can be used for calculating the integration problems. A simple example is given as follows:  (2.26) In order to calculate the area under the graph as it is shown in Fig. 2.8, the following steps are followed:
Fig. 2.8Numerical integration using random numbers


Set Counter = 1; n = 1;Generate a pair of random numbers (x, y) where 0 ≤ X ≤ 1 and 0 ≤ Y ≤ 2.Check if y ≤ f(X)Set Counter = Counter + 1;

This procedure is repeated for max number of counter (N). For large values of N, the Z can be calculated using the following relation:  (2.27)

The following command should be added to the code (before calling the uniform function) in order to have a set of new random numbers every time the code is run:

GCode 2.15 Integration calculation using random numbers

Scalar  Zstimate;Set counter /c1 * c200000 /;parameter report ( counter, * );report ( counter, 'x ')=uniform (0,1);report ( counter, 'y ')=uniform (0,2);Zstimate =2*sum( counter$ ( report ( counter, 'y ')<1+report ( counter, 'x ' ) * sin( report ( counter, 'x ' ) * 2 0 ) ), 1 ) / card ( counter );Sisplay  report  ,  Zstimate;


execseed = 1+gmillisec(jnow);
Further info on how to use random numbers in GAMS can be found in [5].


2.2.3 LP Problems with Uncertain Coefficients
Consider the following LP problem:  (2.28)  (2.29)  (2.30)  (2.31)  (2.32)  (2.33) where a, b, and c are uncertain random parameters. The probability density function for each parameter is given in Fig. 2.9. The question is how to describe the probability density of Z? If all uncertain parameters (a,b,c) are equal to their expected values (10,15,25) then the objective function would be 7750. The following steps are followed to find out the distribution of Z in case of uncertain (a,b,c): Set Counter = 1;Generate a sample of random parameters (a,b,c) using the specified probability distribution functionsCalculate the optimal Z and save the (a,b,c,x
1,x
2,Z).
Fig. 2.9The probability density function for each uncertain parameter

The variation of Z along with the average value of Z are plotted in Fig. 2.10. The graph shows how the average value of Z converges.Fig. 2.10Uncertain coefficients in LP problems




2.3 Multi-Objective Optimization
In Multi-Objective Decision Making (MODM) methods, the decision alternatives are found considering the constraints of the given problem. In most practical optimization problems, particularly those applicable in power system, there exists more than one objective function which should be optimized simultaneously. These objectives functions might be in conflict, interdependent or independent of each other, so it is impossible to satisfy them all at once. The main differences between the multi-objective optimization and traditional single optimization techniques can be categorized into two groups:
1.Several objective functions are to be optimized at the same time. 2.There exists a set of optimal solutions which are mathematically equally good solutions (it means any of them cannot be preferred against others and a trade-off should be made to select one) instead of a unique optimal solution 


2.3.1 Weighted Sum Approach
Some methods try to convert the multi-objective optimization problems into single objective one. However, this approach is not always applicable especially in the following cases: The objectives are not of the same type. For example voltage deviation and cost, weight and volume, surface and time.The weight coefficients in weighted sum approach cannot be easily determined. Additionally, If decision maker's preference is changed then the problem should be solved again.The single objective approach provides just one solution to the decision maker. It cannot show the tradeoff between two objective functions.The objective function is of the same type but there are multiple decision makers with different preferences. Each decision maker is trying to optimize its own objective function.



2.3.2 Pareto Optimality
The notion of optimality has been redefined in this context and instead of aiming to find a single solution, it is tried to produce a set of acceptable compromises or trade-offs from which the decision maker can choose one. The set of all optimal solutions which are non-dominated by any other solution is known as Pareto-optimal set. Suppose a minimizing problem with two objectives in conflict the Pareto optimal fronts are plotted in Fig. 2.11.Fig. 2.11Classification of a population to k non-dominated fronts

For every two solution in each Pareto front (like A, B) none of them is better than the others considering all objective functions. Here, f
1 is better minimized in solution A compared to B and f
2 is better minimized in solution B compared to A. The same concept also applies for solutions in other fronts. For every solution in Pareto front k (for example D in the second front) there exists at least one solution in front k − 1 (here A in the first front) that dominates it (is better considering all objective functions). Since solutions A and B belong to the first front, there is no solution better than them in respect to all objectives. Consider the bi-objective optimization described in (2.34):  (2.34) Each solution in Pareto optimal set has two basic characteristics:
1.For every two solutions belonging to the same Pareto front (2.35) holds:  (2.35) This means that for every solution X

i
 belonging to Pareto front S, at least one solution exists as X

j
 which is better than X

i
 at least in one objective function (named n here). In other words, there is no solution in Pareto optimal front which is the best among all members of this set considering all objectives. 2.For every solution belonging to an upper Pareto front and the ones in the lower fronts, (2.36) holds:  (2.36)  (2.37) This means for every solution belonging to an upper Pareto front, there exists at least one solution in a lower Pareto front which is not worse in any objective function and is better in at least one objective function. N

O
 is the number of objective functions. 

The classic approach for finding the Pareto optimal set is preference-based method in which a relative preference vector is used to weight the objectives and change them into a scalar value. By converting a multi-objective optimization problem into a single objective one, only one optimum solution can be achieved which is very sensitive to the given weights. The GAMS structure can solve only one objective function at once. This means it is needed to solve the multi-objective problem several times to obtain the Pareto optimal front. For this purpose, consider the bi-objective problem described in (2.38):  (2.38a)  (2.38b)  (2.38c)  (2.38d)  (2.38e)  (2.38f)


GCode 2.16 Pareto optimal front example (2.38)


set counter /c1 * c21 /;scalar  E;parameter report ( counter, * );variable  of1, of2, x1, x2;equationseq1, eq2, eq3, eq4;eq1 ..  of1=e =4* x1 −0.5* x2 * x2;eq2 ..  of2=e=−x1 * x1 +5* x2;eq3 ..  2 * x1 +3* x2=l =10;eq4 ..  2 * x1−x2=g=0;x1. lo =1;x1. up=2;x2. lo =1;x2. up=3;Model pareto1 /all/;parameter ranges ( * );Solve pareto1 US nLP max of1;ranges ( 'OF1max ' )=of1. l;ranges ( 'OF2min ' )=of2. l;Solve pareto1 US nLP max of2;ranges ( 'OF2max ' )=of2. l;ranges ( 'OF1min ' )=of1. l;E=ranges ( 'OF1min ' );loop ( counter,E=(ranges ( 'OF2max ' )−ranges ( 'OF2min ' ) ) * ( ord ( counter )−1)/( card    ( counter )−1)+ranges ( 'OF2min ' );of2. lo=E;Solve pareto1 US nLP max of1;report ( counter, 'OF1 ' )=OF1. l;report ( counter, 'OF2 ' )=OF2. l;report ( counter, 'E ' )=E;);Display report;


In this problem, two objectives should be maximized simultaneously. The procedure is as follows:
1.Find the maximum of each objective function and save them. 2.Add one of the objective functions to the constraints as follows:  (2.39) The ε value will be varied from f
2
min to f
2
max and the f
1 is maximized. 

The solution for example (2.38) obtained by GCode 2.16 is shown in Fig. 2.12.Fig. 2.12The Pareto optimal front for bi-objective problem




2.4 Applications
Some optimization models used in power system studies are given in this section: LP programming: Transmission network estimation [6], short-term hydro scheduling [7], relay coordination [8], security constrained economic dispatch [9].MIP: Optimal PMU placement [10], unit commitment [11], Phase shifter placement in large-scale systems [12], minimum-losses radial configuration of electrical distribution networks [13].QCP: Topology identification in distribution network [14], optimum active and reactive generation dispatch [15].NLP: Voltage stability security margin calculation [16], reactive power planning [17], OPF [18].MINLP: Unit commitment with AC OPF constraints [19], flexible transmission expansion planning with uncertainties in an electricity market [20], optimal DG allocation [21].Multi-objective optimization: Transmission expansion planning [22], generation expansion planning [23], distribution network planning [24].



References


1.
A. Meeraus, A. Brooke, D. Kendrick, R. Raman, GAMS/Cplex 7.0 User Notes (GAMS Development Corporation, Washington, DC, 2000)


2.
Y. Wang, Q. Xia, C. Kang, Unit commitment with volatile node injections by using interval optimization. IEEE Trans. Power Syst. 26(3), 1705-1713 (2011)Crossref


3.
A. Soroudi, Possibilistic-scenario model for DG impact assessment on distribution networks in an uncertain environment. IEEE Trans. Power Syst. 27(3), 1283-1293 (2012)Crossref


4.
X. Hu, R.C. Eberhart, Y. Shi, Swarm intelligence for permutation optimization: a case study of n-queens problem, in Swarm Intelligence Symposium, 2003. SIS'03. Proceedings of the 2003 IEEE (IEEE, Piscataway, 2003), pp. 243-246


5.
E. Kalvelagen, Some notes on random number generation with GAMS, 2005


6.
L.L. Garver, Transmission network estimation using linear programming. IEEE Trans. Power Apparatus Syst. PAS-89(7), 1688-1697 (1970)Crossref


7.
G.W. Chang, M. Aganagic, J.G. Waight, J. Medina, T. Burton, S. Reeves, M. Christoforidis, Experiences with mixed integer linear programming based approaches on short-term hydro scheduling. IEEE Trans. Power Syst. 16(4), 743-749 (2001)Crossref


8.
B. Chattopadhyay, M.S. Sachdev, T.S. Sidhu, An on-line relay coordination algorithm for adaptive protection using linear programming technique. IEEE Trans. Power Delivery 11(1), 165-173 (1996)Crossref


9.
R.A. Jabr, A.H. Coonick, B.J. Cory, A homogeneous linear programming algorithm for the security constrained economic dispatch problem. IEEE Trans. Power Syst. 15(3), 930-936 (2000)Crossref


10.
B. Gou, Generalized integer linear programming formulation for optimal PMU placement. IEEE Trans. Power Syst. 23(3), 1099-1104 (2008)Crossref


11.
J. Ostrowski, M.F. Anjos, A. Vannelli, Tight mixed integer linear programming formulations for the unit commitment problem. IEEE Trans. Power Syst. 27(1), 39-46 (2012)Crossref


12.
F.G.M. Lima, F.D. Galiana, I. Kockar, J. Munoz, Phase shifter placement in large-scale systems via mixed integer linear programming. IEEE Trans. Power Syst. 18(3), 1029-1034 (2003)Crossref


13.
A. Borghetti, A mixed-integer linear programming approach for the computation of the minimum-losses radial configuration of electrical distribution networks. IEEE Trans. Power Syst. 27(3), 1264-1273 (2012)Crossref


14.
Z. Tian, W. Wu, B. Zhang, A mixed integer quadratic programming model for topology identification in distribution network. IEEE Trans. Power Syst. 31(1), 823-824 (2016)Crossref


15.
H. Nicholson, M.J.H. Sterling, Optimum dispatch of active and reactive generation by quadratic programming. IEEE Trans. Power Apparatus Syst. PAS-92(2), 644-654 (1973)Crossref


16.
L.A.L. Zarate, C.A. Castro, J.L.M. Ramos, E.R. Ramos, Fast computation of voltage stability security margins using nonlinear programming techniques. IEEE Trans. Power Syst. 21(1), 19-27 (2006)Crossref


17.
L.L. Lai, J.T. Ma, Application of evolutionary programming to reactive power planning-comparison with nonlinear programming approach. IEEE Trans. Power Syst. 12(1), 198-206 (1997)Crossref


18.
J.A. Momoh, R. Adapa, M.E. El-Hawary, A review of selected optimal power flow literature to 1993. I. nonlinear and quadratic programming approaches. IEEE Trans. Power Syst. 14(1), 96-104 (1999)


19.
A. Castillo, C. Laird, C.A. Silva-Monroy, J.P. Watson, R.P. ONeill, The unit commitment problem with ac optimal power flow constraints. IEEE Trans. Power Syst. 31(6), 4853-4866 (2016)Crossref


20.
J.H. Zhao, Z.Y. Dong, P. Lindsay, K.P. Wong, Flexible transmission expansion planning with uncertainties in an electricity market. IEEE Trans. Power Syst. 24(1), 479-488 (2009)Crossref


21.
A. Kumar, W. Gao, Optimal distributed generation location using mixed integer non-linear programming in hybrid electricity markets. IET Gener. Transm. Distrib. 4(2), 281-298 (2010)Crossref


22.
P. Maghouli, S.H. Hosseini, M.O. Buygi, M. Shahidehpour, A scenario-based multi-objective model for multi-stage transmission expansion planning. IEEE Trans. Power Syst. 26(1), 470-478 (2011)Crossref


23.
S. Kannan, S. Baskar, J.D. McCalley, P. Murugan, Application of NSGA-II algorithm to generation expansion planning. IEEE Trans. Power Syst. 24(1), 454-461 (2009)Crossref


24.
V. Miranda, J.V. Ranito, L.M. Proenca. Genetic algorithms in optimal multistage distribution network planning. IEEE Trans. Power Syst. 9(4), 1927-1933 (1994)Crossref














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_3





3. Power Plant Dispatching




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides the instruction on how to model the economic dispatch problem of different power plants. Different power plant technologies will be discussed, such as thermal power, wind turbine, CHP, and hydro power plants in GAMS.
The idea of dispatching generating units is based on some assumptions as follows: The technical characteristics of the units are known.The on/off status of each unit is known.It is solved for a single snapshot of the demand.


3.1 Thermal Unit Economic Dispatch
The thermal unit technology transforms the fuel-based source of energy into electricity. The production costs of thermal unit i are calculated as:  (3.1) where a

i

th, b

i

th, and c

i

th are the fuel cost coefficients of the thermal unit i. The total fuel cost is calculated as follows:  (3.2) The operating limits are defined as follows:  (3.3) where P

i

th,max∕min are the maximum/minimum power outputs of thermal unit i. The overall thermal unit economic dispatch is formulated as follows:  (3.4a)  (3.4b)  (3.4c)  (3.4d) The economic dispatch data for five units example is given in Table 3.1. This table has nine columns. The first column is showing the generating unit index. The next three columns indicate the cost coefficients for these thermal units (a

i

th, b

i

th, c

i

th). The next three columns describe the emission coefficients for these thermal units (d

i

th, e

i

th, f

i

th). The last two columns give the minimum and maximum generating limits of each unit if it is on.Table 3.1The economic dispatch data for five thermal units example
i

a

i

th ($∕MW2)
b

i

th ($∕MW)
c

i

th ($)
d

i

th (kg∕MW2)
e

i

th (kg∕MW)
f

i

th(kg)
P

i

th,min (MW)
P

i

th,max (MW)
g13201002−5328206
g24.0518.0798.873.82−4.246.0990284
g34.0515.55104.265.01−2.155.6968.00189.00
g43.9919.21107.211.10−3.996.2076.00266.00
g53.8826.1895.313.55−6.885.5719.0053.00

The GAMS code for solving the economic dispatch example (3.4) is given in GCode 3.1.
The solution obtained by Code provides information regarding the defined variables. For example, the generating unit schedules are given in Table 3.2.Table 3.2The ED solution for five units example
P

i

th
LowerLevelUpperMarginal
g128102.844206EPS
g29090284110.005
g36876.73189-
g47677.425266EPS
g5195353−199.605

As it can be seen in Table 3.2, four attributes of variable P(gen) are given. The. lo and. up values are already known and are given as the input data in Table 3.1. There are two important information regarding the variable P(gen), namely. l and. m. The level column shows the optimal values of variables obtained by GAMS. The marginal value (. m) is zero (EPS or epsilon) for unit g1, g3, and g4. This is because these generating units are not binding variables (not reached to their limits). On the other hand, g2 has a marginal value equal to 110.005. This means that if the value of this variable is increased by very small quantity (ΔP(g2)) then the increase in objective function will be approximately equal to 110. 005ΔP(g2). This also holds for generating unit g5. The increase of ΔP(g5) will approximately decrease the objective function equal to 199. 605ΔP(g5). This is why g2 is at its min limit and g5 is at its max limit. The total operating costs would be OF = $1. 3146 × 105.

GCode 3.1 Economic dispatch problem for five units, example (3.4)


set Gen /g1 * g5 /;scalar  load /400/;Table data (Gen, * )     a    b     c      d    e     f     Pmin Pmaxg1   3    20    100    2    −5    3    28   206g2   4.05 18.07 98.87  3.82 −4.24 6.09 90   284g3   4.05 15.55 104.26 5.01 −2.15 5.69 68   189g4   3.99 19.21 107.21 1.1   −3.99 6.2   76   266g5   3.88 26.18 95.31  3.55 −6.88 5.57 19   53;variables  P( gen ),OF;equationseq1, eq2;eq1 ..  OF = e = sum(gen, data (gen, 'a ' ) * P( gen ) * P( gen )+data (gen, 'b ' ) * P( gen )+data (gen, ' c ' ) );eq2 ..  sum(gen,P( gen ) )= g = load;P. lo ( gen )=data (gen, 'Pmin ' );P. up( gen )=data (gen, 'Pmax ' );model ECD  /eq1, eq2 /;solve  ECD  us qcp min of;


Sometimes we need to perform some sensitivity analysis. For example, we might need to know how the dispatching pattern would change if the load value changes. The load is defined as a scalar quantity in the developed GCode 3.1. The problem is feasible for any load value in the interval . The boundary values of this interval are obtained by the sum of min and max values of generating units given in Table 3.1.
The solution for load sensitivity analysis in ED obtained by GCode 3.2 is given in Table 3.3.Table 3.3The ED solution for load sensitivity analysisIteration
g1
g2
g3
g4
g5
L

e
 (MW)OF ($/h)
c128.0090.0068.0076.0019.00281.0084,037.85
c267.3990.0068.0076.0051.31352.70105,758.02
c3112.6390.0083.9884.7953.00424.40147,715.94
c4136.77101.55101.86102.9353.00496.10203,091.66
c5158.94117.97118.28119.6053.00567.80268,132.18
c6181.12134.40134.71136.2853.00639.50342,712.41
c7203.29150.82151.14152.9553.00711.20426,832.36
c8206.00173.71174.02176.1853.00782.90522,137.81
c9206.00201.85189.00204.7553.00854.60631,691.67
c10206.00237.44189.00240.8653.00926.30760,550.50
c11206.00284.00189.00266.0053.00998.00911,044.09

The results of load sensitivity analysis are shown in Fig. 3.1.
Fig. 3.1Load sensitivity analysis and impact on costs and generation schedules



3.2 Thermal Unit Environmental Dispatch
The environmental dispatch is referred to the dispatch of electric power plants considering environmental concerns. The environmental pollution produced by power plants (thermal) depends on the fuel type they use to produce electricity and also their generation level. The production costs of i
th thermal unit are usually defined as:  (3.5) where d

i

th, e

i

th, and f

i

th are the fuel emission coefficients of the thermal unit i. TE
i

th is the total emission produced by thermal unit i and is expressed as (kg/h).

GCode 3.2 Example of sensitivity analysis regarding load value in ED

Sets Gen      /g1 * g5/     counter /c1 * c11 /;Parameter report ( counter, * ), repGen( counter,Gen);Scalar  load /400/;Table data (Gen, * )     a    b     c      d    e     f     Pmin Pmaxg1   3    20    100    2    −5    3    28   206g2   4.05 18.07 98.87  3.82 −4.24 6.09 90   284g3   4.05 15.55 104.26 5.01 −2.15 5.69 68   189g4   3.99 19.21 107.21 1.1   −3.99 6.2   76   266g5   3.88 26.18 95.31  3.55 −6.88 5.57 19   53;Variables  P( gen ),OF;Equations eq1, eq2;eq1 ..  OF = e = sum(gen, data (gen, 'a ' ) * P( gen ) * P( gen )+data (gen, 'b ' ) * P( gen )+data (gen, ' c ' ) );eq2 ..  sum(gen,P( gen ) )= g = load;P. lo ( gen )=data (gen, 'Pmin ' );P. up( gen )=data (gen, 'Pmax ' );Model ECD  /eq1, eq2 /;loop ( counter,
load = sum(gen, data (gen, 'Pmin ' ) )+((ord ( counter )−1)/( card ( counter )−1)) * sum(gen, data (gen, 'Pmax ' ) −data (gen, 'Pmin ' ) );Solve ECD  us qcp min of;repGen( counter,Gen)= P. l ( gen );report ( counter, 'OF' )=of. l;report ( counter, ' load ' )= load;);display  repgen, report;


Different strategies have been proposed to take care of environmental issues in dispatching the power plants, and some of them are listed below: Ignoring the environmental pollution and just minimizing the total fuel costs (ED). Optimization problem described in (3.4) should be solved.Minimizing the total environmental pollution as the main objective function (END). In this case, optimization problem described in (3.6) should be solved.  (3.6a)  (3.6b)  (3.6c)  (3.6d)  (3.6e) The solution of (3.6) can be found in the first column of Table 3.4.Table 3.4Solution for different environmental dispatching strategies
P(g)EDENDPenaltyElimit
g1102.8471.62103.0594.21
g290.0090.0090.0090.00
g376.7368.0075.1868.00
g477.43129.7678.7794.79
g553.0040.6253.0053.00OF ($)135,310.00152,170.00140,990.00142,190.00TE (kg)96,450.7587,089.4094,428.5590,000.00TC ($)131,460.00148,680.00131,550.00133,190.00
Adding the environmental pollution is a penalty to the cost function (penalty). For this strategy, the environmental pollution price (C

e
) should be known. In this case, optimization problem described in (3.7) should be solved.  (3.7a)  (3.7b)  (3.7c)  (3.7d)  (3.7e) The solution of (3.7) can be found in the second column of Table 3.4.Adding the environmental pollution as a constraint to the original economic dispatch problem (Elimit). In this case, optimization problem described in (3.8) should be solved.  (3.8a)  (3.8b)  (3.8c)  (3.8d)  (3.8e)  (3.8f) The solution of (3.8) can be found in the third column of Table 3.4.Solving the dispatch problem as multi-objective problem. In this case, optimization problem described in (3.9) should be solved.  (3.9a)  (3.9b)  (3.9c)  (3.9d)


The ED, END, Penalty, and Limit strategies are solved using GCode 3.3. In this code, you can find four solve statements. ED strategy: The first solve statement minimizes the total costs without any concern about environmental issues.END strategy: The second solve statement minimizes the total environmental pollution without any concern about economic issues.Penalty strategy: The third solve statement minimizes the total fuel costs + environmental pollution costs.Limited Emission strategy: The fourth solve statement minimizes the total fuel costs while environmental pollution is limited to some value.

Each solve statement obtains the optimal generating schedules in each strategy. A parameter (report(gen, ∗)) is defined which is updated after each solve statement.
The solution for different environmental dispatching strategies is given in Table 3.4.
In some occasions, it is needed to solve the problem in a multi-objective way. The multi-objective model is described in (3.9) and coded in GCode 3.4.
The Pareto optimal front in multi-objective environmental dispatch strategy for load = 400 MW is depicted in Fig. 3.2. The operating schedules of different units in solutions of Pareto optimal front are plotted in Fig. 3.3 for load = 400 MW.
Fig. 3.2Pareto optimal front in multi-objective environmental dispatch strategy for load = 400 MW
Fig. 3.3Changes in generating level of different units in Pareto optimal front for load = 400 MW

The Pareto optimal front found in Fig. 3.2 depends on technical characteristics of generating units in one hand and also on load value ( = 400 MW). The question is what happens if the load increases. How can we obtain the Pareto optimal front for different values of loads? In order to obtain each Pareto optimal front, it is needed to have a loop. The ε constraint method [1] is used to obtain the Pareto optimal front. The GCode 3.5 finds the Pareto optimal fronts for different load values 400, 450, 500, and 550 MW. It uses nested loops to change the load value in upper level loop and changes the epsilon value in lower level loop.

GCode 3.3 Example of different environmental dispatch strategies

Set Gen /g1 * g5 /;Parameter report (gen, * );Scalars
load /400/Eprice /0.1/Elim /90000/;Table data (Gen, * )     a    b     c      d    e     f     Pmin Pmaxg1   3    20    100    2    −5    3    28   206g2   4.05 18.07 98.87  3.82 −4.24 6.09 90   284g3   4.05 15.55 104.26 5.01 −2.15 5.69 68   189g4   3.99 19.21 107.21 1.1   −3.99 6.2   76   266g5   3.88 26.18 95.31  3.55 −6.88 5.57 19   53;variables  P( gen ),OF,TE,TC;equationseq1, eq2, eq3, eq4;eq1 ..  TC = e = sum(gen, data (gen, 'a ' ) * P( gen ) * P( gen )+data (gen, 'b ' ) * P( gen )+data (gen, ' c ' ) );eq2 ..  sum(gen,P( gen ) )= g = load;eq3 ..  TE = e = sum(gen, data (gen, 'd ' ) * P( gen ) * P( gen )+data (gen, ' e ' ) * P( gen )+data (gen, ' f ' ) );eq4 ..  OF = e = TC + TE * Eprice;P. lo ( gen )=data (gen, 'Pmin ' );P. up( gen )=data (gen, 'Pmax ' );Model END  /eq1, eq2, eq3, eq4 /;Solve END  us qcp min TC;report (gen, 'ED' )= P. l ( gen );Solve END  us qcp min te;report (gen, 'END' )= P. l ( gen );Solve END  us qcp min OF;report (gen, ' penalty ' )= P. l ( gen );TE. up = Elim;Solve END  us qcp min TC;report (gen, ' limit ' )= P. l ( gen );Display report;


The Pareto optimal fronts for different load values are depicted in Fig. 3.4.
Fig. 3.4Pareto optimal fronts for different load values



3.3 CHP Economic Dispatch
The combined heat and power (CHP) technology can generate heat and electric power simultaneously. In CHP-related dispatch problems, we are usually faced with different sources of energy to supply heat and power demand. These sources of energy are usually thermal plants, CHP units, and heat only units. As described in Sect. 3.1, the fuel cost of a thermal unit depends on its electricity generation level. Similarly, the operating costs of CHP units depend on the level of heat and electricity they generate. Additionally, CHP units have a feasible operating region that dictates some limits for power and heat that they can generate. An approximate heat-power operating region for a CHP unit is shown in Fig. 3.5 [2].Fig. 3.5Approximate heat-power operating region for a CHP unit


GCode 3.4 Example of multi-objective environmental dispatch strategy

Set Gen /g1 * g5/    counter /c1 * c11 /;parameter report ( * ), rep ( counter, * );Scalars
load /400/Eprice /0.1/Elim;Table data (Gen, * )     a    b     c      d    e     f     Pmin Pmaxg1   3    20    100    2    −5    3    28   206g2   4.05 18.07 98.87  3.82 −4.24 6.09 90   284g3   4.05 15.55 104.26 5.01 −2.15 5.69 68   189g4   3.99 19.21 107.21 1.1   −3.99 6.2   76   266g5   3.88 26.18 95.31  3.55 −6.88 5.57 19   53;Variables  P( gen ),OF,TE,TC;Equationseq1, eq2, eq3;eq1 ..  TC = e = sum(gen, data (gen, 'a ' ) * P( gen ) * P( gen )+data (gen, 'b ' ) * P( gen )+data (gen, ' c ' ) );eq2 ..  sum(gen,P( gen ) )= g = load;eq3 ..  TE = e = sum(gen, data (gen, 'd ' ) * P( gen ) * P( gen )+data (gen, ' e ' ) * P( gen )+data (gen, ' f ' ) );P. lo ( gen )=data (gen, 'Pmin ' );P. up( gen )=data (gen, 'Pmax ' );model END  /eq1, eq2, eq3 /;solve  END  us qcp min TC;report ( 'maxTE ' )= TE. l;report ( 'minTC ' )= TC. l;Solve END  us qcp min te;report ( 'maxTC' )= TC. l;report ( 'minTE ' )= TE. l;loop ( counter,Elim=(report ( 'maxTE ' ) −report ( 'minTE ' ) ) * ( ( ord ( counter )−1)/( card( counter )−1))+report ( 'minTE ' );TE. up = Elim;Solve END  us qcp min TC;rep ( counter, 'TC' )= TC. l;rep ( counter, 'TE' )= TE. l;);display  rep;



GCode 3.5 Sensitivity analysis for load values in multi-objective environmental dispatch strategy

setsGen /g1 * g5/counter /c1 * c11/Loadcounter /Lc1 * Lc4 /;parameter report ( Loadcounter, * ), rep ( Loadcounter, counter, * ),rep2 ( Loadcounter, counter, gen );scalars
load /400/Eprice /0.1/Elim;Table data (Gen, * )     a    b     c      d    e     f     Pmin Pmaxg1   3    20    100    2    −5    3    28   206g2   4.05 18.07 98.87  3.82 −4.24 6.09 90   284g3   4.05 15.55 104.26 5.01 −2.15 5.69 68   189g4   3.99 19.21 107.21 1.1   −3.99 6.2   76   266g5   3.88 26.18 95.31  3.55 −6.88 5.57 19   53;Variables  P( gen ),OF,TE,TC;Equationseq1, eq2, eq3;eq1 ..  TC = e = sum(gen, data (gen, 'a ' ) * P( gen ) * P( gen )+data (gen, 'b ' ) * P( gen )+data (gen, ' c ' ) );eq2 ..  sum(gen,P( gen ) )= g = load;eq3 ..  TE = e = sum(gen, data (gen, 'd ' ) * P( gen ) * P( gen )+data (gen, ' e ' ) * P( gen )+data (gen, ' f ' ) );P. lo ( gen )=data (gen, 'Pmin ' );P. up( gen )=data (gen, 'Pmax ' );Model END  /eq1, eq2, eq3 /;Loop( Loadcounter,
load =350+ord ( Loadcounter ) * 5 0;solve  END  us qcp min TC;report ( Loadcounter, 'maxTE ' )= TE. l;report ( Loadcounter, 'minTC ' )= TC. l;Solve END  us qcp min te;report ( Loadcounter, 'maxTC' )= TC. l;report ( Loadcounter, 'minTE ' )= TE. l;loop ( counter,Elim=(report ( Loadcounter, 'maxTE ' )−report ( Loadcounter, 'minTE ' ) ) * ( ( ord ( counter )−1)/( card ( counter )−1))+report ( Loadcounter, 'minTE ' );TE. up = Elim;solve  END  us qcp min TC;rep ( Loadcounter, counter, 'TC' )= TC. l;rep ( Loadcounter, counter, 'TE' )= TE. l;rep2 ( Loadcounter, counter, gen )= P. l ( gen ););TE. up =inf;);Display rep, rep2, report;


The CHP economic dispatch problem can be modeled as described in (3.10):  (3.10a)  (3.10b)  (3.10c)  (3.10d)  (3.10e)  (3.10f)  (3.10g)  (3.10h)  (3.10i)  (3.10j) The objective function defined in (3.10a) has three terms namely thermal unit (F
th) [calculated in (3.10b)], heat only unit (F

h
) [calculated in (3.10c)], and CHP unit (F
chp) costs [calculated in (3.10d)]. The decision variables are electric power generation of thermal units (P

i

th) and CHP units P

j

chp and also the heat generated by CHP units q

j

chp and heat only units q

k


h
 as described in (3.10a). The operating limits of thermal units and heat only units are modeled in (3.10e) and (3.10f), respectively as given in Table 3.5. Unlike the other technologies mentioned before, the operating limits of CHP units are dependent on electricity and heat generation level as described in (3.10g) and (3.10h) as described in Table 3.6. The electricity and heat supply-demand balance are modeled in (3.10i) and (3.10j), respectively.Table 3.5Characteristic data of different technologiesTechnology
a

b

c

d

e

f

P
min

P
max

h
min

h
max

g13.0020.00100.00   30.00180.00  
g24.0518.0798.87   90.00290.00  
h14.0510.55104.26     60.00200.00
h23.999.21107.21     70.00270.00chp10.034514.002540.000.034.200.031    chp20.043513.001460.000.020.700.011    
Table 3.6Feasible operating regions of CHP unitsCHP unitAqApBqBpCqCpDqDpchp10247180215104.881099chp201251351107540045

The electric and heat demands are assumed to be 605 MW and 540 MW, respectively.

GCode 3.6 CHP dispatching GAMS code for Example (3.10)

SetsGen /g1 * g2/heat /h1 * h2/CHP  /chp1 * chp2 /;scalarsLe /605/Lh /540/;Table dataTh(Gen, * )     a      b     c      d    e    f      Pmin Pmax hmin hmaxg1   3      20    100    0    0    0     28   206  0    0g2   4.05   18.07 98.87  0    0    0     90   284  0    0 ;Table dataH( heat, * )     a      b     c      d    e    f      Pmin Pmax hmin hmaxh1   4.05   10.55 104.26 0    0    0     0    0    60   200h2   3.99   9.21  107.21 0    0    0     0    0    70   270;Table datachp (chp, * )     a      b     c      d    e    f      Pmin Pmax hmin hmaxchp1 0.0345 14    2540   0.03 4.2   0.031 0    0    0    0chp2 0.0435 13    1460   0.02 0.7   0.011 0    0    0    0;Table FR(chp, * )     Aq   Ap   Bq   Bp   Cq    Cp   Dq   Dpchp1 0    247  180  215  104.8 81   0    99chp2 0    125  135  110  75    40   0    45;Variables  P( gen ),OF, q( heat ), pchp( chp ), qchp ( chp ),Fth,Fh, Fchp;Equations eq1, eq2, eq3, eq4, eq5, eq6, eq7a, eq7b, eq7c;eq1 ..  OF = e = Fth + Fh + Fchp;eq2 ..  Fth = e = sum(gen, dataTh(gen, 'a ' ) * P( gen ) * P( gen )+ dataTh(gen, 'b ' ) * P( gen )+ dataTh(gen, ' c ' ) );eq3 ..  Fh = e = sum( heat, dataH( heat, 'a ' ) * q( heat ) * q( heat )+ dataH( heat, 'b ' ) * q( heat )+ dataH( heat, ' c ' ) );eq4.. Fchp = e = sum(CHP, datachp (CHP, 'a ' ) * Pchp(CHP) * Pchp(CHP)+ datachp (CHP, 'b ' ) * Pchp(CHP)+ datachp (CHP, ' c ' ) )+
sum(CHP, datachp (CHP, 'd ' ) * qchp (CHP) * qchp (CHP)+ datachp (CHP, ' e ' ) * qchp (CHP)+ datachp (CHP, ' f ' ) * qchp (CHP) * pchp(CHP) );eq5..  sum(gen,P( gen ) )+ sum(CHP, Pchp(CHP) )= g = Le;eq6..  sum( heat, q( heat ) )+ sum(CHP, Qchp(CHP) )= g = Lh;eq7a (CHP) ..   Pchp(CHP) − FR(chp, 'Dp ' )= g =( qchp (CHP) − FR(chp, 'Dq ' ) ) * ( FR(chp, 'Dp ' ) − FR(chp, 'Cp ' ) ) /(FR(chp, 'Dq ' ) − FR(chp, 'Cq ' ) );eq7b (CHP) ..   Pchp(CHP) − FR(chp, 'Ap ' )=l=( qchp (CHP) − FR(chp, 'Dq ' ) ) * ( FR(chp, 'Ap ' ) − FR(chp, 'Bp ' ) ) /(FR(chp, 'Aq ' ) − FR(chp, 'Bq ' ) );eq7c (CHP) ..   Pchp(CHP) − FR(chp, 'Bp ' )= g =( qchp (CHP) − FR(chp, 'Bq ' ) ) * ( FR(chp, 'Bp ' ) − FR(chp, 'Cp ' ) ) /(FR(chp, 'Bq ' ) − FR(chp, 'Cq ' ) );P. lo ( gen )= dataTh(gen, 'Pmin ' );P. up( gen )= dataTh(gen, 'Pmax ' );q. lo ( heat )= dataH( heat, 'hmin ' );q. up( heat )= dataH( heat, 'hmax ' );Model chpdispatch /all/;Solve chpdispatch us nlp min OF;


The total operating costs are F
th = 1. 4068 × 105 ($/h), F

h
 = 1. 0418 × 105 ($/h), F
chp=14,111.162 ($/h) (Table 3.7).Table 3.7Solution of dispatching CHP unitsTechnology
p
Technology
q
chp1215chp1180chp2110chp2135
g1160.714
h1111.577
g2119.286
h2113.423
L

e

605
L

h

540



3.4 Hydro Unit Economic Dispatch
This section addresses the optimal operation of a hydro generating power plant. This power plant comprises several cascaded plants along a river basin. The objective is to minimize the total operating costs while considering different technical constraints such as relationship between the generated power, water discharged, and the head of the associated reservoir. The concept of cascaded hydro units is shown in Fig. 3.6. The water balance equations that should be satisfied in each hour are as follows:  (3.11)  (3.12)  (3.13) where L

t


h
 is reservoir volume, I

t+1

h
 is the water inflow, R

t


h
 is the released water, and S

t


h
 is the spilled water at the end of period t in million m
3. R
max is the maximum released capacity per hour in million m
3. L
ini

h
, L
fin

h
 are the volume of the water in dam at beginning and end of the considered horizon, respectively. This constraint means that the volume of water in a reservoir of hydro turbine h in time t + 1 will be equal to its value in the previous period plus the water inflow to its reservoir in time t + 1 minus its own released/spilled water and in time t + 1 plus the released/spilled water of all reservoirs in its upstream in previous hours (with considering time delays ). The concept of this cascade reservoir water balance constraint is depicted in Fig. 3.6.
Fig. 3.6Cascaded hydro units

The hydro power production function (HPF) (or hill chart [3]) which relates the output power of hydro plant to the water level, inflow, and spillage is of great importance in hydro plant scheduling. In this chapter, the method proposed in [4] has been adopted which describes the relationship between the released water and water head of the reservoir with the output power of the hydro power plant, as follows:  (3.14) Equation (3.14) states that the generated power in time t is nonlinearly related to the water head (L

t


h
) and released water (R

t


h
) in time t simultaneously. The coefficients  are the characteristic factors of hydro turbine h which describe this relation. Now we can solve a mixed hydro-thermal economic dispatch problem. Suppose we have five thermal units which their techno-economic characteristics are described in Table 3.8. Additionally, there are four cascaded hydro power units as shown in Fig. 3.7 which their techno-economic characteristics are described in Table 3.9. The loss coefficient η is assumed to be 0.9 (means 10% of released/spilled water vaporizes). The operating cost of hydro power plant is assumed to be constant ζ

h
 = 14$∕MW.Table 3.8Techno-economic characteristics of thermal unitsUnit
a

i

th ($∕MW2)
b

i

th ($∕MW)
c

i

th ($)
P

i

th,min (MW)
P

i

th,max (MW)RU
i
 (MW)RD
i
 (MW)
g10.0004316.69001004006060
g20.0007315.58001304004040
g30.0005914.8700703006060
g40.0007515.9470603003030
g50.0007916.6200802505050
Fig. 3.7Four cascaded hydro units configuration
Table 3.9Techno-economic characteristics of hydro unitsUnit
c
1

h


c
2

h


c
3

h


c
4

h


c
5

h


c
6

h


L
min

h


L
max

h


L
ini

h


L
fin

h


R
min

h


R
min

h


P

h, min

P

h, max

τ

h1−0.0042−0.420.0300.9010−508015010012051505002
h2−0.0040−0.300.0151.149.5−7060120807061505001
h3−0.0016−0.300.0140.555.5−40100240170170103005004
h4−0.0030−0.310.0271.4414−907016012014062005000

The hourly water inflows for each hydro power and hourly electric demand are given in Table 3.10.Table 3.10Hourly water inflows for each hydro power and hourly electric demandTime








L

e, t
 (MW)
t
1
1088.12.81275
t
2
988.22.41326
t
3
8941.61190
t
4
79201105
t
5
68301139
t
6
77401360
t
7
86301615
t
8
97201717
t
9
108101853
t
10
119101836
t
11
129101870
t
12
108201955
t
13
118401887
t
14
129301751
t
15
119301717
t
16
108201802
t
17
97201785
t
18
86201904
t
19
77101819
t
20
68101785
t
21
79201547
t
22
89201462
t
23
98101445
t
24
108001360

The hydro-thermal economic dispatch problem is formulated in (3.15).

 (3.15a)  (3.15b)  (3.15c)  (3.15d)  (3.15e)  (3.15f)  (3.15g)  (3.15h)  (3.15i)  (3.15j)  (3.15k)  (3.15l) The GCode 3.7 is developed to solve the hydro-thermal economic dispatch problem described in (3.15). In this code, for saving the space, table demand and table inflow are shown partially. The optimal hourly dispatch of hydro and thermal units are given in Table 3.11.Table 3.11Optimal hourly dispatch of hydro and thermal units 
h
1

h
2

h
3

h
4
ThermalTime
P

V

R

P

V

R

P

V

R

P

V

R

p
1

p
2

p
3

p
4

p
5

t
1
128.50150.0015.00112.78120.0015.0060.60234.9713.74285.88160.0020.00100.00207.24240.0060.0080.00
t
2
75.99101.147.8654.8482.006.0052.35157.7612.25285.88160.0020.00139.70247.24300.0090.0080.00
t
3
49.59104.145.0056.6485.006.0050.55149.7612.00285.88160.0020.00100.00222.90284.4460.0080.00
t
4
49.82106.145.0058.3688.006.0048.09139.8611.90277.27150.8020.00100.00200.00224.4467.0180.00
t
5
49.93107.145.0059.4790.006.0035.43100.0911.13268.03141.5120.00100.00240.00209.1397.0180.00
t
6
55.38108.655.4960.0191.006.0060.57240.0013.84285.88160.0020.00142.02280.00269.13127.0180.00
t
7
94.17106.4910.1665.3190.156.8560.60233.2513.71285.88160.0020.00202.02320.00300.00157.01130.00
t
8
85.19106.648.8560.0991.156.0060.40222.9313.51285.88160.0020.00245.04360.00300.00187.01133.38
t
9
87.32107.539.1162.6392.926.2359.85211.6013.29285.88160.0020.00285.12400.00300.00217.01155.19
t
10
88.86109.289.2667.5595.136.7958.94200.2813.07285.88160.0020.00251.09400.00300.00247.01136.67
t
11
91.06111.809.4872.1196.767.3757.73189.4012.86285.88160.0020.00250.08400.00300.00277.01136.12
t
12
92.43112.149.6675.8796.767.9957.08184.4912.76285.88160.0020.00287.34400.00300.00300.00156.40
t
13
98.80112.5210.6182.8395.339.4356.37179.6312.67285.88160.0020.00229.52400.00300.00300.00133.60
t
14
83.79116.108.4272.8596.857.4855.50174.2212.57285.88160.0020.00169.52400.00300.00299.8683.60
t
15
93.21117.509.6081.8196.789.0754.66169.4412.47285.88160.0020.00121.44400.00300.00300.0080.00
t
16
93.99117.809.7083.5095.199.5853.71164.3812.38285.88160.0020.00181.44400.00300.00300.00103.49
t
17
90.66117.549.2682.6892.469.7352.84160.0512.29285.88160.0020.00182.36400.00300.00300.0090.59
t
18
97.29115.2710.2685.5087.3211.1552.38157.8612.25285.88160.0020.00242.36400.00300.00300.00140.59
t
19
93.39112.499.7983.9082.7811.5350.84150.9512.12285.88160.0020.00199.31400.00300.00297.20108.49
t
20
97.52107.8510.6382.8578.6812.1049.78146.5412.03285.88160.0020.00171.77400.00300.00267.20130.00
t
21
50.17109.855.0072.9178.109.5849.07143.6811.97285.88160.0020.00111.77360.00300.00237.2080.00
t
22
50.36112.855.0067.7778.638.4750.79151.2711.50285.88160.0020.00100.00320.00300.00207.2080.00
t
23
62.56115.736.1379.2974.7511.8852.22160.8110.73276.84150.3520.00100.00316.90300.00177.2080.00
t
24
58.59120.005.7377.9870.0012.7552.85170.0010.00266.48140.0020.00100.00276.90300.00147.2080.00


GCode 3.7 Hydro-thermal economic dispatch Example (3.15)

Sets t   /t1 * t24 /,  H  /h1 * h4/,  i  /g1 * g5 /;  Scalar  zeta /14/;Table data (H, * )   c1      c2   c3    c4   c5    c6h1 −0.0042 −0.44 0.040 0.80 11.0 −53h2 −0.0043 −0.32 0.013 1.24 9.7   −71h3 −0.0015 −0.31 0.012 0.54 5.7   −42h4 −0.0032 −0.33 0.025 1.43 14.1 −91;Table gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits      a       b    c    lowlim upplim RU    RDg1    0.00043 16.6 900  100    400    60   60g2    0.00073 15.5 800  130    400    40   40g3    0.00059 14.8 700  70     300    60   60g4    0.00075 15.9 470  60     300    30   30g5    0.00079 16.6 200  80     250    50   50;Alias (H, Hhat);  set upstream (H, Hhat);upstream ( 'h3 ',Hhat)$( ord (Hhat)<3) =yes;  upstream ( 'h4 ', 'h3 ' )=yes;Parameter delay (H)/h1 2h2  1h3  4h4  0/;Table inflow ( t,H)      h1         h2         h3         h4t1    10         8          8.1         2.8t2    9          8          8.2         2.4t23   9          8          1          0t24   10         8          0          0;parameter demand( t )/t1        1275t2        1326t23        1445t24        1360/;Table charac (H, * )      Vmin Vmax  Vini Vfin Qmin Qmax  Pmin Pmaxh1    80   150  100  120  5    15   0    500h2    60   120  80   70   6    15   0    500h3    100  240  170  170  10   30   0    500h4    70   160  120  140  6    20   0    500;Variables  V(H, t ),R(H, t ), S p i l l (H, t ),OBJ,PH(H, t ), costThermal, p( i, t );p. up( i, t ) =  gendata ( i," upplim ") ;  p. lo ( i, t ) =  gendata ( i," lowlim ");V.LO(H, t ) =  charac (H, 'Vmin ' );  V.UP(H, t ) =  charac (H, 'Vmax ' );V.FX(H, ' t24 ' ) =  charac (H, ' Vfin ' );ph. lo (H, t )=charac (H, 'Pmin ' );  ph. up(H, t )=charac (H, 'Pmax ' );;R.LO(H, t ) =  charac (H, 'Qmin ' );  R.UP(H, t ) =  charac (H, 'Qmax ' ); S p i l l.LO(H, t ) =  0;EquationsWaterlevel , pcalc, Genconst3, Genconst4, costThermalcalc,balance, OFdef;costThermalcalc..  costThermal= e = sum(( t, i ), gendata ( i, 'a ' ) * power (p( i, t ),2)+gendata ( i, 'b ' ) * p( i, t ) +gendata ( i, ' c ' ) );Genconst3 ( i, t ) ..  p( i, t+1) − p( i, t )=l=gendata ( i, 'RU' );Genconst4 ( i, t ) ..  p( i, t −1) − p( i, t )=l=gendata ( i, 'RD' );Waterlevel (H, t+1)..   V(H, t+1) = e =  charac (H, ' Vini ' )$( ord ( t )=1) +V(H, t )$( ord ( t )>1) +inflow ( t+1, H) − R(H, t+1) −S p i l l (H, t+1) +0. 9 * sum( Hhat$upstream (H, Hhat),R(Hhat, t−delay (H) )+S p i l l (Hhat, t−delay (H) ) ) ;pcalc (H, t ) ..  Ph(H, t )= e =data (H, ' c1 ' ) * V(H, t ) * V(H, t )+data (H, ' c2 ' ) * R(H, t ) * R(H, t )                        +data (H, ' c3 ' ) * V(H, t ) * R(H, t )                        +data (H, ' c4 ' ) * V(H, t )+data (H, ' c5 ' ) * R(H, t )+data (H, ' c6 ' );
balance( t ) ..  sum( i, p( i, t ) )+ sum(H, ph(H, t ) )= g = demand( t );OFdef ..      OBJ = e =zeta * sum((H, t ),Ph(H, t ) )+  costThermal;Model hydro /all/;Solve hydro us nlp min OBJ;


The thermal unit power schedules are shown in Fig. 3.8. The hydro unit power schedules are shown in Fig. 3.9.
Fig. 3.8Thermal unit schedules in multi-area economic dispatch
Fig. 3.9Hydro unit schedules in multi-area economic dispatch

Different models and methodologies related to hydro power scheduling have been addressed in the literature such as: Self-scheduling of a hydro producer in a pool-based electricity market [3], dispatchability enhancement of variable Wind Generation by coordination With Pumped-Storage Hydro Units [5], coordinated wind-hydro bidding strategies in day-ahead markets [6], and self-scheduling of hydro-thermal Genco in smart grids [7].


3.5 Multi-Area Mix Unit Dynamic Dispatch
The multi-area economic dispatch refers to a class of economic dispatch problems in which there are several interconnected areas. In each area, there are different power plant technologies and different demand pattern. The question is how to dispatch different power plants to supply the demand while minimizing the operating costs. A basic multi-area economic dispatch problem is shown in Fig. 3.10. There are ten thermal power plants which their connection area are given in Fig. 3.10. There exist two wind power plants, one in area 1 (250 MW) and one in area 3 (350 MW).
Fig. 3.10Multi-area dynamic economic dispatch problem

The multi-area dynamic economic dispatch problem is formulated in (3.16). The objective function is defined as total operating costs (3.16a). The operating limits of thermal units are given in (3.16b). The supply-demand balance of area a at time t is modeled in (3.16c). The amount of transferable power between area a and a∗ is described in (3.16d). The actual wind dispatch (pw

w, t
) depends on wind availability (ξ

w, t
) and wind capacity () as expressed in (3.16e). L

e, t


a
 is the electric load in area a and time t in (3.16c).  (3.16a)  (3.16b)  (3.16c)  (3.16d)  (3.16e)

The wind and demand patterns in each area are shown in Fig. 3.11. The techno-economic characteristics of thermal units and their connected area are given in Table 3.12. The GCode 3.8 solves the multi-area economic dynamic dispatch Example (3.16). Four sets are defined for time, area, thermal units, and wind turbines, then it is indicated which thermal unit belongs to each area. The table wind data describes the ξ

w, t
 in (3.16e). The wind capacities and their connected areas are indicated next. Tie-line limits and thermal unit characteristics are defined next. It should be mentioned that some data of demand and wind tables in GCode 3.8 are omitted to save space.Fig. 3.11Wind and demand pattern in each area
Table 3.12Characteristics of thermal units and their connected areaAreaUnit
a

i
 ($∕MW2)
b

i
 ($∕MW)
c

i
 ($)
P

i

min (MW)
P

i

max (MW)RU
i
 (MW)RD
i
 (MW)
A
1

P10.005617.87601.75201504040 
P20.007921.62480.29402008080 
P30.00723.9471.630300100100 
P40.004321.6958.230350120120
A
2

P50.009522.54692.410703030 
P60.00919.58455.620804040 
P70.006321.051313.640450150150
A
3

P80.004823.23639.4501305050 
P90.003920.81604.97100340100100 
P100.002116.51502.7401306060


GCode 3.8 Multi-area economic dynamic dispatch Example (3.16)

Sets t /t1 * t24 /, Area /A1 * A3/, i  / g1 * g10 /,w  /w1 * w2/;  set AreaGen( area, i );AreaGen( area, i )= no; AreaGen( 'A1 ', i )$( ord ( i )<5) =yes;AreaGen( 'A2 ', i )$( ord ( i )>4 and ord ( i )<8) =yes;AreaGen( 'A3 ', i )$( ord ( i )>7) =yes; a l i a s ( area, region );Table winddata ( t,w)     w1                w2t1   0.989432703003337 0.515610651974288t2   0.932703003337041 0.701561065197429t3   0.890989988876529 0.740128558310376t4   0.889877641824249 0.676308539944904t5   0.914905450500556 0.770431588613407t6   0.937708565072303 0.785123966942149t7   0.954393770856507 0.849403122130395t8   0.956618464961068 0.895316804407714t24  0.937152391546162 0.557392102846648 ;parameter Windcap(w)/w1 250w2  350/;parameter AreaWind( area,w);  AreaWind( 'A1 ', 'w1 ' )=yes;  AreaWind( 'A3 ', 'w2 ' )=yes;table  Tielim ( area, region )    a1    a2    a3a1  0     100   400a2  100   0     500a3  400   500   0;table  gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a      b     c      Pmin   Pmax   RU    RDg1   0.0056 17.87 601.75 20     150    40   40g2   0.0079 21.62 480.29 40     200    80   80g3   0.0070 23.9  471.6  30     300    100  100g4   0.0043 21.6  958.2  30     350    120  120g5   0.0095 22.54 692.4  10     70     30   30g6   0.0090 19.58 455.6  20     80     40   40g7   0.0063 21.05 1313.6 40     450    150  150g8   0.0048 23.23 639.4  50     130    50   50g9   0.0039 20.81 604.97 100    340    100  100g10  0.0021 16.51 502.7  40     130    60   60;table   demand( t, area )     a1   a2   a3t1   258  292  237t2   291  237  289t3   343  214  299t4   435  267  371t5   408  295  393t6   477  293  406t7   422  311  369t10  606  422  555t24  377  251  302 ;variables  Tie ( area, region, t ),   OF,    p( i, t ),   Pw(w, t ); t i e. lo ( area, region, t )=−Tielim ( area, region ); t i e. up( area, region, t ) =+ Tielim ( area, region ); t i e. fx ( area, region, t )$( Tielim ( area, region )=0)=0; t i e. fx ( area, area, t ) =0; Pw. lo (w, t ) =0;p. up( i, t )=gendata ( i,"Pmax"); p. lo ( i, t )=gendata ( i,"Pmin");Pw. up(w, t )= winddata ( t,w) * Windcap(w);Equations tieconst,balance,RampUp,RampDn, cost;tieconst ( area, region, t ) ..  Tie ( area, region, t )= e =−Tie ( region, area, t );
balance( area, t ).. sum( i$AreaGen ( area, i ),p( i, t ) )+ sum(w$AreaWind   ( area,w),Pw(w, t ) )= e = demand( t, area )+ sum( region, Tie ( area, region, t ) );RampUp( i, t ).. p( i, t ) − p( i, t −1) =l=gendata ( i, 'RU' );RampDn( i, t ).. p( i, t −1) − p( i, t )=l=gendata ( i, 'RD' );cost..  OF = e =  sum(( i, t ), gendata ( i, 'a ' ) * p( i, t ) * p( i, t )+gendata ( i, 'b ' ) * p( i, t )+gendata ( i, ' c ' ) );Model edc /all/ ;Solve edc min OF  us QCP  ;



Table 3.13Solution of multi-area economic dispatchTime
P
1

P
2

P
3

P
4

P
5

P
6

P
7

P
8

P
9

P
10

Pw
1

Pw
2

t
1
20.040.030.030.010.020.040.050.0100.040.0247.4159.6
t
2
20.040.030.030.010.020.040.050.0100.040.0191.5245.5
t
3
20.040.030.030.010.020.040.050.0100.040.0217.0259.0
t
4
60.040.030.042.710.060.072.850.0148.3100.0222.5236.7
t
5
100.040.030.030.010.067.640.050.0100.0130.0228.7269.7
t
6
140.040.030.030.010.066.153.550.0117.2130.0234.4274.8
t
7
110.040.030.030.010.026.140.050.0100.0130.0238.6297.3
t
8
150.040.030.030.010.066.143.150.0100.3130.0239.2313.4
t
9
150.040.030.065.810.080.088.650.0173.9130.0236.0297.8
t
10
150.071.230.0133.210.880.0134.550.0248.1130.0222.5322.7
t
11
150.069.130.0129.310.080.0131.950.0243.9130.0230.8350.0
t
12
150.067.530.0126.410.080.0129.950.0240.7130.0236.7332.8
t
13
150.040.030.064.210.080.087.550.0172.1130.0245.6336.7
t
14
150.040.030.074.210.080.094.350.0183.1130.0237.5328.9
t
15
150.040.030.046.510.080.075.450.0152.6130.0250.0310.5
t
16
150.040.030.030.010.080.058.350.0124.9130.0207.3323.5
t
17
128.240.030.030.010.040.040.050.0100.0130.0161.7344.1
t
18
150.040.030.030.010.080.045.350.0104.0130.0157.0343.7
t
19
150.040.030.071.710.080.092.650.0180.3130.0183.0316.4
t
20
150.056.230.0105.610.080.0115.750.0217.7130.0203.3284.4
t
21
150.040.030.053.210.080.080.050.0159.9130.0178.5285.4
t
22
150.040.030.044.410.080.073.950.0150.2130.0170.9258.6
t
23
120.240.030.030.010.060.040.050.0100.0130.0189.8238.0
t
24
80.240.030.030.010.020.040.050.0100.0100.4234.3195.1

The inter-area power transfer of different tie-lines is shown in Fig. 3.12.Fig. 3.12Inter-area power transfer of different tie-lines

Some other examples of multi-area dynamic dispatch can be found in [8]. The optimal solution of multi-area economic dispatch is described in Table 3.13.


3.6 Applications
Some optimization of economic dispatch models utilized in power system studies is given in this section: Economic dispatch with valve point loading [9]Non-smooth cost functions in economic dispatch analysis [10]Multi fuel handling [11]Transmission loss impacts on ED problem [12]Reserve constrained economic dispatch with prohibited operating zones [13]Environmentally constrained economic dispatch [14]Security constrained economic dispatch problem [15]Frequency-constrained stochastic ED [16]Decentralized economic dispatch [17]


Nomenclature

Indices and Sets

i
Index of thermal generating units.
j
Index of chp units.
k
Index of heat only units.
Ω
th
Set of all thermal generating units.
Ω

h

Set of all heat only units.
Ω
chp
Set of all chp units.


Parameters

P

i

th
Generated electric power by thermal unit i.
p

j

chp
Generated electric power by chp unit j.
q

j

chp
Generated heat power by chp unit j.
F
th
Costs of thermal units.
F

h

Costs of heat only units.
F
chp
Costs of chp units.
q

k


h

Generated heat power by heat only unit k.
Q

k


h, min∕max
Minimum and maximum limits of heat generation of heat only unit k.
P

j

chp,min∕max
Minimum and maximum limits of electricity generation of chp unit j.
Q

j

chp,min∕max
Minimum and maximum limits of heat generation of chp unit j.
L

e

Electric power demand
L

h

Heat power demand

Emission coefficients of thermal unit i.

Fuel cost coefficients of thermal unit i.

Fuel cost coefficients of heat unit k.

Fuel cost coefficients of chp unit j.
P

i

th,max∕min
Maximum/minimum limits of power generation of thermal unit i.ElimitMaximum emission limit (kg).
ε
Parameter used for multi-objective optimization.
C

e

Emission price ($/kg).


Variables

P

i

Power generated by thermal unit i (MW).OFTotal operating costs ($).TCTotal fuel cost ($).EMTotal emissions (kg).




References


1.
A. Rabiee, A. Soroudi, B. Mohammadi-Ivatloo, M. Parniani, Corrective voltage control scheme considering demand response and stochastic wind power. IEEE Trans. Power Syst. 29(6), 2965-2973 (2014)Crossref


2.
T. Guo, M.I. Henwood, M. van Ooijen, An algorithm for combined heat and power economic dispatch. IEEE Trans. Power Syst. 11(4), 1778-1784 (1996)Crossref


3.
A.J. Conejo, J.M. Arroyo, J. Contreras, F.A. Villamor, Self-scheduling of a hydro producer in a pool-based electricity market. IEEE Trans. Power Syst. 17(4), 1265-1272 (2002)Crossref


4.
J. Zhang, J. Wang, C. Yue, Small population-based particle swarm optimization for short-term hydrothermal scheduling. IEEE Trans. Power Syst. 27(1), 142-152 (2012)Crossref


5.
M.E. Khodayar, M. Shahidehpour, L. Wu, Enhancing the dispatchability of variable wind generation by coordination with pumped-storage hydro units in stochastic power systems. IEEE Trans. Power Syst. 28(3), 2808-2818 (2013)Crossref


6.
A.A. Snchez de la Nieta, J. Contreras, J.I. Muoz, Optimal coordinated wind-hydro bidding strategies in day-ahead markets. IEEE Trans. Power Syst. 28(2), 798-809 (2013)Crossref


7.
A. Soroudi, Robust optimization based self scheduling of hydro-thermal Genco in smart grids. Energy 61, 262-271 (2013)Crossref


8.
A. Soroudi, A. Rabiee, Optimal multi-area generation schedule considering renewable resources mix: a real-time approach. IET Gener. Transm. Distrib. 7(9), 1011-1026 (2013)Crossref


9.
D.C. Walters, G.B. Sheble, Genetic algorithm solution of economic dispatch with valve point loading. IEEE Trans. Power Syst. 8(3), 1325-1332 (1993)Crossref


10.
J.-B. Park, K.-S. Lee, J.-R. Shin, K.Y. Lee, A particle swarm optimization for economic dispatch with nonsmooth cost functions. IEEE Trans. Power Syst. 20(1), 34-42 (2005)Crossref


11.
C.-L. Chiang, Improved genetic algorithm for power economic dispatch of units with valve-point effects and multiple fuels. IEEE Trans. Power Syst. 20(4), 1690-1699 (2005)MathSciNetCrossref


12.
Z.X. Liang, J.D. Glover, A zoom feature for a dynamic programming solution to economic dispatch including transmission losses. IEEE Trans. Power Syst. 7(2), 544-550 (1992)Crossref


13.
F.N. Lee, A.M. Breipohl, Reserve constrained economic dispatch with prohibited operating zones. IEEE Trans. Power Syst. 8(1), 246-254 (1993)Crossref


14.
K.P. Wang, J. Yuryevich, Evolutionary-programming-based algorithm for environmentally-constrained economic dispatch. IEEE Trans. Power Syst. 13(2), 301-306 (1998)Crossref


15.
R.A. Jabr, A.H. Coonick, B.J. Cory, A homogeneous linear programming algorithm for the security constrained economic dispatch problem. IEEE Trans. Power Syst. 15(3), 930-936 (2000)Crossref


16.
Y.Y. Lee, R. Baldick, A frequency-constrained stochastic economic dispatch model. IEEE Trans. Power Syst. 28(3), 2301-2312 (2013)Crossref


17.
W.T. Elsayed, E.F. El-Saadany, A fully decentralized approach for solving the economic dispatch problem. IEEE Trans. Power Syst. 30(4), 2179-2189 (2015)Crossref














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_4





4. Dynamic Economic Dispatch




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides a solution for dynamic economic dispatch (DED) problem in GAMS. DED refers to dispatch a set of units over a given operating horizon (usually 24 h). The on/off status of units is assumed to be known. Two paradigms of DED are discussed and modeled, namely cost-based DED and price-based DED. Finally, the linearized version of DED is provided.

4.1 Cost-Based DED
The objective function of cost-based DED is minimizing the total operating costs while satisfying the hourly demands and other technical constraints. The production costs of g-th thermal unit is defined as:  (4.1) where a

g
, b

g
, and c

g
 are the fuel cost coefficients of the g-th unit. The total fuel cost (TC) is calculated as follows:  (4.2)

The total emission (EM) is calculated as follows:  (4.3)

The operating limits are defined as follows:  (4.4) where P

g

max∕min are the maximum/minimum power outputs of g-th thermal unit. The overall thermal unit cost-based dynamic economic dispatch is formulated as follows:  (4.5a)  (4.5b)  (4.5c)  (4.5d)  (4.5e)  (4.5f)

The economic dispatch data for four units example is given in Table 4.1. This table has 11 columns. The first column is showing the generating unit index. The next three columns indicate the cost coefficients for these thermal units (a

g
, b

g
, c

g
). The next three columns indicate the emission coefficients for these thermal units (d

g
, e

g
, f

g
). The next two columns give the minimum and maximum generating limits of each unit if they are on. The last two columns indicate the ramp up/down rates of thermal units.Table 4.1The dynamic economic dispatch data for four units example
g

a

g
 ($∕MW2)
b

g
 ($∕MW)
c

g
 ($)
d

g
 (kg∕MW2)
e

g
 (kg∕MW)
f

g
 (kg)
P

g

min (MW)
P

g

max (MW)RU
g
 (MW)RD
g
 (MW)
g10.1214.8891.2−53282004040
g20.1716.57832.3−4.246.09202903030
g30.1515.551001.1−2.155.69301903030
g40.1916.21701.1−3.996.2202605050

The GAMS code for solving the example (4.5) is given in GCode 4.1.

GCode 4.1 The cost-based dynamic economic dispatch Example (4.5)

Sets t       hours            /t1 * t24/     i        thermal units    /g1 * g4 /;table  gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0g1   0.12 14.80 89  1.2  −5    3    28   200   40   40g2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30g3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30g4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;Parameter demand( t )/t1       510t2        530t3        516t4        510t5        515t6        544t7        646t8        686t9        741t10       734t11       748t12       760t13       754t14       700t15       686t16       720t17       714t18       761t19       727t20       714t21       618t22       584t23       578t24       544/;Variables         OBJ           Objective ( revenue )                 costThermal   Cost of  thermal units                 p( i, t )        Power generated by thermal power                               plant                 EM            Emission calculation       ;p. up( i, t ) = gendata ( i,"Pmax") ;p. lo ( i, t ) = gendata ( i,"Pmin");Equations Genconst3, Genconst4, costThermalcalc,balance, EMcalc;costThermalcalc..  costThermal =e=sum(( t, i ), gendata ( i, 'a ' ) * power (p( i, t ),2)+gendata ( i, 'b ' ) * p( i, t ) +gendata ( i, ' c ' ) );Genconst3 ( i, t ) ..  p( i, t+1)−p( i, t )=l=gendata ( i, 'RU0 ' );Genconst4 ( i, t ) ..  p( i, t −1)−p( i, t )=l=gendata ( i, 'RD0' );
balance( t ) ..  sum( i, p( i, t ) )=g=demand( t );EMcalc     ..  EM=e=sum(( t, i ), gendata ( i, 'd ' ) * power (p( i, t ),2)+gendata ( i, ' e ' ) * p( i, t ) +gendata ( i, ' f ' ) );Model DEDcostbased /all/;Solve DEDcostbased us QCP min costThermal;execute_unload "DEDcostbased. gdx" P. lexecute 'gdxxrw. exe DEDcostbased. gdx var=P  rng=Pthermal ! a1 '


The thermal unit power schedules obtained by GCode 4.1 are shown in Fig. 4.1.
Fig. 4.1The hourly thermal unit power schedules in cost-based DED

The numerical values of dynamic economic dispatch solution for four units example are given in Table 4.2. The total operating costs are TC = $6. 4796 × 105. The total emissions are 3. 5929 × 103 tons.Table 4.2The dynamic economic dispatch solution for four units expressed in (MW)Time
p
1

p
2

p
3

p
4
Load
t
1
166.20112.10130.50101.30510.00
t
2
172.60116.60135.60105.30530.00
t
3
168.10113.50132.00102.50516.00
t
4
166.20112.10130.50101.30510.00
t
5
167.80113.20131.70102.30515.00
t
6
177.00119.80139.10108.10544.00
t
7
200.00145.90168.70131.50646.00
t
8
200.00159.10183.70143.30686.00
t
9
200.00184.80190.00166.30741.00
t
10
200.00181.10190.00162.90734.00
t
11
200.00188.40190.00169.60748.00
t
12
200.00194.80190.00175.20760.00
t
13
200.00191.60190.00172.40754.00
t
14
200.00163.70188.90147.40700.00
t
15
200.00159.10183.70143.30686.00
t
16
200.00173.70190.00156.30720.00
t
17
200.00170.50190.00153.50714.00
t
18
200.00195.30190.00175.70761.00
t
19
200.00177.40190.00159.60727.00
t
20
200.00168.60190.00155.40714.00
t
21
198.00138.60160.00121.40618.00
t
22
189.80128.80149.30116.20584.00
t
23
187.90127.40147.80114.90578.00
t
24
177.00119.80139.10108.10544.00


4.1.1 Ramp Rate Sensitivity Analysis
In this section, the impact of ramp rates on optimal solution will be investigated. For this reason, the ramp rates are gradually (in 2% steps) reduced to 60% of their original values. The GAMS code for solving the ramp sensitivity example is given in GCode 4.2.

GCode 4.2 The ramp rate sensitivity analysis of cost-based dynamic economic dispatch

Sets     t   /t1 * t24 /, i   /p1 * p4 /;Table gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0p1   0.12 14.80 89  1.2  −5    3    28   200   40   40p2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30p3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30p4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;parameter demand( t )/t1       510t2        530t3        516t4        510t5        515t6        544t7        646t8        686t9        741t10       734t11       748t12       760t13       754t14       700t15       686t16       720t17       714t18       761t19       727t20       714t21       618t22       584t23       578t24       544/;Variables         OBJ           Objective ( revenue )                 costThermal   Cost of  thermal units                 p( i, t )        Power generated by the thermal                               power plant                 EM            Emission calculation;p. up( i, t ) = gendata ( i,"Pmax") ;p. lo ( i, t ) = gendata ( i,"Pmin");Equations Genconst3, Genconst4, costThermalcalc,balance, EMcalc;costThermalcalc..  costThermal =e=sum(( t, i ), gendata ( i, 'a ' ) * power(p( i, t ),2)+gendata ( i, 'b ' ) * p( i, t ) +gendata ( i, ' c ' ) );Genconst3 ( i, t ) ..  p( i, t+1)−p( i, t )=l=gendata ( i, 'RU' );Genconst4 ( i, t ) ..  p( i, t −1)−p( i, t )=l=gendata ( i, 'RD' );
balance( t ) ..  sum( i, p( i, t ) )=g=demand( t );EMcalc ..  EM=e=sum(( t, i ), gendata ( i, 'd ' ) * power (p( i, t ),2)+gendata( i, ' e ' ) * p( i, t )+gendata ( i, ' f ' ) );Model DEDcostbased /all/;Scalar  Rscale /1/;
set counter /c1 * c21 /;parameter report1 ( counter, * );loop ( counter,Rscale=1−(ord ( counter )−1) * 0. 0 2;gendata ( i, 'RU' )=gendata ( i, 'RU0 ' ) * RScale;gendata ( i, 'RD' )=gendata ( i, 'RD0' ) * RScale;Solve DEDcostbased us qcp min costThermal;report1 ( counter, ' Scale ' )=Rscale;report1 ( counter, 'TC' )=costThermal. l;report1 ( counter, ' EM' )= EM. l;);display  report1;execute_unload "DEDcostbased. gdx" report1execute 'gdxxrw. exe DEDcostbased. gdx par =report1 rng = Pthermal ! a1 '


The sensitivity analysis of ramp rates on hourly thermal unit power schedules in DED is shown in Fig. 4.2.Fig. 4.2The sensitivity analysis of ramp rates on hourly thermal unit power schedules in DED

The numerical results for ramp rate sensitivity analysis in dynamic economic dispatch of 4 units are given in Table 4.3. As it is seen in Fig. 4.2, the total costs will increase by decreasing the ramp rates. The final total costs (40% reduction in ramp rates) will be $649,226.53.Table 4.3The numerical results for ramp rate sensitivity analysis in dynamic economic dispatch of 4 unitsCounterScaleTC ($)EM (kg)
c
1
1.00647,964.463,592,886.80
c
2
0.98647,966.183,592,796.25
c
3
0.96647,968.283,592,707.78
c
4
0.94647,970.783,592,622.76
c
5
0.92647,973.693,592,545.64
c
6
0.90647,977.113,592,469.20
c
7
0.88647,981.173,592,362.06
c
8
0.86647,985.943,592,261.31
c
9
0.84647,991.453,592,183.41
c
10
0.82647,997.773,592,150.64
c
11
0.80648,005.103,592,086.32
c
12
0.78648,014.583,592,007.06
c
13
0.76648,026.423,591,950.09
c
14
0.74648,040.633,591,919.82
c
15
0.72648,057.213,591,935.58
c
16
0.70648,076.193,591,985.60
c
17
0.68648,098.113,592,096.38
c
18
0.66648,289.753,593,218.29
c
19
0.64648,484.763,594,442.68
c
20
0.62648,853.353,596,838.57
c
21
0.60649,226.533,599,445.17



4.1.2 Multi-Objective Cost-Emission Minimization
In this section, the decision maker needs to minimize the emissions and total operating costs simultaneously.  (4.6a)  (4.6b)  (4.6c)  (4.6d)  (4.6e)  (4.6f)

The procedure is as follows:
1.Find the maximum of each objective function and save them. 2.Add one of the objective functions (here EM) to the constraints as follows:  (4.7)
 3.The ε value will be varied from EMmax to EMmin and then TC is minimized. 

The Pareto optimal front for emission-cost minimization DED is shown in Fig. 4.3. The numerical results for Pareto optimal solution are provided in Table 4.4. The question is which solution of the Pareto optimal front should be chosen as the best solution? Which one is the "most preferred" solution among those located on Pareto optimal front of Fig. 4.3?. A fuzzy satisfying method [1] is used in this section to find the "the best" solution. The principles of this method are as follows: for each solution in the Pareto optimal front, X

c
, a membership function is defined as . This value, which varies between 0 to 1, shows the success degree of X

c
 in minimizing the objective function k. A linear membership function is used for both objective functions, as follows:  (4.8) A conservative decision maker tries to maximize minimum satisfaction among all objectives or minimize the maximum dissatisfaction. The final solution can then be found as:  (4.9)
Fig. 4.3The Pareto optimal front for emission-cost minimization DED
Table 4.4The numerical results for Pareto optimal solutions (cost-based DED)Solution
ε
TC ($)EM (kg)
μ
TC

μ
EM
min(μ
TC, μ
EM)
c13,592,886.799647,964.4603,592,886.7991.0000.0000.000
c23,562,019.341648,050.0683,562,019.3410.9970.1000.100
c33,531,151.883648,328.1323,531,151.8830.9890.2000.200
c43,500,284.425648,836.4613,500,284.4250.9740.3000.300
c53,469,416.967649,627.5573,469,416.9670.9510.4000.400
c63,438,549.510650,778.1323,438,549.5100.9170.5000.500
c73,407,682.052652,408.2063,407,682.0520.8690.6000.600
c83,376,814.594654,716.1763,376,814.5940.8000.7000.700
c93,345,947.136658,087.9733,345,947.1360.7010.8000.701
c103,315,079.678663,531.6933,315,079.6780.5400.9000.540
c113,284,212.220681,788.3773,284,212.2200.0001.0000.000


GCode 4.3 The multi-objective cost-emission minimization of dynamic economic dispatch

sets  t  /t1 * t24 /,  i  /g1 * g4 /, counter /c1 * c11 /;  Scalar  lim / inf /;table  gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0g1   0.12 14.80 89  1.2  −5    3    28   200   40   40g2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30g3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30g4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;parameter demand( t )/t1       510t2        530t3        516t4        510t5        515t6        544t7        646t8        686t9        741t10       734t11       748t12       760t13       754t14       700t15       686t16       720t17       714t18       761t19       727t20       714t21       618t22       584t23       578t24       544/;Variables         OBJ, costThermal, p( i, t ),EM ;p. up( i, t ) = gendata ( i,"Pmax");  p. lo ( i, t ) = gendata ( i,"Pmin");Equations Genconst3, Genconst4, costThermalcalc,balance, EMcalc,EMlim;costThermalcalc..  costThermal =e=sum(( t, i ), gendata ( i, 'a ' ) * power(p( i, t ),2)+gendata ( i, 'b ' ) * p( i, t ) +gendata ( i, ' c ' ) );Genconst3 ( i, t ) ..  p( i, t+1)−p( i, t )=l=gendata ( i, 'RU0 ' );Genconst4 ( i, t ) ..  p( i, t −1)−p( i, t )=l=gendata ( i, 'RD0' );
balance( t ) ..   sum( i, p( i, t ) )=e=demand( t );EMcalc ..  EM=e=sum(( t, i ), gendata ( i, 'd ' ) * power (p( i, t ),2)+gendata( i, ' e ' ) * p( i, t )+gendata ( i, ' f ' ) );EMlim  ..  EM =l=lim;Model DEDcostbased /all/;parameter report1 ( counter, * ), rep ( * ), report2 ( counter, i, t );Solve DEDcostbased us qcp min costThermal;rep ( 'TCmin ' )=costThermal. l;rep ( 'EMmax' )=EM. l;Solve DEDcostbased us qcp min EM;rep ( 'TCmax' )=costThermal. l;rep ( 'EMmin ' )=EM. l;loop ( counter,lim=rep ( 'EMmax' )+(rep ( 'EMmin ' )−rep ( 'EMmax' ) ) * ( ord ( counter )−1)/    ( card ( counter )−1);Solve DEDcostbased us qcp min costThermal;report1 ( counter, ' Epsilon ' )=lim;report1 ( counter, 'TC' )=costThermal. l;report1 ( counter, 'EM' )=EM. l;report2 ( counter, i, t )=P. l ( i, t ););execute_unload "DEDcostbased. gdx" report1execute 'gdxxrw. exe DEDcostbased. gdx par=report1  rng=report ! a1 'execute_unload "DEDcostbased. gdx" report2execute 'gdxxrw. exe DEDcostbased. gdx par=report2 rng=Pthermal ! a1 '


Considering the (4.9) and the values of Table 4.4, the best solution is c9. The costs and emissions of this solution are $658,087.973 and 3. 3459 × 103 tones, respectively. The best compromised solution of Pareto optimal front for emission-cost minimization DED is shown in Fig. 4.4.Fig. 4.4The best compromised solution of Pareto optimal front for emission-cost minimization DED



4.1.3 Wind Integrated DED
In this section, the role of wind power generation in DED problem is investigated. The integration of wind power generation in DED problem is formulated as follows:  (4.10a)  (4.10b)  (4.10c)  (4.10d)  (4.10e)  (4.10f)  (4.10g)

The GAMS code for solving the example (4.10) is given in GCode 4.4.

GCode 4.4 The cost-based wind-DED (4.10)

Sets     t       hours            /t1 * t24 /,         g       thermal units    /p1 * p4 /;table  gendata (g, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0p1   0.12 14.80 89  1.2  −5    3    28   200   40   40p2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30p3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30p4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;table  data ( t, * )     lambda load windt1   32.71  510  44.1t2   34.72  530  48.5t3   32.71  516  65.7t4   32.74  510  144.9t5   32.96  515  202.3t6   34.93  544  317.3t7   44.9   646  364.4t8   52     686  317.3t9   53.03  741  271t10  47.26  734  306.9t11  44.07  748  424.1t12  38.63  760  398t13  39.91  754  487.6t14  39.45  700  521.9t15  41.14  686  541.3t16  39.23  720  560t17  52.12  714  486.8t18  40.85  761  372.6t19  41.2   727  367.4t20  41.15  714  314.3t21  45.76  618  316.6t22  45.59  584  311.4t23  45.56  578  405.4t24  34.72  544  470.4;Variables         OBJ            Objective ( revenue )                 cost    Cost of  thermal units                 p(g, t )        Power generated by thermal                               power plant                 Pw( t ), PWC ( t )  winf power wind curtailmet      ;Pw. up( t )=data ( t, 'wind ' );  Pw. lo ( t ) =0;Pwc. up( t )=data ( t, 'wind ' );  Pwc. lo ( t ) =0;p. up(g, t ) =  gendata (g,"Pmax") ;p. lo (g, t ) =  gendata (g,"Pmin");scalar  VWC  /50/;Equations Genconst3, Genconst4, costThermalcalc,balance,  wind;costThermalcalc..  cost= e = sum( t, VWC* pwc( t ) )+ sum(( t, g), gendata (g, 'a ' ) * power (p(g, t ),2) +gendata (g, 'b ' ) * p(g, t )    +gendata (g, ' c ' ) );Genconst3 (g, t ) ..  p(g, t+1) − p(g, t )=l=gendata (g, 'RU0 ' );Genconst4 (g, t ) ..  p(g, t −1) − p(g, t )=l=gendata (g, 'RD0' );
balance( t ) ..      sum(g, p(g, t ) )+ Pw( t )= g =data ( t, ' load ' );wind( t ) ..      Pw( t )+ PWC ( t )= e =data ( t, 'wind ' );Model DEDwindcostbased /all/;Solve DEDwindcostbased us qcp min cost;parameter rep ( t, * );rep ( t, 'Pth ' )= sum(g, p. l (g, t ) );rep ( t, ' PW' )= PW. l ( t );rep ( t, 'Pwc ' )= PWc. l ( t );rep ( t, 'Load ' )=data ( t, ' load ' );execute_unload "DEDwindcostbased. gdx" P. lexecute 'gdxxrw. exe DEDwindcostbased. gdx var= P   rng = Pthermal ! a1 'execute_unload "DEDwindcostbased. gdx" repexecute 'gdxxrw. exe DEDwindcostbased. gdx par = reP  rng =rep ! a1 '


The total operating costs with wind integration are TC = $2. 2692 × 105 as obtained in GCode 4.4. The hourly schedules of thermal units in the wind-DED problem are shown in Fig. 4.5. The hourly variation of total wind and thermal power generation as well as the demand in wind-DED problem is depicted in Fig. 4.6.
Fig. 4.5The hourly schedules of thermal units in wind-DED problem
Fig. 4.6The hourly variation of total wind and thermal power generation in wind-DED problem




4.2 Price-Based DED
The objective function of price-based DED (PBDED) is maximizing the total benefits of generating company by selling the energy or other products. In this case, there is no hourly demands-supply balance constraint; however, other technical constraints should still be satisfied. The net benefit of generating company is equal to income minus operating costs.

4.2.1 Price-Based DED Just Energy Market
This case is devoted to the case of price-based DED without arbitrage. This means that the only sold commodity is energy. The problem is formulated in (4.11) as follows:  (4.11a)  (4.11b)  (4.11c)  (4.11d)  (4.11e)  (4.11f)  (4.11g) The objective function in (4.11a) models the benefits of Genco which is income minus the total operating costs. λ

t


e
 is the electricity price at time t in (4.11a). In this formulation, we just calculate the total emission in (4.11c). Another difference of price-based DED with cost-based DED is in Eq. (4.11g). As it can be observed in this equation, the total power should be less than demand at any time. This means that the maximum power that Genco can sell is limited to the demand at time t.

GCode 4.5 The code for price-based dynamic economic dispatch

Sets     t       hours            /t1 * t24/         i        thermal units    /g1 * g4 /;scalar  lim / inf /;table  gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0g1   0.12 14.80 89  1.2  −5    3    28   200   40   40g2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30g3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30g4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;table  data ( t, * )        lambda        load
t1        32.71        510t2        34.72        530t3        32.71        516t4        32.74        510t5        32.96        515t6        34.93        544t7        44.9         646t8        52           686t9        53.03        741t10       47.26        734t11       44.07        748t12       38.63        760t13       39.91        754t14       39.45        700t15       41.14        686t16       39.23        720t17       52.12        714t18       40.85        761t19       41.2         727t20       41.15        714t21       45.76        618t22       45.59        584t23       45.56        578t24       34.72        544;Variables         OF            Objective ( revenue )                costThermal   Cost of  thermal units                 p( i, t )        Power generated by thermal power plant                 EM             Emission calculation       ;p. up( i, t ) =  gendata ( i,"Pmax") ;p. lo ( i, t ) =  gendata ( i,"Pmin");equationsGenconst3, Genconst4, costThermalcalc,balance, EMcalc,EMlim, benefitcalc;costThermalcalc..  costThermal = e = sum(( t, i ), gendata ( i, 'a ' ) * power (p( i, t ),2)+gendata ( i, 'b ' ) * p( i, t ) +gendata ( i, ' c ' ) );Genconst3 ( i, t ) ..  p( i, t+1) − p( i, t )=l=gendata ( i, 'RU0 ' );Genconst4 ( i, t ) ..  p( i, t −1) − p( i, t )=l=gendata ( i, 'RD0' );
balance( t ) ..      sum( i, p( i, t ) )=l=data ( t, ' load ' );EMcalc ..  EM = e = sum(( t, i ), gendata ( i, 'd ' ) * power (p( i, t ),2)+gendata ( i, ' e ' ) * p( i, t )+gendata ( i, ' f ' ) );EMlim  ..  EM  =l=lim;benefitcalc  ..  OF = e = sum(( i, t ), 1 * data ( t, 'lambda ' ) * p( i, t ) ) −  costThermal;Model DEDPB  /all/;Solve DEDPB  us qcp max  of;execute_unload " DEDPB. gdx" P. lexecute 'gdxxrw. exe DEDPB. gdx var= P   rng =report ! a1 '


The optimal solution of price-based DED is depicted in Fig. 4.7.
Fig. 4.7The optimal solution of price-based DED



4.2.2 Price-Based DED Energy and Reserve Market
This case is devoted to the case of price-based DED without arbitrage. This means that the only sold commodities are energy and spinning reserve. The problem is formulated in (4.12) as follows:  (4.12a)  (4.12b)  (4.12c)  (4.12d)  (4.12e)  (4.12f)  (4.12g)  (4.12h)

In order to solve the PBDED problem formulated in (4.12), the energy prices (λ

t


e
) and reserve prices (λ

t


r
) in (4.12a) are needed to be known. The problem is usually solved in a day ahead time horizon. Various prediction techniques exist in literature to forecast these numbers based on historical data [2]. The energy and reserve prices vs. time in price-based DED are depicted in Fig. 4.8. It should be noted that the numbers shown in Fig. 4.8 are subject to uncertainties. The GAMS code for solving the price-based DED with arbitrage is provided in GCode 4.6.
Fig. 4.8The energy and reserve prices vs time in price-based DED


GCode 4.6 The code for price-based DED with arbitrage

Sets     t /t1 * t24 /, i  /g1 * g4 /;Scalar  lim / inf /;table  gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0g1   0.12 14.80 89  1.2  −5    3    28   200   40   40g2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30g3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30g4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;table  data ( t, * )         lambda        load          Lrt1        32.71        510.00        25.55t2        34.72        530.00        20.83t3        32.71        516.00        19.68t4        32.74        510.00        21.73t5        32.96        515.00        22.43t6        34.93        544.00        23.94t7        44.90        646.00        42.22t8        52.00        686.00        36.53t9        53.03        741.00        21.41t10       47.26        734.00        12.58t11       44.07        748.00        13.86t12       38.63        760.00        9.58t13       39.91        754.00        7.18t14       39.45        700.00        12.16t15       41.14        686.00        18.20t16       39.23        720.00        17.83t17       52.12        714.00        24.13t18       40.85        761.00        18.80t19       41.20        727.00        18.02t20       41.15        714.00        17.03t21       45.76        618.00        13.37t22       45.59        584.00        16.94t23       45.56        578.00        19.05t24       34.72        544.00        13.58 ;Variables         OF            Objective ( revenue )                costThermal   Cost of  thermal units                 p( i, t )        Power generated by thermal power                               plant                 EM             Emission calculation                 SR( i, t )       Spinning reserve  calculation      ;p. up( i, t ) =  gendata ( i,"Pmax") ;p. lo ( i, t ) =  gendata ( i,"Pmin");SR. up( i, t )=  gendata ( i,"Pmax") ;SR. lo ( i, t )=  0 ;EquationsGenconst3, Genconst4, costThermalcalc,balance, EMcalc,EMlim, benefitcalc, reserve;costThermalcalc..  costThermal = e = sum(( t, i ), gendata ( i, 'a ' ) * power(p( i, t ),2)+gendata ( i, 'b ' ) * p( i, t ) +gendata ( i, ' c ' ) );Genconst3 ( i, t ) ..  p( i, t+1) − p( i, t )=l=gendata ( i, 'RU0 ' );Genconst4 ( i, t ) ..  p( i, t −1) − p( i, t )=l=gendata ( i, 'RD0' );
balance( t ) ..      sum( i, p( i, t ) )=l=data ( t, ' load ' );EMcalc ..  EM = e = sum(( t, i ), gendata ( i, 'd ' ) * power (p( i, t ),2)+gendata( i, ' e ' ) * p( i, t )+gendata ( i, ' f ' ) );EMlim  ..  EM  =l=lim;benefitcalc  ..     OF = e = sum(( i, t ), 1 * data ( t, 'lambda ' ) * p( i, t )+data( t, ' Lr ' ) * SR( i, t ) ) −costThermal;reserve ( i, t ) ..    SR( i, t )=l=gendata ( i,"Pmax") − p( i, t );Model DEDPB  /all/;Solve DEDPB  us qcp max  of;execute_unload " DEDPB. gdx" P. lexecute 'gdxxrw. exe DEDPB. gdx var= P   rng = P! a1 'execute_unload " DEDPB. gdx" SR. lexecute 'gdxxrw. exe DEDPB. gdx var= SR  rng = SR! a1 '


The energy and reserve schedules vs time in price-based DED with arbitrage are shown in Fig. 4.9.
Fig. 4.9The energy and reserve schedules vs time in price-based DED with arbitrage




4.3 Linearized Cost-Based DED
In this section, we are trying to generate a linear version of the cost-based DED problem formulated in (4.5). The assumption is that the fuel cost function is still expressed in quadratic form aP
2 + bP + c. The procedure for linearization is illustrated in Fig. 4.10.
Fig. 4.10Linearizing the quadratic cost function

As it is shown in Fig. 4.10, the interval between  is divided into n equally sized intervals . At a specific interval k, we define a variable p

g, t


k
 which varies between zero and the interval length ΔP

g


k
 as indicated in (4.13b). The actual value of power generation i at time t is calculated in (4.13f). The slope of the line connecting the initial and final points of the interval k is calculated in (4.13h).  (4.13a)  (4.13b)  (4.13c)  (4.13d)  (4.13e)  (4.13f)  (4.13g)  (4.13h)  (4.13i)  (4.13j)  (4.13k)  (4.13l)  (4.13m) The GAMS code for linear cost-based DED with no arbitrage in example (4.13) is provided in GCode 4.7. The  interval is divided into 100 sections. The ΔP

g


k
, P

g, fin

k
, P

g, ini

k
, C

g, fin

k
, C

g, ini

k
 and s

g


k
 are treated as parameters.

GCode 4.7 The code for linear cost-based DED with no arbitrage in example (4.13)

Sets     t       hours            /t1 * t24/         i        thermal units    /g1 * g4/         k                       / 1 * 1 0 0 /;table  gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0    RD0g1   0.12 14.80 89  1.2  −5    3    28   200   40   40g2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30g3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30g4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;parameter demand( t )/t1       510t2        530t3        516t4        510t5        515t6        544t7        646t8        686t9        741t10       734t11       748t12       760t13       754t14       700t15       686t16       720t17       714t18       761t19       727t20       714t21       618t22       584t23       578t24       544/;Variables         OF            Objective ( revenue )                 p( i, t )        Power generated by thermal power                               plant                 Pk( i, t, k)        ;Parameter data (k, i, * );data (k, i, 'DP' )=(gendata ( i,"Pmax") −gendata ( i,"Pmin") )/card (k);data (k, i, ' Pini ' )=  ( ord (k)−1) * data (k, i, 'DP' )+gendata ( i,"Pmin");data (k, i, ' Pfin ' )=data (k, i, ' Pini ' )+data (k, i, 'DP' );data (k, i, ' Cini ' )=gendata ( i," a") * power ( data (k, i, ' Pini ' ),2)+gendata ( i,"b") * data (k, i, ' Pini ' )+gendata ( i," c ");data (k, i, ' Cfin ' )=gendata ( i," a") * power ( data (k, i, ' Pfin ' ),2)+gendata ( i,"b") * data (k, i, ' Pfin ' )+gendata ( i," c ");data (k, i, ' s ' )=(data (k, i, ' Cfin ' ) −data (k, i, ' Cini ' ) )/data (k, i, 'DP' );p. up( i, t ) =  gendata ( i,"Pmax");p. lo ( i, t ) =  gendata ( i,"Pmin");Pk. up( i, t, k)=data (k, i, 'DP' );Pk. lo ( i, t, k) =0;Equations eq1, eq2, eq3, eq4, eq5;eq1       ..  OF  = e = sum(( t, i ), gendata ( i, 'a ' ) * power ( gendata ( i,"Pmin"),2)+gendata ( i, 'b ' ) * gendata ( i,"Pmin") +gendata ( i, ' c ' )+   sum(k, data (k, i, ' s ' ) * pk( i, t, k) )   );eq2 ( i, t )  ..  p( i, t+1) − p( i, t )=l=gendata ( i, 'RU0 ' );eq3 ( i, t )  ..  p( i, t −1) − p( i, t )=l=gendata ( i, 'RD0' );eq4 ( t )    ..  sum( i, p( i, t ) )= g = demand( t );eq5 ( i, t )  ..  p( i, t )= e =  gendata ( i,"Pmin")+  sum(k,Pk( i, t, k) );Model DEDLP  /all/;Solve DEDLP  us LP min OF;


The total cost is $647,972.4 and compared to the operating costs obtained by GCode 4.1 which gives $647,960.1, the error is not significant. If more precision is needed, the number of intervals (k) should be increased. This would increase the number of variables in optimization problem and makes it more difficult to solve.


4.4 Applications
There are still some other technical constraints that should be considered in DED problem formulation such as valve-point effect, prohibited operation zones (POZs), and transmission losses. References [3] propose the imperialist competitive algorithm (ICA) to solve such complicated problem. Stochastic Real-Time Scheduling of Wind-Thermal Generation Units in an Electric Utility [4].

Nomenclature

Indices

k
Blocks considered for piecewise linear fuel cost function.
i
Thermal generating units.
t
Time intervals.


Parameters

U∕S

g

0
Duration of period that unit i has been on/off at the beginning of the operating horizon (end of t = 0) (h).
d

g
, e

g
, f

g

Emission coefficients of unit i.
λ

t


e

Electric energy price at time t ($/MW h).
L

t

Electric demand at time t.
a

g
, b

g
, c

g

Fuel cost coefficients of unit i.
P

g, ini∕fin

k

Initial and final values of power in block k of linearized cost of thermal unit i (MW).
C

g, ini∕fin

k

Initial and final values of cost in block k of linearized cost of thermal unit i ($/h).
ΔP

g


k

Length of block k of linearized cost of thermal unit i (MW).
P

g

max∕min
Maximum/minimum limits of power generation of thermal unit i.DT∕UT
g

Minimum down/up time of unit i (h).
T
Number of time intervals.
n
Number of blocks considered for piecewise linear fuel cost function.
ε
Parameter used for multi-objective optimization.RU
g
∕RD
g

Ramp-up/down limit of generation unit i (MW/h).
λ

t


r

Reserve price at time t ($/MW).SDC
g
∕SUC
g

Shut down/Start-up cost of unit i ($/h).SD∕SU
g

Shut-down/start-up ramp limit of unit i (MW/h).
s

g


k

Slope of cost in block k of linearized cost of thermal unit i ($/MW).VWCValue of wind curtailment
Λ

t


w

Wind availability at time t



Variables

P

t


w

Wind generation at time t

P

t

wc
Wind curtailment at time t

C

g, t

Fuel cost of thermal unit i at time t ($).
p

g, t


k

Operating schedule of thermal unit i in block k at time t (MW).
P

g, t

Power generated by thermal unit i at time t (MW).SR
g, t

Spinning reserve provided by thermal unit i at time t (MW).TCTotal operating costs ($).EMTotal emissions (kg).




References


1.
A. Soroudi, M. Afrasiab, Binary PSO-based dynamic multi-objective model for distributed generation planning under uncertainty. IET Renew. Power Gener. 6(2), 67-78 (2012)Crossref


2.
A.J. Conejo, M.A. Plazas, R. Espinola, A.B. Molina, Day-ahead electricity price forecasting using the wavelet transform and ARIMA models. IEEE Trans. Power Syst. 20(2), 1035-1042 (2005)Crossref


3.
R. Roche, L. Idoumghar, B. Blunier, A. Miraoui, Imperialist competitive algorithm for dynamic optimization of economic dispatch in power systems, in International Conference on Artificial Evolution (Evolution Artificielle) (Springer, Berlin, 2011), pp. 217-228


4.
A. Soroudi, A. Rabiee, A. Keane, Stochastic real-time scheduling of wind-thermal generation units in an electric utility. IEEE Syst. J. PP(99), 1-10 (2015)














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_5





5. Unit Commitment




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides GAMS code for solving unit commitment (UC) problem. The developed GAMS code is linear and is categorized as a MIP model in GAMS. The inputs are generator's characteristics, electricity prices, and demands. The outputs of this code are on/off status of units and their operating schedules.
Every unit commitment problem has three main cost components namely fuel costs, start-up, and shut-down costs. The unit commitment cost calculation is illustrated in Fig. 5.1.Fig. 5.1Unit commitment cost calculation

The unit commitment data for ten units are inspired by Ademovic et al. [1] and described in Table 5.1.Table 5.1Unit commitment data for ten thermal units 
a

i


b

i

   RU
i

RD
i

  SD
i

SU
i


P

i

min

P

i

max
   Unit($∕MW2)($∕MW)
c

i
 ($)
Cd

i
 ($)
Cs

i
 ($)(MW h−1)(MW h−1)UT
i
 (h)DT
i
 (h)(MW h−1)(MW h−1)(MW)
P
(MW)

U

i

0 (h)
u

i, t = 0

S

i

0 (h)
g10.014812.18242.642.64040329011080200101
g20.028912.64950.650.6646442130140120320200
g30.013513.210057.157.1303032708050150303
g40.012713.910547.147.910410453240250250520110
g50.026113.57256.656.956564211013080280110
g60.021215.429141.5141.5303032608050150000
g70.03821432113.5113.5242432506030120010
g80.039313.54042.642.6222232455530110000
g90.0396152550.650.616160035452080000
g100.051014.31557.157.112120030402060000


5.1 Cost-Based Unit Commitment

5.1.1 Cost Calculation

 (5.1) The linear version of fuel cost calculation is described in (5.2).  (5.2a)  (5.2b)  (5.2c)  (5.2d)  (5.2e)  (5.2f)  (5.2g)  (5.2h)  (5.2i)


u

i, t
 is the on/off status of the unit i at time t.


5.1.2 Ramp Rate Constraints
The power generation of unit i at time t should be within the operating limits as given in (5.3a). P

i, t
 and  state the minimum and maximum time-dependent operating limits. These are not necessarily equal to P

i

min and P

i

max, respectively.
The upper operating limit () is described in (5.3b) and (5.3c) according to [2]. The ramp up/down constraints are modeled as follows:  (5.3a)  (5.3b)  (5.3c)  (5.3d)  (5.3e) In order to explain the upper operating limits described in (5.3) some assumptions should be taken into account: It should be always less than capacity of unit i, this means that .In case of unit shut-down in the next hour (t + 1): . Since P

i, t+1 = 0 so P

i, t
 cannot be more than SD
i
.If the unit has been on in the previous hour (u

i, t−1 = 1) and is going to remain on then P

i, t
 cannot be increased more than RU
i
. This means that .If the unit has been off in the previous hour (u

i, t−1 = 0) and it is turned on at time t (y

i, t
 = 1) then P

i, t
 cannot be more than SU
i
. This means that .

The combination of all these cases is enforced by (5.3b) and (5.3c).
In order to explain the lower operating limits described in (5.3) some assumptions should be taken into account: If the unit is on at time t then the generated power should be greater than P

i, t

min
u

i, t
.If the unit is on at time t − 1 and remains to be on at time t, t + 1 then the generated power at time t should be greater than P

i, t−1 −RD
i

u

i, t
.If the unit is on at time t − 1 and turned off at time t then the generated power at time t − 1 should be P

i, t−1 ≤ SD
i

z

i, t
.

The combination of all these cases is enforced by (5.3d) and (5.3e).


5.1.3 Min Up/Down Time Constraints
The on/off states of unit i at time t are described by u

i, t
. Additionally, start-up/shut-down are given by y

i, t
, z

i, t
 in (5.4).  (5.4a)  (5.4b)

The minimum up time (UT
i
) of unit i is modeled in (5.5) as proposed in [2].  (5.5a)  (5.5b)  (5.5c)  (5.5d)

The minimum up time (DT
i
) of unit i is modeled in (5.6) as proposed in [2].  (5.6a)  (5.6b)  (5.6c)  (5.6d) The realistic start-up and shut-down costs depend on how long the unit has been off or on, receptively. Some references have provided the detailed formulation for modeling these cost terms. Here for simplicity, the start-up (Sd

i
) and shut-down (Sd

i
) costs are modeled as constant values as (5.7).  (5.7a)  (5.7b)



5.1.4 Demand-Generation Balance
In cost-based UC, the hourly total generation should be equal to the hourly demand:  (5.8) The hourly demand and price values vs time are depicted in Fig. 5.2.Fig. 5.2Hourly demand and price values vs time

The GAMS code for solving the cost-based unit commitment is provided in GCode 5.1.

GCode 5.1 Cost-based unit commitment example for ten unit system

Sets t   time /t1 * t24 /,         i  generators  / g1 * g10 /,                                 k cost segments /sg1 * sg20 /,         char /ch1 * ch2 /;Alias ( t, h);Table gendata ( i, * )  generator cost characteristics  and limits    a     b     c    CostsD  costst   RU   RD   UT  DT  SD   SU   Pmin Pmax U0 Uini S0g1  0.014 12.1  82   42.6    42.6    40  40  3  2  90   110  80   200  1  0    1g2  0.028 12.6  49   50.6    50.6    64  64  4  2  130  140  120  320  2  0    0g3  0.013 13.2  100  57.1    57.1    30  30  3  2  70   80   50   150  3  0    3g4  0.012 13.9  105  47.1    47.9    104 104 5  3  240  250  250  520  1  1    0g5  0.026 13.5  72   56.6    56.9    56  56  4  2  110  130  80   280  1  1    0g6  0.021 15.4  29   141.5  141.5    30  30  3  2  60   80   50   150  0  0    0g7  0.038 14.0  32   113.5  113.5    24  24  3  2  50   60   30   120  0  1    0g8  0.039 13.5  40   42.6    42.6    22  22  3  2  45   55   30   110  0  0    0g9  0.039 15.0  25   50.6    50.6    16  16  0  0  35   45   20   80   0  0    0g10 0.051 14.3  15   57.1    57.1    12  12  0  0  30   40   20   60   0  0    0;Parameter data (k, i, * );data (k, i, 'DP' )=(gendata ( i,"Pmax") −gendata ( i,"Pmin") )/card (k);data (k, i, ' Pini ' )=  ( ord (k)−1) * data (k, i, 'DP' )+gendata ( i,"Pmin");data (k, i, ' Pfin ' )=data (k, i, ' Pini ' )+data (k, i, 'DP' );data (k, i, ' Cini ' )=gendata ( i," a") * power( data (k, i, ' Pini ' ),2)+gendata ( i,"b") * data (k, i, ' Pini ' )+gendata ( i," c ");data (k, i, ' Cfin ' )=gendata ( i," a") * power( data (k, i, ' Pfin ' ),2)+gendata ( i,"b") * data (k, i, ' Pfin ' )+gendata ( i," c ");data (k, i, ' s ' )=  ( data (k, i, ' Cfin ' ) −data (k, i, ' Cini ' ) )/data (k, i, 'DP' );gendata ( i, ' Mincost ' )=gendata ( i, 'a ' ) * power( gendata ( i,"Pmin"),2)+gendata ( i, 'b ' ) * gendata ( i,"Pmin")+gendata ( i, ' c ' );Table dataLP( t, * )          lambda       load
t1        14.72        883t2        15.62        915t23       20.50        915t24       15.62        834;Parameter unit ( i, char );unit ( i, ' ch1 ' ) =24;unit ( i, ' ch2 ' )=(gendata ( i, 'UT' ) −gendata ( i, 'U0 ' ) ) * gendata ( i, ' Uini ' );parameter unit2 ( i, char );  unit2 ( i, ' ch1 ' ) =24;unit2 ( i, ' ch2 ' )=(gendata ( i, 'DT' ) −gendata ( i, 'S0 ' ) ) *(1 − gendata ( i, ' Uini ' ) );gendata ( i, ' Lj ' )= smin ( char, unit ( i, char ) );  gendata ( i, ' Fj ' )= smin ( char, unit2 ( i, char ) );variable  costThermal; positive  variables  pu( i, t ),p( i, t ),StC( i, t ),SDC( i, t ),Pk( i, t, k);Binary variable  u( i, t ),y( i, t ), z ( i, t );p. up( i, t ) =  gendata ( i,"Pmax") ;  p. lo ( i, t ) =  0;  Pk. up( i, t, k)=data (k, i, 'DP' );Pk. lo ( i, t, k)=0; p. up( i, t ) =  gendata ( i,"Pmax");  pu. up( i, h) =  gendata ( i,"Pmax") ;Equations Uptime1, Uptime2, Uptime3, Dntime1, Dntime2, Dntime3,Ramp1,Ramp2, Ramp3,Ramp4, startc, shtdnc, genconst1, Genconst2, Genconst3, Genconst4,balance;Uptime1( i )$( gendata ( i," Lj ")>0) ..
sum( t$ ( ord ( t ) <  ( gendata ( i," Lj ")+1)),1− U( i, t ) )= e=0;Uptime2( i )$( gendata ( i,"UT")>1) ..
sum( t$ ( ord ( t )>24−gendata ( i,"UT")+1),U( i, t ) − y( i, t ) )= g=0;Uptime3( i, t )$( ord ( t ) >gendata ( i," Lj ") and ord ( t )<24−gendata ( i,"UT")+2 andnot ( gendata ( i," Lj ")>24−gendata ( i,"UT") ) ) ..  sum(h$ (( ord (h) >ord ( t )−1) and( ord (h) <ord ( t )+gendata ( i,"UT") ) ),U( i, h) ) = g =gendata ( i,"UT") * y( i, t );Dntime1( i )$( gendata ( i," Fj ")>0) ..  sum( t$ ( ord ( t ) <  ( gendata ( i," Fj ")+1)),U( i, t ) )= e=0;Dntime2( i )$( gendata ( i,"DT")>1) ..
sum( t$ ( ord ( t )>24−gendata ( i,"DT")+1),1− U( i, t ) −z ( i, t ) )= g=0;Dntime3( i, t )$( ord ( t ) >gendata ( i," Fj ") and ord ( t )<24−gendata ( i,"DT")+2and not ( gendata ( i," Fj ")>24−gendata ( i,"DT") )   ) ..  sum(h$ (( ord (h) >ord ( t )−1)and ( ord (h) <ord ( t )+gendata ( i,"DT") ) ),1− U( i, h) )= g =gendata ( i,"DT") * z ( i, t );startc ( i, t ) ..  StC( i, t )= g =gendata ( i," costst ") * y( i, t );shtdnc ( i, t ) ..  SDC( i, t )= g =gendata ( i," CostsD") * z ( i, t );Genconst1 ( i, h)            ..  p( i, h)= e = u( i, h) * gendata ( i,"Pmin")+ sum(k,Pk( i, h, k) );Genconst2 ( i, h)$( ord (h)>0)..U( i, h)= e = U( i, h−1)$( ord (h)>1) +gendata ( i," Uini ")$( ord (h)=1)                                    + y( i, h) −z ( i, h);Genconst3 ( i, t, k)          ..  Pk( i, t, k)=l= U( i, t ) * data (k, i, 'DP' );Genconst4 ..  costThermal= e = sum(( i, t ),StC( i, t )+ SDC( i, t ) )+ sum(( t, i ),u( i, t ) * gendata ( i, ' Mincost ' )+ sum(k, data (k, i, ' s ' ) * pk( i, t, k) ) );Ramp1( i, t ) ..  p( i, t−1) − p( i, t )=l= U( i, t ) * gendata ( i, 'RD' )+ z ( i, t ) * gendata ( i,"SD");Ramp2( i, t ) ..  p( i, t )=l= pu( i, t );Ramp3( i, t )$( ord ( t ) <24).. pu( i, t )=l=(u( i, t ) −z ( i, t+1)) * gendata ( i,"Pmax")                                                   + z ( i, t+1) * gendata ( i,"SD");Ramp4( i, t )$( ord ( t )>1).. pu( i, t )=l= p( i, t−1) + U( i, t−1) * gendata ( i, 'RU' )                                                     + y( i, t ) * gendata ( i,"SU");Balance ( t )..       sum( i, p( i, t ) )= e =  dataLP( t, ' load ' );Model UCLP  /all/;Option optcr =0.0;Solve UCLP  minimizing costThermal using mip ;


The total operating costs are $485,240.189. The start-up, shut-down, and fuel costs are $442.100, $0, and $484,798.089, respectively. The power schedules of thermal units in cost-based unit commitment are depicted in Fig. 5.3.
Fig. 5.3Power schedules in cost-based unit commitment vs time




5.2 Cost-Based UC with Additional Constraints
In order to improve the security and efficiency of the energy supply, some additional constraints are needed to be considered in UC formulation. Some of these constraints are discussed and formulated in this section.

5.2.1 Cost-Based UC with Reserve Constraints
One of the most important resources which is used by the system operator is called spinning reserve (SR) [3]. It is used to cover the sudden increase in demand, rapid reduction of renewable energy production, or unplanned generating unit outage. The SR is supplied by online generating units which are synchronized to the system and are able to ramp-up in order to meet the demand. The UC-reserve constrained formulation is provided as follows:  (5.9a)  (5.9b)  (5.9c)  (5.9d) where R

i, t
 is the reserve provided by online unit i at time t. γ is the percentage of demand which specifies the reserve requirement. It is usually expressed as a percentage of demand at time t. The GAMS code for solving the (5.9) is described in GCode 5.2. It should be noted that the generating unit characteristics are unchanged but the hourly demand values specified in GCode 5.1 and Fig. 5.2 are reduced by 55%. The γ value is specified by the system operator and is dependent on the system specification. Here, it is assumed to be 40% for simulation purpose. The total operating costs without the reserve constraint is $2. 1039 × 105. However, if the reserve constraint is taken into account then the operating costs would increase to $2. 1090 × 105. The operating schedules of thermal units considering reserve constraint are provided in Table 5.2.Table 5.2Power schedules (P

i, t
) of thermal units considering reserve constraintTime
g1
g3
g4
g5
g7
g8
g10
t
1
  250.090.457.0  
t
2
  250.0107.854.0  
t
3
94.5 250.080.030.0  
t
4
92.165.0250.080.030.0  
t
5
104.072.2250.080.030.0 20.0
t
6
110.079.0250.080.030.030.020.0
t
7
123.795.0250.080.030.030.020.0
t
8
128.0100.6250.080.030.030.020.0
t
9
134.0106.8250.080.030.034.020.0
t
10
134.0106.8250.080.030.034.020.0
t
11
133.5105.0250.080.030.030.020.0
t
12
134.6110.0250.080.030.034.0 
t
13
133.7105.0250.080.030.030.0 
t
14
122.090.6250.080.030.030.0 
t
15
128.097.6250.080.030.030.0 
t
16
122.090.6250.080.030.030.0 
t
17
98.068.2250.080.030.030.0 
t
18
110.077.3250.0 30.030.0 
t
19
104.252.9250.0 30.030.0 
t
20
121.6 250.0 30.030.0 
t
21
104.9 250.0 30.030.0 
t
22
88.3 250.0 30.030.0 
t
23
101.8 250.0 30.030.0 
t
24
95.3 250.0 30.0  


GCode 5.2 Cost-based unit commitment with reserve constraint

Sets t /t1 * t24 /, i  /g1 * g10 /, k /sg1 * sg20 /, char /ch1 * ch2 /; a l i a s ( t, h); a l i a s ( i, g);Table gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits *  Removed for saving space ;Parameter data (k, i, * );data (k, i, 'DP' )=(gendata ( i,"Pmax") −gendata ( i,"Pmin") )/card (k);data (k, i, ' Pini ' )=  ( ord (k)−1) * data (k, i, 'DP' )+gendata ( i,"Pmin");data (k, i, ' Pfin ' )=data (k, i, ' Pini ' )+data (k, i, 'DP' );data (k, i, ' Cini ' )=gendata ( i," a") * power ( data (k, i, ' Pini ' ),2)+gendata ( i,"b") * data (k, i, ' Pini ' )+gendata ( i," c ");data (k, i, ' Cfin ' )=gendata ( i," a") * power ( data (k, i, ' Pfin ' ),2)+gendata ( i,"b") * data (k, i, ' Pfin ' )+gendata ( i," c ");data (k, i, ' s ' )=  ( data (k, i, ' Cfin ' ) −data (k, i, ' Cini ' ) )/data (k, i, 'DP' );gendata ( i, ' Mincost ' )=gendata ( i, 'a ' ) * power ( gendata ( i,"Pmin"),2)+gendata ( i, 'b ' ) * gendata ( i,"Pmin")+gendata ( i, ' c ' );table  dataLP( t, * )          lambda       load
 *  Removed for saving space     ;dataLP( t, ' load ' )= dataLP( t, ' load ' ) * 0. 4 5;  Parameter unit ( i, char );unit ( i, ' ch1 ' ) =24; unit ( i, ' ch2 ' )=(gendata ( i, 'UT' ) −gendata ( i, 'U0 ' ) ) * gendata ( i, ' Uini ' );Parameter unit2 ( i, char );  unit2 ( i, ' ch1 ' ) =24;unit2 ( i, ' ch2 ' )=(gendata ( i, 'DT' ) −gendata ( i, 'S0 ' ) ) *(1 − gendata ( i, ' Uini ' ) );gendata ( i, ' Lj ' )= smin ( char, unit ( i, char ) );  gendata ( i, ' Fj ' )= smin ( char, unit2 ( i, char ) );Variable  costThermal;  Binary variable  u( i, t ),y( i, t ), z ( i, t );Positive  variables  pu( i, t ),p( i, t ),StC( i, t ),SDC( i, t ),Pk( i, t, k);p. up( i, t ) =  gendata ( i,"Pmax") ;  p. lo ( i, t ) =0;Pk. up( i, t, k)=data (k, i, 'DP' );  Pk. lo ( i, t, k) =0;p. up( i, t ) =  gendata ( i,"Pmax");  pu. up( i, h) =  gendata ( i,"Pmax");Equations Uptime1, Uptime2, Uptime3, Dntime1, Dntime2, Dntime3,Ramp1,Ramp2,Ramp3,Ramp4, startc, shtdnc, genconst1,Genconst2, Genconst3, Genconst4,balance, reserve;Uptime1( i )$( gendata ( i," Lj ")>0).. sum( t$ ( ord ( t ) <  ( gendata ( i," Lj ")+1)),1− U( i, t ) )= e=0;Uptime2( i )$( gendata ( i,"UT")>1).. sum( t$ ( ord ( t )>24−gendata ( i,"UT")+1),U( i, t ) − y( i, t ) )= g=0;Uptime3( i, t )$( ord ( t ) >gendata ( i," Lj ") and ord ( t )<24−gendata ( i,"UT")+2 andnot ( gendata ( i," Lj ")>24−gendata ( i,"UT") ) )      ..  sum(h$ (( ord (h) >ord ( t )−1) and ( ord (h) <ord ( t )+gendata ( i,"UT") ) ),U( i, h) ) = g =               gendata ( i,"UT") * y( i, t );Dntime1( i )$( gendata ( i," Fj ")>0) ..    sum( t$ ( ord ( t ) <  ( gendata ( i," Fj ")+1)),U( i, t ) )= e=0;Dntime2( i )$( gendata ( i,"DT")>1) ..                           sum( t$ ( ord ( t )>24−gendata ( i,"DT")+1),1− U( i, t ) −z ( i, t ) )= g=0;Dntime3( i, t )$( ord ( t ) >gendata ( i," Fj ") and ord ( t )<24−gendata ( i,"DT")+2 andnot ( gendata ( i," Fj ")>24−gendata ( i,"DT") ) )..  sum(h$ (( ord (h) >ord ( t )−1) and ( ord (h) <ord ( t )+gendata ( i,"DT") ) ),1− U( i, h) ) = g =gendata ( i,"DT") * z ( i, t );startc ( i, t ) ..  StC( i, t )= g =gendata ( i," costst ") * y( i, t );shtdnc ( i, t ) ..  SDC( i, t )= g =gendata ( i," CostsD") * z ( i, t );genconst1 ( i, h) ..  p( i, h)= e = u( i, h) * gendata ( i,"Pmin")+ sum(k,Pk( i, h, k) );Genconst2 ( i, h)$( ord (h)>0)..U( i, h)= e =U( i, h−1)$( ord (h)>1) +gendata ( i," Uini ")$( ord (h)=1) + y( i, h) −z ( i, h);Genconst3 ( i, t, k) ..  Pk( i, t, k)=l= U( i, t ) * data (k, i, 'DP' );Genconst4  ..  costThermal= e = sum(( i, t ),StC( i, t )+ SDC( i, t ) )+ sum(( t, i ),                    u( i, t ) * gendata ( i, ' Mincost ' )+ sum(k, data (k, i, ' s ' ) * pk( i, t, k) ) );Ramp1( i, t ) ..  p( i, t −1) − p( i, t )=l= U( i, t ) * gendata ( i, 'RD' )+ z ( i, t ) * gendata ( i,"SD");Ramp2( i, t ) ..  p( i, t )=l= pu( i, t );Ramp3( i, t )$( ord ( t ) <24).. pu( i, t )=l =(u( i, t ) −z ( i, t+1)) * gendata ( i,"Pmax")                                                   + z ( i, t+1) * gendata ( i,"SD");Ramp4( i, t )$( ord ( t )>1)  ..  pu( i, t )=l= p( i, t −1) + U( i, t −1) * gendata ( i, 'RU' )                                                + y( i, t ) * gendata ( i,"SU");
balance( t ) ..  sum( i, p( i, t ) )= e =  dataLP( t, ' load ' );reserve ( t ) ..  sum( i, pu( i, t ) − p( i, t ) )= g =0.40* dataLP( t, ' load ' );Model UCLP  /all/;  Option optcr =0.0;Solve UCLP  minimizing costThermal using mip ;


The reserve provision (R

i, t
) by thermal units considering reserve constraint is given in Table 5.3.Table 5.3Reserve provision (R

i, t
) by thermal units considering reserve constraintTime
g1
g3
g4
g5
g7
g8
g10
t
1
  270.0189.763.0  
t
2
  99.138.627.0  
t
3
15.5 34.683.848.0  
t
4
42.515.069.456.024.0  
t
5
28.122.871.656.024.0 20.0
t
6
34.0 104.056.08.625.012.0
t
7
26.414.097.256.024.022.012.0
t
8
35.724.581.356.024.022.012.0
t
9
34.023.894.156.024.018.012.0
t
10
40.030.077.956.024.022.012.0
t
11
40.631.871.156.024.026.010.0
t
12
38.925.093.556.024.018.0 
t
13
40.935.069.656.024.026.0 
t
14
51.744.542.956.024.022.0 
t
15
34.023.087.356.024.022.0 
t
16
46.037.156.056.024.022.0 
t
17
42.5 104.030.024.022.0 
t
18
28.021.0104.0 24.022.0 
t
19
45.817.177.9 24.022.0 
t
20
22.6 104.0 24.022.0 
t
21
56.7 63.3 24.022.0 
t
22
56.7 56.7 24.022.0 
t
23
21.7 104.0 24.015.0 
t
24
  98.1  52.0 



5.2.2 Cost-Based UC Considering Generator Contingency
In this section, the cost-based UC is formulated in order to consider the generator outage contingencies. The system operator is willing to be robust against the unexpected outages of generating units. It means that in case of any generating unit outage the reserve resource by the remaining units should be able to supply the lost generating unit. This constraint is modeled as follows:  (5.10a)  (5.10b)  (5.10c)  (5.10d) where Ω

c
 is the set of contingencies for generating units. The GAMS code for solving the (5.10) is described in GCode 5.3. As previously stated, the total operating costs without the generator contingency constraint are $2. 1039 × 105. However, if the generator contingency constraint (the outage of all generating units except g4 is considered) is taken into account then the operating costs would increase to $2. 1041 × 105.

GCode 5.3 Cost-based unit commitment considering generator contingencies

Sets t   time /t1 * t24/     i    generators  indices  / g1 * g10 /, k  cost segments /sg1 * sg20/     char /ch1 * ch2 /, g( i ) /g1 * g3, g5 * g10 /;  Alias ( t, h);table  gendata ( i, * )  generator cost characteristics  and limits   a  b  c CostsD  costst   RU  RD  UT  DT  SD SU Pmin Pmax U0 Uini S0 *  Removed for saving space           ;parameter data (k, i, * );data (k, i, 'DP' )=(gendata ( i,"Pmax") −gendata ( i,"Pmin") )/card (k);data (k, i, ' Pini ' )=  ( ord (k)−1) * data (k, i, 'DP' )+gendata ( i,"Pmin");data (k, i, ' Pfin ' )=data (k, i, ' Pini ' )+data (k, i, 'DP' );data (k, i, ' Cini ' )=gendata ( i," a") * power( data (k, i, ' Pini ' ),2)+gendata ( i,"b") * data (k, i, ' Pini ' )+gendata ( i," c ");data (k, i, ' Cfin ' )=gendata ( i," a") * power( data (k, i, ' Pfin ' ),2)+gendata ( i,"b") * data (k, i, ' Pfin ' )+gendata ( i," c ");data (k, i, ' s ' )=  ( data (k, i, ' Cfin ' ) −data (k, i, ' Cini ' ) )/data (k, i, 'DP' );gendata ( i, ' Mincost ' )=gendata ( i, 'a ' ) * power( gendata ( i,"Pmin"),2)+gendata ( i, 'b ' ) * gendata ( i,"Pmin")+gendata ( i, ' c ' );Table dataLP( t, * )          lambda       load
 *  Removed for saving space;dataLP( t, ' load ' )= dataLP( t, ' load ' ) * 0. 4 5;Parameter unit ( i, char );  unit ( i, ' ch1 ' ) =24;unit ( i, ' ch2 ' )=(gendata ( i, 'UT' ) −gendata ( i, 'U0 ' ) ) * gendata ( i, ' Uini ' );parameter unit2 ( i, char );  unit2 ( i, ' ch1 ' ) =24;unit2 ( i, ' ch2 ' )=(gendata ( i, 'DT' ) −gendata ( i, 'S0 ' ) ) *(1 − gendata ( i, ' Uini ' ) );gendata ( i, ' Lj ' )= smin ( char, unit ( i, char ) ); gendata ( i, ' Fj ' )= smin ( char, unit2 ( i, char ) );Variable  costThermal   ;positive  variables  pu( i, t ),p( i, t ),StC( i, t ),SDC( i, t ),Pk( i, t, k);Binary variable  u( i, t ),y( i, t ), z ( i, t );p. up( i, t ) =  gendata ( i,"Pmax") ;  p. lo ( i, t ) =  0;Pk. up( i, t, k)=data (k, i, 'DP' );  Pk. lo ( i, t, k)=0;p. up( i, t ) =  gendata ( i,"Pmax");  pu. up( i, h) =  gendata ( i,"Pmax");Equations Uptime1, Uptime2, Uptime3, Dntime1, Dntime2, Dntime3,Ramp1,Ramp2,Ramp3,Ramp4, startc, shtdnc, genconst1, Genconst2 , Genconst3, Genconst4,balance, reserve;Uptime1( i )$( gendata ( i," Lj ")>0).. sum( t$ ( ord ( t ) <  ( gendata ( i," Lj ")+1)),1− U( i, t ) )= e=0;Uptime2( i )$( gendata ( i,"UT")>1)                         .. sum( t$ ( ord ( t )>24−gendata ( i,"UT")+1),U( i, t ) − y( i, t ) )= g=0;Uptime3( i, t )$( ord ( t ) >gendata ( i," Lj ") and ord ( t )<24−gendata ( i,"UT")+2and not ( gendata ( i," Lj ")>24−gendata ( i,"UT") )   ) ..  sum(h$ (( ord (h) >ord ( t )−1) and( ord (h) <ord ( t )+gendata ( i,"UT") ) ),U( i, h) ) = g =gendata ( i,"UT") * y( i, t );Dntime1( i )$( gendata ( i," Fj ")>0).. sum( t$ ( ord ( t )<(gendata ( i," Fj ")+1)),U( i, t ) )= e=0;Dntime2( i )$( gendata ( i,"DT")>1)..  sum( t$ ( ord ( t )>24−gendata ( i,"DT")+1),1− U( i, t ) −z ( i, t ) )= g=0;Dntime3( i, t )$( ord ( t ) >gendata ( i," Fj ") and ord ( t )<24−gendata ( i,"DT")+2 andnot ( gendata ( i," Fj ")>24−gendata ( i,"DT") )   ) ..  sum(h$ (( ord (h) >ord ( t )−1) and( ord (h) <ord ( t )+gendata ( i,"DT") ) ),1− U( i, h) ) = g =gendata ( i,"DT") * z ( i, t );startc ( i, t ) ..  StC( i, t )= g =gendata ( i," costst ") * y( i, t );shtdnc ( i, t ) ..  SDC( i, t )= g =gendata ( i," CostsD") * z ( i, t );genconst1 ( i, h) ..  p( i, h)= e = u( i, h) * gendata ( i,"Pmin")+ sum(k,Pk( i, h, k) );Genconst2 ( i, h)$( ord (h)>0) ..  U( i, h)= e = U( i, h−1)$( ord (h)>1)+gendata ( i," Uini ")$( ord (h)=1) + y( i, h) −z ( i, h);Genconst3 ( i, t, k) ..  Pk( i, t, k)=l= U( i, t ) * data (k, i, 'DP' );Genconst4 .. costThermal= e = sum(( i, t ),StC( i, t )+ SDC( i, t ) )+ sum(( t, i ),u( i, t ) * gendata ( i, ' Mincost ' )+ sum(k, data (k, i, ' s ' ) * pk( i, t, k) ) );Ramp1( i, t )..  p( i, t−1) − p( i, t )=l= U( i, t ) * gendata ( i, 'RD' )+ z ( i, t ) * gendata ( i,"SD");Ramp2( i, t )..  p( i, t )=l= pu( i, t );Ramp3( i, t )$( ord ( t ) <24).. pu( i, t )=l=(u( i, t ) −z ( i, t+1)) * gendata ( i,"Pmax")                                            + z ( i, t+1) * gendata ( i,"SD");Ramp4( i, t )$( ord ( t )>1) .. pu( i, t )=l= p( i, t−1) + U( i, t−1) * gendata ( i, 'RU' )                                              + y( i, t ) * gendata ( i,"SU");
balance( t ) ..       sum( i, p( i, t ) )= e =  dataLP( t, ' load ' );reserve ( t, g) ..  sum( i$ ( ord ( i ) <>  ord (g) ),pu( i, t ) − p( i, t ) )= g =1*p(g, t );Model UCLP  /all/;  Option optcr =0.0;Solve UCLP  minimizing costThermal using mip ;


Power schedules (P

i, t
) by thermal units considering generator contingency constraint are provided in Table 5.4.Table 5.4Power schedules (P

i, t
) by thermal units considering generator contingency constraintTime
g1
g3
g4
g5
g7
g8
g10
t
1
0.00.0250.093.454.00.00.0
t
2
0.051.8250.080.030.00.00.0
t
3
0.074.5250.080.030.00.020.0
t
4
110.0104.5250.00.030.60.022.0
t
5
128.098.2250.00.030.030.020.0
t
6
146.0115.0250.00.030.038.020.0
t
7
152.0130.0250.00.034.540.222.0
t
8
158.0130.1250.00.034.542.024.0
t
9
162.8135.0250.00.039.042.026.0
t
10
162.8135.0250.00.039.042.026.0
t
11
158.0135.0250.00.039.042.024.5
t
12
158.0130.1250.00.034.542.024.0
t
13
152.0130.0250.00.034.540.222.0
t
14
146.0118.6250.00.030.038.020.0
t
15
146.1125.0250.00.034.538.022.0
t
16
146.0118.6250.00.030.038.020.0
t
17
139.0113.3250.00.00.034.020.0
t
18
137.3110.0250.00.00.00.00.0
t
19
122.195.0250.00.00.00.00.0
t
20
106.675.0250.00.00.00.00.0
t
21
98.066.9250.00.00.00.00.0
t
22
92.056.3250.00.00.00.00.0
t
23
96.865.0250.00.00.00.00.0
t
24
125.30.0250.00.00.00.00.0

The reserve provision (R

i, t
) by thermal units considering generator contingencies is provided in Table 5.5.Table 5.5Reserve provision (R

i, t
) by thermal units considering generator contingency constraintTime
g1
g3
g4
g5
g7
g8
g10
t
1
0.00.0270.0186.766.00.00.0
t
2
0.028.30.069.448.00.00.0
t
3
0.07.31.830.022.80.020.0
t
4
0.00.076.60.023.50.010.0
t
5
22.00.064.50.024.625.014.0
t
6
0.04.0104.00.024.014.00.0
t
7
0.08.7104.00.019.519.90.0
t
8
0.00.0103.90.024.020.210.0
t
9
0.015.096.30.019.522.010.0
t
10
0.015.089.80.024.022.012.0
t
11
0.00.098.50.024.022.013.6
t
12
0.00.095.10.028.522.012.5
t
13
0.00.2104.00.024.023.90.0
t
14
0.03.9104.00.00.024.214.0
t
15
0.021.173.50.019.522.010.0
t
16
0.00.090.00.020.022.014.0
t
17
0.014.0104.00.00.011.010.0
t
18
6.033.3104.00.00.00.00.0
t
19
0.018.1104.00.00.00.00.0
t
20
0.031.675.00.00.00.00.0
t
21
0.031.166.90.00.00.00.0
t
22
0.00.092.00.00.00.00.0
t
23
0.05.091.80.00.00.00.0
t
24
0.095.030.30.00.00.00.0



5.2.3 Cost-Based UC with Demand Flexibility Constraints
The balance between generation and demand is traditionally managed by scheduling the generating units. However, this paradigm is changing gradually. In other words, the demand values can also change intentionally to increase the efficiency of UC problems. In this modern context, the demand values are no longer strict and can be dispatched. The UC problem incorporating a simple demand response model is presented as follows:  (5.11a)  (5.11b)  (5.11c)  (5.11d) Equation (5.11c) states the demand variation ranges. ς
min∕max determine the min/max flexibility of demand response. Equation (5.11d) states that the total energy of the consumer does not change over the operating horizon. The ς
min∕max are assumed to be 10%.
The GAMS code for solving the (5.11) is described in GCode 5.4. As previously stated, the total operating costs without the generator contingency constraint are $2. 1039 × 105. However, if the demand response flexibility is available then the operating costs would decrease to $2. 0965 × 105. The power schedules (P

i, t
) by thermal units considering demand response constraint are given in Table 5.6.Table 5.6Power schedules (P

i, t
) by thermal units considering demand response constraintTime
g1
g3
g4
g5
g7
g8
t
1
  250.080.034.5 
t
2
92.9 250.080.030.0 
t
3
132.9 250.080.034.5 
t
4
146.080.0250.0 34.538.0
t
5
146.0110.0250.0 34.538.0
t
6
146.0120.0250.0 34.538.0
t
7
146.0120.0250.0 34.538.0
t
8
146.0120.0250.0 34.538.0
t
9
146.0120.8250.0 34.538.0
t
10
146.0120.8250.0 34.538.0
t
11
146.0120.0250.0 34.538.0
t
12
146.0120.0250.0 34.538.0
t
13
146.0120.0250.0 34.538.0
t
14
146.0120.0250.0 34.538.0
t
15
146.0120.0250.0 34.538.0
t
16
146.0120.0250.0 34.538.0
t
17
146.0120.0250.0 34.538.0
t
18
144.0115.0250.0  38.0
t
19
128.8105.0250.0  30.0
t
20
128.096.7250.0   
t
21
116.490.0250.0   
t
22
110.078.1250.0   
t
23
116.086.9250.0   
t
24
97.865.0250.0   


GCode 5.4 Cost-based unit commitment considering demand response

Sets t/t1 * t24 /, i /g1 * g10 /,k/sg1 * sg20 /, char /ch1 * ch2 /; a l i a s  ( t, h);Table gendata ( i, * )  generator cost characteristics  and limits     a  b  c    CostsD  costst   RU  RD  UT  DT  SD SU Pmin Pmax U0 Uini S0 *  Removed for saving space      ;  parameter data (k, i, * );data (k, i, 'DP' )=(gendata ( i,"Pmax") −gendata ( i,"Pmin") )/card (k);data (k, i, ' Pini ' )=  ( ord (k)−1) * data (k, i, 'DP' )+gendata ( i,"Pmin");data (k, i, ' Pfin ' )=data (k, i, ' Pini ' )+data (k, i, 'DP' );data (k, i, ' Cini ' )=gendata ( i," a") * power( data (k, i, ' Pini ' ),2)         +gendata ( i,"b") * data (k, i, ' Pini ' )+gendata ( i," c ");data (k, i, ' Cfin ' )=gendata ( i," a") * power( data (k, i, ' Pfin ' ),2)+gendata ( i,"b") * data (k, i, ' Pfin ' )+gendata ( i," c ");data (k, i, ' s ' )=  ( data (k, i, ' Cfin ' ) −data (k, i, ' Cini ' ) )/data (k, i, 'DP' );gendata ( i, ' Mincost ' )=gendata ( i, 'a ' ) * power( gendata ( i,"Pmin"),2)                     +gendata ( i, 'b ' ) * gendata ( i,"Pmin")+gendata ( i, ' c ' );Table dataLP( t, * )          lambda       load
 *  Removed for saving space      ;dataLP( t, ' load ' )= dataLP( t, ' load ' ) * 0. 4 5;parameter unit ( i, char );unit ( i, ' ch1 ' ) =24; unit ( i, ' ch2 ' )=( gendata ( i, 'UT' ) −gendata ( i, 'U0 ' ) ) * gendata ( i, ' Uini ' );Parameter unit2 ( i, char );unit2 ( i, ' ch1 ' ) =24; unit2 ( i, ' ch2 ' )=( gendata ( i, 'DT' ) −gendata ( i, 'S0 ' ) ) *(1 − gendata ( i, ' Uini ' ) );gendata ( i, ' Lj ' )= smin ( char, unit ( i, char ) );gendata ( i, ' Fj ' )= smin ( char, unit2 ( i, char ) );  Variable  costThermal   ;Positive  variables  pu( i, t ),p( i, t ),StC( i, t ),SDC( i, t ),Pk( i, t, k),D( t );Binary variable  u( i, t ),y( i, t ), z ( i, t );p. up( i, t ) =  gendata ( i,"Pmax") ;p. lo ( i, t ) =  0;  Pk. up( i, t, k)=data (k, i, 'DP' );  Pk. lo ( i, t, k)=0;p. up( i, t ) =  gendata ( i,"Pmax") ;  pu. up( i, h) =  gendata ( i,"Pmax") ;Equations Uptime1, Uptime2, Uptime3, Dntime1, Dntime2, Dntime3,Ramp1,Ramp2,Ramp3,Ramp4, startc, shtdnc, genconst1, Genconst2, Genconst3, Genconst4,balance, DRconst;Uptime1( i )$( gendata ( i," Lj ")>0).. sum( t$ ( ord ( t ) <  ( gendata ( i," Lj ")+1)),1− U( i, t ) )= e=0;Uptime2( i )$( gendata ( i,"UT")>1) ..
sum( t$ ( ord ( t )>24−gendata ( i,"UT")+1),U( i, t ) − y( i, t ) )= g=0;Uptime3( i, t )$( ord ( t ) >gendata ( i," Lj ") and ord ( t )<24−gendata ( i,"UT")+2and not ( gendata ( i," Lj ")>24−gendata ( i,"UT") )   ) ..  sum(h$ (( ord (h) >ord ( t )−1) and( ord (h) <ord ( t )+gendata ( i,"UT") ) ),U( i, h) ) = g =gendata ( i,"UT") * y( i, t );Dntime1( i )$( gendata ( i," Fj ")>0) ..  sum( t$ ( ord ( t ) <  ( gendata ( i," Fj ")+1)),U( i, t ) )= e=0;Dntime2( i )$( gendata ( i,"DT")>1) ..
sum( t$ ( ord ( t )>24−gendata ( i,"DT")+1),1− U( i, t ) −z ( i, t ) )= g=0;Dntime3( i, t )$( ord ( t ) >gendata ( i," Fj ") and ord ( t )<24−gendata ( i,"DT")+2 andnot ( gendata ( i," Fj ")>24−gendata ( i,"DT") )   ) ..  sum(h$ (( ord (h) >ord ( t )−1) and( ord (h) <ord ( t )+gendata ( i,"DT") ) ),1− U( i, h) ) = g =gendata ( i,"DT") * z ( i, t );startc ( i, t ) ..  StC( i, t )= g =gendata ( i," costst ") * y( i, t );shtdnc ( i, t ) ..  SDC( i, t )= g =gendata ( i," CostsD") * z ( i, t );genconst1 ( i, h)          ..  p( i, h)= e = u( i, h) * gendata ( i,"Pmin")+ sum(k,Pk( i, h, k) );Genconst2 ( i, h)$( ord (h)>0) ..  U( i, h)= e = U( i, h−1)$( ord (h)>1)+gendata ( i," Uini ")$( ord (h)=1) + y( i, h) −z ( i, h);Genconst3 ( i, t, k)    ..  Pk( i, t, k)=l= U( i, t ) * data (k, i, 'DP' );Genconst4 .. costThermal= e = sum(( i, t ),StC( i, t )+ SDC( i, t ) )+ sum(( t, i ),u( i, t ) * gendata ( i, ' Mincost ' )+ sum(k, data (k, i, ' s ' ) * pk( i, t, k) ) );Ramp1( i, t ) ..  p( i, t−1) − p( i, t )=l= U( i, t ) * gendata ( i, 'RD' )+ z ( i, t ) * gendata ( i,"SD");Ramp2( i, t ) ..  p( i, t )=l= pu( i, t );Ramp3( i, t )$( ord ( t ) <24).. pu( i, t )=l=(u( i, t ) −z ( i, t+1)) * gendata ( i,"Pmax")+ z ( i, t+1) * gendata ( i,"SD");Ramp4( i, t )$( ord ( t )>1) .. pu( i, t )=l= p( i, t−1) + U( i, t−1) * gendata ( i, 'RU' )+ y( i, t ) * gendata ( i,"SU");
balance( t ) ..     sum( i, p( i, t ) )= e =  D( t );DRconst    ..     sum( t, dataLP( t, ' load ' ) )= e = sum( t,D( t ) );Model UCLP  /all/;Option optcr =0.0; D. up( t ) =1.1* dataLP( t, ' load ' );  D. lo ( t ) =0.9* dataLP( t, ' load ' );Solve UCLP  minimizing costThermal using mip ;


The demand pattern change in cost-based unit commitment with demand response flexibility is shown in Fig. 5.4. The demand flexibility is changed from 0 to 18% then the demand pattern changes are shown in Fig. 5.5. The variation of total operating costs vs demand flexibility is depicted in Fig. 5.6.
Fig. 5.4The demand pattern change in cost-based unit commitment with demand response flexibility
Fig. 5.5The sensitivity analysis of demand pattern changes in CBUC with various demand response flexibilities
Fig. 5.6The variation of total operating costs vs demand flexibility




5.3 Price-Based Unit Commitment
The benefit maximization in price-based unit commitment is formulated in (5.12).  (5.12)

The GAMS code for solving the (5.12) is described in GCode 5.5.

GCode 5.5 Price-based unit commitment Example for ten unit system

Sets t   /t1 * t24 /, i  /g1 * g10 /,k /sg1 * sg20 /, char /ch1 * ch2 /;Alias ( t, h)Table Gdata( i, * )  generator cost characteristics  and limits     a  b c  CostsD  costst  RU  RD  UT  DT  SD SU Pmin Pmax U0 Uini S0 *  Removed for saving spaceParameter data (k, i, * );data (k, i, 'DP' )=(Gdata( i, "Pmax") − Gdata( i, "Pmin") )/card (k);data (k, i, ' Pini ' )=  ( ord (k)−1) * data (k, i, 'DP' )+ Gdata( i, "Pmin");data (k, i, ' Pfin ' )=data (k, i, ' Pini ' )+data (k, i, 'DP' );data (k, i, ' Cini ' )= Gdata( i, "a") * power( data (k, i, ' Pini ' ),2)                      + Gdata( i, "b") * data (k, i, ' Pini ' )+ Gdata( i, "c");data (k, i, ' Cfin ' )= Gdata( i, "a") * power( data (k, i, ' Pfin ' ),2)                      + Gdata( i, "b") * data (k, i, ' Pfin ' )+ Gdata( i, "c");data (k, i, ' s ' )=  ( data (k, i, ' Cfin ' ) −data (k, i, ' Cini ' ) )/data (k, i, 'DP' );Gdata( i, ' Mincost ' )= Gdata( i, 'a ' ) * power(Gdata( i, "Pmin"),2)                      + Gdata( i, 'b ' ) * Gdata( i, "Pmin") + Gdata( i, ' c ' );table  dataLP( t, * )          lambda       load *  Removed for saving space ;parameter unit ( i, char );  unit ( i, ' ch1 ' ) =24;unit ( i, ' ch2 ' )=(Gdata( i, 'UT' ) − Gdata( i, 'U0 ' ) ) * Gdata( i, ' Uini ' );Parameter unit2 ( i, char );unit2 ( i, ' ch1 ' ) =24;unit2 ( i, ' ch2 ' )=(Gdata( i, 'DT' ) − Gdata( i, 'S0 ' ) ) *(1 −Gdata( i, ' Uini ' ) );Gdata( i, ' Lj ' )= smin ( char, unit ( i, char ) );Gdata( i, ' Fj ' )= smin ( char, unit2 ( i, char ) ); Variable  costThermal,OF;Positive  variables  pu( i, t ),p( i, t ),StC( i, t ),SDC( i, t ),Pk( i, t, k);binary variable  u( i, t ),y( i, t ), z ( i, t );p. up( i, t ) =  Gdata( i, "Pmax") ;  p. lo ( i, t ) =  0;Pk. up( i, t, k)=data (k, i, 'DP' );  Pk. lo ( i, t, k)=0;p. up( i, t ) =  Gdata( i, "Pmax") ;  pu. up( i, h) =  Gdata( i, "Pmax") ;Eequations Upt1, Upt2, Upt3, Dntime1, Dntime2, Dntime3,Ramp1,Ramp2,Ramp3,Ramp4,startc, shtdnc, genconst1,  Genconst2, Genconst3, Genconst4, balance, benefitcalc;Upt1( i )$(Gdata( i, "Lj")>0).. sum( t$ ( ord ( t ) <  (Gdata( i, "Lj")+1)),1− U( i, t ) )= e=0;Upt2( i )$(Gdata( i, " UT ")>1).. sum( t$ ( ord ( t )>24−Gdata( i, " UT ")+1),U( i, t ) − y( i, t ) )= g=0;Upt3( i, t )$( ord ( t ) > Gdata( i, "Lj") and ord ( t )<24−Gdata( i, " UT ")+2 and

not(Gdata( i, "Lj")>24−Gdata( i, " UT ") ) ) .. sum(h$ (( ord (h) >ord ( t )−1) and
( ord (h) <ord ( t )+ Gdata( i, " UT ") ) ),U( i, h) ) = g = Gdata( i, " UT ") * y( i, t );Dntime1( i )$(Gdata( i, "Fj")>0).. sum( t$ ( ord ( t ) <  (Gdata( i, "Fj")+1)),U( i, t ) )= e=0;Dntime2( i )$(Gdata( i, " DT ")>1).. sum( t$ ( ord ( t )>24−Gdata( i, " DT ")+1),1− U( i, t ) −z ( i, t ) )= g=0;Dntime3( i, t )$( ord ( t ) > Gdata( i, "Fj") and ord ( t )<24−Gdata( i, " DT ")+2 and

not(Gdata( i, "Fj")>24−Gdata( i, " DT ") ) ) ..  sum(h$ (( ord (h) >ord ( t )−1) and
( ord (h) <ord ( t )+ Gdata( i, " DT ") ) ),1− U( i, h) ) = g = Gdata( i, " DT ") * z ( i, t );startc ( i, t ) ..  StC( i, t )= g = Gdata( i, " costst ") * y( i, t );shtdnc ( i, t ) ..  SDC( i, t )= g = Gdata( i, "CostsD") * z ( i, t );genconst1 ( i, h) ..  p( i, h)= e = u( i, h) * Gdata( i, "Pmin")+ sum(k,Pk( i, h, k) );Genconst2 ( i, h)$( ord (h)>0) ..  U( i, h)= e = U( i, h−1)$( ord (h)>1)                                      + Gdata( i, "Uini")$( ord (h)=1) + y( i, h) −z ( i, h);Genconst3 ( i, t, k) ..  Pk( i, t, k)=l= U( i, t ) * data (k, i, 'DP' );Genconst4 ..  costThermal= e = sum(( i, t ),StC( i, t )+ SDC( i, t ) )                                        + sum(( t, i ), u( i, t ) * Gdata( i, ' Mincost ' )                                        + sum(k, data (k, i, ' s ' ) * pk( i, t, k) ) );Ramp1( i, t ) ..  p( i, t−1) − p( i, t )=l= U( i, t ) * Gdata( i, 'RD' )+ z ( i, t ) * Gdata( i, "SD");Ramp2( i, t ) ..  p( i, t )=l= pu( i, t );Ramp3( i, t )$( ord ( t ) <24) ..  pu( i, t )=l=(u( i, t ) −z ( i, t+1)) * Gdata( i, "Pmax")                                                     + z ( i, t+1) * Gdata( i, "SD");Ramp4( i, t )$( ord ( t )>1)  ..  pu( i, t )=l= p( i, t−1) + U( i, t−1) * Gdata( i, 'RU' )                                                    + y( i, t ) * Gdata( i, "SU");Balance ( t )  ..   sum( i, p( i, t ) )=l=  dataLP( t, ' load ' );Benefitcalc  ..   OF = e = sum(( i, t ),dataLP( t, 'lambda ' ) * p( i, t ) ) −  costThermalModel UCLP  / a l l /;Option optcr =0.0;Solve UCLP  maximizing OF  using mip ;


The start-up, shut-down, and fuel costs are $499.000, $163.800, and $372,277.510, respectively. The net benefit of Genco is $58,186.325. The power schedules of thermal units in cost-based unit commitment are depicted in Fig. 5.7.
Fig. 5.7Power schedules in price-based unit commitment vs time



5.4 Applications
The unit commitment analysis has a vast range of applications, and some of them are described as follows:

5.4.1 Cost-Based UC
In practical applications, the thermal units might have some limitations in fuels. This means that the unit cannot generate more than some certain amount of energy. In other words, it might not be technically possible to keep the unit on for all time steps for the operating period. The fuel constrained UC is formulated in 4,335,178. Another important constraint in UC is environmental emission which is modeled in [4].
Another aspect of UC is considering the uncertainties associated with renewable energy resources (like wind turbines). Generally speaking, there are several methods for dealing with uncertainties in power system studies, such as Stochastic methods: two-stage scenario-based [5], two-point estimate [6, 12]Fuzzy methods [7]Robust optimization [8, 9]Information gap decision theory [10, 11]

The different uncertainty parameters and modeling methods are shown in Fig. 5.8 [12].
Fig. 5.8Different uncertainty parameters and modeling methods



5.4.2 Price-Based UC
Some price-based UC formulations are listed as follows: Robust optimization-based self-scheduling of hydro-thermal Genco in smart grids [13]Risk averse optimal operation of a virtual power plant using two-stage stochastic programming [14]Smart self-scheduling of Gencos with thermal and energy storage units under price uncertainty [15].




References


1.
A. Ademovic, S. Bisanovic, M. Hajro, A genetic algorithm solution to the unit commitment problem based on real-coded chromosomes and fuzzy optimization, in Melecon 2010 - 2010 15th IEEE Mediterranean Electrotechnical Conference, April 2010, pp. 1476-1481


2.
J.M. Arroyo, A.J. Conejo, Optimal response of a thermal unit to an electricity spot market. IEEE Trans. Power Syst. 15(3), 1098-1104 (2000)Crossref


3.
M. Ortega-Vazquez, D. Kirschen, Optimizing the spinning reserve requirements using a cost/benefit analysis, in 2008 IEEE Power and Energy Society General Meeting - Conversion and Delivery of Electrical Energy in the 21st Century, July 2008, p. 1


4.
T. Gjengedal, Emission constrained unit-commitment (ECUC). IEEE Trans. Energy Convers. 11(1), 132-138 (1996)Crossref


5.
C. Uçkun, A. Botterud, J.R. Birge, An improved stochastic unit commitment formulation to accommodate wind uncertainty. IEEE Trans. Power Syst. 31(4), 2507-2517 (2016)Crossref


6.
A. Soroudi, M. Aien, M. Ehsan, A probabilistic modeling of photo voltaic modules and wind power generation impact on distribution networks. IEEE Syst. J. 6(2), 254-259 (2012)Crossref


7.
A. Soroudi, Possibilistic-scenario model for DG impact assessment on distribution networks in an uncertain environment. IEEE Trans. Power Syst. 27(3), 1283-1293 (2012)Crossref


8.
R. Jiang, J. Wang, Y. Guan, Robust unit commitment with wind power and pumped storage hydro. IEEE Trans. Power Syst. 27(2), 800-810 (2012)Crossref


9.
A. Soroudi, P. Siano, A. Keane, Optimal DR and ESS scheduling for distribution losses payments minimization under electricity price uncertainty. IEEE Trans. Smart Grid 7(1), 261-272 (2016)Crossref


10.
A. Soroudi, A. Rabiee, A. Keane, Information gap decision theory approach to deal with wind power uncertainty in unit commitment. Electr. Power Syst. Res. 145, 137-148 (2017)Crossref


11.
C. Murphy, A. Soroudi, A. Keane, Information gap decision theory-based congestion and voltage management in the presence of uncertain wind power. IEEE Trans. Sust. Energy 7(2), 841-849 (2016)Crossref


12.
A. Soroudi, T. Amraee, Decision making under uncertainty in energy systems: state of the art. Renew. Sust. Energ. Rev. 28, 376-384 (2013)Crossref


13.
A. Soroudi, Robust optimization based self scheduling of hydro-thermal Genco in smart grids. Energy 61, 262-271 (2013)Crossref


14.
M.A. Tajeddini, A. Rahimi-Kian, A. Soroudi, Risk averse optimal operation of a virtual power plant using two stage stochastic programming. Energy 73, 958-967 (2014)Crossref


15.
A. Soroudi, Smart self-scheduling of Gencos with thermal and energy storage units under price uncertainty. Int. Trans. Electr. Energy Syst. 24(10), 1401-1418 (2014)Crossref














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_6





6. Multi-Period Optimal Power Flow




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides a solution for optimal power flow OPF problem in GAMS. Different OPF models are investigated, such as single and multi-period DC-AC optimal power flow.

6.1 Single Period Optimal DC Power Flow
There are some necessary conditions that make the DC power flow acceptable as an approximate solution for AC power flow such as: The ratio of  should be large enough that r

ij
 can be neglected.The voltage magnitudes are approximately 1 pu.

The DC power flow concept for a two-bus network is shown in Fig. 6.1. The basic variables in DC power flow are voltage angles δ

i
. The angle of the slack bus is assumed to be zero as the reference for the rest of network.
Fig. 6.1DC power flow for a two-bus network

The technical and economic characteristics of generating units shown in Table 6.1 are given as follows:Table 6.1The techno-economic data of thermal units in two-bus OPF example
g

a

g
 ($∕MW2)
b

g
 ($∕MW)
c

g
 ($)
P

g

min (MW)
P

g

max (MW)
g
1
0.1214.88928200
g
2
0.1716.578320290

The demand at bus 2 is L
2 = 400 MW, line reactance is X
12 = 0. 2 pu, and line flow limit is P
12
max = 1. 50 pu (per unit on 100 MVA base). The optimization problem which should be solved is formulated in (6.1).  (6.1a)  (6.1b)  (6.1c)  (6.1d)  (6.1e)  (6.1f)

The GAMS code for solving the (6.1) is provided in GCode 6.1.

GCode 6.1 The OPF GAMS code for two-bus network, Example (6.1)

SetsGen /g1 * g2/bus / 1 * 2 /;ScalarsL2   /400/X12 /0.2/Sbase /100/P12_max /1.5/ ;Table data (Gen, * )     a    b     c      Pmin PmaxG1   3    20    100    28   206G2   4.05 18.07 98.87  90   284;Variables  P( gen ),OF, delta ( bus ),P12;Equationseq1, eq2, eq3, eq4;eq1 ..  OF = e = sum(gen, data (gen, 'a ' ) * P( gen ) * P( gen )+data (gen, 'b ' ) * P( gen )+data (gen, ' c ' ) );eq2 ..  P( 'G1 ' )= e = P12;eq3 ..  P( 'G2 ' )+ P12 = e = L2/Sbase;eq4 ..  P12 = e=(delta ( '1 ' ) −delta ( '2 ' ) )/X12;P. lo ( gen )=data (gen, 'Pmin ' )/Sbase;P. up( gen )=data (gen, 'Pmax ' )/Sbase;P12. lo=− P12_max;P12. up =+ P12_max;delta. fx ( '1 ' ) =0;Model OPF  /all/;Solve OPF  us qcp min of;


The operating costs would be $306.108, P
12 = 150 MW and δ
2 = −0. 3 (rad).
The general power flow concept is shown in Fig. 6.2. As it can be seen in Fig. 6.2, every bus might host some generation and demand. Each bus might be connected to other network buses by multiple branches (with different characteristics). The power balance between generation, demand and power transfers should be satisfied at every bus of the network under study.Fig. 6.2General power flow concept

The general mathematical formulation of OPF is described in (6.2). It should be noted that the technical terms of (6.2) are all linear. The only nonlinear part is the cost function. This makes the DC-OPF a strong tool for power system studies at the transmission level. This means that if the cost term can be expressed in linear form then the DC-OPF would become a linear programming problem and can be solved using linear solvers in GAMS such as CPLEX [1].  (6.2a)  (6.2b)  (6.2c)  (6.2d)  (6.2e)


6.1.1 Three-Bus Network DC-OPF
The three-bus network data is shown in Fig. 6.3. This example is taken from [2] (Example 4B, p. 110).
Fig. 6.3Three bus network example (a) data and (b) power flow solution

The GAMS code for solving this problem is given as GCode 6.2: The developed code for solving the OPF problem in three-bus network (Fig. 6.3) is explained here. It is general and can be used for any network with any size. Three sets are defined: bus (all network buses), slack(bus) which shows slack buses with reference angle values, Gen (set of generating units)A scalar value named Sbase is defined for per unit calculationsThe set node is defined as the similar set to set bus
The table GenData defines the technical and economic characteristics of generating unitsThe set GBconect defines the connection point of each generating unitThe table BusData specifies the demand values in each busThe set conex specifies how each bus is connected to the other network busesThe table branch defines the branch characteristicsFour variables are used for this formulation namely: OF (objective function), Pij (active power flow between bus and node), Pg(generating schedule of each generating unit), and delta (voltage angle at each bus)Three equations are defined: const1 (active flow calculation between each pair of connected buses), const2 (nodal active power balance in each bus), and const3 (objective function calculation)The definition of the model loadflow (specifies for GAMS that which constraints should be taken into account)Variables' limits specificationSolve statementGenerating report from the solved modelThe marginal value of const2.m provides the LMP at each bus. This is used for congestion cost calculation.


GCode 6.2 The DC-OPF GAMS code for three-bus network, Example (Sect. 6.1.1)

Setsbus  / 1 * 3 /slack ( bus ) /3/Gen /g1 * g3 /;scalarsSbase /100/; a l i a s (bus, node );Table GenData(Gen, * )   Generating units  c h a r a c t e r i s t i c s   b    pmin pmaxg1 10   0    65g2 11   0    100; *  −−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
set GBconect(bus,Gen) connectivity  index of  each generating  unit to each bus/1    .     g1 3    .     g2  / ;Table BusData(bus, * )  Demands of  each bus in MW         Pd2        100;
set conex          Bus connectivity  matrix/1    .     22    .     31    .     3/;conex (bus, node )$( conex (node, bus ) ) =1;Table branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s               x         Limit1    .     2    0.2        1002    .     3    0.25      1001    .     3    0.4        100 ;branch (bus, node, 'x ' )$( branch (bus, node, 'x ' )=0) = branch (node, bus, 'x ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $conex (bus, node ) =1/branch (bus, node, 'x ' );VariablesOFPij (bus, node )Pg(Gen)delta ( bus );Equations const1, const2, const3;const1 (bus, node ) $conex (bus, node ).. Pij (bus, node )= e =                          branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) );const2 ( bus ) ..  + sum(Gen$GBconect(bus,Gen),Pg(Gen) ) − BusData(bus, 'pd ' )/Sbase= e =                          + sum( node$conex (node, bus ), Pij (bus, node ) );const3    ..  OF = g = sum(Gen, Pg(Gen) * GenData(Gen, 'b ' ) * Sbase );Model loadflow     /const1, const2, const3 /;Pg. lo (Gen)= GenData(Gen, 'Pmin ' )/Sbase;Pg. up(Gen)= GenData(Gen, 'Pmax ' )/Sbase;delta. up( bus )= pi;  delta. lo ( bus )=− pi;  delta. fx ( slack ) =0;Pij. up(bus, node )$ (( conex (bus, node ) ) ) =1*  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node )$ (( conex (bus, node ) ) )=−1*branch (bus, node, ' Limit ' )/Sbase;Solve loadflow minimizing OF  using lp;parameter report (bus, * ), Congestioncost;report (bus, 'Gen( MW ) ' )=  sum(Gen$GBconect(bus,Gen),Pg. l (Gen) ) * sbase;report (bus, ' Angle ' )=delta. l ( bus );report (bus, ' load ( MW ) ' )=  BusData(bus, 'pd ' );report (bus, 'LMP($/ MWh ) ' )=const2.m ( bus )/ sbase ;Congestioncost=  sum(( bus, node ), Pij. l (bus, node ) *( − const2.m ( bus )+const2.m ( node ) ) ) /2 ;display  report, Pij. l, Congestioncost;


The total operating costs will be 1035 $/h and the LMP for all buses are equal to 11 $/h. This means that if the demand value at any bus increases for 1 MW then the operating cost will increase by 11 $/h. Since the generating unit 1 is generating power at its maximum limit (because it is cheaper) the additional demand should be supplied by generating unit 2 with operating cost equal to 11 $/MW h. The detailed three-bus optimal power flow solution with (P

ij

max = 100 MW) is given in Table 6.2.Table 6.2The three-bus optimal power flow solution (P

ij

max = 100 MW)Bus (i)
P

g
 (MW)
δ

i
 (rad)
L

i
 (MW)
λ

i
 ($/MW h)1650.0201120−0.10100113350.00011

Question: What would happen if the flow limit of the branch connecting bus 1 to bus 2 is reduced to 50 MW.
Answer: The answer is straightforward. The operating cost might increase but how much? We can easily decrease the flow limit in the GCode 6.2 (table Branch). The new operating cost would be 1056.250 $/h. The LMP values are different for each bus in this case. The LMP values are λ
1 = 10 $/MW h, λ
2 = 11. 625 $/MW h, λ
3 = 11 $/MW h. The power flow solution is shown in Fig. 6.4. The LMP value in bus 1 is λ
1 = 10 $/MW h because if the load increases in this node it will be supplied by generator 1 (which the operating costs are 10 $/MW h). The LMP value in bus 3 is λ
3 = 11 $/MW h because any increase in load in this node should be supplied by generator 2 (which the operating costs are 11 $/MW h). Generator 1 cannot send more power by line 1 − 2 since it is congested and the direction of the power flow in branch 3 − 1 is from bus 3 to bus 1. Finally, The LMP value in bus 2 is λ
3 = 11. 625 $/MW h because some of this demand will be supplied by generating unit 1 and some part will be supplied by unit 2. If the demand should pay the LMP value for every MW h then the total payment by the demand would be 100 MW × 11. 625 $/MW h = 1162.5 $/h. On the other hand, the generating units are also paid based on the LMP value of the connection point. The total payments to the generating units would be 43. 75 × 10 + 56. 25 × 11 = 1056. 25 $/h. As it can be seen, there is a difference between what demand pays and what generating units receive. This surplus money is equal to 1162. 5 − 1056. 25 = 106. 25 $/h. This is also called the congestion cost. Another technique for calculating the congestion costs (C

cg
) is using the following formula [3]:  (6.3)
Fig. 6.4The three-bus network with P
12
max = 50 MW

The power flow solution of three-bus network with P
12
max = 50 MW is shown in Fig. 6.4.
The detailed three-bus optimal power flow solution with (P
12
max = 50 MW) is given in Table 6.3.Table 6.3The three-bus optimal power flow solution (P
12
max = 50 MW)Bus (i)
P

g
 (MW)
δ

i
 (rad)
L

i
 (MW)
λ

i
 ($/MW h)143.75−0.02501020−0.12510011.625356.250011



6.1.2 Five-Bus Network DC-OPF
The five-bus network data is shown in Fig. 6.5. This example is taken from [4].Fig. 6.5The five-bus network data

The GAMS code developed for solving OPF in five-bus network is provided in GCode 6.3.

GCode 6.3 The OPF GAMS code for five-bus network, Example (Sect. 6.1.2)

Sets bus  /1*5/,  slack ( bus ) /1/ , Gen /g1 * g5 /;Scalars  Sbase /100/ ;  a l i a s (bus, node );Table GenData(Gen, * )   b    pmin pmaxg1 14   0    40g2 15   0    170g3 30   0    520g4 40   0    200g5 20   0    600 ;
set GBconect(bus,Gen) connectivity  index of  generating  unit/1    .     g1 1    .     g2 3    .     g3 4    .     g4 5    .     g5 / ;Table BusData(bus, * )  Demands of  each bus in MW         Pd2        3003        3004        400;
set conex          Bus connectivity  matrix/1    .     22    .     33    .     44    .     14    .     55    .     1/;conex (bus, node ) $conex (node, bus ) =1;Table branch (bus, node, * )               x         Limit1    .     2    0.0281    4001    .     4    0.0304    4001    .     5    0.0064    4002    .     3    0.0108    4003    .     4    0.0297    4004    .     5    0.0297    240 ;branch (bus, node, 'x ' )$( branch (bus, node, 'x ' )=0) = branch (node, bus, 'x ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $conex (bus, node ) =1/branch (bus, node, 'x ' );Variables  OF, Pij (bus, node ),Pg(Gen), delta ( bus );Equations const1, const2, const3;const1 (bus, node ) $conex (bus, node ).. Pij (bus, node )= e = branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) );const2 ( bus ) ..  + sum(Gen$GBconect(bus,Gen),Pg(Gen) ) − BusData(bus, 'pd ' )/Sbase= e =                             + sum( node$conex (node, bus ), Pij (bus, node ) );const3    ..  OF = g = sum(Gen, Pg(Gen) * GenData(Gen, 'b ' ) * Sbase );Model loadflow     /const1, const2, const3 /;Pg. lo (Gen)= GenData(Gen, 'Pmin ' )/Sbase;Pg. up(Gen)= GenData(Gen, 'Pmax ' )/Sbase;delta. up( bus )= pi;delta. lo ( bus )=− pi;delta. fx ( slack ) =0;Pij. up(bus, node )$ (( conex (bus, node ) ) )=  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node )$ (( conex (bus, node ) ) )=−branch (bus, node, ' Limit ' )/Sbase;solve  loadflow minimizing OF  using lp;parameter report (bus, * ), Congestioncost;report (bus, 'Gen( MW ) ' )=  sum(Gen$GBconect(bus,Gen),Pg. l (Gen) ) * sbase;report (bus, ' Angle ' )=delta. l ( bus );report (bus, ' load ( MW ) ' )=  BusData(bus, 'pd ' );report (bus, 'LMP($/ MWh ) ' )=const2.m ( bus )/ sbase ;Congestioncost=  sum(( bus, node ),Pij. l (bus, node ) *( − const2.m ( bus )+const2.m ( node ) ) ) /2;Display report, Pij. l, Congestioncost;


The minimum operating cost is 17,479.897 $/h. The network is highly congested, and the LMP values are different in various buses. The five-bus network flows and directions are depicted in Fig. 6.6. The detailed five-bus optimal power flow solution is given in Table 6.4.
Fig. 6.6The five-bus network flows and directions
Table 6.4The optimal power flow solution in five-bus networkBus (i)
P

g
 (MW)
δ

i
 (rad)
L

i
 (MW)
λ

i
 ($/MW h)1210.0000.000016.97720.000−0.07030026.3843323.495−0.06530030.00040.000−0.05740039.9435466.5050.014010.000



6.1.3 IEEE Reliability Test System 24 Bus
The IEEE RTS 24-bus network is shown in Fig. 6.7. It is a transmission network with the voltage levels of 138 kV, 230 kV, and Sbase = 100 MVA. The branch data for IEEE RTS 24-bus network is given in Table 6.5 [5]. The from bus, to bus, reactance (X), resistance (r), total line charging susceptance (b), and MVA rating (MVA) are specified in this table. The parallel lines in MATPOWER are merged, and the resultants are given in Table 6.5. The generation data for IEEE RTS 24-bus network is given in Table 6.6. The data of generating units in this network is inspired by Conejo et al. [6] and Bouffard et al. [7] with some modifications. The slack bus is bus 13 in this network.Fig. 6.7IEEE RTS 24-bus network
Table 6.5Branch data for IEEE RTS 24-bus network     Rating     RatingFromTo
r(pu)x(pu)
b(pu)(MVA)FromTo
r(pu)x(pu)
b(pu)(MVA)120.00260.01390.461117511130.00610.04760.0999500130.05460.21120.057217511140.00540.04180.0879500150.02180.08450.022917512130.00610.04760.0999500240.03280.12670.034317512230.01240.09660.2030500260.04970.19200.052017513230.01110.08650.1818500390.03080.11900.032217514160.00500.03890.08185003240.00230.08390.000040015160.00220.01730.0364500490.02680.10370.028117515210.00320.02450.206010005100.02280.08830.023917515240.00670.05190.10915006100.01390.06052.459017516170.00330.02590.0545500780.01590.06140.016617516190.00300.02310.0485500890.04270.16510.044717517180.00180.01440.03035008100.04270.16510.044717517220.01350.10530.22125009110.00230.08390.000040018210.00170.01300.109010009120.00230.08390.000040019200.00260.01980.1666100010110.00230.08390.000040020230.00140.01080.0910100010120.00230.08390.000040021220.00870.06780.1424500
Table 6.6Generation data for IEEE RTS 24-bus networkGenBus
P

i

max

P

i

min

b

i
 ($/MW)
Cs

i
 ($)
Cd

i
 ($)RU
i
 (MW h−1)RD
i
 (MW h−1)SU
i
 (MW h−1)SD
i
 (MW h−1)UT
i
(h)DT
i
(h)
u

i, t = 0

U

i

0 (h)
S

i

0 (h)
g1184001005.4700474710510811150
g2214001005.4700474710611211160
g3115230.413.321430.41430.41414434584120
g4215230.413.321430.41430.41414445784120
g51515554.2516002121657788002
g61615554.2510.5231231221216673881100
g723310108.510.526246242121112125881100
g82335014010.8922982298282815416288150
g973507520.7172517254949778088002
g1013591206.8520.933056.73056.721212132281210008
g1115601226.1143743777193142001
g12223000000353531532600120


6.1.3.1 IEEE-RTS: Base Case
In this case, it is assumed that the network is intact and all branches and generating units are working in normal condition. The minimum operating cost is $29,574.275 obtained by using the GCode 6.4.

GCode 6.4 The OPF GAMS code for IEEE Reliability test 24-bus network, Example (Sect. 6.1.3)

sets  bus  /1*24/, slack ( bus ) /13/,Gen /g1 * g12 /;  scalar  Sbase /100/; a l i a s (bus, node );Table GenData(Gen, * )   Generating units  c h a r a c t e r i s t i c s     Pmax Pmin   b     CostsD costst  RU    RD    SU   SD    UT    DT    uini  U0   Sog1   400  100    5.47  0      0      47   47   105  108  1    1    1    5    0   ;
set GBconect(bus,Gen) connectivity  index of  each generating  unit to each bus/18      .         g1 / ;Table BusData(bus, * )  Demands of  each bus in MW /MVar      Pd   Qd1     108  22;Table branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s               r       x       b      limit1    .     2    0.0026  0.0139  0.4611 175;parameter conex (bus, node );conex (bus, node ) $branch (bus, node, ' limit ' ) =1;conex (bus, node )$( conex (node, bus ) ) =1;branch (bus, node, 'x ' )$( branch (bus, node, 'x ' )=0) = branch (node, bus, 'x ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $conex (bus, node ) =1/branch (bus, node, 'x ' );Variables  OF, Pij (bus, node ),Pg(Gen), delta ( bus );Equations const1, const2, const3;const1 (bus, node )$( conex (bus, node ) ) ..Pij (bus, node )= e =  branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) );const2 ( bus ) ..  + sum(Gen$GBconect(bus,Gen),Pg(Gen) ) − BusData(bus, 'pd ' )/Sbase= e =+ sum( node$conex (node, bus ), Pij (bus, node ) );const3    ..  OF = g = sum(Gen, Pg(Gen) * GenData(Gen, 'b ' ) * Sbase );Model loadflow     /const1, const2, const3 /;Pg. lo (Gen)= GenData(Gen, 'Pmin ' )/Sbase; Pg. up(Gen)= GenData(Gen, 'Pmax ' )/Sbase;delta. up( bus )= pi/2;  delta. lo ( bus )=− pi/2; delta. fx ( slack ) =0;Pij. up(bus, node )$ (( conex (bus, node ) ) ) =1*  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node )$ (( conex (bus, node ) ) )=−1*branch (bus, node, ' Limit ' )/Sbase;Solve loadflow minimizing OF  using lp;


The base case solution of IEEE RTS 24-bus network without changing the branch flow limits is described in Table 6.7. As it can be observed in Table 6.7, the LMP values are all the same and equal to 20.7 $/MW h. This is because there is no congestion in this network for the given loading values. The congestion cost would be zero in this case.Table 6.7Base case solution of IEEE RTS 24-bus network (branch flow limits are unchanged)Bus
P

g
 (MW)
δ

i
 (rad)Load (MW)
λ

i
 ($/MW h)1152−0.15010820.72152−0.1519720.73 −0.11318020.74 −0.1857420.75 −0.1917120.76 −0.23013620.77257.15−0.10512520.78 −0.18617120.79 −0.13617520.710 −0.17219520.711 −0.044 20.712 −0.031 20.713206.850.00026520.714 0.02719420.7151670.18231720.7161550.16810020.717 0.251 20.7184000.27633320.719 0.14618120.720 0.16412820.7214000.291 20.7223000.399 20.7236600.187 20.724 0.069 20.7



6.1.3.2 IEEE-RTS: Branch Flow Limit Reduction
Now the branch flow limits are reduced by 30%. The problem is solved again, and the angle values are found as given in Table 6.8. The minimum operating cost is $29,747.745 obtained by using the GCode 6.4. The congestion cost is $4597.217 in this case. The solution of IEEE RTS 24-bus network (branch flow limits are reduced by 30%) is given in Table 6.8. Reducing the branch flow limit will not only increase the operating cost but also makes the LMP values different across the network.Table 6.8Solution of IEEE RTS 24-bus network (branch flow limits are reduced by 30%)Bus
P

g
 (MW)
δ

i
 (rad)Load (MW)
λ

i
 ($/MW h)1152.00−0.16210820.662152.00−0.1639720.713 −0.12918019.114 −0.1977420.855 −0.2037120.986 −0.24113621.177247.50−0.13012520.708 −0.20517121.149 −0.14717520.9610 −0.18319521.3211 −0.053 22.6912 −0.038 20.5513251.240.00026520.9314 0.01219425.7815132.260.15831716.0016155.000.14910015.6817 0.230 15.7918400.000.25533315.8519 0.13118116.8620 0.15212817.8721400.000.269 15.8922300.000.378 15.8523660.000.177 18.4224 0.049 17.19



6.1.3.3 IEEE-RTS: Branch Outage
In this case, some branch contingencies are examined. In order to simulate the branch outage, the following equation should be satisfied.  (6.4)  (6.5) where ξ

ij
 is a binary parameter which shows the status of the branch connecting bus i to bus j. In the developed GAMS code, if the branch limit is set to 0 it is considered as an outaged branch. This is because const1 which models the flow calculation in line ij is calculated for every branch which has conex(bus, node) > 0. Now some different contingencies are evaluated as follows: Contingency 1: branch ℓ
20−19, ℓ
12−23 are out. Congestion costs are $4905.000 and OF = $29,888.196. The congested lines are ℓ
13−23. The LMP values are not the same in different buses.Contingency 2: branch ℓ
14−16, ℓ
16−19 are out. Congestion costs are $6224.250 and OF = $32,199.855. The congested lines are ℓ
24−3, ℓ
8−7. The LMP values are not the same in different buses.Contingency 3: branch ℓ
1−5, ℓ
4−2 are out. Congestion costs are $0 and OF = $29,574.275. No line would be congested and therefore the LMP values are the same in all buses.

The OPF solutions for these three contingency cases are provided in Table 6.9.Table 6.9Solution of IEEE RTS 24-bus network (branch outage contingencies) Contingency 1Contingency 2Contingency 3 
P

g

        Bus(MW)
δ

i
 (rad)
λ

i
 ($/MW h)
P

g
 (MW)
δ

i
 (rad)
λ

i
 ($/MW h)
P

g
 (MW)
δ

i
 (rad)
λ

i
 ($/MW h)1152−0.21820.70152−0.10620.93152−0.05020.702152−0.21920.70152−0.11220.93152−0.05420.703 −0.19320.70 0.05520.93 −0.08820.704 − 0.25220.70 − 0.15620.93 −0.21520.705 − 0.25720.70 -0.17320.93 −0.23920.706 − 0.29420.70 − 0.22720.93 −0.21020.707289.15−0.12320.70300−0.03820.70257.15−0.10820.708 −0.22420.70 − 0.14520.93 −0.18920.709 −0.20220.70 −0.11620.93 −0.13820.7010 −0.23520.70 −0.18120.93 −0.17620.7011 −0.09420.70 −0.12220.93 −0.04420.7012 −0.11620.70 −0.03720.93 −0.03220.7013206.85 20.70436 20.93206.85 20.7014 −0.05320.70 −0.20320.93 0.02920.70151670.07720.7066.250.5985.471670.18920.70161550.06020.7054.250.6315.471550.17320.7017 0.14420.70 0.6915.47 0.25720.70184000.17120.704000.7065.474000.28320.7019 0.01920.70 0.07320.93 0.15020.7020 0.41910.89 0.10920.93 0.16720.70214000.18520.70329.50.7115.474000.29820.70223000.29320.703000.8275.473000.40520.70236280.43310.896600.14220.936600.19020.7024 −0.02620.70 0.3905.47 0.08320.70



6.1.3.4 IEEE-RTS: Generator Outage
In this case, some generating units are out of service. This can be because of unplanned outage or maintenance purpose. Now some different contingencies are evaluated as follows: Contingency 1: The generating unit g
9 (connected to bus 7) is out. Solving the problem shows that no line is congested but removing the g
9 will cause an increase in total operating costs which becomes OF = $29,633.420.Contingency 2: The generating unit g
5 (connected to bus 15) is out. Solving the problem shows that line ℓ
8−7 is congested but removing the g
5 will cause an increase in total operating costs which becomes OF = $30,328.570. The LMP values are different on different buses, and the congestion costs are $40.250.Contingency 3: The generating unit g
8 (connected to bus 23) is out. Solving the problem shows that line ℓ
8−7 is congested but removing the g
8 will cause an increase in total operating costs which becomes OF = $33,078.420. The LMP values are different on different buses, and the congestion costs are $40.250.Contingency 4: The generating unit g
10 (connected to bus 13) is out. The problem becomes infeasible, and GAMS cannot find any solution for it. This is because no solution is found which satisfies the technical constraints. Some load shedding action should take place.

The OPF solutions for first three contingency cases are given in Table 6.10. In order to analyze the contingency case 4, the load shedding is modeled using a virtual generating unit connected to bus i as shown in Fig. 6.8. The production cost of this specific unit is set to a high value. It is usually called the value of the loss of load. The production level of this generating unit is equal to the load shedding that should happen in bus i. The maximum power of this unit is equal to the load connected to the bus i (0 ≤ LS
i
 ≤ L

i
). The DC-OPF problem considering the load shedding concept is formulated in (6.6).  (6.6a)  (6.6b)  (6.6c)  (6.6d)  (6.6e)  (6.6f)
Table 6.10Solution of IEEE RTS 24-bus network (generator outage contingencies) Contingency 1Contingency 2Contingency 3 
P

g

  
P

g

  
P

g

  Bus(MW)
δ

i
 (rad)
λ

i
 ($/MW h)(MW)
δ

i
 (rad)
λ

i
 ($/MW h)(MW)
δ

i
 (rad)
λ

i
 ($/MW h)1152−0.24620.93152−0.17120.93152−0.18620.932152−0.24820.93152−0.17220.93152−0.18720.933 −0.19520.93 −0.15620.93 −0.16520.934 −0.28320.93 −0.20420.93 −0.21920.935 −0.29120.93 −0.20820.93 −0.22420.936 −0.33120.93 −0.24420.93 −0.26120.937 −0.57620.93300−0.05820.7300−0.07520.78 −0.49920.93 −0.16520.93 −0.18220.939 −0.23520.93 −0.15320.93 −0.16920.9310 −0.27520.93 −0.18420.93 −0.20220.9311 −0.09720.93 −0.06520.93 −0.07620.9312 −0.08220.93 −0.04420.93 −0.07120.93134640.00020.933190.00020.935140.00020.9314 −0.02420.93 −0.02020.93 −0.03420.93151670.12920.93120.09520.931670.09820.93161550.11820.931550.09920.931550.08120.9317 0.20020.93 0.17520.93 0.16520.93184000.22620.934000.19820.934000.19120.9319 0.10320.93 0.09220.93 0.03820.9320 0.12620.93 0.12220.93 0.03820.93214000.24020.934000.21020.934000.20620.93223000.34820.933000.32020.933000.31420.93236600.15220.936600.15220.933100.05120.9324 0.00620.93 −0.00120.93 −0.00320.93
Fig. 6.8Load shedding modeling using virtual generating unit

The GAMS code for modeling and calculating the load shedding values is given in GCode 6.5:

GCode 6.5 The OPF GAMS code for IEEE Reliability test 24-bus network with load shedding modeling

Setsbus  /1*24/slack ( bus ) /13/Gen /g1 * g12/scalarsSbase /100/VOLL /10000/; a l i a s (bus, node );table  GenData(Gen, * )   Generating units  c h a r a c t e r i s t i c s     Pmax Pmin   b * * * * * * * * REMOVED  FOR  SAVING  SPACE * * * * * *;
set GBconect(bus,Gen) connectivity  index of  each generating  unit to each bus/ * * REMOVED  FOR  SAVING  SPACE * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  / ;Table BusData(bus, * )  Demands of  each bus in MW      Pd   Qd * * * * * * * * REMOVED  FOR  SAVING  SPACE * * * * * *;table  branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s               r       x       b      limit * * * * * * * * REMOVED  FOR  SAVING  SPACE * * * * * *;branch (bus, node, 'x ' )$( branch (bus, node, 'x ' )=0) = branch (node, bus, 'x ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $branch (bus, node, ' Limit ' ) =1/branch (bus, node, 'x ' );parameter conex (bus, node );conex (bus, node )$( branch (bus, node, ' limit ' )and branch (node, bus, ' limit ' ) ) =1;conex (bus, node )$( conex (node, bus ) ) =1;VariablesOF, Pij (bus, node ),Pg(Gen), delta ( bus ), lsh ( bus );Equationsconst1, const2, const3;const1 (bus, node )$( conex (bus, node ) ) ..  Pij (bus, node )= e =                    branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) );const2 ( bus ) .. lsh ( bus ) + sum(Gen$GBconect(bus,Gen),Pg(Gen) ) − BusData(bus, 'pd ' )/Sbase                                      = e =+ sum( node$conex (node, bus ), Pij (bus, node ) );const3    ..  OF = g = sum(( bus,Gen) $GBconect (bus,Gen),Pg(Gen) * GenData(Gen, 'b ' ) * Sbase )+ sum(bus,VOLL * lsh ( bus ) * Sbase );model loadflow     /const1, const2, const3 /;Pg. lo (Gen)= GenData(Gen, 'Pmin ' )/Sbase;Pg. up(Gen)= GenData(Gen, 'Pmax ' )/Sbase;delta. up( bus )= pi/2;delta. lo ( bus )=− pi/2;delta. fx ( slack ) =0;Pij. up(bus, node )$ (( conex (bus, node ) ) ) =1*  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node )$ (( conex (bus, node ) ) )=−1*branch (bus, node, ' Limit ' )/Sbase;lsh. up( bus )=  BusData(bus, 'pd ' )/Sbase;lsh. lo ( bus )=  0;solve  loadflow minimizing OF  using lp;parameter report (bus, * ), Congestioncost;report (bus, 'Gen( MW ) ' )=  1 * sum(Gen$GBconect(bus,Gen),Pg. l (Gen) ) * sbase;report (bus, ' Angle ' )=delta. l ( bus );report (bus, ' load ( MW ) ' )=  BusData(bus, 'pd ' );report (bus, 'LSH ' )=lsh. l ( bus ) * sbase ;report (bus, 'LMP($/ MWh ) ' )=const2.m ( bus )/ sbase ;Congestioncost=  sum(( bus, node ), Pij. l (bus, node ) *( − const2.m ( bus )+const2.m ( node ) ) ) /2 ;display  report, Pij. l, Congestioncost;execute_unload "opf. gdx" reportexecute 'gdxxrw. exe  OPF. gdx o = OPF. xls  par =report  rng =report !A1 'display  GBconect;


The OPF solution for contingency case 4 is given in Table 6.11. The simulation results show that the demand in bus 18 should be reduced by 116 MW as given in Table 6.11. It should be noted that the LMP values are not meaningful in this case. The LMP values are calculated and shown in Table 6.12.Table 6.11Solution of IEEE RTS 24-bus network (generator g
10 outage with load shedding modeling)Bus
P

g
 (MW)
δ

i
 (rad)
L

i
 (MW)
LSH

i
 (MW)1152−0.095108 2152−0.09797 3 −0.042180 4 −0.13274 5 −0.14071 6 −0.181136 73000.006125 8 −0.101171 9 −0.084175 10 −0.124195 11 −0.004  12 −0.001  13 0.000265 14 0.093194 152150.285317 161550.259100 17 0.360  184000.39633311619 0.220181 20 0.222128 214000.405  223000.511  236600.237  24 0.160  
Table 6.12Solution of IEEE RTS 24-bus network (generator g
10 outage with load shedding modeling and LMP calculation)Bus
P

g
 (MW)
δ

i
 (rad)
L

i
 (MW)
λ

i
 ($/MW h)1152−0.09510826.1102152−0.0979726.1103 −0.04218026.1104 −0.1327426.1105 −0.1407126.1106 −0.18113626.11073000.00612520.7008 −0.10117126.1109 −0.08417526.11010 −0.12419526.11011 −0.004 26.11012 −0.001 26.11013 0.00026526.11014 0.09319426.110152150.28531726.110161550.25910026.11017 0.360 26.110184000.39621726.11019 0.22018126.11020 0.22212826.110214000.405 26.110223000.511 26.110236600.237 26.11024 0.160 26.110

In order to calculate the LMP in a network with load shedding, the calculated amount of load shedding should be curtailed from the demand in the specific bus (here bus 18) and the problem should be resolved.

Nomenclature

Indices and Sets

g
Index of thermal generating units.
i, j
Index of network buses.
Ω

G

Set of all thermal generating units.
Ω

G


i

Set of all thermal generating units connected to bus i.
Ω

ℓ


i

Set of all buses connected to bus i.
Ω

B

Set of network buses.
Ω

ℓ

Set of network branches.


Parameters

L

i

Electric power demand in bus i

a

g
, b

g
, c

g

Fuel cost coefficients of thermal unit g.
P

g

max∕min
Maximum/minimum limits of power generation of thermal unit g.
P

ij

max
Maximum power flow limits of branch connecting bus i to j.
x

ij

Reactance of branch connecting bus i to j.
r

ij

Resistance of branch connecting bus i to j.


Variables

P

ij

Active power flow of branch connecting bus i to j.
P

g

Active power generated by thermal unit g(MW).
λ

i

Locational marginal price in bus i ($/MW h).LS
i

Load shedding in bus i (MW).OFTotal operating costs ($/h).
δ

i

Voltage angle in bus i (rad).






6.2 Multi-Period Optimal Wind-DC OPF
The load flow model considering wind power and load shedding is shown in Fig. 6.9. The multi-period wind DC-OPF is formulated as follows:  (6.7a)  (6.7b)  (6.7c)  (6.7d)  (6.7e)  (6.7f)  (6.7g)  (6.7h)  (6.7i)  (6.7j) The objective function in (6.7a) consists of operating costs of thermal units, load shedding costs, and wind curtailment costs. The nodal power balance is formulated in (6.7b). This equation is also providing the LMP value in bus i at time t (λ

i, t
). The active flow in branch connecting bus i to bus j is calculated in (6.7c). The branch flow limits of every branch is formulated in (6.7d). The operating limits of the thermal generating unit are modeled in (6.7e). The ramp rates of thermal units are described in (6.7f) and (6.7g). The load shedding of bus i is limited to the existing demand at time t as stated in (6.7h). The wind power curtailment is formulated in (6.7i). At any bus i hosting wind turbine, the amount of wind power generation depends on wind power availability and wind power capacity as described in (6.7j). It should bear in mind that the demand and wind power availability change vs time. These variations are reflected in L

i, t
 and w

t
, respectively. The wind power connection points to the network are indicated in Fig. 6.10.
Fig. 6.9Load flow model considering wind power and load shedding
Fig. 6.10Wind power connection points to the network

The wind-demand variation pattern vs time is shown in Fig. 6.11. The optimal thermal unit power generation schedules of multi-period wind DC-OPF is given in Table 6.13.
Fig. 6.11Wind-demand variation patterns vs time
Table 6.13Thermal unit power generation schedules of multi-period wind DC-OPFThermal unitBus
t
1

t
2

t
3

t
4

t
5

t
6

t
7

t
8

t
9

t
10

t
11

t
12

t
13

t
14

t
15

t
16

t
17

t
18

t
19

t
20

t
21

t
22

t
23

t
24

g118.04.04.03.53.12.72.32.63.13.54.04.04.04.03.63.13.13.54.04.04.04.03.53.12.6
g221.04.03.83.32.82.42.12.63.13.54.04.04.04.03.83.53.13.54.04.04.04.03.53.13.0
g31.00.40.30.30.30.30.30.30.30.30.40.40.40.40.30.30.40.60.70.90.70.60.40.30.3
g42.00.40.30.30.30.30.30.30.30.30.40.40.30.30.30.30.40.60.70.70.70.60.40.30.3
g515.00.50.50.50.50.50.50.50.50.50.60.50.50.50.50.50.50.81.01.01.21.00.80.50.5
g616.00.80.50.50.50.50.50.50.50.81.01.21.41.21.00.91.11.31.61.61.41.21.00.80.5
g723.01.41.21.11.11.11.11.11.21.41.61.82.02.22.12.32.52.72.93.12.92.72.52.32.1
g823.01.71.41.41.41.41.41.41.41.72.02.22.52.32.12.32.62.93.23.33.02.72.42.11.9
g97.00.80.80.80.80.80.80.80.80.80.80.80.80.80.80.80.81.21.71.21.10.90.80.80.8
g1013.02.12.12.12.12.12.12.12.12.12.12.12.12.12.12.12.12.32.52.32.12.12.12.12.1
g1115.00.10.10.10.10.10.10.10.10.10.10.10.10.10.10.10.10.20.30.20.10.10.10.10.1
g1222.03.03.03.02.93.03.02.72.73.03.03.03.03.03.02.72.32.73.03.03.03.03.02.73.0


GCode 6.6 Multi-period DC-OPF for modified IEEE RTS 24-bus system

Sets bus  /1*24/  , slack ( bus ) /13/,Gen /g1 * g12 /, t /t1 * t24 /;Scalars  Sbase /100/  ,VOLL /10000/,VWC /50/; a l i a s (bus, node );table  GD(Gen, * )   Generating units  c h a r a c t e r i s t i c s     Pmax Pmin   b     CostsD costst  RU    RD    SU   SD    UT    DT    uini  U0   So *  Removed for saving spaceSet GB(bus,Gen) connectivity  index of  each generating  unit to each bus / *  Removed for saving space  / ;Table BusData(bus, * )  Demands of  each bus in MW * * * * * * * * * * Omitted for saving space   ;table  branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s * * * * * * * * * * Omitted for saving space  ;Table WD ( t, * )      w                   dt1    0.0786666666666667 0.684511335492475t2    0.0866666666666667 0.644122690036197t3    0.117333333333333  0.61306915602972t4    0.258666666666667  0.599733282530006t5    0.361333333333333  0.588874071251667t10   0.548              0.787007048961707t20   0.561333333333333  0.936368832158506t21   0.565333333333333  0.887597637645266t22   0.556              0.809297008954087t23   0.724              0.74585635359116t24   0.84               0.733473042484283;Parameter Wcap( bus )/8   20019  15021  100/;branch (bus, node, 'x ' )$( branch (bus, node, 'x ' )=0) = branch (node, bus, 'x ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $branch (bus, node, ' Limit ' ) =1/branch (bus, node, 'x ' );branch (bus, node, ' z ' ) $branch (bus, node, ' Limit ' )= sqrt( power ( branch(bus, node, 'x ' ),2)+ power ( branch (bus, node, ' r ' ),2) );branch (node, bus, ' z ' )= branch (bus, node, ' z ' );parameter conex (bus, node );conex (bus, node )$( branch (bus, node, ' limit ' )and branch (node, bus, ' limit ' ) ) =1;conex (bus, node )$( conex (node, bus ) ) =1;VariablesOF, Pij (bus, node, t ),Pg(Gen, t ), delta (bus, t ), lsh (bus, t ),Pw(bus, t ), pc (bus, t );Equationsconst1, const2, const3, const4, const5, const6;const1 (bus, node, t )$( conex (bus, node ) ) ..  Pij (bus, node, t )= e =branch (bus, node, ' bij ' ) * ( delta (bus, t ) −delta (node, t ) );const2 (bus, t ) ..  lsh (bus, t )$BusData(bus, 'pd ' )+ Pw(bus, t )$Wcap( bus )+ sum(Gen$GB(bus,Gen),Pg(Gen, t ) )− WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase= e =+ sum( node$conex (node, bus ), Pij (bus, node, t ) );const3    ..  OF = g = sum(( bus,Gen, t )$GB(bus,Gen),Pg(Gen, t ) * GD (Gen, 'b ' ) * Sbase )                  + sum(( bus, t ),VOLL * lsh (bus, t ) * Sbase$BusData                  + VWC* Pc(bus, t ) * sbase$Wcap ( bus ) );const4 (gen, t ) ..  pg(gen, t+1) − pg(gen, t )=l= GD (gen, 'RU' )/Sbase;const5 (gen, t ) ..  pg(gen, t −1) − pg(gen, t )=l= GD (gen, 'RD' )/Sbase;const6 (bus, t )$Wcap( bus ) ..  pc (bus, t )= e = WD ( t, 'w' ) * Wcap( bus )/Sbase− pw(bus, t );model loadflow     /const1, const2, const3, const4, const5, const6 /;Pg. lo (Gen, t )= GD (Gen, 'Pmin ' )/Sbase;  Pg. up(Gen, t )= GD (Gen, 'Pmax ' )/Sbase;delta. up(bus, t )= pi/2;  delta. lo (bus, t )=− pi/2;  delta. fx ( slack, t ) =0;Pij. up(bus, node, t )$ (( conex (bus, node ) ) ) =1*  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node, t )$ (( conex (bus, node ) ) )=−1*branch (bus, node, ' Limit ' )/Sbase;lsh. up(bus, t )=  WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase;  lsh. lo (bus, t )=  0;Pw. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pw. lo (bus, t ) =0;Pc. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pc. lo (bus, t ) =0;Solve loadflow minimizing OF  using lp;


The wind power generations at efferent buses vs time are shown in Fig. 6.12.
Fig. 6.12Wind power generations at efferent buses vs time

The wind power curtailment is occurring in bus 19 at time t
17 equal to 38.76 and also in bus 21 at time t
16 equal to 15.32 MW and also at time t
17 equal to 86.93 MW. The total operating cost (including the wind curtailment cost) would be $4. 3229 × 105.

Nomenclature

Indices and Sets

g
Index of thermal generating units.
w
Index of wind turbine units.
i, j
Index of network buses.
Ω

G

Set of all thermal generating units.
Ω

G


i

Set of all thermal generating units connected to bus i.
Ω

ℓ


i

Set of all buses connected to bus i.
Ω

B

Set of network buses.
Ω

ℓ

Set of network branches.


Parameters

w

i, t

Availability of wind turbine connected to bus i at time t

Λ

i


w

Capacity of wind turbine connected to bus i

L

i, t

Electric power demand in bus i at time t

a

g
, b

g
, c

g

Fuel cost coefficients of thermal unit g.
P

g

max∕min
Maximum/minimum limits of power generation of thermal unit g.
P

ij

max
Maximum power flow limits of branch connecting bus i to j.
x

ij

Reactance of branch connecting bus i to j.
r

ij

Resistance of branch connecting bus i to j.VOLLValue of loss of load ($/MW h)VWCValue of loss of wind ($/MW h)


Variables

P

ij, t

Active power flow of branch connecting bus i to j at time t (MW).
P

g, t

Active power generated by thermal unit g at time t (MW).
P

i, t


w

Active power generated by wind turbine connected to bus i at time t (MW).
P

i, t

wc
Curtailed power of wind turbine connected to bus i at time t (MW).
λ

i, t

Locational marginal price in bus i at time t ($/MW h).LS
i, t

Load shedding in bus i at time t (MW).OFTotal operating costs ($).
δ

i, t

Voltage angle of bus i at time t (rad).




6.3 Multi-Period Optimal AC Power Flow
The AC power flow considering wind generation and load shedding is shown in Fig. 6.13.
Fig. 6.13AC power flow considering wind generation and load shedding

The optimal power flow equations are described in (6.8) as follows:  (6.8a)  (6.8b)  (6.8c)  (6.8d)  (6.8e)  (6.8f)  (6.8g)  (6.8h)  (6.8i)  (6.8j)  (6.8k)  (6.8l)  (6.8m)  (6.8n)  (6.8o)  (6.8p) The GAMS code developed for solving the minimum cost OPF is given in GCode 6.7. The optimal active/reactive power generation of thermal units in MP-AC OPF are given in Figs. 6.14 and 6.15, respectively.
Fig. 6.14Active power generation of thermal units in MP-AC OPF
Fig. 6.15Reactive power generation of thermal units in MP-AC OPF


GCode 6.7 Multi-period AC OPF for modified IEEE RTS 24 bus system

Sets i   network buses /1*24/  , slack ( i ) /13/, t /t1 * t24/GB( i ) generating  buses /1,2,7,15*16,18,21*23/;scalars  Sbase /100/  ,VOLL /10000/,VWC /50/; a l i a s ( i, j );Table GenD( i, * )   Generating units  c h a r a c t e r i s t i c s     pmax pmin   b     Qmax  Qmin Vg    RU    RD1    152  30.4   13.32 192  −50  1.035 21   212    152  30.4   13.32 192  −50  1.035 21   217    350  75     20.7  300  0    1.025 43   4313   591  206.85 20.93 591  0    1.02  31   3115   215  66.25  21    215  −100 1.014 31   3116   155  54.25  10.52 155  −50  1.017 31   3118   400  100    5.47  400  −50  1.05  70   7021   400  100    5.47  400  −50  1.05  70   7022   300  0      0     300  −60  1.05  53   5323   360  248.5  10.52 310  −125 1.05  31   31      ;Table BD( i, * )  Demands of  each bus in MW      Pd   Qd *   removed for saving space;table  LN( i, j, * )     Network technical  c h a r a c t e r i s t i c s               r       x       b      limit *   removed for saving space;Table WD ( t, * )      w                   d *   removed for saving space ;parameter Wcap( i )/8   20019  15021  100/;LN( i, j, 'x ' )$(LN( i, j, 'x ' )=0) = LN( j, i, 'x ' );LN( i, j, ' r ' )$(LN( i, j, ' r ' )=0) = LN( j, i, ' r ' );LN( i, j, 'b ' )$(LN( i, j, 'b ' )=0) = LN( j, i, 'b ' );LN( i, j, ' bij ' )$LN( i, j, ' Limit ' )=1/ LN( i, j, 'x ' );LN( i, j, ' Limit ' )$(LN( i, j, ' Limit ' )=0) = LN( j, i, ' Limit ' );LN( i, j, ' z ' )$LN( i, j, ' Limit ' )= sqrt( power (LN( i, j, 'x ' ),2)+ power (LN( i, j, ' r ' ),2) );LN( j, i, ' z ' )$(LN( i, j, ' z ' )=0) = LN( i, j, ' z ' );LN( i, j, ' th ' )$(LN( i, j, ' Limit ' ) and  LN( i, j, 'x ' ) and LN( i, j, ' r ' ) )                               =arctan (LN( i, j, 'x ' ) /(LN( i, j, ' r ' ) ) );LN( i, j, ' th ' )$(LN( i, j, ' Limit ' ) and  LN( i, j, 'x ' ) and LN( i, j, ' r ' )=0) = pi/2;LN( i, j, ' th ' )$(LN( i, j, ' Limit ' ) and  LN( i, j, ' r ' ) and LN( i, j, 'x ' )=0) =0;LN( j, i, ' th ' )$LN( i, j, ' Limit ' )= LN( i, j, ' th ' );  Parameter cx ( i, j );cx ( i, j )$(LN( i, j, ' limit ' )and LN( j, i, ' limit ' ) ) =1; cx ( i, j )$( cx ( j, i ) ) =1;Variables  OF, Pij ( i, j, t ), Qij ( i, j, t ),Pg( i, t ),Qg( i, t ),Va( i, t ),V( i, t ),Pw( i, t );Equations eq1, eq2, eq3, eq4, eq5, eq6, eq7;eq1 ( i, j, t ) $cx ( i, j ).. Pij ( i, j, t )= e=( V( i, t ) * V( i, t ) * cos(LN( j, i, ' th ' ) )                 − V( i, t ) * V( j, t ) * cos(Va( i, t ) − Va( j, t )+ LN( j, i, ' th ' ) ) )/ LN( j, i, ' z ' );eq2 ( i, j, t ) $cx ( i, j ).. Qij ( i, j, t )= e=( V( i, t ) * V( i, t ) * sin(LN( j, i, ' th ' ) )                 − V( i, t ) * V( j, t ) * sin(Va( i, t ) − Va( j, t )+ LN( j, i, ' th ' ) ) )/ LN( j, i, ' z ' )                                                  − LN( j, i, 'b ' ) * V( i, t ) * V( i, t ) /2;eq3 ( i, t ) ..  Pw( i, t )$Wcap( i )+ Pg( i, t )$GenD( i, 'Pmax ' ) − WD ( t, 'd ' ) * BD( i, 'pd ' )/Sbase= e =+ sum( j$cx ( j, i ), Pij ( i, j, t ) );eq4 ( i, t ) ..                Qg( i, t )$GenD( i, 'Qmax ' ) − WD ( t, 'd ' ) * BD( i, 'qd ' )/Sbase= e =+ sum( j$cx ( j, i ), Qij ( i, j, t ) );eq5        ..  OF = g = sum(( i, t ),Pg( i, t ) * GenD( i, 'b ' ) * Sbase$GenD( i, 'Pmax ' ) );eq6 ( i, t )$(GenD( i, 'Pmax ' ) and ord ( t )>1) .. Pg( i, t ) − Pg( i, t −1) =l= GenD( i, 'RU' )/Sbase;eq7 ( i, t )$(GenD( i, 'Pmax ' ) and ord ( t ) <card ( t ) ) .. Pg( i, t ) − Pg( i, t+1) =l=                                              GenD( i, 'RD' )/Sbase;Model loadflow    /eq1, eq2, eq3, eq4, eq5, eq6, eq7 /;Pg. lo ( i, t )= GenD( i, 'Pmin ' )/Sbase;  Pg. up( i, t )= GenD( i, 'Pmax ' )/Sbase;Qg. lo ( i, t )= GenD( i, 'Qmin ' )/Sbase;  Qg. up( i, t )= GenD( i, 'Qmax ' )/Sbase;Va. up( i, t )= pi/2;  Va. lo ( i, t )=− pi/2;  Va. l ( i, t ) =0; Va. fx ( slack, t ) =0;Pij. up( i, j, t )$ (( cx ( i, j ) ) ) =+1*LN( i, j, ' Limit ' )/Sbase;Pij. lo ( i, j, t )$ (( cx ( i, j ) ) )=−1* LN( i, j, ' Limit ' )/Sbase;Qij. up( i, j, t )$ (( cx ( i, j ) ) ) =+1*LN( i, j, ' Limit ' )/Sbase;Qij. lo ( i, j, t )$ (( cx ( i, j ) ) )=−1* LN( i, j, ' Limit ' )/Sbase;  V. lo ( i, t ) =0.9; V. up( i, t ) =1.1;Pw. up( i, t )= WD ( t, 'd ' ) * Wcap( i )/ sbase;  Pw. lo ( i, t ) =0;Solve loadflow minimizing OF  using nlp;



Nomenclature

Parameters

w

i, t

Availability of wind turbine connected to bus i at time t

Λ

i


w

Capacity of wind turbine connected to bus i

P

i, t


L

Active power component of demand in bus i at time t

P

i, t


w

Active power generation by wind turbine connected to bus i at time t

Q

i, t


w

Reactive power generation by wind turbine connected to bus i at time t

a

g
, b

g
, c

g

Fuel cost coefficients of thermal unit g.
P

i


g, max∕min
Maximum/minimum limits of power generation of thermal unit g connected to bus i.
P

ij

max
Maximum power flow limits of branch connecting bus i to j.
x

ij

Reactance of branch connecting bus i to j.
r

ij

Resistance of branch connecting bus i to j.VOLLValue of loss of load ($/MW h)VWCValue of loss of wind ($/MW h)
b
Total line charging susceptance of branch connecting bus i to j (pu).


Variables

S

ij, t

Apparent power flow of branch connecting bus i to j at time t.
P

i, t


g

Active power generated by thermal unit g connected to bus i at time t (MW).
P

i, t


w

Active power generated by wind turbine connected to bus i at time t (MW).
λ

i, t


p

Active locational marginal price (LMP) in bus i at time t ($/MW h).
P

i, t

LS
Active Load shedding in bus i at time t (MW).
P

i, t

wc
Curtailed power of wind turbine connected to bus i at time t (MW).
I

ij, t

Current flow of branch connecting bus i to j at time t.
Q

i, t

LS
Reactive Load shedding in bus i at time t (MVAr).
Q

i, t


g

Reactive power generated by thermal unit g connected to bus i at time t (MW).
λ

i, t


q

Reactive locational marginal price (LMP) in bus i at time t ($/MVArh).OFTotal operating costs ($).
δ

i, t

Voltage angle in bus i at time t (rad).
V

i, t

Voltage magnitude in bus i at time t (pu).




References


1.
A. Meeraus A. Brooke, D. Kendrick, R. Raman, GAMS/Cplex 7.0 User Notes. GAMS Development Corp. (2000)


2.
A.J. Wood, B.F. Wollenberg, Power Generation, Operation, and Control (Wiley, Hoboken, 2012)


3.
P. Maghouli, A. Soroudi, A. Keane, Robust computational framework for mid-term techno-economical assessment of energy storage. IET Gener. Transm. Distrib. 10(3), 822-831 (2016)Crossref


4.
F. Li, R. Bo Small test systems for power system economic studies, in: IEEE PES General Meeting (2010), pp. 1-4


5.
R.D. Zimmerman, C.E. Murillo-Sanchez, R.J. Thomas, Matpower: steady-state operations, planning, and analysis tools for power systems research and education. IEEE Trans. Power Syst. 26(1), 12-19 (2011)Crossref


6.
A.J. Conejo, M. Carrión, J.M. Morales, Decision Making Under Uncertainty in Electricity Markets, vol. 1 (Springer, New York, 2010)CrossrefMATH


7.
F. Bouffard, F.D. Galiana, A.J. Conejo, Market-clearing with stochastic security-part II: case studies. IEEE Trans. Power Syst. 20(4), 1827-1835 (2005)Crossref














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_7





7. Energy Storage Systems




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides a solution for operation and planning aspects of energy storage systems (ESS) problem in GAMS. The ESS integration has been analyzed in operation and planning horizon. The inputs are generator's characteristics, electricity prices, demands, and network topology. The outputs of this code are operating schedules of ESS as well as the investment decisions.

7.1 Introduction
The energy storage system (ESS) 
 is an attractive option to increase the flexibility of energy system operation and planning. These units can absorb energy in case of low electricity price or excessive generation and return it back in high price/low generation periods. Different technologies and objective functions have been reported in the literature.
Some of the ESS technologies are as follows: Superconducting magnetic energy storage system (SMES) [1]Compressed Air Energy Storage (CAES) [2]Super-capacitor Energy Storage [3]Pumped Hydro Storage [4]Battery energy storage [5]Flywheel Energy Storage System [6]Power to gas storage method [7]

Some of the objective functions in ESS studies are listed as follows: Compensate grid voltage fluctuations [1]Overcome the Destabilizing Effect of Instantaneous Constant Power Loads in DC Microgrids [3]Prevention of Transient Under-Frequency Load Shedding [8]Reliability enhancement [9]Wind uncertainty management [10]Fault Ride Through Support of Grid-Connected VSC HVDC-Based Offshore Wind Farms [6]Phase balancing [11]Wind curtailment reduction and congestion management [12]Active power loss payment minimization [13]



7.2 ESS Operation

7.2.1 ESS Operation in DED
The total operating costs without using ESS are TC = $6. 4796 × 105 as obtained in GCode 4.1. The DED problem integrated with ESS is formulated in (7.1).  (7.1a)  (7.1b)  (7.1c)  (7.1d)  (7.1e)  (7.1f)  (7.1g)  (7.1h)  (7.1i) The simulation parameters for this problem are given in Table 7.1. The economic dispatch data for four units example is given in Table 7.2. This table has 11 columns. The first column is showing the generating unit index. The next three columns indicate the cost coefficients for these thermal units (a

g
, b

g
, c

g
). The next three columns indicate the emission coefficients for these thermal units (d

g
, e

g
, f

g
). The next two columns give the minimum and maximum generating limits of each unit if they ton. The last two columns indicate the ramp up/down rates of thermal units.Table 7.1The data for ESS integrated dynamic economic dispatchParameterValueSOC0
100 MWSOCmax
300 MW
P
max

d

0.2 SOCmax

P
min

d

0
P
max

c

0.2 SOCmax

P
min

c

0
η

c

95%
η

d

90%
Table 7.2The dynamic economic dispatch data for four thermal units exampleUnit
a

g
 ($∕MW2)
b

g
 ($∕MW)
c

g
 ($)
d

g
 (kg∕MW2)
e

g
 (kg∕MW)
f

g
(kg)
P

g

min (MW)
P

g

max (MW)RU
g
 (MW)RD
g
 (MW)
g10.1214.8891.2−53282004040
g20.1716.57832.3−4.246.09202903030
g30.1515.551001.1−2.155.69301903030
g40.1916.21701.1−3.996.2202605050

The GAMS code for solving the example (7.1) is given in Code 7.1.

GCode 7.1 The cost-based dynamic economic dispatch integrated with ESS (7.1)

Set     t       hours            /t1 * t24/Set     g       thermal units    /p1 * p4 /;Table gendata (g, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0p1   0.12 14.80 89  1.2  −5    3    28   200   40   40p2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30p3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30p4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;Table data ( t, * )     lambda load windt1   32.71  510  44.1t2   34.72  530  48.5t3   32.71  516  65.7t4   32.74  510  144.9t5   32.96  515  202.3t6   34.93  544  317.3t7   44.9   646  364.4t8   52     686  317.3t9   53.03  741  271t10  47.26  734  306.9t11  44.07  748  424.1t12  38.63  760  398t13  39.91  754  487.6t14  39.45  700  521.9t15  41.14  686  541.3t16  39.23  720  560t17  52.12  714  486.8t18  40.85  761  372.6t19  41.2   727  367.4t20  41.15  714  314.3t21  45.76  618  316.6t22  45.59  584  311.4t23  45.56  578  405.4t24  34.72  544  470.4;Variables         OBJ            Objective ( revenue )                 costThermal   Cost of  thermal units                 p(g, t )        Power generated by thermal power                               plant                 SOC( t ) ,Pd( t ),Pc( t )                     ;p. up(g, t ) =  gendata (g,"Pmax") ;p. lo (g, t ) =  gendata (g,"Pmin");scalar  SOC0 /100/, SOCmax  /300/, eta_c /0.95/, eta_d /0.9/;SOC. up( t )= SOCmax;  SOC. lo ( t ) =0.2*SOCmax;  SOC. fx ( ' t24 ' )= SOC0;Pc. up( t ) =0.2*SOCmax;  Pc. lo ( t ) =0; Pd. up( t ) =0.2*SOCmax;  Pd. lo ( t ) =0;Equations Genconst3, Genconst4, costThermalcalc,balance,  constESS1;costThermalcalc..  costThermal = e = sum(( t, g), gendata (g, 'a ' ) * power(p(g, t ),2)+gendata (g, 'b ' ) * p(g, t ) +gendata (g, ' c ' ) );Genconst3 (g, t ) ..  p(g, t+1) − p(g, t )=l=gendata (g, 'RU0 ' );Genconst4 (g, t ) ..  p(g, t −1) − p(g, t )=l=gendata (g, 'RD0' );constESS1 ( t )   ..  SOC( t )= e = SOC0$( ord ( t )=1) +  SOC( t −1)$( ord ( t )>1)                                             + Pc( t ) * eta_c− Pd( t )/eta_d;
balance( t ) ..  sum(g, p(g, t ) )+ Pd( t )= g =data ( t, ' load ' )+ Pc( t );Model DEDESScostbased /all/;Solve DEDESScostbased us qcp min costThermal;


The total operating costs with using ESS are TC = $6. 4553 × 105 as obtained in GCode 7.1. The optimal solution for ESS integrated dynamic economic dispatch is given in Table 7.3. The hourly dispatch of ESS in DED problem is shown in Fig. 7.1. The hourly schedules of thermal units in DED-ESS problem are shown in Fig. 7.2.Table 7.3The ESS integrated dynamic economic dispatchTime
L

t
 (MW)
P

g, t
 (MW)SOC
t
 (MW h)
P

t


d
 (MW)
P

t


c
 (MW)
t
1
510.00555.92143.620.0045.92
t
2
530.00555.92168.250.0025.92
t
3
516.00555.92206.180.0039.92
t
4
510.00555.92249.800.0045.92
t
5
515.00555.92288.680.0040.92
t
6
544.00555.92300.000.0011.92
t
7
646.00646.00300.000.000.00
t
8
686.00686.00300.000.000.00
t
9
741.00716.28272.5324.720.00
t
10
734.00716.28252.8317.720.00
t
11
748.00716.28217.5831.720.00
t
12
760.00716.28169.0043.720.00
t
13
754.00716.28127.0837.720.00
t
14
700.00700.00127.080.000.00
t
15
686.00686.00127.080.000.00
t
16
720.00716.28122.953.720.00
t
17
714.00714.00122.950.000.00
t
18
761.00716.2873.2544.720.00
t
19
727.00716.2861.3410.720.00
t
20
714.00712.8060.001.200.00
t
21
618.00618.0060.000.000.00
t
22
584.00584.0060.000.000.00
t
23
578.00582.0563.850.004.05
t
24
544.00582.05100.000.0038.05
Fig. 7.1The hourly dispatch of ESS in DED problem
Fig. 7.2The hourly schedules of thermal units in DED-ESS problem



7.2.2 ESS Operation in Wind-DED Problem
The role of ESS in efficient utilization of wind energy is investigated in this section. The ESS-wind-DED is formulated as follows:  (7.2a)  (7.2b)  (7.2c)  (7.2d)  (7.2e)  (7.2f)  (7.2g)  (7.2h)  (7.2i)  (7.2j)  (7.2k)


GCode 7.2 The cost-based wind-DED integrated with ESS (7.2)

Set     t  /t1 * t24 /,  g   /p1 * p4 /;Table gendata (g, * )  generator cost  c h a r a c t e r i s t i c s  and limits     a    b     c   d    e    f     Pmin Pmax  RU0   RD0p1   0.12 14.80 89  1.2  −5    3    28   200   40   40p2   0.17 16.57 83  2.3  −4.24 6.09 20   290   30   30p3   0.15 15.55 100 1.1  −2.15 5.69 30   190   30   30p4   0.19 16.21 70  1.1  −3.99 6.2   20   260   50   50;table  data ( t, * )     lambda load windt1   32.71  510  44.1t2   34.72  530  48.5t3   32.71  516  65.7t4   32.74  510  144.9t5   32.96  515  202.3t6   34.93  544  317.3t7   44.9   646  364.4t8   52     686  317.3t9   53.03  741  271t10  47.26  734  306.9t11  44.07  748  424.1t12  38.63  760  398t13  39.91  754  487.6t14  39.45  700  521.9t15  41.14  686  541.3t16  39.23  720  560t17  52.12  714  486.8t18  40.85  761  372.6t19  41.2   727  367.4t20  41.15  714  314.3t21  45.76  618  316.6t22  45.59  584  311.4t23  45.56  578  405.4t24  34.72  544  470.4; *  −−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−variables         cost           Cost of  thermal units                 p(g, t )        Power generated by thermal power                               plant                 SOC( t ) ,Pd( t ),Pc( t ),Pw( t ), PWC ( t ) ;p. up(g, t ) =  gendata (g,"Pmax") ;  p. lo (g, t ) =  gendata (g,"Pmin");scalar  SOC0 /100/, SOCmax  /300/, eta_c /0.95/, eta_d /0.9/,  VWC  /50/;SOC. up( t )= SOCmax;  SOC. lo ( t ) =0.2*SOCmax;SOC. fx ( ' t24 ' )= SOC0;  Pc. up( t ) =0.2*SOCmax;Pc. lo ( t ) =0; Pd. up( t ) =0.2*SOCmax;  Pd. lo ( t ) =0;Pw. up( t )=data ( t, 'wind ' );  Pw. lo ( t ) =0;Pwc. up( t )=data ( t, 'wind ' );  Pwc. lo ( t ) =0;Equations Genconst3, Genconst4, costThermalcalc, constESS,balance,  wind;costThermalcalc..  cost  = e = sum( t, VWC* pwc( t ) )  + sum(( t, g), gendata (g, 'a ' ) * power (p(g, t ),2)+gendata (g, 'b ' ) *      p(g, t ) +gendata (g, ' c ' ) );Genconst3 (g, t ) ..  p(g, t+1) − p(g, t )=l=gendata (g, 'RU0 ' );Genconst4 (g, t ) ..  p(g, t −1) − p(g, t )=l=gendata (g, 'RD0' );constESS ( t )..SOC( t )= e = SOC0$( ord ( t )=1) +  SOC( t −1)$( ord ( t )>1) + Pc( t ) * eta_c− Pd( t )/eta_d;
balance( t ) ..   Pw( t )+  sum(g, p(g, t ) )+ Pd( t )= g =data ( t, ' load ' )+ Pc( t );wind( t ) ..      Pw( t )+ PWC ( t )= e =data ( t, 'wind ' );Model DEDESSwind /all/;Solve DEDESSwind us qcp min cost;parameter rep ( t, * );rep ( t, 'Pth ' )= sum(g, p. l (g, t ) );rep ( t, 'SOC' )= SOC. l ( t );rep ( t, 'Pd ' )= Pd. l ( t );rep ( t, 'Pc ' )= Pc. l ( t );rep ( t, 'Load ' )=data ( t, ' load ' );execute_unload "DEDESSwind. gdx" P. lexecute 'gdxxrw. exe DEDESSwind. gdx var= P   rng = Pthermal ! a1 'execute_unload "DEDESSwind. gdx" repexecute 'gdxxrw. exe DEDESSwind. gdx par = reP  rng =rep ! a1 '


The total operating costs using ESS are TC = $2. 2336 × 105 as obtained in GCode 7.2. The hourly dispatch of ESS in wind-DED problem is depicted in Fig. 7.3. The hourly schedules of thermal units in wind-DED-ESS problem are shown in Fig. 7.4.
Fig. 7.3The hourly dispatch of ESS in wind-DED problem
Fig. 7.4The hourly schedules of thermal units in wind-DED-ESS problem



7.2.3 ESS Operation in DC-OPF
The multi-period ESS integrated DC-OPF is formulated as follows:  (7.3a)  (7.3b)  (7.3c)  (7.3d)  (7.3e)  (7.3f)  (7.3g)  (7.3h)  (7.3i)  (7.3j)  (7.3k)  (7.3l)  (7.3m)  (7.3n)

The model is implemented on IEEE RTS 24-bus network with ESS integration which is shown in Fig. 7.5.Fig. 7.5The IEEE 24 RTS with ESS integration

It is a transmission network with the voltage levels of 138 kV, 230 kV, and Sbase = 100 MVA. The branch data for IEEE RTS 24-bus network is given in Table 7.4 [14]. The from bus, to bus, reactance (X), resistance (r), total line charging susceptance (b), and MVA rating (MVA) are specified in this table. The parallel lines in MATPOWER are merged, and the resultants are given in Table 7.4. The generation data for IEEE RTS 24-bus network is given in Table 7.5. The data of generating units in this network is inspired by Conejo et al. [15] and Bouffard et al. [16] with some modifications. The slack bus is bus 13 in this network.Table 7.4Branch data for IEEE RTS 24-bus networkFromTo
r(pu)
x(pu)
b(pu)Rating (MVA)FromTo
r(pu)
x(pu)
b(pu)Rating (MVA)120.00260.01390.461117511130.00610.04760.0999500130.05460.21120.057217511140.00540.04180.0879500150.02180.08450.022917512130.00610.04760.0999500240.03280.12670.034317512230.01240.09660.2030500260.04970.19200.052017513230.01110.08650.1818500390.03080.11900.032217514160.00500.03890.08185003240.00230.08390.000040015160.00220.01730.0364500490.02680.10370.028117515210.00320.02450.206010005100.02280.08830.023917515240.00670.05190.10915006100.01390.06052.459017516170.00330.02590.0545500780.01590.06140.016617516190.00300.02310.0485500890.04270.16510.044717517180.00180.01440.03035008100.04270.16510.044717517220.01350.10530.22125009110.00230.08390.000040018210.00170.01300.109010009120.00230.08390.000040019200.00260.01980.1666100010110.00230.08390.000040020230.00140.01080.0910100010120.00230.08390.000040021220.00870.06780.1424500
Table 7.5Generation data for IEEE RTS 24-bus networkGenBus
P

i

max

P

i

min

b

i
 ($/MW)
Cs

i
 ($)
Cd

i
 ($)RU
i
 (MW h−1)RD
i
 (MW h−1)SU
i
 (MW h−1)SD
i
 (MW h−1)UT
i
(h)DT
i
(h)
u

i, t = 0

U

i

0 (h)
S

i

0 (h)
g1184001005.4700474710510811150
g2214001005.4700474710611211160
g3115230.413.321430.41430.41414434584120
g4215230.413.321430.41430.41414445784120
g51515554.2516002121657788002
g61615554.2510.5231231221216673881100
g723310108.510.526246242121112125881100
g82335014010.8922982298282815416288150
g973507520.7172517254949778088002
g1013591206.8520.933056.73056.721212132281210008
g1115601226.1143743777193142001
g12223000000353531532600120

It is assumed that the network is intact and all branches and generating units are working in normal condition. The SOC of ESS connected to bus 19 and 21 are 200 and 100 MW h, respectively. The rest of ESS data is the same as Table 7.1. The minimum operating cost is $4. 1839 × 105 obtained by using the GCode 7.3.

GCode 7.3 The ESS-DCOPF GAMS code for IEEE Reliability test 24-bus network

Sets bus  /1*24/  , slack ( bus ) /13/,Gen /g1 * g12 /, t /t1 * t24 /;scalars  Sbase /100/  ,VOLL /10000/,VOLW /50/; a l i a s (bus, node );Table GD(Gen, * )   Generating units  c h a r a c t e r i s t i c s     Pmax Pmin   b     CostsD costst  RU    RD    SU   SD    UT    DT    uini  U0   So *  The same as beforeSet GB(bus,Gen) connectivity  index of  each generating  unit to each bus / *  The same as before    / ;Table BusData(bus, * )  Demands of  each bus in MW*  The same as before    ;table  branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s *  The same as before  ;Table WD ( t, * )      w                   d *  The same as before   ;parameter Wcap( bus )/8   20019  15021  100/;parameter SOCMax( bus )/19 20021  100/;scalar  eta_c /0.95/, eta_d /0.9/,  VWC  /50/;parameter SOC0( bus );SOC0( bus ) =0.2*SOCMax( bus )/ sbase;branch (bus, node, 'x ' )$( branch (bus, node, 'x ' )=0) = branch (node,    bus, 'x ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch   (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $branch (bus, node, ' Limit ' ) =1/branch (bus, node, 'x ' );branch (bus, node, ' z ' ) $branch (bus, node, ' Limit ' )=
sqrt( power ( branch (bus, node, 'x ' ),2)+ power ( branch (bus, node,    ' r ' ),2) );branch (node, bus, ' z ' )= branch (bus, node, ' z ' );parameter conex (bus, node );conex (bus, node )$( branch (bus, node, ' limit ' )and branch (node, bus, ' limit ' ) ) =1;conex (bus, node )$( conex (node, bus ) ) =1;Variables  OF, Pij (bus, node, t ),Pg(Gen, t ), delta (bus, t ), lsh (bus, t ),Pw(bus, t ),pwc(bus, t ),SOC(bus, t ),Pd(bus, t ),Pc(bus, t );Equations const1, const2, const3, const4, const5, const6, constESS;const1 (bus, node, t )$( conex (bus, node ) ) ..  Pij (bus, node, t )= e =branch (bus, node, ' bij ' ) * ( delta (bus, t ) −delta (node, t ) );const2 (bus, t ) ..  lsh (bus, t )$BusData(bus, 'pd ' )+ Pw(bus, t )$Wcap( bus )+ sum(Gen$GB(bus,Gen),Pg(Gen, t ) )+(− Pc(bus, t )+ Pd(bus, t ) )$SOCMAX( bus ) − WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase= e =+ sum( node$conex (node, bus ), Pij (bus, node, t ) );const3    ..  OF = g = sum(( bus,Gen, t )$GB(bus,Gen),Pg(Gen, t ) * GD (Gen, 'b ' ) * Sbase )+ sum(( bus, t ),VOLL * lsh (bus, t ) * Sbase$BusData (bus, 'pd ' )+ VOLW* Pwc(bus, t ) * sbase$Wcap ( bus ) );const4 (gen, t ) ..  pg(gen, t+1) − pg(gen, t )=l= GD (gen, 'RU' )/Sbase;const5 (gen, t ) ..  pg(gen, t −1) − pg(gen, t )=l= GD (gen, 'RD' )/Sbase;const6 (bus, t )$Wcap( bus ) ..  pwc(bus, t )= e = WD ( t, 'w' ) * Wcap( bus )/Sbase− pw(bus, t );constESS (bus, t )$SOCMax( bus )..SOC(bus, t )= e = SOC0( bus )$( ord ( t )=1) +SOC(bus, t −1)$( ord ( t )>1) + Pc(bus, t ) * eta_c− Pd(bus, t )/eta_d;Model loadflow     /all/;Pg. lo (Gen, t )= GD (Gen, 'Pmin ' )/Sbase;  Pg. up(Gen, t )= GD (Gen, 'Pmax ' )/Sbase;delta. up(bus, t )= pi/2;  delta. lo (bus, t )=− pi/2;  delta. fx ( slack, t ) =0;Pij. up(bus, node, t )$ (( conex (bus, node ) ) )=  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node, t )$ (( conex (bus, node ) ) )=− branch (bus, node, ' Limit ' )/Sbase;lsh. up(bus, t )= WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase;  lsh. lo (bus, t ) =0;Pw. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pw. lo (bus, t ) =0;Pwc. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pwc. lo (bus, t ) =0;SOC. up(bus, t )= SOCmax( bus )/ sbase;  SOC. lo (bus, t ) =0.2*SOCmax( bus )/ sbase;SOC. fx (bus, ' t24 ' )= SOC0( bus );Pc. up(bus, t ) =0.2*SOCmax( bus )/ sbase;  Pc. lo (bus, t ) =0;Pd. up(bus, t ) =0.2*SOCmax( bus )/ sbase;  Pd. lo (bus, t ) =0;Solve loadflow minimizing OF  using lp;


The hourly dispatch of ESS in DC-OPF problem is shown in Fig. 7.6.Fig. 7.6The hourly dispatch of ESS in DC-OPF problem

The hourly dispatch of thermal generating units in DC-OPF problem is depicted in Fig. 7.7.
Fig. 7.7The hourly dispatch of thermal generating units in DC-OPF problem



7.2.4 ESS Operation in AC-OPF
The multi-period ESS integrated AC-OPF is formulated as follows:  (7.4a)  (7.4b)  (7.4c)  (7.4d)  (7.4e)  (7.4f)  (7.4g)  (7.4h)  (7.4i)  (7.4j)  (7.4k)  (7.4l)  (7.4m)  (7.4n)  (7.4o)  (7.4p)  (7.4q)  (7.4r)  (7.4s)

The AC-OPF model is implemented on IEEE RTS 24-bus network with ESS integration which is shown in Fig. 7.5. The wind capacities and ESS characteristics are the same as Sect. 7.2.3. The minimum operating cost is $4. 3018 × 105 obtained by using the GCode 7.4.

GCode 7.4 The ESS-ACOPF GAMS code for IEEE Reliability test 24-bus network

Sets bus  /1*24/  , slack ( bus ) /13/,Gen /g1 * g12 /, t /t1 * t24 /;Scalars  Sbase /100/  ,VOLL /10000/,VOLW /50/; a l i a s (bus, node );Table GD(Gen, * )   Generating units  c h a r a c t e r i s t i c s
set GB(bus,Gen) connectivity  index of  each generating  unit to each bus ;Table BusData(bus, * )  Demands of  each bus in MWTable branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s               r       x       b      limit;Table WD ( t, * )Parameter Wcap( bus ) Wind capacities  at each busparameter SOCMax( bus )/ 19 20021  100 /;  Scalar  eta_c /0.95/, eta_d /0.9/,  VWC  /50/;Parameter SOC0( bus );  SOC0( bus ) =0.2*SOCMax( bus )/ sbase;branch (bus, node, ' z ' ) $branch (bus, node, ' Limit ' )= sqrt( power ( branch(bus, node, 'x ' ),2)+ power ( branch (bus, node, ' r ' ),2) );branch (node, bus, ' theta ' ) $branch (node, bus, ' limit ' )=arctan ( branch (node, bus, 'x ' )/branch (node, bus, ' r ' ) );  Parameter conex (bus, node );conex (bus, node )$( branch (bus, node, ' limit ' )and branch (node, bus, ' limit ' ) ) =1;conex (bus, node )$( conex (node, bus ) ) =1;Variables  OF, Qij (bus, node, t ), Pij (bus, node, t ),Pg(Gen, t ),Qg(Gen, t ), delta (bus, t ),V(bus, t ), lsh (bus, t ),Pw(bus, t ),pwc(bus, t ),SOC(bus, t ),Pd(bus, t ),Pc(bus, t );Equations const2, const2B, const3, const4, const5, const6, const7, const8, constESS;const1 (bus, node, t ) $conex (bus, node ).. Pij (bus, node, t )= e =branch (bus, node, ' bij ' ) * ( delta (bus, t ) −delta (node, t ) );const2 (bus, t ).. lsh (bus, t )$BusData(bus, 'pd ' )+ Pw(bus, t )$Wcap( bus )+ sum(Gen$GB(bus,Gen),Pg(Gen, t ) ) +(− Pc(bus, t )+ Pd(bus, t ) )$SOCMAX( bus ) − WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase= e =+ sum( node$conex (node, bus ), Pij (bus, node, t ) );const2B (bus, t ).. sum(Gen$GB(bus,Gen),Qg(Gen, t ) ) − WD ( t, 'd ' ) * BusData(bus, 'Qd ' )/Sbase= e =+ sum( node$conex (node, bus ), Qij (bus, node, t ) );const3..OF = g = sum(( bus,Gen, t )$GB(bus,Gen),Pg(Gen, t ) * GD (Gen, 'b ' ) * Sbase )+ sum(( bus, t ),VOLL * lsh (bus, t ) * Sbase$BusData (bus, 'pd ' )+ VOLW* Pwc(bus, t ) * sbase$Wcap ( bus ) );const4 (gen, t ) ..  pg(gen, t+1) − pg(gen, t )=l= GD (gen, 'RU' )/Sbase;const5 (gen, t ) ..  pg(gen, t −1) − pg(gen, t )=l= GD (gen, 'RD' )/Sbase;const6 (bus, t )$Wcap( bus ) ..  pwc(bus, t )= e = WD ( t, 'w' ) * Wcap( bus )/Sbase− pw(bus, t );constESS (bus, t )$SOCMax( bus )  ..  SOC(bus, t )= e = SOC0( bus )$( ord ( t )=1)                   + SOC(bus, t −1)$( ord ( t )>1) + Pc(bus, t ) * eta_c− Pd(bus, t )/eta_d;const7 (bus, node, t ) $conex (bus, node ).. Pij (bus, node, t )= e =V(bus, t ) * V(bus, t ) * cos( branch (node, bus, ' theta ' ) )/branch (node, bus, ' z ' )− V(bus, t ) * V(node, t ) * cos( delta (bus, t ) −delta (node, t )+ branch (node, bus, ' theta ' ) )/branch (node, bus, ' z ' );const8 (bus, node, t ) $conex (bus, node ) ..  Qij (bus, node, t )= e =V(bus, t ) * V(bus, t ) * sin( branch (node, bus, ' theta ' ) )/branch (node, bus, ' z ' )− V(bus, t ) * V(node, t ) * sin( delta (bus, t ) −delta (node, t )+ branch (node, bus, ' theta ' ) )/branch (node, bus, ' z ' )−  branch (node, bus, 'b ' ) * V(bus, t ) * V(bus, t ) /2;  Model loadflow     /all/;Pg. lo (Gen, t )= GD (Gen, 'Pmin ' )/Sbase;  Pg. up(Gen, t )= GD (Gen, 'Pmax ' )/Sbase;Qg. lo (Gen, t )= GD (Gen, 'Qmin ' )/Sbase;  Qg. up(Gen, t )= GD (Gen, 'Qmax ' )/Sbase;delta. up(bus, t )= pi/2;  delta. lo (bus, t )=− pi/2;  delta. fx ( slack, t ) =0;V. up(bus, t ) =1.05; V. lo (bus, t ) =0.95; V. l (bus, t ) =1;Pij. up(bus, node, t )$ (( conex (bus, node ) ) )=  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node, t )$ (( conex (bus, node ) ) )=− branch (bus, node, ' Limit ' )/Sbase;Qij. up(bus, node, t )$ (( conex (bus, node ) ) )=  branch (bus, node, ' Limit ' )/Sbase;Qij. lo (bus, node, t )$ (( conex (bus, node ) ) )=− branch (bus, node, ' Limit ' )/Sbase;lsh. up(bus, t )=  WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase;  lsh. lo (bus, t )=  0;Pw. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pw. lo (bus, t ) =0;Pwc. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pwc. lo (bus, t ) =0;SOC. up(bus, t )= SOCmax( bus )/ sbase;  SOC. lo (bus, t ) =0*SOCmax( bus )/ sbase;SOC. fx (bus, ' t24 ' )= SOC0( bus );  Pc. up(bus, t ) =0.2*SOCmax( bus )/ sbase;  Pc. lo (bus, t ) =0;Pd. up(bus, t ) =0.2*SOCmax( bus )/ sbase;  Pd. lo (bus, t ) =0;Solve loadflow minimizing OF  using nlp;


The hourly dispatch of ESS in AC-OPF problem is shown in Fig. 7.8 and the hourly dispatch of thermal generating units in AC-OPF problem is depicted in Fig. 7.9.Fig. 7.8The hourly dispatch of ESS in AC-OPF problem
Fig. 7.9The hourly dispatch of thermal generating units in AC-OPF problem

The hourly active power losses in AC-OPF problem are shown in Fig. 7.10. The hourly min/average/max value of voltage magnitudes (pu) is depicted in Fig. 7.11.
Fig. 7.10The hourly active power losses in AC-OPF problem
Fig. 7.11The hourly min/avegare/max values of voltage magnitudes (pu)




7.3 ESS Allocation
The multi-period ESS integrated DC-OPF is formulated as follows:  (7.5a)  (7.5b)  (7.5c)  (7.5d)  (7.5e)  (7.5f)  (7.5g)  (7.5h)  (7.5i)  (7.5j)  (7.5k)  (7.5l)  (7.5m)  (7.5n)  (7.5o) Equation (7.5n) enforces the state of charge exist only in those buses that N

i

ESS has nonzero value. The total number of ESS units is limited by (7.5o). The model is implemented on IEEE RTS 24-bus network with the wind power generation as shown in Fig. 7.5. The purpose is to find the optimal allocation ESS to minimize the total operating costs. It should be noted that this formulation is only considering 24 h. For planning purposes, longer planning horizon should be taken into account, and load growth and investment costs should also be considered. The ESS allocation is solved using the GCode 7.5 and the total operating cost is obtained as $4. 1753 × 105. The optimal locations and capacities of ESS are shown in Fig. 7.12.Fig. 7.12The optimal allocation of ESS units in IEEE RTS network


GCode 7.5 The ESS allocation using DC-OPF GAMS code for IEEE Reliability test 24-bus network

Sets bus  /1*24/  , slack ( bus ) /13/,Gen /g1 * g12 /, t /t1 * t24 /;Scalars  Nmax , Sbase /100/  ,VOLL /10000/,VWC /50/; a l i a s (bus, node );Table GD(Gen, * )   Generating units  c h a r a c t e r i s t i c s *  Removed for saving space , the same as previous data
set GB(bus,Gen) connectivity  index of  each generating  unit to each bus/ *  Removed for saving space , the same as previous data    / ;Table BusData(bus, * )  Demands of  each bus in MW*  Removed for saving space , the same as previous datatable  branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s               r       x       b      limit *  Removed for saving space , the same as previous data  ;Table WD ( t, * ) *  Removed for saving space , the same as previous data  ;parameter Wcap( bus )/8   20019  15021  100/;parameter SOCMax( bus );  scalar  eta_c /0.95/, eta_d /0.9/,  VWC  /50/;parameter SOC0( bus );branch (bus, node, 'x ' )$( branch (bus, node, 'x ' )=0) = branch (node, bus, 'x ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $branch (bus, node, ' Limit ' ) =1/branch (bus, node, 'x ' );branch (bus, node, ' z ' ) $branch (bus, node, ' Limit ' )= sqrt( power ( branch(bus, node, 'x ' ),2)+ power ( branch (bus, node, ' r ' ),2) );branch (node, bus, ' z ' )= branch (bus, node, ' z ' );Parameter conex (bus, node );conex (bus, node )$( branch (bus, node, ' limit ' )and branch (node, bus, ' limit ' ) ) =1;conex (bus, node )$( conex (node, bus ) ) =1;Variables  OF, Pij (bus, node, t ),Pg(Gen, t ), delta (bus, t ), lsh (bus, t ),Pw(bus, t ),pwc(bus, t ),SOC(bus, t ),Pd(bus, t ),Pc(bus, t );Integer  variable  NESS( bus );Equations const1, const2, const3, const4, const5, const6, constESS,constESS2, constESS3, constESS4, constESS5, constESS6;const1 (bus, node, t )$( conex (bus, node ) ) ..  Pij (bus, node, t )= e =branch (bus, node, ' bij ' ) * ( delta (bus, t ) −delta (node, t ) );const2 (bus, t ) ..  lsh (bus, t )$BusData(bus, 'pd ' )+ Pw(bus, t )$Wcap( bus )+ sum(Gen$GB(bus,Gen),Pg(Gen, t ) )+(− Pc(bus, t )+ Pd(bus, t ) )$SOCMAX( bus )− WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase= e =+ sum( node$conex (node, bus ), Pij (bus, node, t ) );const3 ..  OF = g = sum(( bus,Gen, t )$GB(bus,Gen),Pg(Gen, t ) * GD (Gen, 'b ' ) * Sbase )+ sum(( bus, t ),VOLL * lsh (bus, t ) * Sbase$BusData (bus, 'pd ' ) + VWC* Pwc(bus, t ) * sbase$Wcap ( bus ) );const4 (gen, t ) ..  pg(gen, t+1) − pg(gen, t )=l= GD (gen, 'RU' )/Sbase;const5 (gen, t ) ..  pg(gen, t −1) − pg(gen, t )=l= GD (gen, 'RD' )/Sbase;const6 (bus, t )$Wcap( bus ) ..  pwc(bus, t )= e = WD ( t, 'w' ) * Wcap( bus )/Sbase− pw(bus, t );constESS (bus, t )  ..  SOC(bus, t )= e =(0.2*NESS( bus ) * SOCMax( bus )/ sbase )$( ord ( t )=1) +SOC(bus, t −1)$( ord ( t )>1) + Pc(bus, t ) * eta_c− Pd(bus, t )/eta_d;constESS2 (bus, t ) ..  SOC(bus, t )=l= NESS( bus ) * SOCmax( bus )/ sbase;constESS3 (bus, t ) ..  Pc(bus, t )=l =0.2*NESS( bus ) * SOCmax( bus )/ sbase;constESS4 (bus, t ) ..  Pd(bus, t )=l =0.2*NESS( bus ) * SOCmax( bus )/ sbase;constESS5        ..  sum(bus,NESS( bus ) )=l= Nmax;constESS6 ( bus ) ..  SOC(bus, ' t24 ' )= e =0.2*NESS( bus ) * SOCmax( bus )/ sbase;Model loadflow     /all/;Pg. lo (Gen, t )= GD (Gen, 'Pmin ' )/Sbase;  Pg. up(Gen, t )= GD (Gen, 'Pmax ' )/Sbase;delta. up(bus, t )= pi/2;  delta. lo (bus, t )=− pi/2;  delta. fx ( slack, t ) =0;Pij. up(bus, node, t )$ (( conex (bus, node ) ) )=  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node, t )$ (( conex (bus, node ) ) )=− branch (bus, node, ' Limit ' )/Sbase;lsh. up(bus, t )=  WD ( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase;  lsh. lo (bus, t )=  0;Pw. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pw. lo (bus, t ) =0;Pwc. up(bus, t )= WD ( t, 'w' ) * Wcap( bus )/Sbase;  Pwc. lo (bus, t ) =0;SOC. lo (bus, t ) =0; Pc. lo (bus, t ) =0; Pd. lo (bus, t ) =0;NESS. up( bus ) =5; SOCMax( bus ) =20; SOC0( bus ) =0.2*SOCMax( bus )/ sbase;  Nmax=15;Solve loadflow minimizing OF  using mip;


The hourly dispatch of storage unit in optimal ESS allocation problem is shown in Fig. 7.13. The hourly dispatch of thermal generating units in ESS allocation problem is depicted in Fig. 7.14.
Fig. 7.13The hourly dispatch of storage unit in optimal ESS allocation problem
Fig. 7.14The hourly dispatch of thermal generating units in ESS allocation problem


Nomenclature

Indices



k
Blocks considered for piecewise linear fuel cost function.
i
Thermal generating units.
t
Time intervals.


Parameters

λ

t


e

Electric energy price at time t ($/MW h).
L

t

Electric demand at time t.
a

g
, b

g
, c

g

Fuel cost coefficients of unit i.
P

g

max∕min
Maximum/minimum limits of power generation of thermal unit i.RU
g
∕RD
g

Ramp-up/down limit of generation unit i (MW/h).VWCValue of wind curtailment
Λ

t


w

Wind availability at time t



Variables

U

i, t

ESS
Binary variable indicating the charge/discharge mode of ESS connected to bus i at time t

P

t


w

Wind generation at time t

P

t

wc
Wind curtailment at time t

C

g, t

Fuel cost of thermal unit i at time t ($).
P

g, t

Power generated by thermal unit i at time t (MW).TCTotal operating costs ($).




7.4 Applications
Various applications of ESS in power system operation and planning studies have been investigated in the literature. Some of these aspects are listed here as follows: Electrical Energy Storage and Real-Time Thermal Ratings to Defer Network Reinforcement [17]Energy storage and its use with intermittent renewable energy [18]Sizing of Energy Storage for microgrids [19]Primary Frequency Control using ESS [20]OPF in microgrids with ESS [21]ESS sizing for grid-connected photovoltaic systems [22]Coupling pumped hydro energy storage with UC [23]Transmission congestion relief privately owned large-scale ESS [24]Phase balancing using ESS in power grids under uncertainty [11]Price maker ESS in nodal energy markets [25]Value of ESS in dynamic economic dispatch game [26]Impact of strategic behavior and ownership of ESS on provision of flexibility [27]Reliability improvement using ESS [28]



References


1.
A.M. Gee, F. Robinson, W. Yuan, A superconducting magnetic energy storage-emulator/battery supported dynamic voltage restorer. IEEE Trans. Energy Convers. 32(1), 55-64 (2017)Crossref


2.
C. Krupke, J. Wang, J. Clarke, X. Luo, Modeling and experimental study of a wind turbine system in hybrid connection with compressed air energy storage. IEEE Trans. Energy Convers. 32(1), 137-145 (2017)Crossref


3.
X. Chang, Y. Li, X. Li, X. Chen, An active damping method based on a supercapacitor energy storage system to overcome the destabilizing effect of instantaneous constant power loads in dc microgrids. IEEE Trans. Energy Convers. 32(1), 36-47 (2017)Crossref


4.
B. Steffen, Prospects for pumped-hydro storage in germany. Energy Policy 45, 420-429 (2012)Crossref


5.
J.M. Lujano-Rojas, R. Dufo-Lpez, J.L. Bernal-Agustn, J.P.S. Catalo, Optimizing daily operation of battery energy storage systems under real-time pricing schemes. IEEE Trans. Smart Grid 8(1), 316-330 (2017)Crossref


6.
M.I. Daoud, A.M. Massoud, A.S. Abdel-Khalik, A. Elserougi, S. Ahmed, A flywheel energy storage system for fault ride through support of grid-connected VSC HVDC-based offshore wind farms. IEEE Trans. Power Syst. 31(3), 1671-1680 (2016)Crossref


7.
C. Park, R. Sedundo, V. Knazkins, P. Korba, Feasibility analysis of the power-to-gas concept in the future swiss power system, in: CIRED Workshop 2016 (2016), pp. 1-5


8.
S. Pulendran, J.E. Tate, Energy storage system control for prevention of transient under-frequency load shedding. IEEE Trans. Smart Grid 8(2), 927-936 (2017)


9.
C.L.T. Borges, D.M. Falcao, Optimal distributed generation allocation for reliability, losses and voltage improvement. Int. J. Electr. Power Energy Syst. 28(6), 413-420 (2006)Crossref


10.
P. Maghouli, A. Soroudi, A. Keane, Robust computational framework for mid-term techno-economical assessment of energy storage. IET Gener. Transm. Distrib. 10(3), 822-831 (2016)Crossref


11.
S. Sun, B. Liang, M. Dong, J.A. Taylor, Phase balancing using energy storage in power grids under uncertainty. IEEE Trans. Power Syst. 31(5), 3891-3903 (2016)Crossref


12.
L.S. Vargas, G. Bustos-Turu, F. Larran, Wind power curtailment and energy storage in transmission congestion management considering power plants ramp rates. IEEE Trans. Power Syst. 30(5), 2498-2506 (2015)Crossref


13.
A. Soroudi, P. Siano, A. Keane, Optimal DR and ESS scheduling for distribution losses payments minimization under electricity price uncertainty. IEEE Trans. Smart Grid 7(1), 261-272 (2016)Crossref


14.
R.D. Zimmerman, C.E. Murillo-Sanchez, R.J. Thomas, Matpower: steady-state operations, planning, and analysis tools for power systems research and education. IEEE Trans. Power Syst. 26(1), 12-19 (2011)Crossref


15.
A.J. Conejo, M. Carrión, J.M. Morales, Decision Making Under Uncertainty in Electricity Markets, vol. 1 (Springer, New York, 2010)CrossrefMATH


16.
F. Bouffard, F.D. Galiana, A.J. Conejo, Market-clearing with stochastic security-part II: case studies. IEEE Trans. Power Syst. 20(4), 1827-1835 (2005)Crossref


17.
D.M. Greenwood, N.S. Wade, P.C. Taylor, P. Papadopoulos, N. Heyward, A probabilistic method combining electrical energy storage and real-time thermal ratings to defer network reinforcement. IEEE Trans. Sustain. Energy 8(1), 374-384 (2017)Crossref


18.
J.P. Barton, D.G. Infield, Energy storage and its use with intermittent renewable energy. IEEE Trans. Energy Convers. 19(2), 441-448 (2004)Crossref


19.
S.X. Chen, H.B. Gooi, M.Q. Wang, Sizing of energy storage for microgrids. IEEE Trans. Smart Grid 3(1), 142-151 (2012)Crossref


20.
A. Oudalov, D. Chartouni, C. Ohler, Optimizing a battery energy storage system for primary frequency control. IEEE Trans. Power Syst. 22(3), 1259-1266 (2007)Crossref


21.
Y. Levron, J.M. Guerrero, Y. Beck, Optimal power flow in microgrids with energy storage. IEEE Trans. Power Syst. 28(3), 3226-3234 (2013)Crossref


22.
Y. Ru, J. Kleissl, S. Martinez, Storage size determination for grid-connected photovoltaic systems. IEEE Trans. Sustain. Energy 4(1), 68-81 (2013)Crossref


23.
K. Bruninx, Y. Dvorkin, E. Delarue, H. Pandi, W. Dhaeseleer, D.S. Kirschen, Coupling pumped hydro energy storage with unit commitment. IEEE Trans. Sustain. Energy 7(2), 786-796 (2016)Crossref


24.
H. Khani, M.R. Dadash Zadeh, A.H. Hajimiragha, Transmission congestion relief using privately owned large-scale energy storage systems in a competitive electricity market. IEEE Trans. Power Syst. 31(2), 1449-1458 (2016)Crossref


25.
H. Mohsenian-Rad, Coordinated price-maker operation of large energy storage units in nodal energy markets. IEEE Trans. Power Syst. 31(1), 786-797 (2016)Crossref


26.
W. Tang, R. Jain, Dynamic economic dispatch game: the value of storage. IEEE Trans. Smart Grid 7(5), 2350-2358 (2016)Crossref


27.
K. Hartwig, I. Kockar, Impact of strategic behavior and ownership of energy storage on provision of flexibility. IEEE Trans. Sustain. Energy 7(2), 744-754 (2016)Crossref


28.
A. Vieira Pombo, J. Murta-Pina, V. Ferno Pires, Multiobjective formulation of the integration of storage systems within distribution networks for improving reliability. Electr. Power Syst. Res. 148, 87-96 (2017)Crossref














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_8





8. Power System Observability




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides a solution for increasing the power system observability by allocation of Phasor Measurement Units (PMU) problem in GAMS. The PMU is able to measure the voltage phasor at the connection bus and also it measures the current phasor of any branch connected to the bus hosting the PMU. Different cases are analyzed and the problem is tested on some standard IEEE cases.

8.1 Min No. PMU Placement
The PMU devices are able to provide the system operator a set of synchronized phasor measurements in the system in order to make it observable. In this case, it is needed to make every existing bus observable no matter if it has any generation/demand or not. Additionally, the contingencies are not considered. In order to explain the observability concept, Fig. 8.1 provides an example. If a PMU is installed on bus i then bus i and all adjacent buses are observable. It means that the voltage phasors of these buses are known. The system is called observable if every bus of the network is observable.
Fig. 8.1PMU functionality and the observability concept

The PMU placement concept is simply explained as follows: If a bus or at least one of its adjacent buses is equipped with PMU then this bus is observable. One trivial solution for PMU placement problem is installing PMU at all buses. This solution makes all buses observable but obviously the costs would be very high and sometimes practical aspects do not allow this to happen. In other words, it is tried to find the minimum number of buses to have PMU devices in order to make the whole system observable. This PMU placement problem is formulated as follows:  (8.1a)  (8.1b)  (8.1c) where i, j are bus index, χ

i
 is a binary variable indicating if it has PMU (1) or not (0), Ω

B
 is the set of all network buses, α

i
 is a binary parameter (observability) which is set to 1 to make the whole network observable, and Ω

i
 is the set of all buses adjacent (connected) to bus i.
The GAMS code for solving the optimal PMU allocation in IEEE 14-bus network without considering the zero bus injection is provided in GCode 8.1.

GCode 8.1 PMU allocation for IEEE 14 network without considering zero injection nodes

Sets bus  / 1 * 1 4 /;Alias (bus, node );Table BusData(bus, * )  buss c h a r a c t e r i s t i c s         Pd      gen1        0       12        21.7    13        94.2    14        47.85        7.66        11.2    18        0       19        29.510       911       3.512       6.113       13.514       14.9    ;
set conex          Bus connectivity  matrix/1       .         21        .         52        .         32        .         42        .         53        .         44        .         54        .         74        .         95        .         66        .         116        .         126        .         137        .         87        .         99        .         109        .         1410       .         1112       .         1313       .         14/;conex (bus, node )$( conex (node, bus ) ) =1;Variables  OF;Binary variable  PMU ( bus );Equationsconst1,const2;const1    ..  OF = g = sum(bus,PMU ( bus ) );const2 ( bus ) ..  PMU ( bus )+ sum( node$conex (bus, node ), PMU ( node ) )= g=1;Model placement     /const1, const2 /;Solve placement minimizing OF  using mip;


The optimal PMU allocation for IEEE 14-bus without considering the zero injection buses is obtained using GCode 8.1 and is shown in Fig. 8.2. The simulation results show that four PMU devices are required to make the IEEE 14-bus network fully observable. The optimal PMU allocation for IEEE 57-bus without considering the zero injection buses is shown in Fig. 8.3. The simulation results show that 14 PMU devices are needed to make the IEEE 57-bus network fully observable.Fig. 8.2Optimal PMU allocation for IEEE 14-bus without considering the zero injection buses
Fig. 8.3Optimal PMU allocation for IEEE 57-bus without considering the zero injection buses

The optimal PMU allocation for IEEE 118-bus without considering the zero injection buses is shown in Fig. 8.4. The simulation results show that 32 PMU devices are required to make the IEEE 118-bus network fully observable.
Fig. 8.4Optimal PMU allocation for IEEE 118-bus without considering the zero injection buses



8.2 Min Cost PMU placement
The cost of PMU device is basically dependent on the number of channels used for measurement. In [1], it is stated that if the cost of each PMU is C and the number of used channels is n at bus i then the total PMU cost would be w

i
 = (1 + 0. 1 × n)C in the mentioned bus. n is the number of branches connected to bus i.  (8.2a)  (8.2b)  (8.2c) where i, j are bus index, χ

i
 is a binary variable indicating if it has PMU (1) or not (0), Ω

B
 is the set of all network buses, and α

i
 is a binary parameter (observability) which is set to 1 to make the whole network observable.
The GAMS code for solving the optimal allocation of PMU devices with minimum cost without considering the ZIB is described in GCode 8.2.

GCode 8.2 Min cost PMU allocation for IEEE 14 network without considering zero injection nodes

Sets bus  / 1 * 1 4 /; a l i a s (bus, node );Set conex          Bus connectivity  matrix/1       .         21        .         52        .         32        .         42        .         53        .         44        .         54        .         74        .         95        .         66        .         116        .         126        .         137        .         87        .         99        .         109        .         1410       .         1112       .         1313       .         14/;conex (bus, node )$( conex (node, bus ) ) =1;parameters cost ( bus );cost ( bus ) =1+0.1*sum( node$conex (bus, node ),1);VariablesOF_c;binary variablePMU ( bus );Equationsconst0,const2;const0      ..  OF_c = e = sum(bus, cost ( bus ) *PMU ( bus ) );const2 ( bus ) ..  PMU ( bus )+ sum( node$conex (bus, node ),    PMU ( node ) )= g=1;Option optcr =0;Model placement0     /const0, const2 /;Solve placement0 minimizing OF_c using mip;Display pmu. l;


The minimum cost PMU allocation problem is solved and the solutions are given in Table 8.1.Table 8.1Optimal allocation of PMU devices with minimum cost without considering the ZIBNetworkPMU locationsIEEE 142, 8, 10, 13IEEE 572, 6, 12, 19, 22, 25 27, 32, 36, 39, 41, 45 46, 47, 50, 52, 55IEEE 1181, 5, 10, 12, 15, 17 21, 23, 28, 30, 36, 40 44, 46, 50, 52, 56, 62 64, 71, 75, 77, 80, 85 87, 91, 94, 101, 105, 110 114, 116



8.3 Min No. PMU Placement Considering ZIB
Some buses in the network do not contain demand or generation which are called Zero Injection Buses (ZIB). These buses can be specially treated in terms of observability as explained in Fig. 8.5. This figure shows zero injection bus j and its adjacent buses. The observability of each bus is guaranteed with the observability of n − 1 of them [2]. In this way, the network buses Ω

B
 will be divided into two categories as follows: Zero injection buses Ω

z
 or adjacent to zero injection buses Ω

za

Fig. 8.5PMU functionality and observability concept in zero injection buses
The rest of the buses (normal buses) Ω

n




 (8.3a)  (8.3b)  (8.3c)  (8.3d) where i, j are bus index, χ

i
 is a binary variable indicating if it has PMU (1) or not (0), Ω

B
 is the set of all network buses, and α

i
 is a binary parameter (observability) which is set to 1 to make the whole network observable.
The zero injection buses for the networks under study are specified in Table 8.2. The GAMS code for solving the optimal PMU allocation in IEEE 14-bus network without considering the zero bus injection is provided in GCode 8.1 The optimal PMU allocation for IEEE 14 and 57 bus systems with considering the zero injection buses are given in Figs. 8.6 and 8.7, respectively. The optimal PMU allocation for IEEE 118-bus with considering the zero injection buses is shown in Fig. 8.8. The simulation results show that 29 PMU devices are required to make the IEEE 118-bus network fully observable.Fig. 8.6Optimal PMU allocation for IEEE 14-bus with considering the zero injection buses
Fig. 8.7Optimal PMU allocation for IEEE 57-bus with considering the zero injection buses
Fig. 8.8Optimal PMU allocation for IEEE 118-bus with considering the zero injection buses
Table 8.2ZIB buses in different networks under studyNetworkZero injection busesIEEE 147IEEE 574,7,11,21,22,24,26,34 36,37,39,40,45,46,48IEEE 1185,9,30,37,38,63,64,68,71,81


GCode 8.3 PMU allocation for IEEE 14 network considering zero injection nodes

Set bus  / 1 * 1 4 /;  a l i a s (bus, node );  a l i a s (bus, shin );Table BusData(bus, * )  bus c h a r a c t e r i s t i c s         Pd      gen1        0       12        21.7    13        94.2    14        47.85        7.66        11.2    18        0       19        29.510       911       3.512       6.113       13.514       14.9     ;
set conex         Bus connectivity  matrix/1       .         21        .         52        .         32        .         42        .         53        .         44        .         54        .         74        .         95        .         66        .         116        .         126        .         137        .         87        .         99        .         109        .         1410       .         1112       .         1313       .         14/;conex (bus, node )$( conex (node, bus ) ) =1;parameters A(bus, node ),B(bus, node ),Z( bus ), normal ( bus ), abnormal ( bus );Z( bus )$(BusData(bus, 'Pd ' )=0 and BusData(bus, ' gen ' )=0) =yes;A(bus, node )$(Z( bus ) and conex (bus, node ) )=yes;normal ( bus )$( Z( bus )=0 and sum( node$conex (bus, node ),Z( node ) )=0) =yes;B(bus, node )$(A(bus, node ) )=yes;B(bus, node )$(Z( node ) and ord ( bus )= ord ( node ) )=yes;abnormal ( bus )$( normal ( bus )=0) =yes;  Variables  OF;  binary variable  PMU ( bus );Equations const1, eq1, eq2;const1    ..  OF = g = sum(bus,PMU ( bus ) );eq1 ( bus ) $normal ( bus ) ..  PMU ( bus )+ sum( node$conex (bus, node ), PMU ( node ) )= g=1;eq2 ( bus ) $abnormal ( bus ) ..     sum( shin$conex (bus, shin ) ,PMU ( shin )+ sum( node$conex ( shin, node ), PMU ( node ) ) ) = g = sum(node,B(bus, node ) ) −1;Model placementWithzeroinjection     /const1, eq1, eq2 /;Solve placementWithzeroinjection minimizing OF  using mip;




8.4 Min No. PMU Placement for Maximizing the Observability
Another question that can be asked is how to maximize the system observability using a limited number of PMU devices. How should these units be allocated in a given system? In order to answer this question, a binary variable α

i
 is defined which states bus i is observable (1) or not (0). The optimization problem to be solved is as follows:  (8.4a)  (8.4b)  (8.4c)  (8.4d) where i, j are bus index, χ

i
 is a binary variable indicating if it has PMU (1) or not (0), Ω

B
 is the set of all network buses, α

i
 is an integer variable (observability) which its minimum value is set to 1 to make the whole network observable, and N
PMU is the number of available PMU devices.
The GAMS code for solving the optimal PMU allocation in IEEE 14-bus network for maximizing the system observability is provided in GCode 8.4. The optimal solution is described in Table 8.3.Table 8.3Optimal allocation of PMU devices for maximizing the system observability of IEEE 14-bus networkBus
N
PMU
 12342  1141   6 11 7   19 11 10   113   1Total observable buses6101314


GCode 8.4 PMU allocation for IEEE 14 network for maximizing the system observability

Sets bus  / 1 * 1 4 /;  a l i a s (bus, node );  a l i a s (bus, shin );Table BusData(bus, * )  buss c h a r a c t e r i s t i c s         Pd      gen1        0       12        21.7    13        94.2    14        47.85        7.66        11.2    18         0      19        29.510        911        3.512        6.113        13.514        14.9    ;
set conex          Bus connectivity  matrix/1       .         21        .         52        .         32        .         42        .         53        .         44        .         54        .         74        .         95        .         66        .         116        .         126        .         137        .         87        .         99        .         109        .         1410       .         1112       .         1313       .         14/;conex (bus, node )$( conex (node, bus ) ) =1;parameters A(bus, node ),B(bus, node ),Z( bus ), normal ( bus ), abnormal ( bus );Z( bus )$(BusData(bus, 'Pd ' )=0 and BusData(bus, ' gen ' )=0) =yes;A(bus, node )$(Z( bus ) and conex (bus, node ) )=yes;normal ( bus )$( Z( bus )=0 and sum( node$conex (bus, node ),Z( node ) )=0) =yes;abnormal ( bus )$( normal ( bus )=0) =yes;  B(bus, node )$(A(bus, node ) )=yes;B(bus, node )$(Z( node ) and ord ( bus )= ord ( node ) )=yes;Variables  OF,OBI;  Binary variables  PMU ( bus ), alpha ( bus ) ;  Scalar  NPMU  /10/;Equations eq3, eq4, eq5  ;eq3 ..    sum(bus,pmu( bus ) )=l= NPMU;  eq4 ..  OBI = e = sum
(node, alpha ( node ) );eq5 ( bus ) ..  PMU ( bus )+ sum( node$conex (bus, node ), PMU ( node ) )= g =alpha ( bus );Option optcr =0; Model placement3     /eq3, eq4, eq5 /;Solve placement3 maximizing OBI using mip;
set counter /c1 * c4 /;  parameter report (bus, counter ),OBIrep( counter );loop ( counter,  NPMU = ord ( counter );  Solve placement3 maximizing OBI using mip;report (bus, counter )= pmu. l ( bus );  OBIrep( counter )= OBI. l;  );


The total observable buses vs N
PMU in IEEE 57-bus network is shown in Fig. 8.9. The total observable buses vs N
PMU in IEEE 118-bus network is shown in Fig. 8.10.
Fig. 8.9Total observable buses vs N
PMU in IEEE 57-bus network
Fig. 8.10Total observable buses vs N
PMU in IEEE 118-bus network



8.5 Min No. PMU Placement Considering Contingencies
The system observability should be maintained in normal operating condition as well as in the case of contingencies. The analyzed contingencies include: Loss of single PMULoss of single line


8.5.1 Loss of PMU
In order to make the system observability resilient against the loss of single PMU device, each bus should be observed at least by two PMU devices. The PMU allocation resilient against single PMU outage is formulated as follows:  (8.5a)  (8.5b)  (8.5c) α

i
 is a binary parameter which shows the observability of each bus and is set to 1 to make the whole network observable. The GAMS code for PMU allocation of IEEE 14 network resilient against single PMU outage is provided in GCode 8.5.

GCode 8.5 PMU allocation for IEEE 14 network resilient against single PMU outage

Setsbus  / 1 * 1 4 /; a l i a s (bus, node ); a l i a s (bus, shin );
set conex          Bus connectivity  matrix/1       .         21        .         52        .         32        .         42        .         53        .         44        .         54        .         74        .         95        .         66        .         116        .         126        .         137        .         87        .         99        .         109        .         1410       .         1112       .         1313       .         14/;conex (bus, node )$( conex (node, bus ) ) =1;VariablesOF,OBI;binary variablePMU ( bus );Equationsconst1,const2A ;const1    ..  OF = e = sum(bus,PMU ( bus ) );const2A ( bus ) ..  PMU ( bus )+ sum( node$conex (bus, node ), PMU( node ) )= g=2;Option optcr =0;Model placement4     /const1, const2A /;Solve placement4 minimizing OF  using mip;Display pmu. l;


The optimal PMU allocation for IEEE 14-bus resilient against single PMU outage is shown in Fig. 8.11. As it can be seen in this figure, 9 PMU devices are needed to make the system fully observable even in the case of single PMU outage. The optimal PMU allocation for IEEE 57-bus resilient against single PMU outage is shown in Fig. 8.12. As it can be seen in this figure, 33 PMU devices are needed to make the system fully observable even in the case of single PMU outage.
Fig. 8.11Optimal PMU allocation for IEEE 14-bus resilient against single PMU outage
Fig. 8.12Optimal PMU allocation for IEEE 57-bus resilient against single PMU outage

The optimal PMU allocation for IEEE 118-bus resilient against single PMU outage is shown in Fig. 8.13. As it can be seen in this figure, 68 PMU devices are needed to make the system fully observable even in the case of single PMU outage.Fig. 8.13Optimal PMU allocation for IEEE 118-bus resilient against single PMU outage



8.5.2 Single Line Outage
In this section, PMU units are allocated in the network in order to keep the system observable even in case of single line outage. For this purpose, each bus should have a PMU or should be monitored with at least two other PMU devices. This is formulated as follows:  (8.6a)  (8.6b)  (8.6c)  (8.6d) The GAMS code for solving the PMU allocation considering single line outage is developed in GCode 8.6. α

i
 is a binary variable which indicates if bus i is monitored using the PMU installed in the adjacent buses. The optimal solution is given in Table 8.4.
Table 8.4Optimal allocation of PMU devices considering single line outageNetworkOptimal locationsIEEE 141,3,6,8,9,10,13IEEE 571,3,5,8,11,12,15,18,20,22,24,27 29,30,32,33,35,36,39,41,44,46,48 49,51,53,55,56IEEE 11812,15,17,19,21,23,26,27,29,32 34,36,37,38,40,42,44,46,49,50 51,53,56,59,61,64,67,68,72,73 74,75,76,78,80,83,85,87,89,91 92,94,96,100,102,105,106,109 111,112,114,116,117


GCode 8.6 PMU allocation for IEEE 14 network resilient against single line outage

Sets bus  / 1 * 1 4 /;  Alias (bus, node );
set conex          Bus connectivity  matrix/1       .         21        .         52        .         32        .         42        .         53        .         44        .         54        .         74        .         95        .         66        .         116        .         126        .         137        .         87        .         99        .         109        .         1410       .         1112       .         1313       .         14/;conex (bus, node )$( conex (node, bus ) ) =1;Variables  OF;  Binary variable  PMU( bus ), alpha ( bus ) ;scalar  NPMU /10/; Equations const1,  const2C,  const2D;const1    ..  OF=e=sum(bus,PMU( bus ) );const2C ( bus ) ..  PMU( bus )+alpha ( bus )=g=1;const2D ( bus ) ..  sum( node$conex (bus, node ),PMU( node ) )=g =2* alpha ( bus );Option optcr =0;Model placement6     /const1, const2C, const2D /;Solve placement6 minimizing OF using mip;Display pmu. l;





8.6 Multistage PMU Placement
The optimal number of PMU units for making the system fully observable is obtained so far in previous sections. The next step is the implementation of these plans by the system operator. The ideal situation is installing all PMU units in the obtained network buses. However, simultaneous installation of theses devices is not possible due to some practical difficulties such as unavailability of crews and difficulties in simultaneous maintenance outage of lines for PMU installations. In this section, it is assumed that the optimal number and locations of PMU units are already obtained. The system operator can only install a limited number of PMU devices at a given period of time. The question is that which buses should be equipped with PMU at each phase. This problem is called Multistage PMU placement. The decision maker should maximize the number of observable buses of the systems at each phase. The number of observable buses will increase in each phase and after the final phase, the whole system will be observable. In order to solve the problem, the following steps should be taken:
1.The optimal number of PMU units are found using the techniques discussed so far. It might be considering ZIP or contingencies or costs. Save this number N
pmu and the locations of PMU devices. 2.How many installation stages and how many PMU units (ψ

p
) are going to be installed in each stage? 3.The following optimization problem is solved for stage p.  (8.7a)  (8.7b)  (8.7c)  (8.7d) It is trying to maximize the number of observable buses in the network subject to number of available installable PMU devices. 

The GAMS code for solving the multistage optimal PMU allocation for IEEE 14-bus network is provided in GCode 8.7.

GCode 8.7 Multi-stage PMU allocation for IEEE 14 network

Setsbus  / 1 * 1 4 /; a l i a s (bus, node );
set conex          Bus connectivity  matrix/1       .         21        .         52        .         32        .         42        .         53        .         44        .         54        .         74        .         95        .         66        .         116        .         126        .         137        .         87        .         99        .         109        .         1410       .         1112       .         1313       .         14/;conex (bus, node )$( conex (node, bus ) ) =1;VariablesOF,  OBI;Binary variable  PMU ( bus ), alpha ( bus ), beta( bus );Equations const1, const2, const3, const2E, const3A;const1    ..  OF = e = sum(bus,PMU ( bus ) );const2 ( bus ) ..  PMU ( bus )+ sum( node$conex (bus, node ), PMU( node ) )= g=1;const2E ( bus ) ..  PMU ( bus )+ sum( node$conex (bus, node ), PMU( node ) )= g = beta( bus );const3       ..  OBI = e = sum(bus,  beta( bus ) );const3A      ..  OF = e = sum(bus,  PMU ( bus ) );Option optcr =0;Model placement      /const1, const2 /;Model placement8     /const2E, const3, const3A /;Set cp /cp1 * cp3 /;  Alias (cp, cpp );Parameter phase_rep (cp, * ),phase_pmu(cp, bus );  Parameter phase ( cp )/cp1  2 cp2  1 cp3  1/;Solve placement minimizing OF  using mip;display  pmu. l;  Pmu. fx ( bus )$(Pmu. l ( bus )=0)=0;
beta. up( bus ) =1; beta. lo ( bus ) =0;loop (cp,OF. up = sum( cpp$ ( ord ( cpp ) <= ord ( cp ) ), phase ( cpp ) );solve  placement8 maximizing OBI using mip;phase_rep (cp, 'OBS' )= OBI. l;phase_rep (cp, 'Tpmu' )= sum(bus,Pmu. l ( bus ) );phase_pmu(cp, bus )= pmu. l ( bus );Pmu. fx ( bus )$( PMU. l ( bus ) ) =1; );


The solution for multistage optimal PMU allocation for different case studies is shown in Fig. 8.14.
Fig. 8.14Multistage optimal PMU allocation for different case studies

The optimal allocation of PMU devices in multistage PMU allocation is shown in Table 8.5. It is assumed that the total number of PMU (TPMU) for full observability of the system is known in advance. Three installation phases are considered and the possible number of installable PMU devices (ψ

p
) is also known.Table 8.5Optimal allocation of PMU devices in multistage PMU allocationPhaseIEEE 14IEEE 57IEEE 118 OBITPMU
ψ

p

OBITPMU
ψ

p

OBITPMU
ψ

p

I10222866701111II1331471261032211III1441571751183210



8.7 Applications
Different objective functions as well as methods have been proposed in the literature to improve the power system observability as follows: MIP formulation for optimal PMU placement [3]Multi-stage MIP-based PMU allocation [2]Optimal PMU Placement considering measurement Loss and branch outage [4]Weighted least squares algorithm for optimal PMU placement [5]Redundancy and observability analysis of conventional measurement and PMU [6]Semi-definite Programming for optimal PMU placement considering fixed channel capacity [7]Optimal PMU placement for full network observability using tabu search algorithm [8]Multi-objective optimal PMU placement using a non-dominated sorting differential evolution algorithm [9]Iterated Local Search for optimal PMU allocation [10]



References


1.
V. Basetti, A.K. Chandel, Optimal PMU placement for power system observability using Taguchi binary bat algorithm. Measurement 95, 8-20 (2017)Crossref


2.
D. Dua, S. Dambhare, R.K. Gajbhiye, S.A. Soman, Optimal multistage scheduling of PMU placement: an ILP approach. IEEE Trans. Power Delivery 23(4), 1812-1820 (2008)Crossref


3.
B. Gou, Generalized integer linear programming formulation for optimal PMU placement. IEEE Trans. Power Syst. 23(3), 1099-1104 (2008)Crossref


4.
C. Rakpenthai, S. Premrudeepreechacharn, S. Uatrongjit, N.R. Watson, An optimal PMU placement method against measurement loss and branch outage. IEEE Trans. Power Delivery 22(1), 101-107 (2007)Crossref


5.
N.M. Manousakis, G.N. Korres, A weighted least squares algorithm for optimal PMU placement. IEEE Trans. Power Syst. 28(3), 3499-3500 (2013)Crossref


6.
J.B.A. London, S.A.R. Piereti, R.A.S. Benedito, N.G. Bretas, Redundancy and observability analysis of conventional and PMU measurements. IEEE Trans. Power Syst. 24(3), 1629-1630 (2009)Crossref


7.
N.M. Manousakis, G.N. Korres, Optimal PMU placement for numerical observability considering fixed channel capacity; a semidefinite programming approach. IEEE Trans. Power Syst. 31(4), 3328-3329 (2016)Crossref


8.
J. Peng, Y. Sun, H.F. Wang, Optimal PMU placement for full network observability using Tabu search algorithm. Int. J. Electr. Power Energy Syst. 28(4), 223-231 (2006)Crossref


9.
C. Peng, H. Sun, J. Guo, Multi-objective optimal PMU placement using a non-dominated sorting differential evolution algorithm. Int. J. Electr. Power Energy Syst. 32(8), 886-892 (2010)Crossref


10.
M. Hurtgen, J.-C. Maun, Optimal PMU placement using iterated local search. Int. J. Electr. Power Energy Syst. 32(8), 857-860 (2010)Crossref














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_9





9. Topics in Transmission Operation and Planning




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides a solution for some transmission network operation and planning studies in GAMS. The transmission investment regarding building new lines and power flow controllers (phase shifter), sensitivity factors, and transmission switching have been discussed in this chapter. The GAMS code for solving each optimization problem is developed and discussed.

9.1 Transmission Network Planning
The question to be answered in transmission expansion planning (TEP) is when and which right of way should be selected to build a new line, perform reconductoring, build a new substation, or install power flow controllers. As a matter of fact, obtaining the public acceptance for building new transmission lines has become a challenging issue for the transmission asset owners. This also makes it difficult for transmission system operator to keep the technical and economic performance of transmission network high. The objective function is usually defined as the total operation and planning costs. Different models have been proposed for TEP purpose such as:

Probabilistic TEP considering load and wind power generation uncertainties [1]MIP-based multi-stage TEP considering losses, generator costs, and the N − 1 security constraints [2]Genetic algorithm-based TEP considering demand uncertainty [3]Congestion reduction-based TEP [4]Robust optimization-based TEP considering the uncertainties of renewable generation and load [5]Branch and bound algorithm for TEP [6]MIP-based TEP model considering different demand levels, N − 1 network security constraints as well as environmental constraints [7]Multi-objective TEP considering total social costs, maximum regret (robustness criterion), and maximum adjustment cost (flexibility criterion) as three objective functions [8]Monte-Carlo-based TEP considering random outages of generating units and transmission lines as well as inaccuracies in the long-term load forecasting [9]An interior point method considering full AC power flow constraints [10]Multi-objective TEP considering investment cost, reliability (both adequacy and security), and congestion costs [11]Chance constrained TEP consideration of load and wind uncertainties [12].


9.1.1 TEP with New Lines Option
The transmission expansion planning is formulated in (9.1). It is assumed that the only planning option is building new lines.  (9.1a)  (9.1b)  (9.1c)  (9.1d)  (9.1e)  (9.1f)  (9.1g)  (9.1h)  (9.1i)  (9.1j)  (9.1k)  (9.1l)

The objective function in (9.1a) consists of operational costs (OPC) and investment costs (INVC). The operational costs are calculated in (9.1b) while the investment costs are calculated in (9.1c). (9.1d), and (9.1e) model, the power flow on branch connecting bus i to bus j. In (9.1d) and (9.1e) there is a parameter M. It is also called big M in the literature [13]. This parameter is selected as follows:

M = max
ij

B

ij
(δ

i
 −δ

j
)
The power balance between the generated power, load shedding, demand, and line flows is ensured by (9.1f). The line flow limits are modeled in (9.1g) and the impacts of line investment decision α

ij


k
 are formulated. The generation operating limits are given in (9.1h). The initial status of each line is described in (9.1i).
The six-bus Garver transmission network [14] is shown in Fig. 9.1.Fig. 9.1Six-bus Garver transmission network (base case)

Transmission expansion planning data are given in Table 9.1. The existing and potential right of ways in addition to the reactances and flow limits are provided there. The investment costs (C

ij
) are given in million $. The VOLL is assumed to be 1000 $/MW h. There are three generating units with different operating costs as shown in Fig. 9.1. Although the generator number 3 is the cheapest unit, however, it is not connected to the grid. The candidate right of ways are the existing ones (indicated by solid lines and the dashed ones as indicated in Fig. 9.1). The GAMS code for solving the DC power flow-based TEP is provided in GCode 9.1.
Table 9.1Transmission expansion planning data for Garver six-bus transmission networkFrom (i)To (j)
x

ij




C

ij


η

ij

0
120.40100401140.6080601150.20100201230.20100201240.40100401260.30100300350.20100201460.30100300


GCode 9.1 DC-OPF-based TEP

Sets bus  /1*6/,  slack ( bus ) /1/, Gen /g1 * g3 /, k /k1 * k4 /;Scalars   Sbase /100/ , M  /1000/; a l i a s (bus, node );Table GenData(Gen, * )   Generating units  c h a r a c t e r i s t i c s   b     pmin pmaxg1 20    0    400g2 30    0    400g3 10    0    600;
set GBconect(bus,Gen) connectivity  index of  each generating  unit to each bus/1    .     g1 3    .     g2 6    .     g3  / ;Table BusData(bus, * )  Demands of  each bus in MW         Pd1        802        2403        404        1605        240;table  branch (bus,  node, * )     Network technical  c h a r a c t e r i s t i c s               X     LIMIT Cost stat1    .     2    0.4   100   40   11    .     4    0.6   80    60   11    .     5    0.2   100   20   12    .     3    0.2   100   20   12    .     4    0.4   100   40   12    .     6    0.3   100   30   03    .     5    0.2   100   20   14    .     6    0.3   100   30   0;Set conex (bus, node )        Bus connectivity  matrix;conex (bus, node )$( branch (bus, node, 'x ' ) )=yes;  conex (bus, node ) $conex (node, bus )=yes;branch (bus, node, 'x ' ) $branch (node, bus, 'x ' )= branch (node, bus, 'x ' );branch (bus, node, ' cost ' ) $branch (node, bus, ' cost ' )= branch (node, bus, ' cost ' );branch (bus, node, ' stat ' ) $branch (node, bus, ' stat ' )= branch (node, bus, ' stat ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $conex (bus, node ) =1/branch (bus, node, 'x ' );M = smax (( bus, node ) $conex (bus, node ), branch (bus, node, ' bij ' ) * pi* 4 / 3 );Variables   OF, Pij (bus, node, k),Pg(Gen), delta ( bus ),LS( bus );binary variable  alpha (bus, node, k);  alpha. l (bus, node, k) =1;alpha. fx (bus, node, k)$( conex (bus, node ) and ord (k)=1 and  branch (node, bus, ' stat ' ) ) =1;Equations const1A, const1B, const1C, const1D, const1E, const2, const3;const1A (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k) −branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) )=l=  M *(1 − alpha (bus, node, k) );const1B (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k) −branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) )= g =− M *(1 − alpha (bus, node, k) );const1C (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k)=l= alpha (bus, node, k) * branch (bus, node, ' Limit ' )/Sbase;const1D (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k)= g =−alpha (bus, node, k) * branch (bus, node, ' Limit ' )/Sbase;const1E (bus, node, k) $conex (node, bus ) ..  alpha (bus, node, k)= e =alpha (node, bus, k);const2 ( bus ) ..  LS( bus )+ sum(Gen$GBconect(bus,Gen),Pg(Gen) ) − BusData(bus, 'pd ' )/Sbase= e =+ sum((k, node ) $conex (node, bus ), Pij (bus, node, k) );const3      ..  OF = g = 2 * 8 7 6 0 * ( sum(Gen, Pg(Gen) * GenData(Gen, 'b ' ) * Sbase )+1000* sbase * sum(bus, LS( bus ) ) )+1e6 * sum(( bus, node, k) $conex (node, bus ), 0. 5 * branch (bus, node, ' cost ' ) * alpha (bus, node, k)$( ord (k)>1 or branch (node, bus, ' stat ' )=0));Model loadflow     /all/;  option optcr =0;LS. up( bus )= BusData(bus, 'pd ' )/Sbase;   LS. lo ( bus ) =0;Pg. lo (Gen)= GenData(Gen, 'Pmin ' )/Sbase;Pg. up(Gen)= GenData(Gen, 'Pmax ' )/Sbase;delta. up( bus )= pi/3;  delta. lo ( bus )=− pi/3;  delta. fx ( slack ) =0;Pij. up(bus, node, k)$ (( conex (bus, node ) ) ) =1* branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node, k)$ (( conex (bus, node ) ) )=−1*branch (bus, node, ' Limit ' )/Sbase;Solve loadflow min OF  us MIP;



9.1.1.1 Two Years Planning Period
The optimal TEP solution for 2 years planning period (T = 2 ∗ 8760 h) is shown in Fig. 9.2. The total operating cost is M$227.142, and the investment costs are M$110. The total costs would be M$337.140.Fig. 9.2Optimal TEP solution for 2 years planning period (T = 2 ∗ 8760 h)

The optimal solutions dictate that the branch connecting bus 1 to bus 5 should be reinforced with one additional line. Bus 6 to bus 2 should be connected using three lines.


9.1.1.2 Ten Years Planning Period
The optimal TEP solution for 2 years planning period (T = 10 ∗ 8760 h) is shown in Fig. 9.3. The total operating cost is M$871.410 and the investment costs are M$162.853. The total costs would be M$1034.263. The optimal solutions dictates that the branch2-3 and branch1-5 should be reinforced with one additional line. Bus 6 to bus 2 should be connected using four lines. Bus 6 to bus 4 should be connected using two lines. It should be noted that the current model is simplistic. It needs to consider more realistic constraints. Some of them are listed as follows: The model is a single period. The load duration curve (LDC) or a discrete LDC with some demand levels and their associated duration should be considered.Fig. 9.3Optimal TEP solution for 10 years planning period (T = 10 ∗ 8760 h)
The contingencies should be taken into account. This will ensure the system operator to keep the light on even some network/generation assets fail. The failure of transmission lines or generating units might cause overloading of the remaining lines and operation of over-current relays and cause cascaded failures. It might even lead to black out.The AC power flow constraints should be checked to make sure no voltage constraint or line limit is violated.The voltage stability issue should also be checked.The model is trying to minimize the total operating cost plus the investment costs. In deregulated environment, the transmission asset owner and the transmission system operator are two independent entities. This makes the problem more complicated since these two entities would have different objective functions. The asset owner is trying to maximize its benefit and make money by making investments. On the other hand, the system operator is trying to maximize the social welfare. The multi-objective techniques [8] or complementarity models [15] provide the suitable answer to this challenge.The demand grows should be considered.The formulated transmission planning model is a static model. This means that the decision is made in order to make the system capable of answering for the needs of next N years. The dynamic of investment or timing of investment and time value of money is neglected.The uncertainties of the electricity market, renewable energies, demand, and regulatory frameworks should be considered to make the model robust against future scenarios.The VOLL is assumed to be the same for all demands at different buses. However, the importance level of all demands is not the same. This can reduce the investment requirements for TEP.




9.1.2 TEP with New Lines and Power Flow Controller Option
This section investigates the impact of power flow controller as a planning option. The phase shifter is used as the power flow controller device. The role of the phase shifter is depicted in Fig. 9.4. The relation between the power flow, voltage angles difference across the branch
ij
, and the line susceptance is given in (9.2).  (9.2a)  (9.2b)  (9.2c)
Fig. 9.4The phase shifter function in power flow control

Although the voltage phase shift is a discrete variable in reality but it is modeled as a continuous variable for simplicity in (9.2).  (9.3a)  (9.3b)  (9.3c)  (9.3d)  (9.3e)  (9.3f)  (9.3g)  (9.3h)  (9.3i)  (9.3j)  (9.3k)  (9.3l)  (9.3m)  (9.3n)  (9.3o)

The phase shifter impact is shown in (9.3d) and (9.3e). The investment decision regarding the phase shifter is reflected in (9.3f). The phase shifter can be installed on lines that initially exist or built lines as shown in (9.3h). The investment cost for each phase shifter is assumed to be γ

ij
 = M$0.6. The optimal decisions regarding the location of phase shifter and new transmission lines 2 years plan (T = 2 ∗ 8760) are given in Fig. 9.5. The total operating cost is M$224.256 and the investment costs are M$110.6. The total costs would be M$334.856.Fig. 9.5The optimal decisions regarding the location of phase shifter and new transmission lines 2 years plan (T = 2 ∗ 8760)


GCode 9.2 DC-OPF-based TEP considering phase shifter option

Sets bus  / 1 * 6 /  , slack ( bus ) /1/,Gen /g1 * g3 /,k /k1 * k4 /; a l i a s (bus, node );Scalars   Sbase /100/ , M  /1000/, T;  T=8760*2;  Set conex (bus, node );Table GenData(Gen, * )   Generating units  c h a r a c t e r i s t i c s   b     pmin pmaxg1 20    0    400g2 30    0    400g3 10    0    600;Set GBconect(bus,Gen) connectivity  index of  each generating  unit to each bus/1    .     g1 3    .     g2 6    .     g3  / ;Table BusData(bus, * )  Demands of  each bus in MW         Pd1        802        2403        404        1605        240;table  branch (bus,  node, * )     Network technical  c h a r a c t e r i s t i c s               X     LIMIT Cost stat;conex (bus, node )$( branch (bus, node, 'x ' ) )=yes;  conex (bus, node ) $conex (node, bus )=yes;branch (bus, node, 'x ' ) $branch (node, bus, 'x ' )= branch (node, bus, 'x ' );branch (bus, node, ' cost ' ) $branch (node, bus, ' cost ' )= branch (node, bus, ' cost ' );branch (bus, node, ' stat ' ) $branch (node, bus, ' stat ' )= branch (node, bus, ' stat ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $conex (bus, node ) =1/branch (bus, node, 'x ' );M = smax (( bus, node ) $conex (bus, node ), branch (bus, node, ' bij ' ) * 3. 1 4 * 2 );Variables   OF, Pij (bus, node, k),Pg(Gen), delta ( bus ),LS( bus ), PSHij (bus, node, k);binary variable  alpha (bus, node, k), I (bus, node, k);  alpha. l (bus, node, k) =1;alpha. fx (bus, node, k)$( conex (bus, node ) and ord (k)=1 and  branch (node, bus, ' stat ' ) ) =1;Equations const1A, const1B, const1C, const1D, const1E, const2, const3,const4, const5, const6, const7;const1A (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k) −branch (bus, node, ' bij ' ) * (                delta ( bus ) −delta ( node )+ PSHij (bus, node, k) )=l= M *(1 − alpha (bus, node, k) );const1B (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k) −branch (bus, node, ' bij ' ) * (               delta ( bus ) −delta ( node )+ PSHij (bus, node, k) )= g =− M *(1 − alpha (bus, node, k) );const1C (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k)=l=alpha (bus, node, k) * branch (bus, node, ' Limit ' )/Sbase;const1D (bus, node, k) $conex (node, bus ) ..  Pij (bus, node, k)= g =−alpha (bus, node, k) * branch (bus, node, ' Limit ' )/Sbase;const1E (bus, node, k) $conex (node, bus ) ..  alpha (bus, node, k)= e =alpha (node, bus, k);const2 ( bus ) ..  LS( bus )+ sum(Gen$GBconect(bus,Gen),Pg(Gen) )− BusData(bus, 'pd ' )/Sbase= e =+ sum((k, node ) $conex (node, bus ), Pij (bus, node, k) );const3 ..OF = g = T * ( sum(Gen, Pg(Gen) * GenData(Gen, 'b ' ) * Sbase ) +100000*sum(bus, LS( bus ) ) )+1e6 * sum(( bus, node, k) $conex (node, bus ), 0. 5 * branch (bus, node, ' cost ' ) *alpha (bus, node, k)$( ord (k)>1 or branch (node, bus, ' stat ' )=0))+6e5 * 0. 5 * sum(( bus, node, k)$conex (node, bus ), I (bus, node, k) );const4 (bus, node, k) $conex (node, bus ) .. PSHij (bus, node, k)+ PSHij (node, bus, k)= e=0;const5 (bus, node, k) $conex (node, bus ) .. PSHij (bus, node, k)=l=I (bus, node, k) * pi/8;const6 (bus, node, k) $conex (node, bus ) .. PSHij (bus, node, k)= g =−I (bus, node, k) * pi/8;const7 (bus, node, k) $conex (node, bus ) .. I (bus, node, k)=l=alpha (bus, node, k);Model loadflow     /all/;  LS. up( bus )= BusData(bus, 'pd ' )/Sbase;  LS. lo ( bus ) =0;Pg. lo (Gen)= GenData(Gen, 'Pmin ' )/Sbase;  Pg. up(Gen)= GenData(Gen, 'Pmax ' )/Sbase;delta. up( bus )= pi/3;  delta. lo ( bus )=− pi/3;  delta. fx ( slack ) =0;Pij. up(bus, node, k)$ (( conex (bus, node ) ) ) =1* branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node, k)$ (( conex (bus, node ) ) )=−1*branch (bus, node, ' Limit ' )/Sbase;PSHij. up(bus, node, k)=  pi/8;  PSHij. lo (bus, node, k)=− pi/8;  option optcr =0;Solve loadflow min OF  us MIP;


The optimal decisions regarding the location of phase shifter and new transmission lines 10 years plan (T = 10 ∗ 8760) are given in Fig. 9.6. The total operating cost is M$805.920 and the investment costs are M$200.600. The total costs would be M$1006.520.
Fig. 9.6The optimal decisions regarding the location of phase shifter and new transmission lines 10 years plan (T = 10 ∗ 8760)


Nomenclature

Indices and Sets

g
Index of thermal generating units
i, j
Index of network buses
Ω

G

Set of all thermal generating units
Ω

G


i

Set of all thermal generating units connected to bus i

Ω

ℓ


i

Set of all buses connected to bus i

Ω

B

Set of network buses


Parameters

M
Big number
T
Duration of planning period (h)
L

i

Electric power demand in bus i at time t

b

g

Fuel cost coefficient of thermal unit g

η

ij

0
Initial status of branch connecting bus i to j

C

ij

Investment cost for branch connecting bus i to j

γ

ij

Investment cost of phase shifter in line ij

P

g

max∕min
Maximum/minimum limits of power generation of thermal unit g

P

ij

max
Maximum power flow limits of branch connecting bus i to j

Ψ

ij

max
Maximum phase shift in line connecting bus i to bus j

x

ij

Reactance of branch connecting bus i to j

B

ij

Susceptance of branch connecting bus i to j
VOLLValue of loss of load ($/MW h)


Variables

P

ij


k

Active power flow of branch k connecting bus i to j (MW)
P

g

Active power generated by thermal unit g (MW)
α

ij


k

Binary variable to model the investment decision regarding the line k at the right of way ij

I

ij


k

Binary variable to model the investment decision regarding the phase shifter in line k at the right of way ij

λ

i

Locational marginal price in bus i ($/MW h)LS
i

Load shedding in bus i (MW)
Ψ

ij

Phase shift in line connecting bus i to bus j
OPCTotal operating costs ($)OFTotal costs ($)INVCTotal investment costs ($)
δ

i

Voltage angle of bus i (rad)





9.2 Sensitivity Factors in Transmission Networks
In this section two important factors are analyzed and calculated namely: Generation Shift Factor (GSF)Line Outage Distribution Factor (LODF)


9.2.1 Generation Shift Factors
The transmission network planner/operator is always interested to know what happens to the line flows if any outage happens in generation units. In other words, what is the influence of generation/demand change in bus i on the line ℓ (connecting bus n to bus m)? It is important since there is always a chance for contingencies to happen in generating units. This section will provide an answer to this question.
The DC power flow equations of the network shown in Fig. 9.7 is provided in (9.4).  (9.4a)  (9.4b)  (9.4c)
Fig. 9.7Three-bus network example for sensitivity factors calculation

By substituting the numerical values of x

ij
 in (9.4) we will have:  (9.5a)  (9.5b)  (9.5c) (9.4) can be written as:  where P

i
 = P

i


g
 − L

i
. Suppose  then we can have the relation between the bus angles and the net injections as a linear matrix form.  (9.6) In normal DC power flow, the P vector is known and the decision maker's goal is to find the δ vector. The problem is that matrix B is singular and does not have a matrix inverse.
The good news is that the bus angle at slack bus is known to be zero. If the slack bus is bus 1 then we can have the following matrix form:  (9.7) Now the matrix can be inversed as follows  (9.8)

We can write down (9.8) as a general form  (9.9)  (9.10) where B
red is the B matrix after eliminating the row and column of slack bus. If the network has n buses then B
red would be a square (n − 1) × (n − 1) matrix. For the rest of this chapter, whenever X appears in any equation it is representing X
red.
Now we are about to investigate the impact of change in power injection in bus n on the line flow between bus i and bus j. The flow on line connecting bus i to bus j is calculated as follows:  (9.11) Now we assume that any change in injected power at bus m will be compensated by the slack bus. In order to calculate the flow change in line i − j we need to use the following equation:  (9.12)

The value of x

ij
 remains constant but the voltage angles would change if ΔP is happening at bus m (and −ΔP at slack bus). Referring to (9.9) we would have  (9.13)  (9.14)

The changes of voltage angles in bus i and j are calculated as follows:  (9.15)  (9.16)  (9.17) The (9.17) states that the sensitivity of the flow in line ij of power change in bus m is obtained as follows:  (9.18) Using the (9.18) is useful in calculating the line flows in post-contingency period.  (9.19)

If the post-contingency line flow at line ij after the failure of a generating unit at bus m (producing P

m


g
 MW) is to be calculated then the following equation can be used:  (9.20)

If the post-contingency line flow at line ij after the disconnection of load at bus m is to be calculated then the following equation can be used:  (9.21)

Now let's calculate the Generation Shift Factors (a

m


ij
) for the network shown in Fig. 9.7.
The GCode 9.3 described the GAMS code for calculating the generation shift factors.

GCode 9.3 Generation Shift Factor Calculation

Sets bus  / 1 * 3 /  , slack ( bus ) /1/,Gen /g1 * g3 /, nonslack ( bus ) / 2 * 3 /  ;scalars   Sbase /100/ ; a l i a s (bus, node, shin, knot );  a l i a s ( nonslack, nonslackj );Table branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s               X     LIMIT stat1    .     2    0.1   100   11    .     3    0.2   80    12    .     3    0.25 100   1;
set conex (bus, node )        Bus connectivity  matrixl;conex (bus, node )$( branch (bus, node, 'x ' ) )=yes;conex (bus, node ) $conex (node, bus )=yes;branch (bus, node, 'x ' ) $branch (node, bus, 'x ' )= branch (node, bus, 'x ' );branch (bus, node, ' stat ' ) $branch (node, bus, ' stat ' )= branch (node, bus, ' stat ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $conex (bus, node ) =1/branch (bus, node, 'x ' );Parameter Bmatrix (bus, node ), Binv (bus, node ),Flow(bus, node );  Alias (bus, knot );Bmatrix (bus, node )$( conex (node, bus ) )=− branch (bus, node, ' bij ' );Bmatrix (bus, bus )= sum( knot$conex ( knot, bus ),−Bmatrix (bus, knot ) );parameter Breduced ( nonslack, nonslackj ),GSHF(bus, node, knot );Breduced ( nonslack, nonslackj )= Bmatrix ( nonslack, nonslackj );parameter inva ( nonslack, nonslackj ) ' inverse  of  a ';execute_unload 'a. gdx ', nonslack, Breduced;execute '=invert. exe a. gdx nonslack Breduced b. gdx inva ';execute_load 'b. gdx ', inva;Binv ( nonslack, nonslackj )=inva ( nonslack, nonslackj );GSHF(bus, node, knot ) $conex (bus, node )=branch (bus, node, ' bij ' ) * ( Binv (bus, knot ) −Binv (node, knot ) );Display Bmatrix, Binv,GSHF;


The GCode 9.3 has no solve statement or variable. This is because no optimization is going to be done. First of all, the B matrix is calculated in GCode 9.3 as follows:
Parameter Bmatrix(bus,node);
Alias(bus,knot);
Bmatrix(bus,node)$conex(node,bus)=-branch(bus,node,'bij');
Bmatrix(bus,bus)=sum(knot$conex(knot,bus),-Bmatrix(bus,knot));
This would calculate the Bmatrix as follows:
—- 68 PARAMETER Bmatrix
 123115.000-10.000-5.0002-10.00014.000-4.0003-5.000-4.0009.000

Now we need to eliminate the row and column containing the slack bus. In order to do this, another parameter called Breduced is defined but over the non-slack bus set. This set is defined over all buses except the slack buses.
Parameter Breduced(nonslack,nonslackj);
Breduced(nonslack,nonslackj)=Bmatrix(nonslack,nonslackj);
Parameter inva(nonslack,nonslackj) 'inverse of a';
execute_unload 'a.gdx', nonslack, Breduced;
execute '=invert.exe a.gdx nonslack Breduced b.gdx inva';
execute_load 'b.gdx', inva;
This would calculate the inverse matrix of the reduced B matrix.
—- 68 PARAMETER Binv
 2320.0820.03630.0360.127

Now all needed data for calculating the a

m


ij
 is available. The generation shift factors are calculated as follows:
Binv(nonslack,nonslackj)=inva(nonslack,nonslackj);
GSHF(bus,node,knot)$conex(bus,node)=branch(bus,node,'bij')*(Binv (bus,knot)-Binv(node,knot));
Using the GCode 9.3, the generation shift factors are calculated as Table 9.2.Table 9.2Generator shift factors (a

m


ij
) for three-bus networkLineBus (m)
ij
231-2−0.818−0.3641-3−0.182−0.6362-10.8180.3642-30.182−0.3643-10.1820.6363-2−0.1820.364

The generation shift factors (GSHF) have the following interesting features as follows:

The procedure for calculating the GSHF does not involve any optimizationThe values of GSHF can be calculated in advance and be used in real-time applications.The values of GSHF do not depend on the loading condition of the network. These coefficients only depend on the network topology. If the network topology is changed (due to transmission outage or switching), GSHF should be recalculated.The technique we used for calculating the GSHF is assuming that the changes at any bus are quickly compensated by the slack bus. In case the changes are compensated by multiple generating units then the calculation procedure would be slightly different [16].The GSHF are also useful for understanding how to reduce the line loading. For example, suppose we need to reduce the flow at line 3 − 1. As we can see that bus 3 has the largest GSHF equal to 0.636. It means that if we can reduce the generation at bus 3, then a negative value will be added to the initial flow of line 3 − 1. If the initial flow from bus 3 to bus 1 is positive, then it would reduce.

Now let's check the values obtained in Table 9.2. For this purpose, the base power flow is solved and is shown in Fig. 9.8. The values of line flow, as well as the voltage angles, are specified in this figure. Suppose it is desired to increase the flow on the line connecting the bus 3 to bus 2. The power flow on this line is f
32
0 = 2. 7 MW. Using the Table 9.2 states that a
2
32 = −0. 182 and a
3
32 = 0. 364. Let's investigate the impact of changes in power injections in different buses on transmission lines.
Fig. 9.8The DC power flow solution for three-bus network


9.2.1.1 Demand Increase in L
2 by 10 MW
The demand in bus 2 is increased by 10 MW and the new line flows are depicted in Fig. 9.9. As it can be seen in this figure, the new line flow of line 3 − 2 is 4.5 MW. This is obtained using a GAMS code. Let's calculate the new line flow using the Table 9.2. The new line flow is calculated as follows:  (9.22)  (9.23)  (9.24) It should be noted that the flow values as well as the change in power injection at bus 2 are expressed in pu. ΔP
2 is representing the change in bus injection at bus 2 which is − 10 MW or 0.1 pu. It can be observed that the results confirm what is obtained by solving the DC power flow as shown in Fig. 9.9.
Fig. 9.9The DC power flow solution for three-bus network after increasing the demand at bus 2 for 10 MW.



9.2.1.2 Generation Increase in P
3

g
 by 10 MW
The generation in bus 3 is increased by 10 MW and the new line flows are depicted in Fig. 9.10 which are obtained using a GAMS code. Let's calculate the new line flow using the GSHF in Table 9.2. The new line flow is calculated as follows:  (9.25)  (9.26)  (9.27)
Fig. 9.10The DC power flow solution for three-bus network after increasing the generation at bus 3 for 10 MW.




9.2.2 Line Outage Distribution Factors
The impact of line outages on power flow of other lines is investigated in this section. Consider the line connecting the bus n and m as shown in Fig. 9.11. In Fig. 9.11a, the intact network is shown. We need to find out the impact of the line outage of the branch connecting bus n to bus m on the rest of the network. Suppose the flow of this line is initially equal to f

nm

0. The power from the rest of the network injected to bus n is equal to power absorption from bus m to the rest of network when no contingency has happened. We need to find a way to make these flows equal to zero. It is done using a very smart trick [17]. If we add two injections to the network: + ΔP

n
 at bus n and another one equal to −ΔP

n
 at bus m the flow on the line nm would change as shown in Fig. 9.11b. The question is what is the new flow on this line? The change of flow on line nm can be easily calculated using the following equation:  (9.28) This means that  (9.29) Now the post-contingency line flow is calculated as follows:  (9.30) If the virtual injection to the grid ΔP

n
 is carefully chosen then f

nm

post = ΔP

n
. This makes the flow from the rest of the network to bus n and m equal to zero (line outage).  (9.31)
Fig. 9.11Line outage modeling using virtual injections. (a) Intact network. (b) Post-contingency network

Combining the (9.29) with (9.31) gives us:  (9.32) Now the change in power flow in line ij is calculated as follows:  (9.33)  (9.34)  (9.35) The GCode 9.4 is developed to calculate the Line outage distribution factors for the network shown in Fig. 9.7.

GCode 9.4 Line outage distribution factor calculation

Setsbus  / 1 * 3 /  ,slack ( bus ) /1/,Gen /g1 * g3 /,nonslack ( bus ) / 2 * 3 /  ;Scalars   Sbase /100/ ;Alias (bus, node, shin, knot );Alias ( nonslack, nonslackj );Table branch (bus, node, * )     Network technical  c h a r a c t e r i s t i c s               X     LIMIT stat1    .     2    0.1   100   11    .     3    0.2   80    12    .     3    0.25 100   1;Set conex (bus, node )        Bus connectivity  matrixl;conex (bus, node )$( branch (bus, node, 'x ' ) )=yes;conex (bus, node ) $conex (node, bus )=yes;branch (bus, node, 'x ' ) $branch (node, bus, 'x ' )= branch (node, bus, 'x ' );branch (bus, node, ' stat ' ) $branch (node, bus, ' stat ' )= branch (node, bus, ' stat ' );branch (bus, node, ' Limit ' )$( branch (bus, node, ' Limit ' )=0) = branch (node, bus, ' Limit ' );branch (bus, node, ' bij ' ) $conex (bus, node ) =1/branch (bus, node, 'x ' );Parameter Bmatrix (bus, node ), Binv (bus, node );Alias (bus, knot );Bmatrix (bus, node )$( conex (node, bus ) )=− branch (bus, node, ' bij ' );Bmatrix (bus, bus )= sum( knot$conex ( knot, bus ),−Bmatrix (bus, knot ) );parameter Breduced ( nonslack, nonslackj ),GSHF(bus, node, knot ),X0(bus, node );Breduced ( nonslack, nonslackj )= Bmatrix ( nonslack, nonslackj );Parameter inva ( nonslack, nonslackj ) ' inverse  of  a ', Dfactor (bus, node, knot, shin ),contingency (bus, node, knot, shin );execute_unload 'a. gdx ', nonslack, Breduced;execute '=invert. exe a. gdx nonslack Breduced b. gdx inva ';execute_load 'b. gdx ', inva;Binv ( nonslack, nonslackj )=inva ( nonslack, nonslackj );GSHF(bus, node, knot ) $conex (bus, node )=branch (bus, node, ' bij ' ) * ( Binv (bus, knot ) −Binv (node, knot ) );dfactor (bus, node, knot, shin )$( conex (bus, node ) and  conex ( knot, shin )and ( ord ( bus ) >ord ( node ) )and ( ord ( knot ) >ord ( shin ) )and ( ord ( bus ) <>ord ( knot ) or  ord ( node ) <>ord ( shin ) ) )=branch (bus, node, ' bij ' ) * ( Binv (bus, knot ) −Binv (bus, shin ) −Binv (node, knot )+ Binv (node, shin ) )/(1−branch ( knot, shin, ' bij ' ) * ( Binv ( knot, knot )+ Binv ( shin, shin ) −2* Binv ( knot, shin ) ) );Display Bmatrix, Binv,GSHF, dfactor;


Line outage distribution factors (LODF
ij, nm
) are described in Table 9.3.Table 9.3Line outage distribution factors (LODF
ij, nm
) for three-bus networkLine
m

ij

n
122-131−13-121 3-13 13-22−1 3-231 

The branch data for IEEE RTS 24-bus network is provided in Table 9.4. The LODF and GSF coefficients are calculated for IEEE RTS 24-bus (Fig. 9.12) and are given in Tables 9.5 and 9.6, respectively.Fig. 9.12IEEE RTS 24-bus network
Table 9.4Branch data for IEEE RTS 24-bus network     Rating     RatingFromTo
r(pu)
x(pu)
b(pu)(MVA)FromTo
r(pu)
x(pu)
b(pu)(MVA)120.00260.01390.461117511130.00610.04760.0999500130.05460.21120.057217511140.00540.04180.0879500150.02180.08450.022917512130.00610.04760.0999500240.03280.12670.034317512230.01240.09660.2030500260.04970.19200.052017513230.01110.08650.1818500390.03080.11900.032217514160.00500.03890.08185003240.00230.08390.000040015160.00220.01730.0364500490.02680.10370.028117515210.00320.02450.206010005100.02280.08830.023917515240.00670.05190.10915006100.01390.06052.459017516170.00330.02590.0545500780.01590.06140.016617516190.00300.02310.0485500890.04270.16510.044717517180.00180.01440.03035008100.04270.16510.044717517220.01350.10530.22125009110.00230.08390.000040018210.00170.01300.109010009120.00230.08390.000040019200.00260.01980.1666100010110.00230.08390.000040020230.00140.01080.0910100010120.00230.08390.000040021220.00870.06780.1424500
Table 9.5LODF12,ℓ
 calculated for IEEE RTS 24-bus network
ℓ = nm  1234568910111213141516171819202130.611                   4 −0.712                  50.706                   6 −0.712                  9  0.291−0.712  0.054             10    0.706−0.712−0.054             11       −0.0670.022           12       −0.0620.028           13         −0.002−0.010         14         −0.048          16            −0.0480.031      17              −0.009     18               −0.006    19              0.043     20                 0.043  21             0.009  −0.006   22               −0.003   0.00323          − 0.023− 0.016      0.043 24  0.154          −0.154      
Table 9.6
GSHF

ℓ, m
 calculated for IEEE RTS 24-bus networkLineBus (m)
ℓ

ij

12345678910111214151617181920212223242 1−0.440.51−0.100.25−0.230.110.010.010.04−0.010.000.00−0.01−0.03−0.02−0.02−0.02−0.02−0.01−0.03−0.02−0.01−0.053 1−0.24-0.220.20−0.09−0.16−0.10−0.03−0.030.01−0.060.00−0.010.020.060.040.050.050.030.020.050.050.020.114 2−0.24−0.27−0.030.37−0.15−0.110.000.000.07−0.060.000.000.00−0.01−0.01−0.01−0.010.000.00−0.01−0.010.00−0.025 1−0.32−0.29−0.10−0.150.38−0.010.010.01−0.050.070.000.00−0.01−0.03−0.02−0.03−0.03−0.02−0.01−0.03−0.03−0.01−0.066 2−0.20−0.22−0.07−0.12−0.070.220.010.01−0.030.050.000.00−0.01−0.02−0.01−0.02−0.02−0.01−0.01−0.02−0.02−0.01−0.048 7      −1.00                9 3−0.09−0.07−0.430.03−0.05−0.020.060.060.12−0.010.000.02−0.05−0.12−0.09−0.10−0.11−0.07−0.05−0.11−0.11−0.04−0.249 4−0.24−0.27−0.03−0.63−0.15−0.110.000.000.07−0.060.000.000.00−0.01−0.01−0.01−0.010.000.00−0.01−0.010.00−0.029 8−0.02−0.020.030.03−0.05−0.07−0.50−0.500.07−0.080.000.000.000.010.010.010.010.000.000.010.010.000.0210 5−0.32−0.29−0.10−0.15−0.62−0.010.010.01−0.050.070.000.00−0.01−0.03−0.02−0.03−0.03−0.02−0.01−0.03−0.03−0.01−0.0610 6−0.20−0.22−0.07−0.12−0.07−0.780.010.01−0.030.050.000.00−0.01−0.02−0.01−0.02−0.02−0.01−0.01−0.02−0.02− 0.01−0.0410 80.020.02−0.03−0.030.050.07−0.50−0.50−0.070.080.000.000.00−0.01−0.01−0.01−0.010.000.00−0.01−0.010.00−0.0211 9−0.17−0.17−0.20−0.28−0.12−0.09−0.22−0.22−0.36−0.070.12−0.100.05−0.03−0.01−0.02−0.02−0.02−0.03−0.02−0.02−0.03−0.0911 10−0.24−0.24−0.08−0.15−0.31−0.35−0.23−0.23−0.07−0.390.11−0.100.060.000.010.010.010.00−0.010.010.01−0.02−0.0312 9−0.18−0.19−0.23−0.29−0.13−0.11−0.23−0.23−0.38−0.08−0.110.12−0.10−0.10−0.08−0.09−0.09−0.05−0.02−0.09−0.09−0.01−0.1512 10−0.26−0.25−0.12−0.16−0.33−0.37−0.24−0.24−0.08−0.40−0.110.11−0.08−0.06−0.06−0.06−0.06−0.03−0.01−0.06−0.060.00−0.0813 11−0.43−0.43−0.42−0.43−0.43−0.43−0.43−0.43−0.43−0.43−0.63−0.23−0.51−0.41−0.40−0.40−0.40−0.34−0.28−0.40−0.40−0.24−0.4113 12−0.40−0.40−0.36−0.40−0.41−0.41−0.41−0.41−0.41−0.41−0.23−0.61−0.26−0.29−0.28−0.28−0.29−0.28−0.28−0.29−0.29−0.29−0.3214 110.020.020.140.010.00−0.02−0.02−0.020.00−0.03−0.140.030.630.380.400.400.390.310.240.390.390.190.2916 140.020.020.140.010.00−0.02−0.02−0.020.00−0.03−0.140.03−0.370.380.400.400.390.310.240.390.390.190.2916 15−0.12−0.12−0.30−0.10−0.09−0.06−0.07−0.07−0.09−0.050.00−0.020.06−0.660.11−0.16−0.290.080.06−0.41−0.310.05−0.5221 15−0.03−0.03−0.07−0.02−0.02−0.02−0.02−0.02−0.02−0.010.000.000.01−0.150.030.310.450.020.010.570.470.01−0.1221 180.020.020.060.020.020.010.010.010.020.010.000.00−0.010.13−0.02−0.27−0.46−0.02−0.010.370.12−0.010.1122 170.000.000.010.000.000.000.000.000.000.000.000.000.000.020.00−0.040.010.000.000.060.410.000.0222 210.000.00−0.010.000.000.000.000.000.000.000.000.000.00−0.020.000.04−0.010.000.00−0.060.590.00−0.0223 12−0.04−0.040.02−0.05−0.05−0.06−0.06−0.06−0.05−0.070.01−0.160.080.130.140.140.140.200.250.140.140.280.0923 130.170.170.220.170.160.160.160.160.160.150.130.160.230.310.310.310.310.380.440.310.310.470.2723 20−0.13−0.13−0.23−0.12−0.11−0.10−0.10−0.10−0.11−0.09−0.140.00−0.31−0.44−0.46−0.45−0.45−0.58−0.69−0.44−0.450.25−0.3624 3−0.15−0.15−0.37−0.13−0.11−0.08−0.08−0.08−0.11−0.06−0.01−0.030.070.180.140.150.160.100.070.170.160.060.3524 150.150.150.370.130.110.080.080.080.110.060.010.03−0.07−0.18−0.14−0.15−0.16−0.10−0.07−0.17−0.16−0.060.65




9.3 Transmission Network Switching
The idea of optimal transmission switching (OTS) has been broadly investigated in the literature [18]. Opening a set of transmission lines would change the network topology and the line flow patterns. This can be used to relieve the line congestion in the system and reduce the operating costs. Some research works which used the transmission switching as a flexibility tool are listed as follows: DC-OPF considering N − 1 contingencies [19]Co-optimization of unit commitment and transmission switching with N − 1 reliability constraints [20]Robust transmission switching considering N − k contingencies [21]Optimal transmission switching considering short-circuit current limitation constraints [22]Probabilistic security analysis of OTS [23]Chance-constrained OTS with guaranteed wind power utilization [24]Heuristics OTS based on DC-OPF and AC-OPF [25]

In this section, the OTS is solved using GAMS and then we will discuss how this model can be improved and extended. The transmission switching problem is formulated as a MIP model in (9.36).  (9.36a)  (9.36b)  (9.36c)  (9.36d)  (9.36e)  (9.36f)  (9.36g)  (9.36h)  (9.36i) where ζ

ij
 is the on/off state of the branch connecting bus i to bus j, and N
sw is the number of allowed switching actions in the network.
The operating and congestion cost vs number of switched lines in IEEE 118-bus network (Fig. 9.13) are depicted in Fig. 9.14. The GAMS code for solving the (9.36) is provided in GCode 9.5.Fig. 9.13IEEE 118-bus network
Fig. 9.14The operating and congestion cost vs number of switched lines in IEEE 118-bus network


GCode 9.5 The OTS GAMS code for IEEE 118-bus network

Sets bus /1*118/,  slack ( bus ) /13/, conex (bus, node ),GenNo /Gen1 * Gen54/, counter /c0 * c10 /;Scalars     Sbase /100/;Alias (bus, totalbus, node );Table GenDatanew(bus,GenNo, * )                b       pmin pmax ;Table BusData(bus, * )  buss c h a r a c t e r i s t i c s          Pd ;Table branch (bus, totalbus, * )               x       Ilim ;branch (bus, totalbus, ' bij ' ) $branch ( totalbus, bus, 'x ' ) =1/branch (bus, totalbus, 'x ' );conex (bus, node ) $branch (bus, node, 'x ' )=yes;parameter branch (bus, totalbus, * ),M,NSW, report ( counter, * );M = smax (( bus, node ) $conex (bus, node ), branch (bus, node, ' bij ' ) * 2 * pi/3);Positive  variable  Pg(GenNo);Variables  Pij (bus, node ), delta ( bus ),ROF;BINARY  VARIABLE  SW (bus, node );Equations const0, const1, const2, const3, const0A,const0B, const0C, const0D, const0E, const0F;const0 (bus, node ) $conex (bus, node ) ..  Pij (bus, node )= e =branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) );const1 ( bus )..  sum(GenNo$GenDatanew(bus,GenNo, 'Pmax ' ),Pg(GenNo) )− BusData(bus, 'Pd ' )/ sbase= e =+ sum( node$conex (node, bus ), Pij (bus, node ) );const2     ..  ROF = g =  sum((GenNo, bus )$GenDatanew(bus,GenNo, 'Pmax ' ),GenDatanew(bus,GenNo, 'b ' ) * Pg(GenNo) * Sbase );const0A (bus, node ) $conex (bus, node )..Pij (bus, node ) −branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) )=l=  M *(1 − SW (bus, node ) );const0B (bus, node ) $conex (bus, node )..Pij (bus, node ) −branch (bus, node, ' bij ' ) * ( delta ( bus ) −delta ( node ) )= g =− M *(1 − SW (bus, node ) );const0C (bus, node ) $conex (bus, node )..Pij (bus, node )=l=  SW (bus, node ) * branch (bus, node, ' Ilim ' );const0D (bus, node ) $conex (bus, node )..Pij (bus, node )= g =− SW (bus, node ) * branch (bus, node, ' Ilim ' );const0E (bus, node ) $conex (bus, node )..SW (node, bus )= e = SW (bus, node );const0F (bus, node ) $conex (bus, node ).. Pij (node, bus )= e =−Pij (bus, node );const3 ..    0. 5 * sum(( bus, node ) $conex (bus, node ),1− SW (bus, node ) )=l= NSW;model BASE  /const0, const1, const2 /;model Switching/const1, const2, const0A, const0B, const0C,                                          const0D, const0E, const0F, const3 /;Option  Optca=0; Option  Optcr=0;BusData(bus, 'Pd ' ) =1.1* BusData(bus, 'Pd ' );Pg. lo (GenNo)= sum(bus, GenDatanew(bus,GenNo, 'Pmin ' ) )/Sbase;Pg. up(GenNo)= sum(bus, GenDatanew(bus,GenNo, 'Pmax ' ) )/Sbase;delta. up( bus )= pi/3;  delta. lo ( bus )=− pi/3;  delta. l ( bus ) =0; delta. fx ( slack ) =0;Pij. up(bus, node ) $conex (bus, node )=  1 * branch (bus, node, ' Ilim ' );Pij. lo (bus, node ) $conex (bus, node )=−1*branch (bus, node, ' Ilim ' );Solve BASE  minimizing ROF  using lp;SW. l (bus, node ) =1; report ( ' c0 ', 'OF' )= ROF. l;report ( ' c0 ', ' NSW' ) =0.5*sum(( bus, node ) $conex (bus, node ),1− SW. l (bus, node ) );report ( ' c0 ', ' Congestion ' ) =0.5*sum(( bus, node ) $conex (bus, node ),(−const1.m ( bus )+const1.m ( node ) ) * Pij. l (bus, node ) );loop ( counter $( ord ( counter )>1),NSW = ord ( counter ) −1;Solve switching minimizing ROF  using mip;report ( counter, 'OF' )= ROF. l;report ( counter, ' NSW' ) =0.5*sum(( bus, node ) $conex (bus, node ),1− SW. l (bus, node ) );report ( counter, ' Congestion ' ) =0.5*sum(( bus, node ) $conex (bus, node ),                          (−const1.m ( bus )+const1.m ( node ) ) * Pij. l (bus, node ) ););


Increasing the demand in a given area or bus (or equivalently losing the generation) might cause congestion and increasing the total operating costs. The OTS can be used to enhance the grid utilization and reduce the line congestions. A simple analysis is conducted as follows: The demand at bus i is increased for 20 MW.The DC OPF is solved without considering the transmission switching option (LP model).The DC OPF along with transmission switching option is solved (MIP model).

The comparison of the total operating costs between the with/without transmission switching cases are shown in Fig. 9.15. The impact of connecting a new demand to different buses would cause different changes in total operating costs. In all cases, using the transmission switching flexibility can reduce the operating costs as shown in Fig. 9.15.Fig. 9.15The operating cost vs the connection point of new demand (20 MW) in with/without transmission switching cases

Using the transmission switching might change the LMP values at different buses. The LMP values (λ

i
) in $/MW h at different buses in with/without transmission switching cases. As it is shown in Fig. 9.16, when no switching is allowed (N
sw = 0) then the LMP values of switching and not switching cases are the same. By increasing the number of switchable lines, the LMP values get closer to each other. The generation and branch data of IEEE 118 bus are given in Tables 9.7 and 9.8, respectively.
Table 9.7Generation data for 118-bus networkBusUnit (g)
b

g
 ($/MW h)
P

g

min (MW)
P

g

max (MW)BusUnit (g)
b

g
 ($/MW h)
P

g

min (MW)
P

g

max (MW)1Gen126.25.030.065.0Gen288.3100.0420.04Gen226.25.030.066.0Gen2912.980.0300.06Gen326.25.030.069.0Gen3015.530.080.08Gen412.9150.0300.070.0Gen3126.210.030.010Gen512.9100.0300.072.0Gen3226.25.030.012Gen626.210.030.073.0Gen3337.75.020.015Gen717.825.0100.074.0Gen3417.825.0100.018Gen826.25.030.076.0Gen3517.825.0100.019Gen926.25.030.077.0Gen3612.9150.0300.024Gen1012.9100.0300.080.0Gen3717.825.0100.025Gen1110.8100.0350.085.0Gen3826.210.030.026Gen1226.28.030.087.0Gen3910.8100.0300.027Gen1326.28.030.089.0Gen4012.950.0200.031Gen1417.825.0100.090.0Gen4137.78.020.032Gen1526.28.030.091.0Gen4222.920.050.034Gen1617.825.0100.092.0Gen4312.9100.0300.036Gen1726.28.030.099.0Gen4412.9100.0300.040Gen1826.28.030.0100.0Gen4512.9100.0300.042Gen1917.825.0100.0103.0Gen4637.78.020.046Gen2012.350.0250.0104.0Gen4717.825.0100.049Gen2112.350.0250.0105.0Gen4817.825.0100.054Gen2217.825.0100.0107.0Gen4937.78.020.055Gen2317.825.0100.0110.0Gen5022.925.050.056Gen2413.350.0200.0111.0Gen5117.825.0100.059Gen2513.350.0200.0112.0Gen5217.825.0100.061Gen2617.825.0100.0113.0Gen5317.825.0100.062Gen278.3100.0420.0116.0Gen5422.925.050.0
Fig. 9.16The LMP values (λ

i
) in ($/MW h) at different buses in with/without transmission switching cases
Table 9.8Branch data for 118-bus networkLine
x
LimitLine
x
LimitLine
x
LimitLine
x
LimitLine
x
LimitLine
x
Limit1. 20.101.7523. 250.085.0044. 450.091.7563. 640.025.0068. 810.025.0098. 1000.181.751. 30.041.7526. 250.045.0045. 460.141.7564. 610.035.0081. 800.045.0099. 1000.081.754. 50.015.0025. 270.165.0046. 470.131.7538. 650.105.0077. 820.092.00100. 1010.131.753. 50.111.7527. 280.091.7546. 480.191.7564. 650.035.0082. 830.042.0092. 1020.061.755. 60.051.7528. 290.091.7547. 490.061.7549. 660.0510.0083. 840.131.75101. 1020.111.756. 70.021.7530. 170.045.0042. 490.163.5062. 660.221.7583. 850.151.75100. 1030.055.008. 90.035.008. 300.051.7545. 490.191.7562. 670.121.7584. 850.061.75100. 1040.201.758. 50.035.0026. 300.095.0048. 490.051.7565. 660.045.0085. 860.125.00103. 1040.161.759. 100.035.0017. 310.161.7549. 500.081.7566. 670.101.7586. 870.215.00103. 1050.161.754. 110.071.7529. 310.031.7549. 510.141.7565. 680.025.0085. 880.101.75100. 1060.231.755. 110.071.7523. 320.121.4051. 520.061.7547. 690.281.7585. 890.171.75104. 1050.041.7511. 120.021.7531. 320.101.7552. 530.161.7549. 690.321.7588. 890.075.00105. 1060.051.752. 120.061.7527. 320.081.7553. 540.121.7568. 690.045.0089. 900.0910.00105. 1070.181.753. 120.161.7515. 330.121.7549. 540.153.5069. 700.135.0090. 910.081.75105. 1080.071.757. 120.031.7519. 340.251.7554. 550.071.7524. 700.411.7589. 920.0810.00106. 1070.181.7511. 130.071.7535. 360.011.7554. 560.011.7570. 710.041.7591. 920.131.75108. 1090.031.7512. 140.071.7535. 370.051.7555. 560.021.7524. 720.201.7592. 930.081.75103. 1100.181.7513. 150.241.7533. 370.141.7556. 570.101.7571. 720.181.7592. 940.161.75109. 1100.081.7514. 150.201.7534. 360.031.7550. 570.131.7571. 730.051.7593. 940.071.75110. 1110.081.7512. 160.081.7534. 370.015.0056. 580.101.7570. 740.131.7594. 950.041.75110. 1120.061.7515. 170.045.0038. 370.045.0051. 580.071.7570. 750.141.7580. 960.181.7517. 1130.031.7516. 170.181.7537. 390.111.7554. 590.231.7569. 750.125.0082. 960.051.7532. 1130.205.0017. 180.051.7537. 400.171.7556. 590.133.5074. 750.041.7594. 960.091.7532. 1140.061.7518. 190.051.7530. 380.051.7555. 590.221.7576. 770.151.7580. 970.091.7527. 1150.071.7519. 200.121.7539. 400.061.7559. 600.151.7569. 770.101.7580. 980.111.75114. 1150.011.7515. 190.041.7540. 410.051.7559. 610.151.7575. 770.201.7580. 990.212.0068. 1160.005.0020. 210.081.7540. 420.181.7560. 610.015.0077. 780.011.7592. 1000.301.7512. 1170.141.7521. 220.101.7541. 420.141.7560. 620.061.7578. 790.021.7594. 1000.061.7575. 1180.051.7522. 230.161.7543. 440.251.7561. 620.041.7577. 800.0510.0095. 960.051.7576. 1180.051.7523. 240.051.7534. 430.171.7563. 590.045.0079. 800.071.7596. 970.091.7512. 1170.141.75               75. 1180.051.75               76. 1180.051.75

The developed GAMS code for OTS can be improved to consider the following issues: The model should be multi-period. The OTS should consider the variation pattern of demand and then determine the optimal switching actions.The uncertainty of demand and renewable power generation should be taken into account.The current formulation does not ensure the network connectivity. It only tries to satisfy the nodal demand-supply constraint. The resultant system (after switching) might contain some islands.The computation burden of the model should be improved to make it applicable for large scale transmission networks.The AC power flow constraints should be used for getting closer to reality.The unit commitment constraints can be added to the formulation to consider the on/off states of the units as the decision variables.Changing the transmission network topology might change the short circuit level on each bus. This should be taken into account for protection issues.The current model only considers the intact condition of the network. The contingencies should also be considered.The OTS flexibility can be combined with demand response and power flow controller devices.The bus splitting can be regarded as a switching action.



References


1.
G.A. Orfanos, P.S. Georgilakis, N.D. Hatziargyriou, Transmission expansion planning of systems with increasing wind power integration. IEEE Trans. Power Syst. 28(2), 1355-1362 (2013)Crossref


2.
H. Zhang, V. Vittal, G.T. Heydt, J. Quintero, A mixed-integer linear programming approach for multi-stage security-constrained transmission expansion planning. IEEE Trans. Power Syst. 27(2), 1125-1133 (2012)Crossref


3.
I. De J. Silva, M.J. Rider, R. Romero, C.A.F. Murari, Transmission network expansion planning considering uncertainty in demand. IEEE Trans. Power Syst. 21(4), 1565-1573 (2006)Crossref


4.
J.D. Finney, H.A. Othman, W.L. Rutz, Evaluating transmission congestion constraints in system planning. IEEE Trans. Power Syst. 12(3), 1143-1150 (1997)Crossref


5.
R.A. Jabr, Robust transmission network expansion planning with uncertain renewable generation and loads. IEEE Trans. Power Syst. 28(4), 4558-4567 (2013)Crossref


6.
S. Haffner, A. Monticelli, A. Garcia, J. Mantovani, R. Romero, Branch and bound algorithm for transmission system expansion planning using a transportation model. IEE Proc. Gener. Transm. Distrib. 147(3), 149-156 (2000)Crossref


7.
A.K. Kazerooni, J. Mutale, Transmission network planning under security and environmental constraints. IEEE Trans. Power Syst. 25(2), 1169-1178 (2010)Crossref


8.
P. Maghouli, S.H. Hosseini, M. Oloomi Buygi, M. Shahidehpour, A scenario-based multi-objective model for multi-stage transmission expansion planning. IEEE Trans. Power Syst. 26(1), 470-478 (2011)Crossref


9.
J.H. Roh, M. Shahidehpour, L. Wu, Market-based generation and transmission planning with uncertainties. IEEE Trans. Power Syst. 24(3), 1587-1598 (2009)Crossref


10.
M.J. Rider, A.V. Garcia, R. Romero, Power system transmission network expansion planning using AC model. IET Gener. Transm. Distrib. 1(5), 731-742 (2007)Crossref


11.
P. Maghouli, S.H. Hosseini, M.O. Buygi, M. Shahidehpour, A multi-objective framework for transmission expansion planning in deregulated environments. IEEE Trans. Power Syst. 24(2), 1051-1061 (2009)Crossref


12.
H. Yu, C.Y. Chung, K.P. Wong, J.H. Zhang, A chance constrained transmission network expansion planning method with consideration of load and wind farm uncertainties. IEEE Trans. Power Syst. 24(3), 1568-1576 (2009)Crossref


13.
M.R. Bussieck, A. Pruessner, Mixed-integer nonlinear programming. SIAG/OPT Newsl. Views News 14(1), 19-22 (2003)


14.
R. Romero, A. Monticelli, A. Garcia, S. Haffner, Test systems and mathematical models for transmission network expansion planning. IEE Proc. Gener. Transm. Distrib. 149(1), 27-36 (2002)Crossref


15.
L. Baringo, A.J. Conejo, Transmission and wind power investment. IEEE Trans. Power Syst. 27(2), 885-893 (2012)Crossref


16.
A.J. Wood, B.F. Wollenberg, Power Generation Operation and Control, 2nd edn. (Wiley, New York, 1996)


17.
A.J. Wood, B.F. Wollenberg, Power Generation, Operation, and Control (Wiley, New York, 2012)


18.
E.B. Fisher, R.P. O'Neill, M.C. Ferris, Optimal transmission switching. IEEE Trans. Power Syst. 23(3), 1346-1355 (2008)Crossref


19.
K.W. Hedman, R.P. O'Neill, E.B. Fisher, S.S. Oren, Optimal transmission switching with contingency analysis. IEEE Trans. Power Syst. 24(3), 1577-1586 (2009)Crossref


20.
K.W. Hedman, M.C. Ferris, R.P. O'Neill, E.B. Fisher, S.S. Oren, Co-optimization of generation unit commitment and transmission switching with n-1 reliability. IEEE Trans. Power Syst. 25(2), 1052-1063 (2010)Crossref


21.
T. Ding, C. Zhao, Robust optimal transmission switching with the consideration of corrective actions for n-k contingencies. IET Gener. Transm. Distrib. 10(13), 3288-3295 (2016)Crossref


22.
Z. Yang, H. Zhong, Q. Xia, C. Kang, Optimal transmission switching with short-circuit current limitation constraints. IEEE Trans. Power Syst. 31(2), 1278-1288 (2016)Crossref


23.
P. Henneaux, D.S. Kirschen, Probabilistic security analysis of optimal transmission switching. IEEE Trans. Power Syst. 31(1), 508-517 (2016)Crossref


24.
F. Qiu, J. Wang, Chance-constrained transmission switching with guaranteed wind power utilization. IEEE Trans. Power Syst. 30(3), 1270-1278 (2015)Crossref


25.
M. Soroush, J.D. Fuller, Accuracies of optimal transmission switching heuristics based on dcopf and acopf. IEEE Trans. Power Syst. 29(2), 924-932 (2014)Crossref














© Springer International Publishing AG 2017


Alireza Soroudi



Power System Optimization Modeling in GAMS


https://doi.org/10.1007/978-3-319-62350-4_10





10. Energy System Integration




Alireza Soroudi
1 




(1)
School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland

 




This chapter provides a solution for energy system integration (ESI) problem in GAMS. The ESI analysis refers to a class of studies which investigate the potential in different energy sectors (water, gas, and electricity) for moving toward a more environmentally friendly and efficient energy supply. The main idea is how to harvest the flexibilities in each energy carrier in a larger framework. In this chapter, the coordination between water desalination systems and power system, gas network-power network, and finally the concept of energy hub is investigated.

10.1 Water-Power Nexus
The water-electricity interdependence is an undeniable issue. Water is used for cooling the power plants. On the other hand, the electricity is used for collecting, treatment, and disposal of water.
The water-energy nexus concept is shown in Fig. 10.1 [1]. The optimization is formulated as follows:  (10.1a)  (10.1b)  (10.1c)  (10.1d)  (10.1e)  (10.1f)  (10.1g)  (10.1h)  (10.1i)  (10.1j)  (10.1k)  (10.1l) The simulation data are taken from [1] with slight modifications (Tables 10.1, 10.2, and 10.3).
Table 10.1Technical and economical characteristics of thermal unitsUnit
a

g
($∕MW2)
b

g
 ($∕MW)
c

g
 ($)
P

g

max (MW)
P

g

min (MW)
g
1
0.0002069−0.148357.115000
g
2
0.0003232−0.185457.114000
g
3
0.001065−0.6026126.84000
g
4
0.0004222−0.211957.113500
Table 10.2Technical and economical characteristics of co-production unitsUnit
P

c

max

P

c

min

W

c

max

W

c

min

R

c

min

R

c

max

α

c


β

c


γ

c


ζ

c


ς

c


ξ

c


c
1
80016020030490.00044330.0035460.007093−1.106−4.426737.4
c
2
60012015023490.00078810.0063050.01261−1.475−5.901737.4
c
3
4008010015490.0017730.014190.02837−2.213−8.851737.4
Table 10.3Technical and economical characteristics of water desalination unitsUnit
a

w


b

w


c

w


W

w

max

W

w

min

w
1
0.00182-0.7087.3742500
Fig. 10.1Water-energy nexus concept


GCode 10.1 Water-energy nexus optimization problem

Sets    t /t1 * t24 /, i  /p1 * p4/, c /c1 * c3 /, w  /w1/;Table gendata ( i, * )  generator cost  c h a r a c t e r i s t i c s  and limits   a         b       c      Pmax   Pminp1 0.0002069 −0.1483 57.11  500    0p2 0.0003232 −0.1854 57.11  400    0p3 0.001065  −0.6026 126.8  400    0p4 0.0004222 −0.2119 57.11  350    0;Table Coproduct (c, * )     Pmax Pmin Wmax  Wmin  rmin rmax A11       A12      A22       b1     b2    Cc1   800  160  200  30   4    9    0.0004433 0.003546 0.007093 −1.106 −4.426 737.4c2   600  120  150  23   4    9    0.0007881 0.006305 0.01261  −1.475 −5.901 737.4c3   400  80   100  15   4    9    0.001773  0.01419  0.02837  −2.213 −8.851 737.4;Table waterdata (w, * )     a         b        c      Wmax    Wminw1   1.82E −02 −7.081e−1 7.374  250    0;Table PWdata( t, * )     Pd   watert1   1250 150t2   1125 130t3   875  100t4   750  150t5   950  200t6   1440 350t7   1500 300t8   1750 200t9   2000 300t10  2250 400t16  2500 550t17  2125 550t18  2375 500t19  2250 400t20  1975 350t21  1750 300t22  1625 250t23  1500 200t24  1376 150;Variables  Of,  p( i, t ),TC,CC, Pc(c, t ),Wc(c, t ),Water(w, t ), WaterCost;Binary variables  Up( i, t ),Uc(c, t ),Uw(w, t );p. up( i, t )=gendata ( i,"Pmax");  p. lo ( i, t )=0; Pc. up(c, t )= Coproduct (c, 'Pmax ' );Pc. lo (c, t )=0; Wc. up(c, t )= Coproduct (c, 'Wmax' );  Wc. lo (c, t )=0;Water. up(w, t )=waterdata (w, 'Wmax' );  Water. lo (w, t )=0;Equations costThermal, balanceP, balanceW, costCoprodcalc, Objective,costwatercalc, ratio1, ratio2,EQ1,EQ2,EQ3,EQ4,EQ5,EQ6,EQ7,EQ8;costThermal..TC = e = sum(( t, i ), gendata ( i, 'a ' ) * power (p( i, t ),2)+gendata ( i, 'b ' ) * p( i, t )+gendata ( i, ' c ' ) * Up( i, t ) );balanceP ( t ) ..  sum( i, p( i, t ) )+ sum(c, Pc(c, t ) )= e = PWdata( t, 'Pd ' );balanceW( t ) ..  sum(w, Water(w, t ) )+ sum(c,Wc(c, t ) )= e = PWdata( t, ' water ' );costCoprodcalc..  CC = e = sum(( c, t ), Coproduct (c, 'A11 ' ) * power (Pc(c, t ),2)+2* Coproduct (c, 'A12 ' ) * Pc(c, t ) * Wc(c, t ) + Coproduct (c, 'A22 ' ) * power (Wc(c, t ),2)+ Coproduct (c, 'B1 ' ) * Pc(c, t )+ Coproduct (c, 'B2 ' ) * Wc(c, t )+ Coproduct (c, 'C' ) * Uc(c, t ) );costwatercalc..  WaterCost = e = sum(( t,w), waterdata (w, 'a ' ) * power (Water(w, t ),2)+waterdata (w, 'b ' ) * Water(w, t ) +waterdata (w, ' c ' ) * Uw(w, t ) );Objective ..  OF = e = TC + CC + WaterCost;ratio1 (c, t ) ..  Pc(c, t )=l= Wc(c, t ) * Coproduct (c, 'Rmax ' );ratio2 (c, t ) ..  Pc(c, t )= g = Wc(c, t ) * Coproduct (c, 'Rmin ' );eq1 (w, t )    ..  Water(w, t )=l= Uw(w, t ) * waterdata (w, 'Wmax' );eq2 (w, t )..  Water(w, t )= g = Uw(w, t ) * waterdata (w, 'Wmin' );eq3 (c, t )..  wc(c, t )=l=  Uc(c, t ) * Coproduct (c, 'Wmax' );eq4 (c, t )..  wc(c, t )= g =  Uc(c, t ) * Coproduct (c, 'Wmin' );eq5 (c, t )..  Pc(c, t )=l=  Uc(c, t ) * Coproduct (c, 'Pmax ' );eq6 (c, t )..  Pc(c, t )= g =  Uc(c, t ) * Coproduct (c, 'Pmin ' );eq7 ( i, t )..  p( i, t ) =l= Up( i, t ) * gendata ( i,"Pmax");eq8 ( i, t )..  p( i, t ) = g = Up( i, t ) * gendata ( i,"Pmin");Model DEDcostbased /all/;  Solve DEDcostbased us MInlp min OF;


The hourly water output of different plants in water-energy nexus problem is depicted in Fig. 10.2. The hourly power output of different plants in water-energy nexus problem is shown in Fig. 10.3.
Fig. 10.2Hourly water output of different plants in water-energy nexus problem
Fig. 10.3Hourly power output of different plants in water-energy nexus problem



10.2 Gas-Power Nexus
The interaction of gas network and electricity network is modeled in this section. The electrical network is IEEE RTS 24-bus network which is shown in Fig. 10.4. It is a transmission network with the voltage levels of 138 kV, 230 kV and Sbase = 100 MVA. The branch data for IEEE RTS 24-bus network is given in Table 10.4 [2]. The from bus, to bus, reactance (X), resistance (r), total line charging susceptance (b), and MVA rating (MVA) are specified in this table. The parallel lines in MATPOWER are merged and the resultants are given in Table 10.4. The generation data for IEEE RTS 24-bus network is given in Table 10.5. The data of generating units in this network is inspired by Conejo et al. [3] and Bouffard et al. [4] with some modifications. The slack bus is bus 13 in this network. The wind turbines and the capacities are also shown in Fig. 10.4.
Fig. 10.4Gas network linkage with electricity network
Table 10.4Branch data for IEEE RTS 24-bus network     Rating     RatingFromTo
r(pu)
x(pu)
b(pu)(MVA)FromTo
r(pu)
x(pu)
b(pu)(MVA)120.00260.01390.461117511130.00610.04760.0999500130.05460.21120.057217511140.00540.04180.0879500150.02180.08450.022917512130.00610.04760.0999500240.03280.12670.034317512230.01240.09660.2030500260.04970.19200.052017513230.01110.08650.1818500390.03080.11900.032217514160.00500.03890.08185003240.00230.08390.000040015160.00220.01730.0364500490.02680.10370.028117515210.00320.02450.206010005100.02280.08830.023917515240.00670.05190.10915006100.01390.06052.459017516170.00330.02590.0545500780.01590.06140.016617516190.00300.02310.0485500890.04270.16510.044717517180.00180.01440.03035008100.04270.16510.044717517220.01350.10530.22125009110.00230.08390.000040018210.00170.01300.109010009120.00230.08390.000040019200.00260.01980.1666100010110.00230.08390.000040020230.00140.01080.0910100010120.00230.08390.000040021220.00870.06780.1424500
Table 10.5Generation data for IEEE RTS 24-bus networkGenBus
P

i

max

P

i

min

b

i
 ($/MW)
Cs

i
 ($)
Cd

i
 ($)RU
i
 (MW h−1)RD
i
 (MW h−1)SU
i
 (MW h−1)SD
i
 (MW h−1)UT
i
(h)DT
i
(h)
u

i, t = 0

U

i

0 (h)
S

i

0 (h)g1184001005.4700474710510811150g2214001005.4700474710611211160g3115230.413.321430.41430.41414434584120g4215230.413.321430.41430.41414445784120g51515554.2516002121657788002g61615554.2510.5231231221216673881100g723310108.510.526246242121112125881100g82335014010.8922982298282815416288150g973507520.7172517254949778088002g1013591206.8520.933056.73056.721212132281210008g1115601226.1143743777193142001g12223000000353531532600120

The gas network is also shown in Fig. 10.4 which its data is taken from [5]. The technical and economical characteristics of gas nodes are given in Table 10.6. The technical characteristics of gas network are also provided in Table 10.7 [5]. The gas network equations are described in (10.2).  (10.2a)  (10.2b)  (10.2c)  (10.2d)  (10.2e)  (10.2f)
Table 10.6Technical and economical characteristics of gas nodesGas nodeSg
n

min (106 Scm)Sg
n

max (106 Scm)Sd
n
 (106 Scm)Pr
n

min (bar)Pr
n

max (bar)
c

n
 $/MBtuAnderlues01.200.000.0066.200.00Antwerpen00.004.031.2580.000.00Arlon00.000.220.0066.200.00Berneau00.000.000.0066.200.00Blaregnies00.0015.622.0866.200.00Brugge00.003.921.2580.000.00Dudzele08.400.000.0077.002.28Gent00.005.261.2580.000.00Liege00.006.391.2566.200.00Loenhout04.800.000.0077.002.28Mons00.006.850.0066.200.00Namur00.002.120.0066.200.00Petange00.001.921.0466.200.00Peronnes00.960.000.0066.201.68Sinsin00.000.000.0063.000.00Voeren022.010.002.0866.201.68Wanze00.000.000.0066.200.00Warnand00.000.000.0066.200.00Zeebrugge011.590.000.0077.002.28Zomergem00.000.000.0080.000.00
Table 10.7Technical characteristics of gas networkPipeFromToActive
C

m, n

2

L
1
ZeebruggeDudzele 9.07027
L
2
ZeebruggeDudzele 9.07027
L
3
DudzeleBrugge 6.04685
L
4
DudzeleBrugge 6.04685
L
5
BruggeZomergem 1.39543
L
6
LoenhoutAntwerpen 0.10025
L
7
AntwerpenGent 0.14865
L
8
GentZomergem 0.22689
L
9
ZomergemPeronnes 0.65965
L
10
VoerenBerneau17.25622
L
11
VoerenBerneau10.10803
L
12
BerneauLiege 1.81405
L
13
BerneauLiege 0.02701
L
14
LiegeWarnand 1.45124
L
15
LiegeWarnand 0.02161
L
16
WarnandNamur 0.86384
L
17
NamurAnderlues 0.90703
L
18
AnderluesPeronnes 7.25622
L
19
PeronnesMons 3.62811
L
20
MonsBlaregnies 1.45124
L
21
WarnandWanze 0.05144
L
22
WanzeSinsin10.00642
L
23
SinsinArlon 0.00170
L
24
ArlonPetange 0.02782

The electrical network equations are described in (10.3).  (10.3a)  (10.3b)  (10.3c)  (10.3d)  (10.3e)  (10.3f)  (10.3g)  (10.3h)  (10.3i)  (10.3j) The overall optimization problem, constraints, and the decision variables are as follows:  (10.4)

The hourly variation pattern of wind generation, electric and gas demand is shown in Fig. 10.5.Fig. 10.5Hourly variation pattern of wind generation, electric and gas demand (pu)

The integrated electricity-gas problem is solved using the GCode 10.2. The total electricity cost EC is $3. 9760 × 105. The total gas extraction costs are GC = $5. 1755 × 105 and the total costs are $9. 1515 × 105. The hourly variation pattern of wind generation, electric and gas demand is shown in Fig. 10.5.

GCode 10.2 Gas-electricity nexus optimization problem

Sets   bus  /1*24/  , slack ( bus ) /13/,Gen /g1 * g12 /, t /t1 * t24/       genD( gen ) /g1 * g2, g5, g7 * g11 /, genN( gen ) /g3, g4, g6, g12/ ;scalars  Sbase /100/  ,VOLL  /10000/, VOLW  /50/; a l i a s (bus, node );Sets gn NODES  / Anderlues,  Antwerpen,  Arlon,  Berneau,  Blaregnies,  Brugge,  Dudzele,               Gent,  Liege,  Loenhout,  Mons,  Namur,  Petange,  Peronnes,  Sinsin,               Voeren,  Wanze,  Warnand,  Zeebrugge,  Zomergem /     a PIPES  / L1 * L24 /;  Alias (gn,gm);  set Pnm(a, gn,gm) arc description;table  Ndata(gn, * )  Node Data           slo     sup       Sd     plo  pup  c *  Removed for saving space   ;
set GElink (gn, gen )/Loenhout     .        g12Voeren       .         g6Sinsin        .         g3Petange      .         g4 /;table  AData(a, gn,gm, * )  Arc Data                                    act  C2mn;table  GD (Gen, * )   Generating units  characteristics;
set GB(bus,  Gen) connectivity  index of each generating unit to each bus ;Table BusData(bus, * )  Demands of each bus in MW;Table branch (bus,  node, * )     Network technical               r       x       b     z  limit;Table DataWDL( t, * )     w                  d                 g;Parameters Wcap( bus ), conex (bus, node ),SD(gn);branch (bus, node, ' bij ' ) $branch (bus, node, ' Limit ' ) =1/branch (bus, node, 'x ' );conex (bus, node )$( branch (bus, node, ' limit ' )and branch (node, bus, ' limit ' ) )=1;conex (bus, node )$( conex (node, bus ) )=1; Variables f (a, gn,gm, t ), sg (gn, t ), pressure (gn, t ),EC, Pij (bus, node, t ),Pg(Gen, t ), delta (bus, t ), lsh (bus, t ),Pw(bus, t ), pc(bus, t ),Gc,OF  ;Pnm(a, gn,gm) $adata (a, gn,gm, 'c2mn ' )=yes;Equations const1, const2, const3, const4, const5, const6,CG1,CG2,CG3,CG4, Objective;const1 (bus, node, t ) $conex (bus, node ).. Pij (bus, node, t )= e =branch (bus, node, ' bij ' ) * ( delta (bus, t ) −delta (node, t ) );const2 (bus, t ).. lsh (bus, t )$BusData(bus, 'pd ' )+ Pw(bus, t )$Wcap( bus )+ sum(Gen$GB(bus,Gen),Pg(Gen, t ) ) − DataWDL( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase= e =+ sum( node$conex (node, bus ), Pij (bus, node, t ) );const3..EC = e = sum(( bus,GenD, t )$GB(bus,GenD),Pg(GenD, t ) * GD (GenD, 'b ' ) * Sbase )+ sum(( bus, t ),VOLL * lsh (bus, t ) * Sbase$BusData (bus, 'pd ' )+ VOLW* Pc(bus, t ) * sbase$Wcap( bus ) );const4 (gen, t ) ..  pg(gen, t+1) − pg(gen, t )=l= GD (gen, 'RU' )/Sbase;const5 (gen, t ) ..  pg(gen, t−1) − pg(gen, t )=l= GD (gen, 'RD' )/Sbase;const6 (bus, t )$Wcap( bus ) ..  pc(bus, t )= e = DataWDL( t, 'w' ) * Wcap( bus )/Sbase− pw(bus, t );Pg. lo (Gen, t )= GD (Gen, 'Pmin ' )/Sbase;  Pg. up(Gen, t )= GD (Gen, 'Pmax ' )/Sbase;delta. up(bus, t )= pi/2; delta. lo (bus, t )=− pi/2; delta. fx ( slack, t )=0;Pij. up(bus, node, t )$ (( conex (bus, node ) ) ) =1*  branch (bus, node, ' Limit ' )/Sbase;Pij. lo (bus, node, t )$ (( conex (bus, node ) ) )=−1*branch (bus, node, ' Limit ' )/Sbase;lsh. up(bus, t )=  DataWDL( t, 'd ' ) * BusData(bus, 'pd ' )/Sbase;  lsh. lo (bus, t )=  0;Pw. up(bus, t )= DataWDL( t, 'w' ) * Wcap( bus )/Sbase;  Pw. lo (bus, t )=0;Pc. up(bus, t )= DataWDL( t, 'w' ) * Wcap( bus )/Sbase;  Pc. lo (bus, t )=0; SD(gn)= Ndata(gn, 'SD ' );CG1(gn, t )..  sum(Pnm(a, gn,gm), f (Pnm, t ) )= e = sum(Pnm(a,gm, gn), f (Pnm, t ) )+sg (gn, t )$(Ndata(gn, 'Sup ' )>0) − DataWDL( t, 'G' ) * SD(gn)− sum((GenN) $Gelink (gn,GenN),Pg(GenN, t ) * GD (GenN, 'b ' ) * Sbase /35315);CG2(Pnm(a, gn,gm), t )$(AData(a, gn,gm, 'C2mn ' ) AND  AData(a, gn,gm, 'ACT' )=0) ..  signpower ( f (Pnm, t ),2) = e =  AData(Pnm, 'C2mn ' ) * ( pressure (gn, t ) −pressure (gm, t ) );CG3(Pnm(a, gn,gm), t )$(AData(a, gn,gm, 'C2mn ' ) AND  AData(a, gn,gm, 'ACT' )=1)  ..  −sqr ( f (Pnm, t ) ) = g =  AData(Pnm, 'C2mn ' ) * ( pressure (gn, t ) −pressure (gm, t ) );CG4..  Gc = e =  sum(( gn, t ), 35315* ndata (gn, ' c ' ) * sg (gn, t )$Ndata(gn, 'Sup ' ) );Objective..OF = e = EC + Gc; sg. lo (gn, t )=0; sg. up(gn, t )=  ndata (gn, ' sup ' );pressure. lo (gn, t ) =  sqr ( ndata (gn, ' plo ' ) );  pressure. up(gn, t ) =  sqr ( ndata (gn, 'pup ' ) );f. lo (Pnm(a, gn,gm), t )$(AData(a, gn,gm, 'C2mn ' ) ) =− sqrt(AData(a, gn,gm, 'C2mn ' ) * (  pressure. up(gn, t ) −pressure. lo (gn, t ) ) );f. up(Pnm(a, gn,gm), t )$(AData(a, gn,gm, 'C2mn ' ) )=
sqrt(AData(a, gn,gm, 'C2mn ' ) * (  pressure. up(gn, t ) −pressure. lo (gn, t ) ) );f. lo (Pnm(a, gn,gm), t )$(AData(a, gn,gm, 'C2mn ' ) AND  AData(a, gn,gm, 'ACT' )=1) =0;Model overall  /all/;  Solve overall   using nlp min OF;


Hourly variation pattern of gas generation from gas sources are shown in Fig. 10.6.Fig. 10.6Hourly variation pattern of gas generation from gas sources

The hourly variation pattern of electricity power generation is shown in Fig. 10.7.Fig. 10.7Hourly variation pattern of electricity power generation

The interaction of gas network and electricity sector has been investigated in several works. The impacts of the gas network on security constrained UC is analyzed in [6]. A unified gas and power flow analysis in natural gas and electricity coupled networks can be found in [7]. A robust scheduling model for wind-integrated energy systems with the considerations of both gas pipeline and power transmission contingencies is developed in [8]. The reliability of gas networks and their impacts on the reliability of electricity network is modeled in [9]. The impact of large penetration of wind generation on the UK gas network is analyzed in [10]. One of the recent efficient methods of electricity storage is storing the electricity as gas. This method is also called power to gas or P2G technique [11].



10.3 Energy Hub Concept
The concept of Energy Hub was introduced in [12]. Energy hub may be considered as a virtual box that can convert a set of input energy carriers into a set of energy demands. This box contains several technologies that can store, transfer, or convert different forms of energies to each other. A general example of Energy hub is shown in Fig. 10.8. Different aspects of energy hubs are investigated in the literature such as economic dispatch of energy hubs [13], demand response and energy hub [14], energy hub concept applied on car manufacturing plants [15], and wind power uncertainty modeling in energy hubs [16, 17].
Fig. 10.8The energy hub concept

The technologies shown in Fig. 10.8 are explained as follows: Combined heat and power (CHP): receives the natural gas (G

t
) and converts it into heat (H

t
) and electricity (E

t
) The CHP economic dispatch problem can be modeled in (10.5) [18]:  (10.5a)  (10.5b)
Electric heat pump (EHP): It is fed by electricity and generates heat demand (H

t
) or cool demand (C

t
) based on the operating mode. The operation of EHP is mathematically formulated as follows:  (10.6a)  (10.6b)  (10.6c)  (10.6d) The EHP can be in heat or cool generation mode. COP is the coefficient of performance for EHP.Chiller boiler (CB): It receives heat and transforms it into cool demand The chiller boiler operation is mathematically formulated as follows:  (10.7) The η

hc
 is the efficiency of heat to cooling conversion for chiller boiler.Electricity storage system (ESS): It can store (electricity) and then discharge electricity The ESS operation is mathematically formulated as follows:  (10.8a)  (10.8b)  (10.8c)  (10.8d)  (10.8e) SOC
t
 is the state of charge in ESS. E

t

ch∕dch is for demonstrating the charged and discharged electricity in ESS. The binary variables I

t

ch, I

t

dch show the charge or discharge mode of ESS at time t.Transformer (Tr): It receives electricity and the output is also electricity (with different voltage level)  (10.9)
Furnace (F): receives the natural gas and generates the heat demand  (10.10)


Three different energy hub configurations will be analyzed to investigate the level of achievable operational flexibility.

10.3.1 Data
The energy hubs which are analyzed in this chapter would have three types of energy demands namely electric, heat, and cooling demand. Different hourly demand and electricity price data for three energy hub configurations are given in Table 10.8.
Table 10.8Different hourly demand and electricity price data for energy hub configurationsTime
D

t


h
 (MW)
D

t


e
 (MW)
D

t


c
 (MW)
λ

t


e
 $/MW h
t
1
21.4152.1011.5136.67
t
2
23.2166.7013.6840.41
t
3
26.0972.2016.0138.48
t
4
26.7278.3721.4238.00
t
5
25.59120.2021.9740.24
t
6
26.4583.4830.8038.55
t
7
39.54110.4038.9452.26
t
8
47.28124.2946.7867.34
t
9
52.12143.6150.9770.47
t
10
49.13149.2848.8666.20
t
11
69.26154.1934.7773.30
t
12
61.97147.3032.6860.82
t
13
68.04200.7127.7763.15
t
14
68.56174.3732.0270.77
t
15
56.40176.5433.2263.09
t
16
41.32136.1134.1352.53
t
17
37.43108.7140.7857.00
t
18
25.4496.9043.5649.15
t
19
25.6689.0851.4847.47
t
20
21.9482.4943.1549.46
t
21
22.4476.9336.4953.07
t
22
24.6366.8527.6851.60
t
23
22.7247.1719.1450.53
t
24
22.5964.6711.0436.38


The charging and discharging efficiencies (η
ch∕dch) of ESS are assumed to be 0.9. The ESS capacity is SOCmax = 600 MW h and SOCmin = 120 MW h. The initial stored energy in ESS is 120 MW h. The minimum charging and discharging limits are E
min
ch∕dch = 0 and the maximum charging and discharging limits are E
max
ch∕dch = 120 MW.The transformer efficiency is η
ee = 0. 98.The CHP efficiencies for gas to electricity is η
ge = 0. 35 and for gas to heat is η
gh = 0. 45. The CHP capacity is 250 MW.For EHP, C
Max
ehp = H
Max
ehp = 500 MW; The COP is assumed to be 2.5.The furnace efficiency η
gh

f
 is 0.9. The furnace capacity is 600 MW.The chiller boiler has a capacity equal to 500 MW and the efficiency is η
hc = 0. 95The natural gas price is assumed to be constant for different hours and it is equal to λ

t


g
 = 12$/MW h



10.3.2 Configuration I
This configuration contains transformer, furnace, and chiller boiler as shown in Fig. 10.9.  (10.11a)  (10.11b)  (10.11c)  (10.11d)  (10.11e) The GAMS code for solving the hub configuration I described in (10.11) is given in GCode 10.3.Fig. 10.9The energy hub configuration I, considering transformer, furnace, and chiller boiler

The developed model in GCode 10.3 is linear and can be solved using any lp solver. The problem is solved and the total operating costs are $1. 1327 × 105. The hourly purchased electricity and natural gas in energy hub configuration I are shown in Fig. 10.10.Fig. 10.10The hourly purchased electricity and natural gas in energy hub configuration I

The output of furnace system will be divided into two streams. The first one will supply the chiller and the second one will directly supply the heat demand. The hourly output of furnace unit in energy hub configuration-I is shown in Fig. 10.11.Fig. 10.11The hourly output of furnace unit in energy hub configuration I


GCode 10.3 The optimal operation of energy hub configuration I

Set     t       hours            /t1 * t24/Table data ( t, * )     Dh   De    Dc   lambdat1   21.4 52.1  11.5 36.7t2   23.2 66.7  13.7 40.4t3   26.1 72.2  16   38.5t4   26.7 78.4  21.4 38t5   25.6 120.2 22   40.2t6   26.4 83.5  30.8 38.6t7   39.5 110.4 38.9 52.3t8   47.3 124.3 46.8 67.3t9   52.1 143.6 51   70.5t10  49.1 149.3 48.9 66.2t11  69.3 154.2 34.8 73.3t12  62   147.3 32.7 60.8t13  68   200.7 27.8 63.2t14  68.6 174.4 32   70.8t15  56.4 176.5 33.2 63.1t16  41.3 136.1 34.1 52.5t17  37.4 108.7 40.8 57t18  25.4 96.9  43.6 49.2t19  25.7 89.1  51.5 47.5t20  21.9 82.5  43.1 49.5t21  22.4 76.9  36.5 53.1t22  24.6 66.8  27.7 51.6t23  22.7 47.2  19.1 50.5t24  22.6 64.7  11   36.4 *  −−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−Variable cost;Positive  variables     E( t ),G( t ),H1( t ),H2( t );ScalarCBmax  /500/, eta_ee /0.98/, eta_ghf /0.9/, eta_hc /0.95/;H2. up( t)= CBmax;Equationseq1, eq2, eq3, eq4, eq5;eq1      ..    cost = e = sum( t, data ( t, 'lambda ' ) * E( t )+12*G( t ) );eq2 ( t )   ..    eta_ee * E( t)=e =data ( t, 'E ' );eq3 ( t )  ..    H1( t)=e =data ( t, 'h ' );eq4 ( t )  ..    eta_ghf * G( t)=e = H1( t)+H2( t );eq5 ( t )  ..    eta_hc * H2( t)=e =data ( t, ' c ' );Model Hub /all/;Solve hub us lp min cost;




10.3.3 Configuration II
This configuration contains transformer, furnace, chiller boiler, CHP, and ESS as shown in Fig. 10.12.
Fig. 10.12The energy hub configuration II, considering transformer, furnace, chiller boiler, CHP, and electric energy storage


 (10.12a)  (10.12b)  (10.12c)  (10.12d)  (10.12e)  (10.12f)  (10.12g)  (10.12h)  (10.12i)  (10.12j)  (10.12k)  (10.12l)  (10.12m) The GAMS code for solving the hub configuration II described in (10.12) is given in GCode 10.4.

GCode 10.4 The optimal operation of energy hub configuration II


set     t       hours            /t1 * t24/table  data ( t, * )     Dh   De    Dc   lambdat1   21.4 52.1  11.5 36.7t2   23.2 66.7  13.7 40.4t3   26.1 72.2  16   38.5t4   26.7 78.4  21.4 38t5   25.6 120.2 22   40.2t6   26.4 83.5  30.8 38.6t7   39.5 110.4 38.9 52.3t8   47.3 124.3 46.8 67.3t9   52.1 143.6 51   70.5t10  49.1 149.3 48.9 66.2t11  69.3 154.2 34.8 73.3t12  62   147.3 32.7 60.8t13  68   200.7 27.8 63.2t14  68.6 174.4 32   70.8t15  56.4 176.5 33.2 63.1t16  41.3 136.1 34.1 52.5t17  37.4 108.7 40.8 57t18  25.4 96.9  43.6 49.2t19  25.7 89.1  51.5 47.5t20  21.9 82.5  43.1 49.5t21  22.4 76.9  36.5 53.1t22  24.6 66.8  27.7 51.6t23  22.7 47.2  19.1 50.5t24  22.6 64.7  11   36.4Variable cost;Positive  variablesE( t ),E1( t ),E2( t ),G( t ),G1( t ),G2( t ),H1( t ),H2( t )SOC( t ),Ec( t ),Ed( t ) ;Binary variables  Idch ( t ), Ich ( t );scalar  SOC0 /20/,SOCmax  /600/, eta_c /0.9/, eta_d /0.9/, eta_ee /0.98/, eta_ge /0.45/,eta_gh /0.35/, eta_hc /0.95/,Chpmax /250/,CBmax  /500/,Fmax /600/, eta_ghf /0.9/;SOC0 =  0. 2 * SOCmax;SOC. up( t )= SOCmax;  SOC. lo ( t ) =0.2*SOCmax;  SOC. fx ( ' t24 ' )= SOC0;Ec. up( t ) =0.2*SOCmax;  Ec. lo ( t )=0;Ed. up( t ) =0.2*SOCmax;  Ed. lo ( t )=0;G1. up( t )= Chpmax;G2. up( t )= Fmax;H2. up( t )= CBmax;Equations  eq1, eq2, eq3, eq4, eq5, eq6, eq7, eq8, eq9, eq10, eq11, eq12;eq1      ..    cost = e = sum( t, data ( t, 'lambda ' ) * E( t ) +12*G( t ) );eq2 ( t )   ..    eta_ee * E2( t )+ Ed( t )+eta_ge * G1( t )= e =data ( t, 'E ' );eq3 ( t )   ..    E( t )= e = E1( t )+ E2( t );eq4 ( t )   ..    E1( t )= e = Ec( t );eq5 ( t )   ..    SOC( t )= e = SOC0$( ord ( t )=1) +  SOC( t−1)$( ord ( t )>1) + Ec( t ) * eta_c− Ed( t )/eta_d;eq6 ( t )   ..    Ed( t )=l =0.2*SOCmax * Idch ( t );eq7 ( t )   ..    Ec( t )=l =0.2*SOCmax * Ich ( t );eq8 ( t )   ..    Idch ( t )+Ich ( t )=l =1;eq9 ( t )   ..    G( t )= e = G1( t )+ G2( t );eq10 ( t )  ..    eta_gh * G1( t )+ H1( t )= e =1* data ( t, 'h ' );eq11 ( t )  ..    eta_ghf * G2( t )= e = H1( t )+ H2( t );eq12 ( t )  ..    eta_hc * H2( t )= e =data ( t, ' c ' );model Hub2 /all/;Solve hub2 us mip min cost;


The developed model in GCode 10.4 is linear and can be solved using any lp solver. The problem is solved, and the total operating costs are $0. 85504 × 105. The hourly purchased electricity and its division between transformer and ESS in energy hub configuration-II are shown in Fig. 10.13. The output of furnace system will be divided into two streams. The first one will supply the chiller and the second one will supply the heat demand. The hourly output of furnace unit in energy hub configuration II is shown in Fig. 10.14. The hourly state of charge, charging, and discharging of ESS in energy hub configuration II is shown in Fig. 10.15.
Fig. 10.13The hourly purchased electricity and its division between transformer and ESS in energy hub configuration II
Fig. 10.14The hourly output of furnace unit in energy hub configuration II
Fig. 10.15The hourly state of charge (MW h), charging, and discharging of ESS (MW) in energy hub configuration II



10.3.4 Configuration III
This configuration contains transformer, furnace, chiller boiler, CHP, and ESS as shown in Fig. 10.16.
Fig. 10.16The energy hub configuration III, considering transformer, furnace, chiller boiler, CHP, electric energy storage, and EHP


 (10.13a)
 (10.13b)
 (10.13c)
 (10.13d)
 (10.13e)
 (10.13f)
 (10.13g)
 (10.13h)
 (10.13i)
 (10.13j)
 (10.13k)
 (10.13l)
 (10.13m)
 (10.13n)
 (10.13o)
 (10.13p)
 (10.13q)

The developed model in GCode 10.5 is linear and can be solved using any lp solver.

GCode 10.5 The optimal operation of energy hub configuration III

Set     t       hours            /t1 * t24/Table data ( t, * )          Dh   De    Dc   lambdat1   21.4 52.1  11.5 36.7t2   23.2 66.7  13.7 40.4t3   26.1 72.2  16   38.5t4   26.7 78.4  21.4 38t5   25.6 120.2 22   40.2t6   26.4 83.5  30.8 38.6t7   39.5 110.4 38.9 52.3t8   47.3 124.3 46.8 67.3t9   52.1 143.6 51   70.5t10  49.1 149.3 48.9 66.2t11  69.3 154.2 34.8 73.3t12  62   147.3 32.7 60.8t13  68   200.7 27.8 63.2t14  68.6 174.4 32   70.8t15  56.4 176.5 33.2 63.1t16  41.3 136.1 34.1 52.5t17  37.4 108.7 40.8 57t18  25.4 96.9  43.6 49.2t19  25.7 89.1  51.5 47.5t20  21.9 82.5  43.1 49.5t21  22.4 76.9  36.5 53.1t22  24.6 66.8  27.7 51.6t23  22.7 47.2  19.1 50.5t24  22.6 64.7  11   36.4  ;data ( t, 'lambda ' ) =0.6* data ( t, 'lambda ' );variable  cost;positive  variables  E( t ),E1( t ),E2( t ),E3( t ),G( t ),G1( t ),G2( t ),H1( t ),H2( t )SOC( t ),Ec( t ),Ed( t ),H_ehp( t ),C_ehp( t ) ;Binary variables  Idch ( t ), Ich ( t ), Ic ( t ), Ih ( t );scalar  SOC0 /20/, SOCmax  /600/, eta_c /0.9/, eta_d /0.9/, eta_ee /0.98/, eta_ge /0.45/ , eta_gh /0.35/eta_hc /0.95/, COP  /2.5/, H_ehpMax /200/, C_ehpMax /200/,Chpmax /300/,CBmax  /300/,Fmax /300/, eta_ghf /0.9/;SOC0 =  0. 2 * SOCmax;  SOC. up( t )= SOCmax;  SOC. lo ( t ) =0.2*SOCmax;  SOC. fx ( ' t24 ' )= SOC0;Ec. up( t ) =0.2*SOCmax;  Ec. lo ( t )=0; Ed. up( t ) =0.2*SOCmax;  Ed. lo ( t )=0;C_ehp. up( t )= C_ehpMax;  H_ehp. up( t )= H_ehpMax;G1. up( t )= Chpmax;  G2. up( t )= Fmax;  H2. up( t )= CBmax;  E. up( t ) =1000;Equationseq1, eq2, eq3, eq4, eq5, eq6, eq7, eq8, eq9, eq10, eq11, eq12, eq13, eq14, eq15, eq16;eq1      ..    cost = e = sum( t, data ( t, 'lambda ' ) * E( t ) +12*G( t ) );eq2 ( t )   ..    eta_ee * E2( t ) + Ed( t )+eta_ge * G1( t )= e =data ( t, 'E ' )+ E3( t );eq3 ( t )   ..    E( t )= e = E1( t )+ E2( t );eq4 ( t )   ..    E1( t )= e = Ec( t );eq5 ( t )   ..    SOC( t )= e = SOC0$ ( ord ( t )=1) +  SOC( t−1)$( ord ( t )>1) + Ec( t ) * eta_c− Ed( t )/eta_d;eq6 ( t )   ..    Ed( t )=l =0.2*SOCmax * Idch ( t );eq7 ( t )   ..    Ec( t )=l =0.2*SOCmax * Ich ( t );eq8 ( t )   ..    Idch ( t )+Ich ( t )=l =1;eq9 ( t )   ..    G( t )= e = G1( t )+ G2( t );eq10 ( t )  ..    eta_gh * G1( t )+ H1( t )+ H_ehp( t )= e =1* data ( t, 'h ' );eq11 ( t )  ..    eta_ghf * G2( t )= e = H1( t )+ H2( t );eq12 ( t )  ..    eta_hc * H2( t )+ C_ehp( t )= e =data ( t, ' c ' );eq13 ( t )  ..    C_ehp( t )+ H_ehp( t )= e = E3( t ) * cop;eq14 ( t )  ..    H_ehp( t )=l= H_ehpMax *  Ih ( t );eq15 ( t )  ..    C_ehp( t )=l= C_ehpMax *  Ic ( t );eq16 ( t )  ..    Ic ( t )+Ih ( t )=l =1;Model Hub /all/;Solve hub us mip min cost;


The problem is solved and the total operating costs are $0. 84430 × 105. The hourly purchased electricity and its division between transformer and ESS in energy hub configuration-III are shown in Figs. 10.17, 10.18. The output of furnace system will be divided into two streams. The first one will supply the chiller and the second one will supply the heat demand. The hourly output of furnace unit in energy hub configuration II is shown in Fig. 10.14. The hourly state of charge, charging, and discharging of ESS in energy hub configuration III is shown in Fig. 10.19. The hourly output of EHP in energy hub configuration III is shown in Fig. 10.20.
Fig. 10.17The hourly purchased electricity and its division between transformer and ESS in energy hub configuration III
Fig. 10.18The hourly output of furnace unit in energy hub configuration III
Fig. 10.19The hourly state of charge (MW h), charging, and discharging of ESS (MW) in energy hub configuration III
Fig. 10.20The hourly output of EHP in energy hub configuration III




References


1.
A. Santhosh, A.M. Farid, K. Youcef-Toumi, Real-time economic dispatch for the supply side of the energy-water nexus. Appl. Energy 122, 42-52 (2014)Crossref


2.
R.D. Zimmerman, C.E. Murillo-Sanchez, R.J. Thomas, Matpower: steady-state operations, planning, and analysis tools for power systems research and education. IEEE Trans. Power Syst. 26(1), 12-19 (2011)Crossref


3.
A.J. Conejo, M. Carrión, J.M. Morales, Decision Making Under Uncertainty in Electricity Markets, vol. 1 (Springer, Berlin, 2010)CrossrefMATH


4.
F. Bouffard, F.D. Galiana, A.J. Conejo, Market-clearing with stochastic security-part II: case studies. IEEE Trans. Power Syst. 20(4), 1827-1835 (2005)Crossref


5.
D. De Wolf, Y. Smeers, The gas transmission problem solved by an extension of the simplex algorithm. Manag. Sci. 46(11), 1454-1465 (2000)CrossrefMATH


6.
T. Li, M. Eremia, M. Shahidehpour, Interdependency of natural gas network and power system security. IEEE Trans. Power Syst. 23(4), 1817-1824 (2008)Crossref


7.
A. Martinez-Mares, C.R. Fuerte-Esquivel, A unified gas and power flow analysis in natural gas and electricity coupled networks. IEEE Trans. Power Syst. 27(4), 2156-2166 (2012)Crossref


8.
L. Bai, F. Li, T. Jiang, H. Jia, Robust scheduling for wind integrated energy systems considering gas pipeline and power transmission n-1 contingencies. IEEE Trans. Power Syst. 32(2), 1582-1584 (2017)


9.
J. Munoz, N. Jimenez-Redondo, J. Perez-Ruiz, J. Barquin, Natural gas network modeling for power systems reliability studies. in 2003 IEEE Bologna Power Tech Conference Proceedings, vol. 4, June 2003, p. 8


10.
M. Qadrdan, M. Chaudry, J. Wu, N. Jenkins, J. Ekanayake, Impact of a large penetration of wind generation on the GB gas network. Energy Policy 38(10), 5684-5695 (2010)Crossref


11.
H.S. de Boer, L. Grond, H. Moll, R. Benders, The application of power-to-gas, pumped hydro storage and compressed air energy storage in an electricity system at different wind power penetration levels. Energy 72, 360-370 (2014)Crossref


12.
M. Geidl, G. Koeppel, P. Favre-Perrod, B. Klöckl, G. Andersson, K. Fröhlich, The energy hub-a powerful concept for future energy systems. in Third Annual Carnegie Mellon Conference on the Electricity Industry, Pittsburgh (2007), pp. 13-14


13.
S.D. Beigvand, H. Abdi, M. La Scala, A general model for energy hub economic dispatch. Appl. Energy 190, 1090-1111 (2017)Crossref


14.
M. Batić, N. Tomašević, G. Beccuti, T. Demiray, S. Vraneš, Combined energy hub optimisation and demand side management for buildings. Energy Build. 127, 229-241 (2016)Crossref


15.
K. Kampouropoulos, F. Andrade, Energy hub optimization applied on car manufacturing plants. in ANDESCON, 2016 IEEE (IEEE, Piscataway, 2016), pp. 1-4


16.
A. Soroudi, B. Mohammadi-Ivatloo, A. Rabiee, Energy hub management with intermittent wind power. in Large Scale Renewable Power Generation (Springer, Singapore, 2014), pp. 413-438


17.

A. Dolatabadi, B. Mohammadi-Ivatloo, M. Abapour, S. Tohidi, Optimal stochastic design of wind integrated energy hub. IEEE Trans. Ind. Inf. 99, 1-1 (2017). doi: 10.​1109/​TII.​2017.​2664101
Crossref


18.
M. Geidl, Integrated modeling and optimization of multi-carrier energy systems. PhD thesis, TU Graz, 2007
























Alireza Soroudi



Power System Optimization Modeling in GAMS













Alireza Soroudi

School of Electrical Engineering, University College of Dublin, Belfield, Dublin, Ireland






					ISBN 978-3-319-62349-8
e-ISBN 978-3-319-62350-4


https://doi.org/10.1007/978-3-319-62350-4

Library of Congress Control Number: 2017944921
© Springer International Publishing AG 2017
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication does not imply, even in the absence of a specific statement, that such names are exempt from the relevant protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this book are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or the editors give a warranty, express or implied, with respect to the material contained herein or for any errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.
Printed on acid-free paper

This Springer imprint is published by Springer Nature
The registered company is Springer International Publishing AG
The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland



Preface


              The complex structure of electric power systems as the largest human-built machines justifies the need for an efficient and robust computation tool to conduct in-depth analysis. This book is intended to serve as an introduction to the application of GAMS software in solving a broad range of power system optimization problems. Due to the innate capability of GAMS, researchers can now pursue questions that they were unable to previously. It has been 8 years since I was introduced to GAMS. During these years, I have explored new areas in power system studies. The main purpose of this book is to share these experiences with other researchers/students or industry employees who might need a powerful computation tool for their studies. This book covers a broad range of topics in power system studies as follows:
              
                    Chapter 
                    1
                    : Gives an overview and tips on how to start coding with GAMS for beginners.
                  
                    Chapter 
                    2
                    : Simple but practical examples are solved.
                  
                    Chapter 
                    3
                    : Economic dispatch concept is covered and solved.
                  
                    Chapter 
                    4
                    : Deals with dynamic economic dispatch problem where the problem is multi-period.
                  
                    Chapter 
                    5
                    : Covers the unit commitment problem.
                  
                    Chapter 
                    6
                    : Multi-period optimal DC/AC power flow is explained and solved.
                  
                    Chapter 
                    7
                    : The application of energy storage system in power system planning and operation is analyzed.
                  
                    Chapter 
                    8
                    : The power system observability is enhanced using PMU technology.
                  
                    Chapter 
                    9
                    : Some different transmission network operation and planning problems are presented and solved.
                  
                    Chapter 
                    10
                    : Energy system integration is discussed and solved.
                  


              The intended audiences are but not limited to the following:
              Power engineers: The proposed framework of this book enables power engineers to obtain a better insight into power system studies.Educators: This book can be used as a textbook in different power system operation and planning modules.System operators: Power system operators usually use commercial packages for solving their problems. This book can bring flexibility into their studies. Sometimes, the commercial software does not include all required analysis, or they are used as a black box.Researchers: Students and researchers with diverse mathematical and power system backgrounds can use this book to get familiar with different power system optimization issues.


This book is provided by the author "as is," and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose, are disclaimed. In no event shall the copyright holder or author or publisher be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software or codes, even if advised of the possibility of such damage.

As the first book on "power system optimization modeling in GAMS," there is always space for improvement. Any comments and suggestions from the readers are welcome. Please kindly share them with the author.


Alireza Soroudi


Dublin, Ireland

May 2017


Acknowledgments

This book would have not been finished without the contributions of several globally recognized experts in the power system field. A special thanks to Dr. Turaj Amraee who introduced GAMS to me for the first time.
I would like to thank those who gave me insight about the power system studies, especially Dr. Raphael Caire at Grenoble INP, Dr. Andrew Keane at University College Dublin, and Dr. Jonathon O'Sullivan at EirGrid.
This book is dedicated to my lovely wife, Soudeh, who supported me in putting together all the details. Finally, I appreciate all that my parents, Simin and Shahryar, and my sister, Mona, have done for me.




Contents





1 Introduction to Programming in GAMS

1




1.​1 Optimization Problems in Power System

1





1.​2 GAMS Installation

6





1.​3 GAMS Elements

8





1.​4 Conditional Statements

15





1.​5 Loop Definition in GAMS

16




1.​5.​1 LOOP Statement

16





1.​5.​2 WHILE Statement

17





1.​5.​3 FOR Statement

17





1.​5.​4 REPEAT-UNTIL Statement

18






1.​6 Linking GAMS and Excels

18




1.​6.​1 Reading from Excel

18





1.​6.​2 Writing to Excel

19






1.​7 Error Debugging in GAMS

19





1.​8 General Programming Remarks

24





1.​9 Book Structure

27





References

29






2 Simple Examples in GAMS

33




2.​1 Different Types of Optimization Models

33




2.​1.​1 Linear Programming (LP)

34





2.​1.​2 Mixed Integer Programming (MIP)

38





2.​1.​3 Nonlinear Programming (NLP)

44





2.​1.​4 Quadratic Constrained Programming (QCP)

48





2.​1.​5 Mixed Integer Nonlinear Programming (MINLP)

49






2.​2 Random Numbers in GAMS

53





                      2.2.1 Estimating the
                      π
                      Number
                    

54





2.​2.​2 Integration Calculation

55





2.​2.​3 LP Problems with Uncertain Coefficients

56






2.​3 Multi-Objective Optimization

58




2.​3.​1 Weighted Sum Approach

58





2.​3.​2 Pareto Optimality

58






2.​4 Applications

62





References

62






3 Power Plant Dispatching

65




3.​1 Thermal Unit Economic Dispatch

65





3.​2 Thermal Unit Environmental Dispatch

67





3.​3 CHP Economic Dispatch

73





3.​4 Hydro Unit Economic Dispatch

79





3.​5 Multi-Area Mix Unit Dynamic Dispatch

87





3.​6 Applications

91





References

93






4 Dynamic Economic Dispatch

95




4.​1 Cost-Based DED

95




4.​1.​1 Ramp Rate Sensitivity Analysis

98





4.​1.​2 Multi-Objective Cost-Emission Minimization

100





4.​1.​3 Wind Integrated DED

105






4.​2 Price-Based DED

107




4.​2.​1 Price-Based DED Just Energy Market

107





4.​2.​2 Price-Based DED Energy and Reserve Market

110






4.​3 Linearized Cost-Based DED

113





4.​4 Applications

117





References

118






5 Unit Commitment

119




5.​1 Cost-Based Unit Commitment

119




5.​1.​1 Cost Calculation

119





5.​1.​2 Ramp Rate Constraints

120





5.​1.​3 Min Up/​Down Time Constraints

122





5.​1.​4 Demand-Generation Balance

123






5.​2 Cost-Based UC with Additional Constraints

125




5.​2.​1 Cost-Based UC with Reserve Constraints

126





5.​2.​2 Cost-Based UC Considering Generator Contingency

128





5.​2.​3 Cost-Based UC with Demand Flexibility Constraints

131






5.​3 Price-Based Unit Commitment

136





5.​4 Applications

138




5.​4.​1 Cost-Based UC

138





5.​4.​2 Price-Based UC

139






References

139






6 Multi-Period Optimal Power Flow

141




6.​1 Single Period Optimal DC Power Flow

141




6.​1.​1 Three-Bus Network DC-OPF

144





6.​1.​2 Five-Bus Network DC-OPF

148





6.​1.​3 IEEE Reliability Test System 24 Bus

150






6.​2 Multi-Period Optimal Wind-DC OPF

162





6.​3 Multi-Period Optimal AC Power Flow

169





References

173






7 Energy Storage Systems

175




7.​1 Introduction

175





7.​2 ESS Operation

176




7.​2.​1 ESS Operation in DED

176





7.​2.​2 ESS Operation in Wind-DED Problem

181





7.​2.​3 ESS Operation in DC-OPF

184





7.​2.​4 ESS Operation in AC-OPF

190






7.​3 ESS Allocation

195





7.​4 Applications

199





References

200






8 Power System Observability

203




8.​1 Min No.​ PMU Placement

203





8.​2 Min Cost PMU placement

207





8.​3 Min No.​ PMU Placement Considering ZIB

209





8.​4 Min No.​ PMU Placement for Maximizing the Observability

213





8.​5 Min No.​ PMU Placement Considering Contingencies

216




8.​5.​1 Loss of PMU

217





8.​5.​2 Single Line Outage

218






8.​6 Multistage PMU Placement

221





8.​7 Applications

224





References

225






9 Topics in Transmission Operation and Planning

227




9.​1 Transmission Network Planning

227




9.​1.​1 TEP with New Lines Option

228





9.​1.​2 TEP with New Lines and Power Flow Controller Option

233






9.​2 Sensitivity Factors in Transmission Networks

238




9.​2.​1 Generation Shift Factors

238





9.​2.​2 Line Outage Distribution Factors

246






9.​3 Transmission Network Switching

249





References

263






10 Energy System Integration

265




10.​1 Water-Power Nexus

265





10.​2 Gas-Power Nexus

269





10.​3 Energy Hub Concept

276




10.​3.​1 Data

278





10.​3.​2 Configuration I

279





10.​3.​3 Configuration II

281





10.​3.​4 Configuration III

285






References

291




Index
293





List of Figures



Fig. 1.1 Some optimization problems in power system studies
2

 

Fig. 1.2 Optimization methods in power system studies
4

 

Fig. 1.3 The structure of heuristic optimization techniques
5

 

Fig. 1.4 The GAMS interface
7

 

Fig. 1.5 General GAMS code structure and elements
8

 

Fig. 1.6 The structure of GAMS listing file
12

 

Fig. 1.7 GAMS model library
26

 

Fig. 1.8 GAMS help menu
27

 


            Fig. 2.1 Queen placement on a 4 × 4 board: (
            a
            ) wrong placement, (
            b
            ) optimal placement
          
40

 


            Fig. 2.2 Queen placement on a (
            a
            ) 8 × 8 chessboard, (
            b
            ) 16 × 16board
          
41

 

Fig. 2.3 Optimal circle placement on a given surface
46

 

Fig. 2.4 The optimal solution of circle placement on a surface
47

 

Fig. 2.5 Maximizing the area of a triangle with constant circumference
48

 

Fig. 2.6 Optimal transportation problem
50

 


            Fig. 2.7 Estimating the
            π
            number
          
55

 

Fig. 2.8 Numerical integration using random numbers
56

 

Fig. 2.9 The probability density function for each uncertain parameter
57

 

Fig. 2.10 Uncertain coefficients in LP problems
57

 


            Fig. 2.11 Classification of a population to
            k
            non-dominated fronts
          
59

 

Fig. 2.12 The Pareto optimal front for bi-objective problem
61

 

Fig. 3.1 Load sensitivity analysis and impact on costs and generation schedules
69

 

Fig. 3.2 Pareto optimal front in multi-objective environmental dispatch strategy for load = 400 MW
72

 

Fig. 3.3 Changes in generating level of different units in Pareto optimal front for load = 400 MW
72

 

Fig. 3.4 Pareto optimal fronts for different load values
76

 

Fig. 3.5 Approximate heat-power operating region for a CHP unit
77

 

Fig. 3.6 Cascaded hydro units
80

 

Fig. 3.7 Four cascaded hydro units configuration
81

 

Fig. 3.8 Thermal unit schedules in multi-area economic dispatch
86

 

Fig. 3.9 Hydro unit schedules in multi-area economic dispatch
86

 

Fig. 3.10 Multi-area dynamic economic dispatch problem
87

 

Fig. 3.11 Wind and demand pattern in each area
88

 

Fig. 3.12 Inter-area power transfer of different tie-lines
90

 

Fig. 4.1 The hourly thermal unit power schedules in cost-based DED
98

 

Fig. 4.2 The sensitivity analysis of ramp rates on hourly thermal unit power schedules in DED
101

 

Fig. 4.3 The Pareto optimal front for emission-cost minimization DED
103

 

Fig. 4.4 The best compromised solution of Pareto optimal front for emission-cost minimization DED
105

 

Fig. 4.5 The hourly schedules of thermal units in wind-DED problem
108

 

Fig. 4.6 The hourly variation of total wind and thermal power generation in wind-DED problem
108

 

Fig. 4.7 The optimal solution of price-based DED
111

 

Fig. 4.8 The energy and reserve prices vs time in price-based DED
112

 

Fig. 4.9 The energy and reserve schedules vs time in price-based DED with arbitrage
114

 

Fig. 4.10 Linearizing the quadratic cost function
114

 

Fig. 5.1 Unit commitment cost calculation
120

 

Fig. 5.2 Hourly demand and price values vs time
125

 

Fig. 5.3 Power schedules in cost-based unit commitment vs time
125

 

Fig. 5.4 The demand pattern change in cost-based unit commitment with demand response flexibility
135

 

Fig. 5.5 The sensitivity analysis of demand pattern changes in CBUC with various demand response flexibilities
135

 

Fig. 5.6 The variation of total operating costs vs demand flexibility
136

 

Fig. 5.7 Power schedules in price-based unit commitment vs time
138

 

Fig. 5.8 Different uncertainty parameters and modeling methods
139

 

Fig. 6.1 DC power flow for a two-bus network
142

 

Fig. 6.2 General power flow concept
143

 


            Fig. 6.3 Three bus network example (
            a
            ) data and (
            b
            ) power flow solution
          
144

 


            Fig. 6.4 The three-bus network with
            P
12
max
            = 50 MW
          
147

 

Fig. 6.5 The five-bus network data
148

 

Fig. 6.6 The five-bus network flows and directions
150

 

Fig. 6.7 IEEE RTS 24-bus network
151

 

Fig. 6.8 Load shedding modeling using virtual generating unit
158

 

Fig. 6.9 Load flow model considering wind power and load shedding
163

 

Fig. 6.10 Wind power connection points to the network
164

 

Fig. 6.11 Wind-demand variation patterns vs time
164

 

Fig. 6.12 Wind power generations at efferent buses vs time
167

 

Fig. 6.13 AC power flow considering wind generation and load shedding
169

 

Fig. 6.14 Active power generation of thermal units in MP-AC OPF
170

 

Fig. 6.15 Reactive power generation of thermal units in MP-AC OPF
170

 

Fig. 7.1 The hourly dispatch of ESS in DED problem
180

 

Fig. 7.2 The hourly schedules of thermal units in DED-ESS problem
180

 

Fig. 7.3 The hourly dispatch of ESS in wind-DED problem
183

 

Fig. 7.4 The hourly schedules of thermal units in wind-DED-ESS problem
183

 

Fig. 7.5 The IEEE 24 RTS with ESS integration
185

 

Fig. 7.6 The hourly dispatch of ESS in DC-OPF problem
189

 

Fig. 7.7 The hourly dispatch of thermal generating units in DC-OPF problem
189

 

Fig. 7.8 The hourly dispatch of ESS in AC-OPF problem
193

 

Fig. 7.9 The hourly dispatch of thermal generating units in AC-OPF problem
193

 

Fig. 7.10 The hourly active power losses in AC-OPF problem
194

 

Fig. 7.11 The hourly min/avegare/max values of voltage magnitudes (pu)
194

 

Fig. 7.12 The optimal allocation of ESS units in IEEE RTS network
198

 

Fig. 7.13 The hourly dispatch of storage unit in optimal ESS allocation problem
198

 

Fig. 7.14 The hourly dispatch of thermal generating units in ESS allocation problem
199

 

Fig. 8.1 PMU functionality and the observability concept
204

 

Fig. 8.2 Optimal PMU allocation for IEEE 14-bus without considering the zero injection buses
206

 

Fig. 8.3 Optimal PMU allocation for IEEE 57-bus without considering the zero injection buses
206

 

Fig. 8.4 Optimal PMU allocation for IEEE 118-bus without considering the zero injection buses
207

 

Fig. 8.5 PMU functionality and observability concept in zero injection buses
209

 

Fig. 8.6 Optimal PMU allocation for IEEE 14-bus with considering the zero injection buses
210

 

Fig. 8.7 Optimal PMU allocation for IEEE 57-bus with considering the zero injection buses
211

 

Fig. 8.8 Optimal PMU allocation for IEEE 118-bus with considering the zero injection buses
213

 


            Fig. 8.9 Total observable buses vs
            N
PMU
            in IEEE 57-bus network
          
216

 


            Fig. 8.10 Total observable buses vs
            N
PMU
            in IEEE 118-bus network
          
216

 

Fig. 8.11 Optimal PMU allocation for IEEE 14-bus resilient against single PMU outage
219

 

Fig. 8.12 Optimal PMU allocation for IEEE 57-bus resilient against single PMU outage
219

 

Fig. 8.13 Optimal PMU allocation for IEEE 118-bus resilient against single PMU outage
220

 

Fig. 8.14 Multistage optimal PMU allocation for different case studies
224

 

Fig. 9.1 Six-bus Garver transmission network (base case)
229

 


            Fig. 9.2 Optimal TEP solution for 2 years planning period (
            T
            = 2 ∗ 8760 h)
          
232

 


            Fig. 9.3 Optimal TEP solution for 10 years planning period (
            T
            = 10 ∗ 8760 h)
          
232

 

Fig. 9.4 The phase shifter function in power flow control
234

 


            Fig. 9.5 The optimal decisions regarding the location of phase shifter and new transmission lines 2 years plan (
            T
            = 2 ∗ 8760)
          
235

 


            Fig. 9.6 The optimal decisions regarding the location of phase shifter and new transmission lines 10 years plan (
            T
            = 10 ∗ 8760)
          
237

 

Fig. 9.7 Three-bus network example for sensitivity factors calculation
239

 

Fig. 9.8 The DC power flow solution for three-bus network
245

 

Fig. 9.9 The DC power flow solution for three-bus network after increasing the demand at bus 2 for 10 MW
245

 

Fig. 9.10 The DC power flow solution for three-bus network after increasing the generation at bus 3 for 10 MW
246

 


            Fig. 9.11 Line outage modeling using virtual injections. (
            a
            ) Intact network. (
            b
            ) Post-contingency network
          
247

 

Fig. 9.12 IEEE RTS 24-bus network
250

 

Fig. 9.13 IEEE 118-bus network
255

 

Fig. 9.14 The operating and congestion cost vs number of switched lines in IEEE 118-bus network
256

 

Fig. 9.15 The operating cost vs the connection point of new demand (20 MW) in with/without transmission switching cases
258

 


            Fig. 9.16 The LMP values (
            λ

i

            ) in ($/MW h) at different buses in with/without transmission switching cases
          
258

 

Fig. 10.1 Water-energy nexus concept
266

 

Fig. 10.2 Hourly water output of different plants in water-energy nexus problem
268

 

Fig. 10.3 Hourly power output of different plants in water-energy nexus problem
269

 

Fig. 10.4 Gas network linkage with electricity network
269

 

Fig. 10.5 Hourly variation pattern of wind generation, electric and gas demand (pu)
274

 

Fig. 10.6 Hourly variation pattern of gas generation from gas sources
275

 

Fig. 10.7 Hourly variation pattern of electricity power generation
276

 

Fig. 10.8 The energy hub concept
277

 

Fig. 10.9 The energy hub configuration I, considering transformer, furnace, and chiller boiler
280

 

Fig. 10.10 The hourly purchased electricity and natural gas in energy hub configuration I
282

 

Fig. 10.11 The hourly output of furnace unit in energy hub configuration I
282

 

Fig. 10.12 The energy hub configuration II, considering transformer, furnace, chiller boiler, CHP, and electric energy storage
283

 

Fig. 10.13 The hourly purchased electricity and its division between transformer and ESS in energy hub configuration II
285

 

Fig. 10.14 The hourly output of furnace unit in energy hub configuration II
286

 

Fig. 10.15 The hourly state of charge (MW h), charging, and discharging of ESS (MW) in energy hub configuration II
286

 

Fig. 10.16 The energy hub configuration III, considering transformer, furnace, chiller boiler, CHP, electric energy storage, and EHP
287

 

Fig. 10.17 The hourly purchased electricity and its division between transformer and ESS in energy hub configuration III
289

 

Fig. 10.18 The hourly output of furnace unit in energy hub configuration III
290

 

Fig. 10.19 The hourly state of charge (MW h), charging, and discharging of ESS (MW) in energy hub configuration III
290

 

Fig. 10.20 The hourly output of EHP in energy hub configuration III
291

 




List of Tables



Table 1.1 Data for illustrative example
9

 

Table 3.1 The economic dispatch data for five thermal units example
66

 

Table 3.2 The ED solution for five units example
67

 

Table 3.3 The ED solution for load sensitivity analysis
68

 

Table 3.4 Solution for different environmental dispatching strategies
71

 

Table 3.5 Characteristic data of different technologies
78

 

Table 3.6 Feasible operating regions of CHP units
78

 

Table 3.7 Solution of dispatching CHP units
79

 

Table 3.8 Techno-economic characteristics of thermal units
81

 

Table 3.9 Techno-economic characteristics of hydro units
82

 

Table 3.10 Hourly water inflows for each hydro power and hourly electric demand
82

 

Table 3.11 Optimal hourly dispatch of hydro and thermal units
85

 

Table 3.12 Characteristics of thermal units and their connected area
88

 

Table 3.13 Solution of multi-area economic dispatch
91

 

Table 4.1 The dynamic economic dispatch data for four units example
96

 

Table 4.2 The dynamic economic dispatch solution for four units expressed in (MW)
100

 

Table 4.3 The numerical results for ramp rate sensitivity analysis in dynamic economic dispatch of 4 units
101

 

Table 4.4 The numerical results for Pareto optimal solutions (cost-based DED)
105

 

Table 5.1 Unit commitment data for ten thermal units
121

 


            Table 5.2 Power schedules (
            P

i
              , 
              t

            ) of thermal units considering reserve constraint
          
128

 


            Table 5.3 Reserve provision (
            R

i
              , 
              t

            ) by thermal units considering reserve constraint
          
129

 


            Table 5.4 Power schedules (
            P

i
              , 
              t

            ) by thermal units considering generator contingency constraint
          
131

 


            Table 5.5 Reserve provision (
            R

i
              , 
              t

            ) by thermal units considering generator contingency constraint
          
132

 


            Table 5.6 Power schedules (
            P

i
              , 
              t

            ) by thermal units considering demand response constraint
          
134

 

Table 6.1 The techno-economic data of thermal units in two-bus OPF example
143

 


            Table 6.2 The three-bus optimal power flow solution (
            P

ij

max
            = 100 MW)
          
146

 


            Table 6.3 The three-bus optimal power flow solution (
            P
12
max
            = 50 MW)
          
148

 

Table 6.4 The optimal power flow solution in five-bus network
150

 

Table 6.5 Branch data for IEEE RTS 24-bus network
151

 

Table 6.6 Generation data for IEEE RTS 24-bus network
152

 

Table 6.7 Base case solution of IEEE RTS 24-bus network (branch flow limits are unchanged)
154

 

Table 6.8 Solution of IEEE RTS 24-bus network (branch flow limits are reduced by 30%)
155

 

Table 6.9 Solution of IEEE RTS 24-bus network (branch outage contingencies)
156

 

Table 6.10 Solution of IEEE RTS 24-bus network (generator outage contingencies)
158

 


            Table 6.11 Solution of IEEE RTS 24-bus network (generator
            g
10
            outage with load shedding modeling)
          
161

 


            Table 6.12 Solution of IEEE RTS 24-bus network (generator
            g
10
            outage with load shedding modeling and LMP calculation)
          
162

 

Table 6.13 Thermal unit power generation schedules of multi-period wind DC-OPF
165

 

Table 7.1 The data for ESS integrated dynamic economic dispatch
176

 

Table 7.2 The dynamic economic dispatch data for four thermal units example
177

 

Table 7.3 The ESS integrated dynamic economic dispatch
179

 

Table 7.4 Branch data for IEEE RTS 24-bus network
186

 

Table 7.5 Generation data for IEEE RTS 24-bus network
187

 

Table 8.1 Optimal allocation of PMU devices with minimum cost without considering the ZIB
209

 

Table 8.2 ZIB buses in different networks under study
210

 

Table 8.3 Optimal allocation of PMU devices for maximizing the system observability of IEEE 14-bus network
214

 

Table 8.4 Optimal allocation of PMU devices considering single line outage
221

 

Table 8.5 Optimal allocation of PMU devices in multistage PMU allocation
224

 

Table 9.1 Transmission expansion planning data for Garver six-bus transmission network
230

 


            Table 9.2 Generator shift factors (
            a

m


ij

            ) for three-bus network
          
244

 


            Table 9.3 Line outage distribution factors (LODF
            
ij
              , 
              nm

            ) for three-bus network
          
249

 

Table 9.4 Branch data for IEEE RTS 24-bus network
250

 


            Table 9.5 LODF
            
              12,
              ℓ

            calculated for IEEE RTS 24-bus network
          
251

 


            Table 9.6
            GSHF

ℓ
              , 
              m

            calculated for IEEE RTS 24-bus network
          
252

 

Table 9.7 Generation data for 118-bus network
259

 

Table 9.8 Branch data for 118-bus network
261

 

Table 10.1 Technical and economical characteristics of thermal units
266

 

Table 10.2 Technical and economical characteristicsof co-production units
267

 

Table 10.3 Technical and economical characteristics of water desalination units
267

 

Table 10.4 Branch data for IEEE RTS 24-bus network
270

 

Table 10.5 Generation data for IEEE RTS 24-bus network
271

 

Table 10.6 Technical and economical characteristics of gas nodes
272

 

Table 10.7 Technical characteristics of gas network
273

 

Table 10.8 Different hourly demand and electricity price data for energy hub configurations
279

 














Index



A


Allocation




B


Battery


Branch flow




C


Cascaded reservoir


Charging


Chiller boiler


Combined heat and power (CHP)


Conditional statement


Congestion costs


Contingency


Cost based DED


Cost based unit commitment




D


Debugging



                DED.
                See
                dynamic economic dispatch (DED)
              


Demand flexibility


Discharging


Display


Dynamic economic dispatch (DED)




E


Economic dispatch


Electric heat pump (EHP)


Emission


Energy hub


Energy storage system (ESS)


Environmental pollutions


Excel




F


Furnace


Fuzzy




G


Gas-power nexus


Generation shift factor (GSF)


Generator outage




H


Heat


Heat demand


Heuristic optimization


Hydro Unit




I


Information gap decision theory (IGDT)


Installation


Interface


Investment cost




L


Library


Linearization


Linear programming (LP)


Line outage distribution factor (LODF)



                LMP.
                See
                Locational marginal price (LMP)
              


Load shedding


Locational marginal price (LMP)


Loop


Loss of PMU




M


Marginal


Mixed integer non-linear programming (MINLP)


Mixed integer programming (MIP)


Multi-area economic dispatch


Multistage PMU placement




N


Natural gas


Non-linear programming (NLP)




O


Observability


Operating costs



                OPF.
                See
                Optimal power flow (OPF)
              


Optimal AC power flow


Optimal DC power flow


Optimal power flow (OPF)


Optimal transmission switching (OTS)




P


Pareto front


Pareto optimal


Phase shifter


Phasor measurement unit (PMU)


Placement


Power flow controller


Price based DED (PBDED)


Price based unit commitment




Q


Quadratic constrained programming (QCP)




R


Ramp rate


Random numbers


Reserve


Resistance


Robust optimization




S


Sensitivity analysis


Single line outage


Solve statement


Spinning reserve


State of charge


Stochastic


Susceptance




T


Thermal unit


Transmission expansion planning (TEP)




U


Uncertainty




W


Water


Water-power Nexus


Weighted sum


Wind curtailment


Wind turbine




Z


Zero injection bus







