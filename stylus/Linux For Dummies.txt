


















Linux® For Dummies®, 10th Edition
Published by: John Wiley & Sons, Inc., 111 River Street, Hoboken, NJ 07030-5774, www.wiley.com
Copyright © 2020 by John Wiley & Sons, Inc., Hoboken, New Jersey
Published simultaneously in Canada
No part of this publication may be reproduced, stored in a retrieval system or transmitted in any form or by any means, electronic, mechanical, photocopying, recording, scanning or otherwise, except as permitted under Sections 107 or 108 of the 1976 United States Copyright Act, without the prior written permission of the Publisher. Requests to the Publisher for permission should be addressed to the Permissions Department, John Wiley & Sons, Inc., 111 River Street, Hoboken, NJ 07030, (201) 748-6011, fax (201) 748-6008, or online at http://www.wiley.com/go/permissions.
Trademarks: Wiley, For Dummies, the Dummies Man logo, Dummies.com, Making Everything Easier, and related trade dress are trademarks or registered trademarks of John Wiley & Sons, Inc. and may not be used without written permission. All other trademarks are the property of their respective owners. John Wiley & Sons, Inc. is not associated with any product or vendor mentioned in this book.
LIMIT OF LIABILITY/DISCLAIMER OF WARRANTY: THE PUBLISHER AND THE AUTHOR MAKE NO REPRESENTATIONS OR WARRANTIES WITH RESPECT TO THE ACCURACY OR COMPLETENESS OF THE CONTENTS OF THIS WORK AND SPECIFICALLY DISCLAIM ALL WARRANTIES, INCLUDING WITHOUT LIMITATION WARRANTIES OF FITNESS FOR A PARTICULAR PURPOSE. NO WARRANTY MAY BE CREATED OR EXTENDED BY SALES OR PROMOTIONAL MATERIALS. THE ADVICE AND STRATEGIES CONTAINED HEREIN MAY NOT BE SUITABLE FOR EVERY SITUATION. THIS WORK IS SOLD WITH THE UNDERSTANDING THAT THE PUBLISHER IS NOT ENGAGED IN RENDERING LEGAL, ACCOUNTING, OR OTHER PROFESSIONAL SERVICES. IF PROFESSIONAL ASSISTANCE IS REQUIRED, THE SERVICES OF A COMPETENT PROFESSIONAL PERSON SHOULD BE SOUGHT. NEITHER THE PUBLISHER NOR THE AUTHOR SHALL BE LIABLE FOR DAMAGES ARISING HEREFROM. THE FACT THAT AN ORGANIZATION OR WEBSITE IS REFERRED TO IN THIS WORK AS A CITATION AND/OR A POTENTIAL SOURCE OF FURTHER INFORMATION DOES NOT MEAN THAT THE AUTHOR OR THE PUBLISHER ENDORSES THE INFORMATION THE ORGANIZATION OR WEBSITE MAY PROVIDE OR RECOMMENDATIONS IT MAY MAKE. FURTHER, READERS SHOULD BE AWARE THAT INTERNET WEBSITES LISTED IN THIS WORK MAY HAVE CHANGED OR DISAPPEARED BETWEEN WHEN THIS WORK WAS WRITTEN AND WHEN IT IS READ.
For general information on our other products and services, please contact our Customer Care Department within the U.S. at 877-762-2974, outside the U.S. at 317-572-3993, or fax 317-572-4002. For technical support, please visit https://hub.wiley.com/community/support/dummies.
Wiley publishes in a variety of print and electronic formats and by print-on-demand. Some material included with standard print versions of this book may not be included in e-books or in print-on-demand. If this book refers to media such as a CD or DVD that is not included in the version you purchased, you may download this material at http://booksupport.wiley.com. For more information about Wiley products, visit www.wiley.com.
Library of Congress Control Number: 2020943580
ISBN 978-1-119-70425-6 (pbk); ISBN 978-1-119-70426-3 (ebk); ISBN 978-1-119-70427-0 (ebk)







Linux® For Dummies®
To view this book's Cheat Sheet, simply go to www.dummies.com and search for "Linux For Dummies Cheat Sheet" in the Search box.

Table of Contents

Cover
Introduction

About This Book
How to Use This Book
Three Presumptuous Assumptions
Icons Used in This Book
Where to Go from Here
Part 1: Getting Your Feet Wet

Chapter 1: Getting Acquainted with Linux

Is Free Really Free?
Linux: Revolution or Just Another Operating System?
Anatomy of an Open Source Software Project
Packaging Linux: The Distribution


Chapter 2: Prepping Your Computer for Linux
Preparing to Use Linux and Microsoft Windows Together
Double-Checking Hardware Compatibility
Finally, Finally, Before You Get Started
Chapter 3: Installing Linux
Things to Consider Before You Begin Installation
Installing from Ubuntu Live
Your First Ubuntu Boot
Installing openSUSE
Chapter 4: Examining the GNOME Desktop
The History of GNOME
Breaking Down the GNOME Desktop
Exploring the Activities Overview
Customizing Your Ride
A Closer Look at Accessibility Features
Chapter 5: Examining the KDE Plasma Desktop
The KDE Plasma Desktop
Using Widgets
Plasma System Settings
Desktop Folder Settings
Accessibility Settings
Chapter 6: Exploring Alternative Desktops
Spicing Things Up with Cinnamon
Working with MATE
The Xfce Desktop Interface
Part 2: Getting Up to Speed with Linux
Chapter 7: Getting to Know the Linux Filesystem
Pieces of the Puzzle
Touring the Linux Filesystem
Managing Your Filesystem without a Net (or Mouse)
A Permissions Primer
Chapter 8: Using the Filesystem
Clicking Your Way Through the Filesystem
Using Files
Swimming with Dolphin
Don't Forget Xfce!
Using DVDs and Other Removable Media
Accessing Windows Drives on This Computer
Accessing Network Drives
Finding Things
Chapter 9: Connecting to the Internet
Internet Connectivity 101
Setting Up the Hardware
Selecting an Internet Service Provider (ISP)
Getting Information You Need from Your ISP
Configuring Your Connection
It's All Fun and Games Until Something Doesn't Work
After You're Connected
Part 3: Getting Things Done
Chapter 10: Using the Internet
Browsing the Web with Firefox
Communicating with Email
Ol' Fashion File Transfers
Talking with Skype
Working with Other Internet Tools
Chapter 11: Putting the X in Text
Viewing the Contents of a Text File
Editing Text Files with nano
Going with gedit
Editing Text in the KDE Plasma Desktop
Chapter 12: Word Processing and More with LibreOffice
Installing the LibreOffice Suite
Word Processing with LibreOffice Writer
Spreadsheets with LibreOffice Calc
Presentations with LibreOffice Impress
Fine Art with LibreOffice Draw
Managing Data with LibreOffice Base
Layout with LibreOffice Math
Chapter 13: Messing with Audio
What Sound? I Don't Hear a Thing!
Listening to CDs
Listening to Downloaded Music
Listening to Internet Radio
Ripping Music Tracks from CDs
Burning Audio CDs and DVDs
Chapter 14: Messing with Video and Graphics
Watchin' Videos on the Web
Viewing Movie Files
Watchin' DVDs
Creating and Modifying Graphics
Playing 3D Games
Part 4: Junior Administrator Boot Camp
Chapter 15: Adding Software to Linux
Opening Downloaded Files
Compressing and Packaging Files to Share
Keeping Up-to-Update
Installing New Software
Finding More Software
Upgrading Your OS
Chapter 16: Working without the GUI
Playing the Shell Game
Understanding bash Command Syntax and Structure
Starting Programs from the Shell
Putting Wildcard Expansion to Good Use
Working with Long Commands
Working with Variables
Using Redirection and Pipes
Chapter 17: Basic System Administration
Managing Users and Groups
Printing
System Monitor
Chapter 18: A Secure Linux Box Is a Happy Linux Box
Choosing Secure Passwords
Updating Software
Keeping an Eye on Your Log Files with the System Log Viewer
Locating Security Resources
Chapter 19: Automating Your World
The Basics of Shell Scripting
Advanced Shell Scripting
Writing Script Programs
Chapter 20: The Virtual World
What Is Virtualization Software?
Installing VirtualBox
Creating a Virtual Machine
Customizing a Virtual Machine
Working with the Virtual Machine
Part 5: The Part of Tens
Chapter 21: Ten Steps to Running a Web Server
The Required Parts
Step 1: Select a Web Server
Step 2: Select a Programming Language
Step 3: Select a Database Server
Step 4: Install the Servers
Step 5: Examine the Apache Server
Step 6: Examine the MySQL (or MariaDB) Server
Step 7: Customize the PHP Server
Step 8: Create the Database Environment
Step 9: Build Your Application
Step 10: Deploy and Test Your Application
Chapter 22: Ten Troubleshooting Tips
Tip #1: "The Linux Installer Froze"
Tip #2: Checking Your Distribution Burns
Tip #3: "I Told the Installer to Test My Graphics, and They Failed"
Tip #4: "The Installer Tested My Graphics Fine, but My GUI Won't Start"
Tip #5: "I Think I'm in Linux, but I Don't Know What to Do!"
Tip #6: "I Don't Want to Boot into This!"
Tip #7: Changing Your Boot Environment "Permanently"
Tip #8: "I Want to Change Screen Resolutions"
Tip #9: "My GUI Is Hung, and I'm Stuck!"
Tip #10: "Help, My Machine Hangs During Boot!"
"Aaargh! I Forgot My Root Password! What Do I Do?"
Appendix A: Common Linux Commands
Linux Commands by Function
Files and Filesystem
System Control
Appendix B: Linux Distributions
Slackware
Fedora
Debian
Gentoo
Index
About the Author
Advertisement Page
Connect with Dummies
End User License Agreement
List of Tables
Chapter 1
TABLE 1-1 Core Linux Distributions
TABLE 1-2 Specialized Linux Distributions
Chapter 3
TABLE 3-1 Ubuntu Partition Filesystem Types
TABLE 3-2 Mount Point Locations
Chapter 5
TABLE 5-1 Applications Menu Contents
TABLE 5-2 The Computer Menu Places Contents
TABLE 5-3 The Leave Menu Components
TABLE 5-4 The Panel Editor Features
TABLE 5-5 openSUSE KDE Widgets
Chapter 6
TABLE 6-1 Application Menu Categories
TABLE 6-2 The Cinnamon Preferences
TABLE 6-3 The MATE Applications Menu Entries
TABLE 6-4 The Whisker Menu Categories
Chapter 7
TABLE 7-1 Standard / Contents in Linux
TABLE 7-2 Standard /usr Subdirectories
TABLE 7-3 Linux File Types
Chapter 9
TABLE 9-1 The ip Utility Command Options
Chapter 11
TABLE 11-1 The KWrite Edit Menu Items
TABLE 11-2 The KWrite Tools
Chapter 12
TABLE 12-1 The LibreOffice Writer Standard Toolbar, from Left to Right
TABLE 12-2 The LibreOffice Calc Standard Toolbar, from Left to Right
TABLE 12-3 The LibreOffice Calc Formula Bar, from Left to Right
TABLE 12-4 The LibreOffice Impress Standard Toolbar, from Left to Right
TABLE 12-5 Available LibreOffice Impress Views
TABLE 12-6 The LibreOffice Draw Main Toolbar, from Left to Right
TABLE 12-7 The LibreOffice Base Standard Toolbar, from Left to Right
TABLE 12-8 The LibreOffice Math Standard and Tools Toolbars, from Left to Right
Chapter 15
TABLE 15-1 Potential Formats for Downloaded Files
Chapter 16
TABLE 16-1 Commonly Used bash Environment Variables
TABLE 16-2 Pieces of the PS1 Puzzle
Chapter 17
TABLE 17-1 Ubuntu Printer Connection Types
TABLE 17-2 System Monitor Process Table Columns
Chapter 19
TABLE 19-1 Condition Tests
Chapter 21
TABLE 21-1 Apache Web Server Error Levels
Appendix A
TABLE A-1 Shell Help Commands
TABLE A-2 Archiving and Compressing Tools
TABLE A-3 Shell Commands
TABLE A-4 File Organization Tools
TABLE A-5 File Attributes Commands
TABLE A-6 File Locator Commands
TABLE A-7 File Viewers
TABLE A-8 Filesystem Commands
TABLE A-9 Administration Commands
TABLE A-10 Kernel Support Commands
TABLE A-11 Process Commands
TABLE A-12 Network Commands
List of Illustrations
Chapter 2
FIGURE 2-1: The Windows 10 File Explorer window.
FIGURE 2-2: The Windows 10 Disk Management tool.
FIGURE 2-3: The Shrink Volume dialog box.
FIGURE 2-4: The Linux GParted disk management tool main window.
FIGURE 2-5: The GParted Resize/Move dialog box.
FIGURE 2-6: In Windows 10, the Device Manager gives you information on what har...
FIGURE 2-7: The Microsoft Disc Image Burner dialog box.
FIGURE 2-8: The Rufus program for creating a bootable USB stick.
Chapter 3
FIGURE 3-1: The Ubuntu Live boot menu.
FIGURE 3-2: The Ubuntu LiveDVD desktop with the Install icon.
FIGURE 3-3: The Ubuntu language selection window.
FIGURE 3-4: The Keyboard Layout window.
FIGURE 3-5: The Updates and other software window.
FIGURE 3-6: The Ubuntu Installation Type window.
FIGURE 3-7: The Ubuntu manual partition utility.
FIGURE 3-8: The Login ID window.
FIGURE 3-9: Select your online account to sync.
FIGURE 3-10: The openSUSE installation boot menu.
FIGURE 3-11: The Language, Keyboard, and License Agreement window.
FIGURE 3-12: Selecting online openSUSE software repositories.
FIGURE 3-13: The System Role window.
FIGURE 3-14: The Suggested Partitioning window.
FIGURE 3-15: The Expert Partitioner tool.
FIGURE 3-16: The Expert Partitioner graphical design layout.
FIGURE 3-17: The Clock and Time Zone window.
FIGURE 3-18: The Login ID window.
FIGURE 3-19: The Installation Settings window.

Chapter 4
FIGURE 4-1: The default GNOME 3 desktop as used in Ubuntu.
FIGURE 4-2: The activities overview in Ubuntu.
FIGURE 4-3: The GNOME 3 calendar menu.
FIGURE 4-4: The GNOME 3 system menu.
FIGURE 4-5: The Settings dialog box.
FIGURE 4-6: The GNOME 3 desktop pop-up menu.
FIGURE 4-7: The dash as shown in an Ubuntu desktop.
FIGURE 4-8: The dash icon for a removable media device after inserting a USB st...
FIGURE 4-9: The application overview area.
FIGURE 4-10: The workspace selector in Ubuntu.
FIGURE 4-11: The Appearance window.
FIGURE 4-12: The Displays settings in GNOME 3.
FIGURE 4-13: The Displays settings with support for multiple monitors.
FIGURE 4-14: The Mouse and Touchpad settings options.
FIGURE 4-15: The Universal Access options available in Ubuntu.
FIGURE 4-16: The Universal Access quick menu.
Chapter 5
FIGURE 5-1: The openSUSE 15.1 KDE Plasma desktop.
FIGURE 5-2: The Plasma application launcher layout in openSUSE.
FIGURE 5-3: The Plasma panel in edit mode.
FIGURE 5-4: The Add Widgets menu.
FIGURE 5-5: The Add-On Installer.
FIGURE 5-6: The Plasma System Settings dialog box.
FIGURE 5-7: The Desktop Folder Settings dialog box.
FIGURE 5-8: The Plasma accessibility settings.
Chapter 6
FIGURE 6-1: The Cinnamon desktop as seen in Linux Mint.
FIGURE 6-2: The Cinnamon Menu used in Linux Mint.
FIGURE 6-3: The System Settings dialog box in Cinnamon.
FIGURE 6-4: The list of panel applets available in Linux Mint.
FIGURE 6-5: The default MATE desktop in Fedora MATE.
FIGURE 6-6: The Applications menu as seen in Fedora MATE.
FIGURE 6-7: The MATE Control Center.
FIGURE 6-8: The Add to Panel dialog box in MATE.
FIGURE 6-9: The Xfce desktop in MX Linux.
FIGURE 6-10: The Xfce Whisker menu in MX Linux.
FIGURE 6-11: The Xfce Settings Manager dialog box.
FIGURE 6-12: The Xfce Add New Items dialog box.
Chapter 7
FIGURE 7-1: The Terminal program in Ubuntu.
FIGURE 7-2: The home directory shown with the ls -a command to see the hidden f...
FIGURE 7-3: The beginning of the brand-new home directory with both hidden and ...
FIGURE 7-4: Breakdown of the nine permission characters.
Chapter 8
FIGURE 8-1: The GNOME Files file manager window.
FIGURE 8-2: Opening a subdirectory in Files.
FIGURE 8-3: Files using the list view mode in rich's home directory.
FIGURE 8-4: The Files file manager's Properties dialog box with the Permissions...
FIGURE 8-5: The user rich's Home folder as seen in the Dolphin file manager.
FIGURE 8-6: The Split display mode in Dolphin.
FIGURE 8-7: The Thunar file manager in MX Linux.
FIGURE 8-8: The Thunar File Manager Preferences dialog box.
FIGURE 8-9: The Thunar shortcut menu.
FIGURE 8-10: The Device Notifier in KDE Plasma.
FIGURE 8-11: Dolphin in network mode.
FIGURE 8-12: The KFind search window.
FIGURE 8-13: The GNOME 3 File Searcher dialog box.
Chapter 9
FIGURE 9-1: The Network Manager dialog box for a wireless connection.
FIGURE 9-2: The Network Manager Wired dialog box.
FIGURE 9-3: The wireless configuration dialog box.
FIGURE 9-4: The Network Manager nmtui command line tool.
FIGURE 9-5: Sample results of the ping command.
Chapter 10
FIGURE 10-1: The Firefox Preferences window in Ubuntu.
FIGURE 10-2: The Firefox plugin list.
FIGURE 10-3: Firefox with the History Sidebar open.
FIGURE 10-4: The Evolution Identity dialog box.
FIGURE 10-5: The Evolution Receiving Email dialog box, with IMAP selected.
FIGURE 10-6: The Evolution Receiving Options dialog box for IMAP mail users.
FIGURE 10-7: The Evolution Sending Email dialog box.
FIGURE 10-8: The Evolution application window.
FIGURE 10-9: An Evolution Compose Message window.
FIGURE 10-10: The Evolution Account Editor dialog box.
FIGURE 10-11: The KMail Account Information dialog box.
FIGURE 10-12: The main KMail window.
FIGURE 10-13: The KMail Composer window.
FIGURE 10-14: The Thunderbird New Account Setup wizard.
FIGURE 10-15: The Thunderbird manual email server dialog box.
FIGURE 10-16: The main Thunderbird mail page.
FIGURE 10-17: The Thunderbird Account Settings window.
FIGURE 10-18: The FileZilla main window.
FIGURE 10-19: The Skype Internet telephony client new account window.
Chapter 11
FIGURE 11-1: The file file1 open in the nano editor in Ubuntu.
FIGURE 11-2: The gedit window with a blank file, in Ubuntu.
FIGURE 11-3: The gedit Preferences dialog box.
FIGURE 11-4: The gedit Plugins Preferences tab.
FIGURE 11-5: The default KWrite window in openSUSE.
FIGURE 11-6: The KWrite Configure Editor dialog box.
FIGURE 11-7: The Kate session dialog box.
FIGURE 11-8: The main Kate editing window.
FIGURE 11-9: The Kate Configure dialog box.
FIGURE 11-10: The Kate built-in terminal window.
Chapter 12
FIGURE 12-1: The LibreOffice Writer layout.
FIGURE 12-2: The LibreOffice Calc layout.
FIGURE 12-3: Creating a new presentation in LibreOffice Impress.
FIGURE 12-4: The LibreOffice Impress default look in Ubuntu.
FIGURE 12-5: The LibreOffice Draw layout.
FIGURE 12-6: The LibreOffice Base Database Wizard, used to open existing databa...
FIGURE 12-7: The LibreOffice Base Database Wizard's Decide How to Proceed After...
FIGURE 12-8: A database open in LibreOffice Base.
FIGURE 12-9: The Table Design View dialog box in Base.
FIGURE 12-10: The Data Viewing and Entry window in the Base application.
FIGURE 12-11: The LibreOffice Math layout.
FIGURE 12-12: Starting to add a matrix in LibreOffice Math.
FIGURE 12-13: A 4-x-4 matrix in LibreOffice Math.
FIGURE 12-14: A complete formula in LibreOffice Math.
Chapter 13
FIGURE 13-1: The GNOME 3 Sound options in Settings.
FIGURE 13-2: The KDE Plasma multimedia settings.
FIGURE 13-3: The KDE Plasma audio settings dialog box.
FIGURE 13-4: The GNOME Files application displaying an audio CD.
FIGURE 13-5: Starting an audio CD using Rhythmbox.
FIGURE 13-6: The KDE Plasma Notification panel widget.
FIGURE 13-7: The VLC main window.
FIGURE 13-8: The Amarok Local Collection screen.
FIGURE 13-9: The main Amarok screen.
FIGURE 13-10: The Sound Juicer CD Extractor in Ubuntu.
FIGURE 13-11: The Sound Juicer Preferences dialog box.
FIGURE 13-12: The Brasero main window.
FIGURE 13-13: Adding audio files to burn onto the CD in Brasero.
FIGURE 13-14: The K3b CD and DVD burner.
FIGURE 13-15: The K3b Audio CD Project window.
FIGURE 13-16: The K3b Audio Project dialog box.
Chapter 14
FIGURE 14-1: The Firefox Add-ons Plugins area in Ubuntu.
FIGURE 14-2: Installing the Fast YouTube Video Downloader Extension in Firefox.
FIGURE 14-3: The Fast YouTube Video Downloader Extension installed.
FIGURE 14-4: The main GNOME Videos viewing window.
FIGURE 14-5: The KDE Dragon video player.
FIGURE 14-6: The main VLC viewing window.
FIGURE 14-7: GIMP's main window in Ubuntu.
FIGURE 14-8: The GIMP Tools window list.
FIGURE 14-9: The GIMP Screenshot dialog box.
FIGURE 14-10: The GIMP image editing window.
FIGURE 14-11: The GIMP Change Foreground Color dialog box.
FIGURE 14-12: The image after applying the Whirl and Pinch effect.
FIGURE 14-13: The sample image after applying the Weave Script-Fu effect.
Chapter 15
FIGURE 15-1: Creating a compressed archive file using Ubuntu Files.
FIGURE 15-2: The Ubuntu Software Updater window.
FIGURE 15-3: The openSUSE Discover window showing available updates.
FIGURE 15-4: The Add/Remove Applications program in Ubuntu.
FIGURE 15-5: The openSUSE Discover program main window.
FIGURE 15-6: The Synaptic Package Manager in Ubuntu.
FIGURE 15-7: The YaST2 package manager in openSUSE.
Chapter 16
FIGURE 16-1: The GNOME Terminal window.
FIGURE 16-2: The KDE Konsole window.
Chapter 17
FIGURE 17-1: The GNOME user manager utility.
FIGURE 17-2: The openSUSE user manager tool.
FIGURE 17-3: The User Data tab in the YaST user manager tool.
FIGURE 17-4: The User Details tab in the YaST user management tool.
FIGURE 17-5: The Password Settings tab in the YaST user management tool.
FIGURE 17-6: The Groups tab in the YaST User Management tool.
FIGURE 17-7: The Create New Group window in the YaST User Management tool.
FIGURE 17-8: The Ubuntu Printer Configuration window.
FIGURE 17-9: The Printer Configuration Basic Server Settings window.
FIGURE 17-10: The New Printer Wizard in the Printer Configuration tool.
FIGURE 17-11: The Printer Options area of the Printer Configuration tool.
FIGURE 17-12: The Processes tab in the System Monitor tool.
FIGURE 17-13: The Resources tab in the System Monitor tool.
FIGURE 17-14: The File Systems tab in the System Monitor tool.
Chapter 18
FIGURE 18-1: The openSUSE Firewall Configuration window.
FIGURE 18-2: The default public firewall zone settings.
FIGURE 18-3: The PuTTY main window.
FIGURE 18-4: The PuTTY window appearance configuration.
FIGURE 18-5: Connecting to a remote Ubuntu computer from a Windows PC.
FIGURE 18-6: The Ubuntu Logs log viewer program.
FIGURE 18-7: The openSUSE log viewer program.
Chapter 20
FIGURE 20-1: The VirtualBox main window.
FIGURE 20-2: The first dialog box in the VirtualBox new server wizard.
FIGURE 20-3: Setting the virtual server hard disk file location and size.
FIGURE 20-4: The virtual server entry in the VirtualBox window.
FIGURE 20-5: The VirtualBox Settings dialog box.
FIGURE 20-6: The Storage section of the Settings dialog box.
FIGURE 20-7: The Network section of the Settings dialog box.
FIGURE 20-8: The VirtualBox console emulation window.
FIGURE 20-9: Running Ubuntu in an openSUSE VirtualBox window.
FIGURE 20-10: The VirtualBox Session Information window.
Chapter 21
FIGURE 21-1: The default Apache web page in Ubuntu.
FIGURE 21-2: The phpinfo() function output in Ubuntu.
FIGURE 21-3: The output from the mytest.php program.
Chapter 22
FIGURE 22-1: A Linux command-line login prompt.
FIGURE 22-2: Logged in at the Linux command line.
FIGURE 22-3: The Displays Settings window in Ubuntu.
Guide
Cover
Table of Contents
Begin Reading
Pages
iii
iv
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463








Introduction

Welcome to the fascinating world of open source software that is Linux. In this book, I introduce you to the wonders of the Linux operating system, originally created as a labor of love by Linus Torvalds in the early 1990s. My goal is to initiate you into the rapidly growing ranks of Linux users and enthusiasts busily rewriting the rules for the operating system marketplace.
If you've contemplated switching to Linux but find the prospect too forbidding, you can relax. If you can boil water or set your alarm clock, you too can become a Linux user. (No kidding!)
When this book appeared in its first edition, Linux was an emerging phenomenon that was neither terribly well known nor understood. In this edition — for a new generation of Linux users — so much material is available that I've steered this particular title toward what Linux is and how you can make the best use of it on your desktop. To that end, these pages contain various online resources, tips, and tricks, as well as more general instruction. If you're looking for material on servers, Linux All-in-One Desk Reference For Dummies by Emmett Dulaney (John Wiley & Sons, Inc.) can serve your needs.
In this book, I keep the amount of technobabble to a minimum and stick with plain English as much as possible. Besides plain talk about Linux installation, boot up, configuration, and software, I include many examples, plus lots of detailed instructions to help you set up and use your very own Linux machine with a minimum of stress or confusion.

About This Book
Think of this book as a friendly, approachable guide to tackling terminology and the Linux collection of tools, utilities, and widgets. Although Linux isn't terribly hard to figure out, it does pack a boatload of details, parameters, and administrivia (administrative trivia, in UNIX-speak). You need to wrestle those details into shape while you install, configure, manage, and troubleshoot a Linux-based computer. Some sample topics you find in this book include the following: 

Understanding where Linux comes from and what it can do for you
Installing the Linux operating system
Working with a Linux system to manage files and add software
Setting up Internet access and surfing the web
Customizing your Linux desktop
Managing Linux system security and resources
Although it may seem, at first glance, that working with Linux requires years of hands-on experience, tons of trial and error, advanced computer science training, and intense dedication, take heart! It's not true! If you can tell somebody how to find your office, you can certainly build a Linux system that does what you want. The purpose of this book isn't to turn you into a full-blown Linux geek (that's the ultimate state of Linux enlightenment, of course); it's to show you the ins and outs that you need to master to build a smoothly functioning Linux system and to give you the know-how and confidence to use it.

How to Use This Book
This book tells you how to install, configure, and customize a Linux desktop system. Although you can do most things in Linux these days by pointing and clicking, you still may want to try using Linux at the command prompt — where you type detailed instructions to load or configure software, access files, and do other tasks. In this book, input appears in monospace type like this: 
rmdir /etc/bin/devone
When you type Linux commands or other related information, be sure to copy the information exactly as you see it in the book, including uppercase and lowercase letters, because that's part of the magic that makes Linux behave properly.
A failure to follow instructions exactly can have all kinds of unfortunate, unseemly, or unexpected side effects.
The margins of a book don't give you the same amount of room as your computer screen; therefore, in this book, some URLs and lengthy commands at the command prompt may appear wrapped to the next line. Remember that your computer sees these wrapped lines as a single set of instructions, or as a single URL — so if you're typing a hunk of text, keep it on a single line. Don't insert a hard return if you see one of these wrapped lines. I clue you in that it's supposed to be all one line by breaking the line at a slash mark or a natural word break (to imply "Wait — there's more!") and slightly indenting the overage, as in the following silly example: 
www.infocadabra.transylvania.com/nexus/plexus/lexus/ praxis/okay/this/is/a/make-believe/URL/but/some/real/ones/ are/SERIOUSLY/long.html
Note that as you dig your way into and through this book — and other sources of Linux wit, wisdom, and inspiration that you're likely to encounter — you may find some terms used interchangeably. For example, you may see the same piece of software called a program, a command, a utility, a script, an application, or a tool, depending on the source, the context, and the source of the information you're consulting. To a large extent, you can treat these terms as interchangeable, and when an important distinction needs to be made among them, I point it out. Similarly, when you're working with various commands or configuration controls, you may also encounter terms such as flag, switch, option, or parameter used more or less interchangeably. In this case, all these terms refer to ways in which you can control, refine, or modify basic commands or programs to make them do what you want. Again, wherever distinctions and clarifications may be needed, I provide them.

Three Presumptuous Assumptions
They say that making assumptions makes a fool of the person who makes them and of the person about whom those assumptions are made. (And just who are they, anyway? I assume that I know, but — never mind.) Even so, practicality demands that I make a few assumptions about you, gentle reader: 

You can turn your computer on and off.
You know how to use a mouse and a keyboard.
You want to install, configure, and/or use a desktop Linux system because you're curious or interested or it's your job to do so.
You don't need to be a master logician or a wizard in the arcane art of programming to use this book, nor do you need a PhD in computer science. You don't even need a complete or perfect understanding of what's going on in your computer's innards.
If you have an active imagination and the ability to solve rudimentary problems, that's even better — you have already mastered the key ingredients necessary to making Linux work for you. The rest are mere details and a bit of patience. I can help you with the details, but the patience is up to you!

Icons Used in This Book
Within each chapter, icons highlight particularly important or useful information. You find the following icons in this book:
 The Tip icon flags useful information that makes living with your Linux system even less complicated than you feared that it might be.
 I sometimes use this icon to point out information you just shouldn't pass by — don't overlook these gentle reminders. (The life, sanity, or page you save may be your own.)
 Be cautious when you see this icon — it warns you of things you shouldn't do. This icon is meant to emphasize that the consequences of ignoring these bits of wisdom can be severe.
 This icon signals technical details that are informative and interesting but not critical to understanding and using Linux. Skip these paragraphs if you want (but please come back and read them later).

Where to Go from Here
This is where you pick a direction and hit the road! Linux For Dummies, 10th Edition, is much like 1001 Nights because it almost doesn't matter where you start out. You look at lots of different scenes and stories as you prepare yourself to build your own Linux system. Although each story has its own distinctive characters and plot, the whole is surely something to marvel at. Don't worry — you can handle it. Who cares whether anybody else thinks that you're just goofing around? I know that you're getting ready to have the time of your life.
And don't forget to check out the cheat sheet. Just go to dummies.com and search for "Linux For Dummies cheat sheet."
Enjoy! 








Part 1
Getting Your Feet Wet

IN THIS PART...
Find out what Linux is, where it came from, and how it works.
Tackle the various tasks and activities involved in preparing for and installing Linux on a PC.
Boot up your new Linux environment.
Find your way around the desktop and tweak it to your liking.








Chapter 1
Getting Acquainted with Linux

IN THIS CHAPTER
 Diving into Linux origins and features
 Telling Linux apart from the rest of the operating system pack
 Depending on GNU and the GPL
 Marveling at the Linux Company (or lack thereof)
 Checking out popular Linux distributions

Welcome to the world of Linux, the operating system developed by thousands of people around the world! In this chapter, you find out about Linux itself — what it is, where it comes from, and why it gets so much attention. Prepare to have your assumptions challenged about how software must be developed and sold, and your mind opened to new possibilities.

Is Free Really Free?
Understanding Linux requires a radical shift of thought regarding the way that you acquire and use computer software. (Note: By radical, I mean getting to the root of the matter, rather than putting on beads and camping out in the administration building.) Your first step toward shifting your mindset is to alter your general connotation of the word free to represent freedom, rather than free lunch. That's right; you can sell "free" software for a fee ... and you're encouraged to do so, as long as you relay the same freedom to each recipient of the software.
Don't scratch your head too hard; these concepts are tough to grasp initially, especially when you consider the conditioning you've received from the commercial software industry's marketing departments. Perhaps you don't know that when you purchase most proprietary software packages, you don't actually own the software. Rather, you're granted permission to use the software within the bounds dictated by the licensor.
Linux also has a license. However, the motives and purpose of the license are much different from those of most commercial software. Instead of using a license to restrict use of the software, the GNU General Public License (GPL) that Linux uses ensures that the software will always be open to anyone. No company can ever own Linux or dictate the way in which you use or modify Linux — although they can have their own individual copyrights and trademarks on their various brands of it, such as Red Hat and SUSE. In essence, you already own Linux, and you can use it for anything you like, as long as you propagate the GPL freedoms to any further recipients of the software.

Linux: Revolution or Just Another Operating System?
Before going any farther into Linux, I need to get some terminology out of the way.
Tux is the formal name of the mascot penguin that represents Linux. Rumor has it that Linux's creator, Linus Torvalds, is rather fond of these well-dressed inhabitants of the Antarctic.
An operating system is the software that runs your computer, handling all interactions between you and the hardware. Whether you're writing a letter, calculating a budget, or managing your recipes on your computer, the operating system provides the essential air that your computer breathes. Furthermore, an operating system isn't just one program; it consists of hundreds of smaller programs and utilities that allow us humans to use a computer to do something useful. You then run other programs (such as your word processor) on top of the operating system to get everything done.
In recent technological history, Linux has evolved from a techie playground to a rock-solid solution for the business enterprise. The same software that was once dismissed as rogue is now being adopted and promoted by industry leaders such as IBM, Hewlett-Packard, Motorola, Microsoft, and Intel. Each of these computer manufacturers has determined that Linux provides value for their customers in some way (as well as for their own operations).
Linux has been accused of being "just another operating system." On the surface, it may appear so, but if you look deeper, you can see that this isn't so. The Linux project is a flagship leading the current trend toward open source and free (as in freedom, not free lunch) software within the computing industry. A rock-solid operating system because of the model under which it was (and continues to be) developed, Linux represents much that is good in software development.
Two fundamental distinctions separate Linux from the rest of the operating-system pack: 

Linux is licensed under the unique and ingenious GNU General Public License, which you can read about in the next section.
Linux is developed and maintained by a worldwide team of volunteer and paid programmers, working together over the Internet.
Linux is great for many reasons, including the fact that the folks who built it from the ground up wanted it to be 

Multiuser: More than one user can be logged in to a single computer at one time.
Multiprocess: True preemptive multitasking enables the operating system core to efficiently juggle several programs running at once. This is important for providing multiple services on one computer.
Multiplatform: While Mac OS only runs on Intel CPUs and Windows only runs on Intel and ARM CPUs, Linux currently runs on more than 24 different CPU platforms (hardware types), including 32- and 64-bit Intel-based PCs, Digital/Compaq Alpha, all variants of the Apple Macintosh, Sun SPARC, the Apple iPod, ARM CPUs, and even the Microsoft XBox.
Interoperable: Linux plays nice with most network protocols (languages) and operating systems, allowing you to interact with users and computers running Microsoft Windows, UNIX, Apple Macintosh computers, and other, more niche groups.
Scalable: As your computing needs grow, you can rely on Linux to grow with you. The same Linux operating system can run on a tiny electronic photo frame, a desktop computer, or a very large, industrial-strength server system.
Portable: Linux is mostly written in the C programming language. C is a language created specifically for writing operating system-level software and can be readily ported (translated) to run on new computer hardware.
Flexible: You can configure the Linux operating system as a network host, router, graphical workstation, office productivity PC, home entertainment computer, file server, web server, cluster, or just about any other computing appliance that you can think of.
Stable: The Linux kernel (the core of the operating system) has achieved a level of maturity that makes most software developers envious. It's not uncommon to hear reports of Linux servers running for years without crashing.
Efficient: The modular design of Linux enables you to include only the components needed to run your desired services. Even older computers can utilize Linux and become useful again.
Free: To most people, the most intriguing aspect of Linux is the fact that it's often available free of charge. How (the capitalists murmur) can anyone build a better mousetrap with no incentive of direct monetary return?
In this chapter, I intend to answer that last question for you. I also hope to paint a picture of the open source software development model that created Linux.

SO WHERE DID LINUX COME FROM? 
The quickest way to understand Linux is to take a peek at its rich heritage. Although programming of the Linux core started in 1991, the design concepts were based on the time-tested UNIX operating system.
UNIX was developed at Bell Telephone Laboratories in the late 1960s. The original architects of UNIX, working back when there were few operating systems, wanted to create one that shared data, programs, and resources both efficiently and securely — something that wasn't available then (and is still sought after now). From there, UNIX evolved into many different versions; its current family tree is so complicated that it looks like a kudzu infestation!
In 1991, Linus Torvalds was a computer science student at the University of Helsinki in Finland. He wanted an operating system that was like the UNIX system that he'd grown fond of at the university, but both UNIX and the hardware it ran on were prohibitively expensive. A UNIX version called Minix was available for free, but it didn't quite meet his needs. So, as a computer science student, Torvalds studied Minix and then set out to write a new version himself. In his own words (recorded for posterity on the Internet because this was in an early version of an online chat room), his work was "just a hobby, won't be big and professional like GNU."
Writing an operating system is no small task. Even after six months of hard work, Torvalds had made very little progress toward the general utility of the system. He posted what he had to the Internet — and found that many people shared his interest and curiosity. Before long, some of the brightest minds around the world were contributing to Linus's project by adding enhancements or fixing bugs (errors in the code).



Anatomy of an Open Source Software Project
To the casual observer (and some corporate IT decision makers), Linux appears to be a freak mutation — a rogue creature randomly generated by anarchy. How, after all, can something so complex and discipline dependent as a computer operating system be developed by a loosely knit band of volunteer computer geeks from around the world?
Just as science is constantly attempting to classify and explain everything in existence, technology commentators are still trying to understand how the open source approach can create superior software, especially in cases where there is no charge. Often the reasons have much to do with the usual human desire to fill a need with a solution. When a programmer in the Linux world wants a tool, the programmer simply writes one — or bands together with other people who want a similar package, and they write it together.

GNU who?
Imagine — software created out of need rather than projected profit. Even though UNIX ultimately became expensive proprietary software, the ideas and motives for its creation were originally based on practical needs. What people usually refer to (in the singular) as the Linux operating system is actually a collection of software tools that were created with the express purpose of solving specific computing problems.
The speed of Linux's popularity also wouldn't be possible without the vision of a man whom Steven Levy (author of the book Hackers) refers to as "The Last of the Great MIT AI-LAB Hackers" — in the original sense of the word hacker is someone who is an expert at coding, not the current popular meaning that implies criminal intent. This pioneer and advocate of freedom software is Richard Stallman.
The Massachusetts Institute of Technology (MIT) has long held a reputation for nurturing the greatest minds in the technological disciplines. In 1984, Stallman, a gifted student and brilliant programmer at MIT, was faced with a dilemma — sell his talent to a company for a tidy sum of money or donate his gifts to the world. He did what we'd all do ... right?
Stallman set out on a journey to create a completely free operating system that he would donate to the world. He understands — and continues to live — the original hacker ethic, which declares that information wants to be free. This concept wasn't new in his time. In the early days of the computing industry, many advancements were made by freely sharing ideas and programming code. Manufacturer-sponsored user groups brought the best minds together to solve complicated problems. This ethic, Stallman felt, was lost when companies began to hoard software as their own intellectual property with the single purpose of profit.
As you may or may not have gathered by this point, widespread and accessible source code is paramount to successful software development. Source code is the term for the human-readable text (as opposed to the unreadable cyber-hieroglyphics in an "executable" file) that a programmer types to communicate instructions to the computer.
Writing computer programs using code that computers can run directly is an extremely arduous task. Modern computer software is usually written in a human-friendly language and then compiled, or translated, into the computer's native instruction set. To make changes to this software, a programmer needs access to a program's source code. Most proprietary software comes only as a precompiled product; the software developer keeps the source code for those programs under lock and key.
After determining that his operating system would be built around the conceptual framework of UNIX, Stallman wanted the project name to distinguish his system from UNIX. So, he chose the recursive acronym GNU (pronounced ga-new), which means GNUs not Unix.
To finance the GNU project, Stallman organized the Free Software Foundation (FSF), which sold open source software to help feed the programmers who worked on its continuing development. (Remember, we're talking free as in freedom, not free lunch.) Although this organization and goal of creating a complete operating system was necessary and important, a much more important piece of the puzzle had to be put into place to protect this new software from big-business pirates — a concern still all too relevant today as a former Linux company tries to hijack ownership of decades of volunteer work from thousands of people around the world.
The GNU General Public License (GPL) is a unique and creative software license that uses copyright law to protect the freedom of the software user, which is usually the opposite of how a copyright works. Generally, a copyright is an enforceable designation of ownership and restriction from duplication by anyone but the copyright holder. When software is licensed under the GPL, recipients are bound by copyright law to respect the freedom of anyone else to use the software in any way they choose. Software licensed with the GPL is also known as copyleft software (the reverse of right, get it?). Another way to remember the GPL is through its ultimate result: Guaranteed Public for Life.
While Stallman's work set the stage for Linux's rapid climb to popularity, the operating system he and his crew were working on took longer than expected. If you're interested in the completed version, go to www.gnu.org/software/hurd/hurd.html.

Who's in charge of Linux, anyway?
As an open source project evolves, various people emerge as leaders. This leader is often known as the project's benevolent dictator. A person who becomes benevolent dictator has probably spent more time than anyone else on a particular problem and often has some unique insight. Normally, the words democratic and dictator are never paired in the same sentence, but the open source model is a very democratic process that endorses the reign of a benevolent dictator.
Linus Torvalds is still considered the benevolent dictator of the Linux kernel (the operating system's core). He ultimately determines what features are added to the kernel and what features aren't. The community trusts his vision and discretion. In the event that he loses interest in the project, or the community decides that he has gone senile, a new leader will emerge from amongst the very competent people working with him.

Einstein was a volunteer
Someone who is a volunteer or donates time to a project isn't necessarily providing a second-rate effort (or only working on weekends and holidays). In fact, any human resources expert will tell you that people who choose to do a job of their own free will produce the highest quality products.
The volunteers who contribute to open source projects are often leaders in their fields who depend on community collaboration to get useful work done. The open source concept is no stranger to the scientific community. The impartial peer-review process that open source projects foster is critical in validating some new feature or capability as being technically correct.
 Those who paint the open source community as copyright violators and thieves often misunderstand — or outright ignore — these vital issues. Open source programmers are very proud of their work and are also very concerned about their own copyrights, not wanting their work to be stolen by others — hence licenses such as the GPL. This concern creates an atmosphere with the greatest respect for copyright. Bandits who claim that they're "just being open source" when they steal other people's hard work are grossly misusing the term to soothe their own consciences.
Many have also pointed out that if copyright is violated in open source, it's easy to tell. Watch the news and notice how often large software corporations are convicted of stealing other people's code and incorporating it into their own work. If the final product is open source, it's easy for anyone to look and make sure nothing stolen is in it. As you might imagine, tracking down such copyright violations is much more difficult in a closed source scheme.

Packaging Linux: The Distribution
A complete Linux system package is called a distribution. A Linux distribution contains the Linux kernel, the GNU project's tools, and any number of open source software projects to provide various functionality for the system.
Lots of different Linux distributions are available to meet just about any computing requirement you could have. Most distributions are customized for a specific user group, such as business users, multimedia enthusiasts, software developers, or normal home users.
Each customized distribution includes the software packages required to support specialized functions, such as audio and video editing software for multimedia enthusiasts, or compilers and integrated development environments (IDEs) for software developers.
The different Linux distributions are often divided into three categories: 

Full core Linux distributions
Specialized distributions
Live test distributions
The following sections describe these different types of Linux distributions, and shows some examples of Linux distributions in each category.

Core Linux distributions
A core Linux distribution contains the Linux and GNU operating system, one or more graphical desktop environments, and just about every Linux application that is available, ready to install and run. The core Linux distribution provides one-stop shopping for a complete Linux installation, no matter what your requirements are!
Table 1-1 shows some of the more popular core Linux distributions out there.

TABLE 1-1 Core Linux Distributions 
Distribution
Description
Slackware
One of the original Linux distribution sets, popular with Linux geeks
Red Hat
A commercial business distribution used mainly for servers
CentOS
The open source version of Red Hat designed for testing
Fedora
Another open source version of Red Hat, but designed for home use
Gentoo
A distribution designed for advanced Linux users, containing only Linux source code
SUSE
A commercial distribution for business use
Debian
Popular with Linux experts and commercial Linux products

In the early days of Linux, a distribution was released as a set of floppy disks. You had to download groups of files and then manually copy them onto disks. It would usually take 20 or more disks to make an entire distribution! Needless to say, this was a painful experience.
Later, when home computers commonly had CD or DVD players built in, Linux distributions were released as either a CD set or a single DVD. Often you would download a single DVD image file (commonly called an ISO file after the file extension used), then burn that image onto a DVD. That made installing Linux much easier.
Nowadays, with many computers foregoing DVD players, Linux distributions are still released as ISO image files, but now utilities allow you to burn them onto a bootable USB flash drive. Modern computers have the ability to boot from the USB drive, which is still commonly found on both workstations and servers.
While having lots of options available in a distribution is great for Linux geeks, it can become a nightmare for beginning Linux users. Most distributions ask a series of questions during the installation process to determine which applications to load by default, what hardware is connected to the PC, and how to configure the hardware. Beginners can often find these questions confusing. As a result, they often either load way too many programs on their computer or don't load enough and later discover that their computer won't do what they want it to.
Fortunately for beginners, there's a much simpler way to install Linux.

Specialized Linux distributions
Over the years a new subgroup of Linux distributions had appeared, designed specifically for new Linux users. These are typically based on one of the core distributions, but contain only a subset of applications that would make sense for a specific area of use.
Besides providing specialized software (such as only office products for business users, or games for gamers), customized Linux distributions also attempt to help beginning Linux users by auto-detecting and auto-configuring common hardware devices. This makes installing Linux a much more enjoyable process.
Table 1-2 shows some of the more popular specialized Linux distributions available and what they specialize in.

TABLE 1-2 Specialized Linux Distributions 
Distribution
Description
Mint
A desktop distribution configured to replace a standard Windows workstation
Ubuntu
Provides desktop and server distributions designed for school and home use
MX Linux
A desktop distribution for home users with older hardware
openSUSE
An open source version of the commercial SUSE distribution
PCLinuxOS
A distribution focusing on support for advanced graphics and sound cards
Puppy
Another small distribution that runs well on older PCs

That's just a small sampling of specialized Linux distributions. There are literally hundreds of specialized Linux distributions, and more are popping up all the time on the Internet. No matter what your specialty, you'll probably find a Linux distribution made for you.
 You may notice that often a single Linux distribution will release different versions of the distribution to cover more ground. For example, Ubuntu releases separate distribution that each use a different desktop environment.

The Linux Live distribution
A great phenomenon in the Linux world is the bootable Linux DVD distribution, originally called a LiveDVD. These days, most computers allow you to start up by reading the operating system from either the DVD or a USB drive instead of the hard drive. This lets you see what a Linux system is like without actually installing it.
To take advantage of this feature, some Linux distributions create a bootable ISO file that you can burn on to a DVD or USB stick. These distributions contain a subset of the full Linux system. Due to the size limitations, the sample can't contain a complete Linux system, but you'd be surprised at all the software they can cram in! The result is, you can boot your PC from the DVD or USB stick, and then install the rest of the packages you need from the Internet.
This is an excellent way to test various Linux distributions without having to mess with your PC. Just pop in a DVD or USB stick and boot! All the Linux software will run directly off the DVD or USB device. These days just about every Linux distribution has a Live version, so it's easy to download a distribution from the Internet and burn it onto a DVD (or USB stick) to test drive.
Some Linux Live distributions, such as Ubuntu, allow you to install the Linux distribution directly from the Live device as well. This enables you to boot with the DVD or USB stick, test drive the Linux distribution, and then if you like it, install it onto your hard drive. This feature is extremely handy and user-friendly.
As with all good things, Linux Live distributions have a few drawbacks. Because you access everything from the DVD or USB stick, applications run more slowly, especially if you're using older, slower computers and DVD drives. Also, any changes you make to the Linux system will be gone the next time you reboot. 







Chapter 2
Prepping Your Computer for Linux

IN THIS CHAPTER
 Taking basic preinstallation steps
 Using Linux and Windows on the same computer
 Customizing disk partitions before installation
 Knowing (and finding) your hardware information
 Preparing the media for installation

There are many different ways to get a Linux workstation up and running. With the growing popularity of Linux some companies sell laptops with Linux already loaded onto them. If you've purchased one of those you can skip directly to Chapter 4 and dive into the Linux world. If you have a spare computer that's only going to run Linux and nothing else, you're in luck! You can skip the "Preparing to Use Linux and Microsoft Windows Together" section. In fact, if you're feeling brave, you may want to skip right to Chapter 3 and start your installation. There's troubleshooting information in Chapter 22 as well.
Of course, many people don't have the luxury of having more than one computer to dedicate for Linux use. To install Linux permanently on an existing PC, you need to have a hard disk area set up for it. There are three common solutions to this: 

Completely replace the existing operating system on the hard drive
Install Linux on a second hard drive
Partition an existing hard drive to include Linux

BACKING UP WINDOWS 
The term back up means different things to different people. A full backup copies all the operating system, programs, and data files on the system. That usually requires special software that can copy all of the files as your PC is running. A data backup just copies the individual personal files that you've created. You can usually do that yourself by just copying files commonly found in your Documents, Music, Pictures, and Videos folders to an external device such as a DVD or USB drive. Most likely for your Linux transition you can do just a data backup. These days most modern PCs include a separate partition with the Windows operating system files so you can easily restore the operating system by itself. All you need to worry about is making sure your personal files are safe.

The first solution is the easiest way to installing Linux on a PC. Most Linux installations even include an automatic process that guides you through converting a PC entirely to Linux. However, this is an all-or-nothing approach — you'll be replacing your existing operating system entirely with Linux!
 If you do replace your existing operating system, just be aware that when you're done, you won't have your original data files any more! If you want to keep any files from your Windows PC, you need to back them up yourself to media that you can read from Linux. See the "Backing up Windows" sidebar for more details on that process.
The other two methods require a dual boot scenario. In a dual boot scenario, both Linux and Microsoft Windows reside on hard drives in the same computer. When you boot the computer, a menu appears, asking you which operating system you want to use. This allows you to keep your original Windows applications and files, plus use Linux — all on the same computer!
If you're using a desktop PC you may be able to add a second, fresh hard drive to install Linux on. This is by far the easiest solution for a dual boot system, and should be used if at all possible. Unfortunately, most laptops don't have the ability to add a second hard drive, so you'll have to resort to partitioning the existing hard drive as explained in the next section.
If you do add a second hard drive, just make a note of which drive is which as far as the computer sees them: You want to make sure that you leave your Microsoft Windows installation untouched. All you need to know is which drive (Windows or Linux) is first and second as far as the computer is concerned. When you are sure you know which drive is which, proceed to the section "Double-Checking Hardware Compatibility" later in this chapter.
 It's extremely important that you know which hard drive has your original Windows installation on it. When it comes time to load Linux you don't want to accidentally install it over the original Windows drive! This is another reason it's important to back up any important files before starting this process. Accidents can (and often do) happen!
Those who can't spare an entire hard drive for Linux and already have Microsoft Windows installed will have to resize their current Windows installation and create a second partition on the hard drive. The partition allows a single hard drive to have separate logical sections that the computer sees as individual hard drives. If this is your situation, you will most likely need to work through this entire chapter.
 A few Linux distributions (such as Ubuntu) have the ability to modify existing Windows partitions and add a Linux partition automatically as part of the installation process. Hopefully this feature will become more common among other distributions. Check with your particular Linux distribution installation documentation first before forging ahead.
If you absolutely don't want to dual boot using your hard drive, you have three other options — I know I said that there were three approaches in total and adding three more here brings it up to six, but give me a moment to explain.
You can use virtualization software, such as VMware or Oracle's VirtualBox (see Chapter 20) to install a "virtual" Linux machine that lives in a window inside your existing Windows installation. You keep your Windows disk as-is without any modifications. You just install Linux within the virtual area created by the VMware or VirtualBox software.
You can also do the opposite — install only Linux on the computer and then use VMware or VirtualBox to install a virtual Windows machine that lives in a window within your Linux installation. If you do this, remember to backup your original Windows files before installing Linux, and then restore them in the new Windows area.
Finally, if the thought of changing anything on your computer gives you hives, you can just use a Live distribution (see Chapter 1) to boot your computer into Linux without installing anything. By running Linux from the DVD drive or USB stick it'll be slower (perhaps even painfully slow on older PCs), but nonetheless it'll work, and give you an idea of just what Linux is all about.
So give some thought to which of the options detailed here you prefer, and then read on.
 Windows 10 has introduced a new feature called Windows Subsystem for Linux (WSL). It provides a basic (and I mean very basic) Linux interface so you can run some Linux applications within Windows. At the time of this writing, WSL is still in its infancy and not suitable to run a full-scale Linux system inside Windows. There is hope, though, as the next version of WSL plans to support a full Linux kernel and libraries. Perhaps someday...

Preparing to Use Linux and Microsoft Windows Together
If you're planning to run Linux and Microsoft Windows in a dual boot environment on the same machine, the odds are that you already have Windows installed and have been using it for some time. Because I hate to hear screams of anguish from new Linux users, take a moment to assess what you have and what you need to do.
 On the off-chance that you actually don't have Windows installed yet and still want that dual-boot capability, you should install Windows before you install Linux. Otherwise, during installation, Windows overwrites the part of your hard drive that Linux uses to store its boot menu. (This factor can create a mess later when you want to boot back into Linux!) Then after you have Windows installed, return here.
The majority of you, however, want to dual boot because you've got one machine and it's already running a Windows installation that you really don't want to redo. The following sections walk through the processes required to get your computer ready for a dual boot environment.

Installing a second hard drive
Next to replacing the existing operating system, the second easiest way to get Linux onto a PC is to install a second hard drive. Many desktop PCs support multiple hard drives by either chaining two hard drives together on the same disk cable, or providing multiple cables to handle hard drives.
You have to crack open the PC case and take a look inside to see what you're up against. The standard disk controller cards in most PCs allow up to two devices per controller, and often PCs will have more than one controller installed on the motherboard. If you see two cables with the long multi-pin connectors in them, you're in luck. If you see only one cable with an empty connector on it, you should be okay also.
Usually you can determine your disk controller configuration by looking at the BIOS setup screen for your PC. To get to your BIOS setup screen you usually need to press a Function key (often F2 or F12) as your PC first starts up. Consult with your specific PC manufacturer to find out which key to use. Besides the hard drive, controllers also support connecting CD/DVD drives, so you'll need to be careful when evaluating your disk controller situation.
 If your motherboard contains only one disk controller, and uses it for the hard drive and a DVD device, you won't be able to add a second hard drive on that controller. Usually you can find plugin disk controller cards to add a second controller to the PC. You'll need to do just that if you want to add another hard drive.
After you get the second hard drive installed, you're ready to get going with Linux. As mentioned earlier, it'll help to know which hard drive is the Windows one and which one will be used for Linux. If you don't know, you can use one of the disk management tools discussed in the following section. Once you know which hard drive is which, you can skip to the "Double-Checking Hardware Compatibility" section to check on the rest of your computer hardware.

Partitioning an existing drive
If you only have a single hard drive available in your PC, you need to create separate areas (called partitions) on the hard drive for Windows and Linux. This section walks through the process of how to do that, but first, you need to understand how partitions work.
Three types of partitions are available: primary, extended, and logical. A hard drive can have three primary partitions and one extended partition. Each primary partition acts as a separate hard drive as far as the operating system is concerned. Inside the extended partition you can have up to 12 logical partitions — think of an extended partition as just a cardboard box that contains the logical partitions. Logical partitions behave similar to primary partitions and hold data; extended partitions just hold logical partitions. Because I can't predict what software you want to install, I recommend having at least 10GB of space available in a partition for your Linux installation. More is always better because it gives you more room for downloads and even more programs.
 Make a note of the partition you dedicate to Windows and the one you dedicate to Linux. You need this information when installing Linux.
Those who aren't starting from scratch for a dual boot likely need to make changes to their current installation. Proceed to the next section to find out how.

Partitioning using Windows tools
If you already have Windows installed on the entire hard drive, you'll need to shrink that partition down so there's room for Linux. The first step is to check your existing hard drive for how much free space is available to dedicate for Linux. You can do that using the File Explorer tool in Windows by following these steps: 
Open File Explorer by clicking the folder icon in the taskbar, or typing file explorer in the search area in the taskbar and selecting File Explorer from the search results.

When File Explorer opens, click This PC on the left-hand side of the window.
This displays the status of the various storage devices you have connected to your PC. Figure 2-1 shows an example of what you might see in File Explorer.
The example shown in Figure 2-1 shows a single hard drive connected to the PC (assigned as drive letter C). File Explorer shows the drive is 899GB in size, and has 483GB available for use as a second partition.
 
FIGURE 2-1: The Windows 10 File Explorer window.


 It's usually not a good idea to allocate all the free space on your hard drive to Linux; you'll want to leave some extra room in the Windows partition so you can continue doing things while you're running Windows, such as downloading and installing patches or saving new files.
After you determine how much space you want to dedicate to Linux, you're ready to partition the hard drive.
The Windows utility you want to use is the Disk Manager program. Follow these steps to use it: 
Right-click the Start icon in the taskbar.

From the menu that appears, choose Disk Management.
The Disk Management dialog box appears as shown in Figure 2-2. The dialog box shows all the hard drives installed on the PC, along with the partitions for each one.
 
FIGURE 2-2: The Windows 10 Disk Management tool.



Right-click the partition that indicates it is assigned as a Windows partition and assigned a drive letter (usually the C drive).
You can click either the partition entry in the text list, or the graphical picture of the partition.
 As shown in Figure 2-2, many modern PCs create one or more hidden partitions that aren't assigned drive letters in Windows. These partitions don't appear in File Explorer, but are used by the PC to contain recovery data to reinstall Windows in an emergency. Don't mess with those partitions!

Select Shrink Volume from the pop-up menu.
The Shrink Volume dialog box appears, as shown in Figure 2-3.
 
FIGURE 2-3: The Shrink Volume dialog box.



Enter the amount of space you want to assign to the Linux partition in the text box.
Note that the entry is in MB (megabytes) instead of GB (gigabytes). One gigabyte is equal to 1024 megabytes, so just multiply the available GB space value by 1024 to get the MB value to enter here.
Click Shrink.
 During the shrink process Windows tries to move any data stored near the end of the partition towards the front to make room for the new partition. However, some system files can't be moved, which may cause a problem and produce an error message. If this happens there are ways to move those files, but it gets much more complicated that what I can cover here. Fortunately, you aren't the first person to need to do this, so there's plenty of help available. One place to consult is the Microsoft Windows forum at answers.microsoft.com and you'll see lots of postings on how to handle this situation.
When the shrink process completes, a new partition appears in the Disk Manager listing. This new partition appears as Unassigned, and not have a drive letter assigned to it by Windows.
 If you have lots of space available on your existing Windows partition you'll probably want a lot more than 10GB of space. The 10GB is the minimum recommended for most Linux distributions to fit the operating system. However, if you download lots of multimedia, you'll quickly eat up whatever was left after you installed your software! Give Linux as much space as you think you can spare from your Windows environment.

Partitioning using Linux tools
If you're in a situation where you don't currently have Windows installed on the hard drive but would like to partition the hard drive first, you can use Linux tools to do the work for you. The easy solution is to boot your PC using a Live distribution and use the disk management tools available. Plenty of Live distributions include disk management tools by default, but by far the most popular is the KNOPPIX Linux distribution.
The KNOPPIX Linux distribution was the first to create a live Linux version, even back before there were DVDs (it was called a LiveCD!). What keeps KNOPPIX at the top of the list of popular Linux distributions is the myriad of utilities it includes by default. It touts itself as a rescue disk — a way to boot your PC if things go horribly wrong with the existing operating system, and be able to troubleshoot and possibly fix issues.
Follow these steps to partition your hard drive using KNOPPIX: 
Download the latest KNOPPIX CD or DVD ISO image from the KNOPPIX website at www.knopper.net.

Burn the ISO image onto a bootable CD, DVD, or USB stick using a standard ISO image burning tool.
Jump to the "Creating a boot disk" section" for quick instructions on how to do this, then come back here.

Boot your PC using the KNOPPIX LiveDVD.
At the boot: prompt, press the Enter key to start KNOPPIX.

Select Graphical Programs ⇒    startlxde from the main menu.
The KNOPPIX graphical desktop environment comes up. It's a fairly bare-bones graphical desktop so it can run on just about any PC, but it gets the job done.

From the KNOPPIX graphical desktop, click the Terminal icon in the taskbar at the bottom of the desktop.
A Terminal session starts that provides access to the command prompt (I talk more about that in Chapter 16).

At the command prompt in Terminal, enter the command: sudo gparted.
The GParted application is a popular disk management tool for Linux. It provides an interface similar to the Windows disk management tool, as shown in Figure 2-4.
Right-click inside the partition you need to shrink.

Select Resize/Move from the pop-up menu.
The Resize/Move dialog box opens, as shown in Figure 2-5.
 
FIGURE 2-4: The Linux GParted disk management tool main window.


 
FIGURE 2-5: The GParted Resize/Move dialog box.




In the Resize/Move dialog box, either drag the right end of the partition graphical box to resize the partition, or enter a new value in the New Size text box.
The colored portion of the box indicates where the existing data in the partition is stored. You should be able to move the end of the partition down close to that area.
Click the Resize/Move button to initiate the resizing process.
After the hard drive is partitioned you can exit the tool and shut down KNOPPIX. And that's all there is to it! After you've resized the partitions, you're ready to move on to the next step in preparing your PC for Linux — checking your hardware, as described in the next section.

Double-Checking Hardware Compatibility
If you're installing Linux on hardware you already own, just give it a try and then see what doesn't work. Parts of this section address fixing hardware problems in a general sense. In other chapters, more specific items such as sound cards (Chapter 13), wireless cards (Chapter 9), and so on, are addressed. So, if you run into trouble, start in the specific sections dedicated to particular tasks, and then come here for more general help if you still haven't solved the problem.
The biggest hardware incompatibility problem areas are wireless network cards and the very latest whiz-bang multimedia hardware such as video cards and sound cards. You can check hardware compatibility lists before installing or purchasing new hardware, but they are of limited use because the hardware world changes so quickly.
If you're interested in looking, first try the support website for your particular Linux distribution, such as the Red Hat Enterprise Linux listings at access.redhat.com/ecosystem/search/#/category/ for the CentOS or Fedora distributions, or the Ubuntu listings at certification.ubuntu.com/ for any of the Ubuntu distributions.
Keep in mind that hardware compatibility lists usually focus on business equipment instead of home items, so just because you don't see something listed there doesn't mean it won't work.
 Don't worry about items being Certified (heavily tested to make sure they work properly) or not. Supported and Compatible are fine most of the time for a home user. Ultimately, the best way to tell if a piece of hardware is supported is to do a web search. Many go to Google and do a web search on the make and model of the hardware, plus the word Linux. If specific drivers are required to support the hardware you can often find additional installation information by adding your Linux distribution name to the search. Such a search is likely to show you what problems and successes people have run into with that particular piece of hardware.
If even thinking about computer hardware gives you dizzy spells, don't worry, you can find plenty of information on the Internet. A great place to start is www.tomshardware.com. Other places to look for information on how various devices work in Linux include 

Other Linux-oriented websites: Quite a few websites are devoted to helping Linux users support hardware. The old standard was the generic Linux hardware list at www.tldp.org/HOWTO/Hardware-HOWTO/. More up-to-date websites are available, such as linux-hardware.org.

Vendor websites: Many hardware vendors do support Linux, but they don't make it easy to find information about it. In general, search the vendor's forums (if they have them) for the piece of hardware, the FAQ for the hardware, or follow the Support links to look for downloads for Linux. Don't download what you find if there are downloads. The point is to look and see if they exist. The driver (the software that tells the operating system how to use the hardware) available for download might actually be included in your Linux installation. Only download the driver from the vendor if this is the only way you can get it.
 If worse comes to worst, you might not find any information on the hardware in question involving Linux. However, again, this doesn't mean that the hardware won't work. Try it anyway if you already have the item. You find that it works fine. Or, you might not be able to use the very latest features, whereas the rest works just fine. (For example, with a latest-generation video card, the newest fancy features might not work, but you can still use it as a generic SVGA at the very least.)
The dreaded manuals: When possible, keep your computer manuals (especially those for your video card and monitor) handy, just in case you need them to answer a question asked by the installer — most people don't have to deal with this at all, but some do.

LAPTOP CONSIDERATIONS 
The current distributions of Linux do very well on relatively new laptops. (See www.linux-laptop.net for an excellent research site on how Linux gets along with various makes and models.) If your laptop is a common brand, you shouldn't encounter any problems installing Linux. However, some laptops resort to exotic hardware to squeeze all those fancy features into such tiny boxes. Sometimes Linux won't work with the extra fancy features on those laptops, such as touch screens, clickable mouse pads, and keyboard lights.
If you plan to purchase a laptop for Linux, check out its hardware specs (such as network cards) to make sure they're not Windows-specific. If the built-in or default hardware for the laptop is Win-labeled (or you discover while researching the machine that it contains a Win product, even if it isn't properly labeled), you might be able to switch the offending hardware with an external device that plugs into the laptop using USB. Most current laptops contain at least one USB slot to give you a place to connect an external network card or sound card. As long as you stick with a common brand of external USB device, it should work well with Linux.

If you need to find out exactly what hardware is in your machine, you have the following options: 

Use an existing operating system to document your hardware. If your computer is already running Windows, you can collect a lot of information from the Windows environment. In Windows 10, right-click the Start menu icon in the taskbar, and then choose Device Manager. The Device Manager dialog box, shown in Figure 2-6, appears.
Download a PC hardware-detect tool. Some hardware detection tools are also available on the Internet, such as Dr. Hardware. The Dr. Hardware tool contains lots of information about what's inside your machine. This tool is shareware, and the usage and fee information is available from the Gebhard Software website (www.dr-hardware.com/).

Access the Basic Input/Output System (BIOS), or for newer PCs the Unified Extensible Firmware Interface (UEFI) information. Stored in a small area of memory and retained by a battery, this is sometimes referred to as CMOS (Complementary Metal-Oxide Semiconductor), which indicates the type of computer chip that can store and retain information. The amount of information stored in the BIOS or UEFI can range from very little to quite a lot. Some newer systems may display several screens of information about the computer's hardware.
 
FIGURE 2-6: In Windows 10, the Device Manager gives you information on what hardware you have installed.


If you choose to access the BIOS, make sure you do so before any operating systems load. Most manufacturers indicate the keyboard key (or key sequence) that gets you into the BIOS (or Setup) screen when the system is starting up — for example, Press Del to enter Setup. If you can't find the keyboard sequence, check the manufacturer's website. After you've entered the BIOS, you typically navigate around with the arrow keys, Tab key, or Enter key. Some BIOS environments also use the function keys; look for a list of function-key options at the top or bottom of the screen.


 Be especially leery of labels on hardware boxes and websites that include the term Win (as in Windows). These components rely on Microsoft Windows to be able to function — even worse, the packaging may show nothing that suggests this limitation. Only a very slight chance exists that you can find a Linux driver for Win hardware. If you do find one, copy it to a USB stick before you install Linux.

Finally, Finally, Before You Get Started
Before you can install Linux you need to make sure you and your PC are ready to boot a Linux distribution. You need to check two last things before you move onto the next chapter and install Linux: 

Ensure your PC can boot an alternative operating system.
Create a bootable media for your Linux distribution.
The following two sections discuss both of these requirements in detail.

Disabling the secure boot feature
Thanks to all the various attacks against PCs these days, most modern PCs include extra security to prevent booting using an "unauthorized operating system." Unfortunately, by default, the only authorized operating system for most PCs is Microsoft Windows (go figure). You need to disable this feature to boot most Linux distributions.
Systems that use the UEFI boot method are locked down so that the boot record can't be changed to either boot from Linux, or do a dual boot between Linux and Windows. You need to disable this feature so that you can install Linux on your PC.
This feature is part of the UEFI settings page that you can only access when you boot your PC. You can access these settings by pressing a special key as the system first boots. Which key you need to press depends on your particular PC brand. Consult your owner's manual to find out which one that is.
 Most UEFI PCs also use a feature called fast boot, which skips through many of the pre-boot checks previously performed by the BIOS and jumps right into booting Windows. You have to be extra speedy in pressing the correct key to get to the UEFI settings page!
After you get to the UEFI settings pages you need to do some hunting. Different systems incorporate different security features. Look for settings related to Secure Boot, and make sure you set them to a Disabled value. When you're done, save the changes and exit the UEFI page.
 Some Linux distributions have negotiated with Microsoft to include the necessary certification keys in their OS to be able to boot from UEFI with the secure boot feature enabled. Check with your particular Linux distribution to see if it supports this feature.

Creating a boot disk
A bootable DVD or USB stick is the last thing you need before proceeding to install Linux. If you remember from Chapter 1, Linux distributions come as ISO image files. For most situation you need to burn the ISO file onto a DVD, or use a utility to create a bootable USB stick. This section walks you through both of those processes.

Creating a bootable DVD
If you currently have a Windows PC available you can use the built-in features of Windows 10 to burn the Linux ISO image to a DVD. Just follow these steps: 
Open File Explorer and navigate to the location of the downloaded ISO image file.

Right-click the image file and choose Burn Disc Image.
The Microsoft Disc Image Burner starts, as shown in Figure 2-7.
 
FIGURE 2-7: The Microsoft Disc Image Burner dialog box.


Insert a blank DVD into the DVD tray, and then click Burn to initiate the process.
When the burn process completes, remove the DVD and label it with the operating system and version.
While it may seem funny to include labeling the DVD as the final step, after you start experimenting with Linux you'll be surprised how many different DVDs you'll start to accumulate! I can't tell you how many unlabeled DVDs I have laying around my office with various Linux distributions on them!

Creating a bootable USB stick
A trend in modern desktop and laptop PCs these days is to forgo the DVD drive. With the ease of downloading software from the Internet, having a DVD drive just takes up space that can be used for other things (or in the case of laptops, just make them smaller). If your PC doesn't have a DVD drive, don't fret — there's another way to boot Linux.
Modern PCs include the option to boot from a USB stick. However, there's somewhat of a trick in creating a USB stick that the PC can boot from. You can't just use the DVD burning utility to burn the ISO image file to a USB stick like you do with a DVD.
Fortunately, many Linux distributions now include utilities for creating bootable USB sticks with their distributions. Check with your Linux distribution's documentation to see whether it supports such a utility.
If your particular Linux distribution doesn't have its own utility for creating a bootable USB stick you can use a third-party one. One of the more popular tools for this is Rufus, found at rufus.ie. After you download the specific Linux distribution ISO file and Rufus, follow these steps to create a bootable USB stick from the ISO file: 

Insert a blank USB stick into a USB port on your PC.
Make sure the USB stick you select is large enough to contain the ISO image file. ISO image files for some Linux distributions are up to 4GB in size!

Start the Rufus program.
The Rufus program dialog box opens, as shown in Figure 2-8.
 
FIGURE 2-8: The Rufus program for creating a bootable USB stick.



Select the USB stick in the Device drop-down box.
Be very careful if you have multiple USB sticks connected to your PC. It may help to just have the one you want to format connected so you don't accidentally wipe away those important bowling scores you've been tracking!
In the Boot Selection drop-down box, select Disk or ISO image, and then click the Select button and navigate to the ISO image file you want to use.

Click Start to begin creating the bootable USB stick.
Rufus displays a warning dialog box indicating that everything on the USB stick will be erased. Make sure you don't have any important files on the USB stick before you proceed!
When the process completes, remove the USB stick and label it with the operating system and version.
Now you should be able to boot your PC from the bootable USB stick. Most PCs require you to select the option to boot from a USB device at startup. You may need to interrupt the normal boot process to see that selection menu.
If you've made it this far, you should be all ready to start installing Linux! 







Chapter 3
Installing Linux

IN THIS CHAPTER
 Considering some last-minute issues before installation
 Installing Ubuntu from a LiveDVD or USB stick
 Installing openSUSE as a personal desktop
 Booting for the first time

In the early days of Linux, you just about needed a degree in Computer Science to figure out how to get Linux working on a PC. Fortunately for us, these days the graphical installation is now quite easy to perform, and will be familiar to users coming from another graphical operating system, such as Microsoft Windows. This chapter provides the details you need to know to get a Linux distribution up and running on your PC.
While different Linux distributions use different installer scripts, they are all actually pretty smart. You may find that you don't see exactly the same screens that I show in this chapter, but the general concepts should all be the same. If you see something unfamiliar or don't see one that I cover here, don't panic. The installer is just adjusting what it offers based on the hardware in your system and what software you chose to install.

Things to Consider Before You Begin Installation
After you download the ISO image for your particular Linux distribution there are basically three ways you can install Linux from it: 

Burn the ISO image onto a blank DVD, then boot your workstation from the DVD. (Details on how to do this are shown in Chapter 2.)
Create a bootable USB stick using the ISO image file and boot your workstation from the USB stick. (Details on how to do this are also shown in Chapter 2.)
Mount the ISO image file as a virtual DVD drive in a virtual machine created using software such as VMware or VirtualBox.
The last method I cover in detail in Chapter 20, which focuses on running Linux in a virtual environment. This chapter focuses on installing Linux by booting your workstation using either a DVD or USB stick to install Linux.
To help give you a flavor of some of the different installation methods, in this chapter I concentrate on two different Linux distribution installations —Ubuntu from a Live distribution, and openSUSE from the full installation DVD. I selected these two methods for two reasons: 

The Ubuntu Live installation and the openSUSE full installation methods represent the two main types of installs you'd need to do for most Linux systems.
Covering the specific installation of every Linux distribution in existence would make this book into a set of encyclopedias.
After you get the hang of installing Linux using these two methods, you can go out and tackle just about any Linux install out there.
Also, I assume that you want to install a Linux desktop version and not a server version. Plenty of books out there focus on servers, so my goal is that Linux For Dummies focuses entirely on those who want to use Linux as their actual desktop machine. It's just not possible to cover both desktop and server functions to a satisfying depth in a book of this size.
 If you're installing some other version of Ubuntu or openSUSE, or a different distribution of Linux altogether, your screens will look different from what is shown in this book. Each Linux distribution's installation routine covers the same basic tasks, but the specific actions may be presented in a different order, or be customized to look different on-screen. For example, one distribution may present account creation before disk partitions, and another may have those two topics reversed. However, most distributions go through the same basic choices, so reading this chapter should still be helpful for something other than Ubuntu or openSUSE.

Installing from Ubuntu Live
The Ubuntu installation process is one of the simplest in the Linux world. Ubuntu guides you through all the steps required to set up the system, then installs the entire Ubuntu system without prompting you for too much information.
You can start the installation process from two locations after you boot from the Live DVD or USB stick: 

Directly from the boot menu without starting Ubuntu
From the Install desktop icon after you start the Ubuntu Live system
Both locations start the same installation process, which guides you through several steps of options.
 To begin the installation from the DVD or USB stick you may first need to change your system to start, or boot, from a DVD or USB stick — many systems today are configured to do this already, so you may not need to make any changes. You need to look at your BIOS settings to determine whether your system can boot from the DVD drive or USB stick.
After you have a Live DVD or USB stick in your hand, you can start the installation process. Just follow these steps. 

Place the Ubuntu Live DVD in the DVD tray of your PC (or plug the USB stick into a USB port), and restart your PC.
Your PC then boots from the Ubuntu Live DVD or USB stick, and you see the main Ubuntu Live menu, shown in Figure 3-1.

From the menu, select your language, and then choose either to install Ubuntu directly, or to try out Ubuntu first by running it from the DVD or USB stick.
The great feature about the Live versions is that you can test drive Ubuntu without having to mess with your hard drive. This gives you an idea of what'll work and what won't. After you've completed your test drive, if you decide to install Ubuntu, just click the Install icon on the desktop, shown in Figure 3-2. If you decide to run the install from the main menu, skip to Step 4.
 
FIGURE 3-1: The Ubuntu Live boot menu.


 
FIGURE 3-2: The Ubuntu LiveDVD desktop with the Install icon.




Select the language to use for the installation, then click Continue.
If you install Ubuntu from the desktop installation icon it asks you again for the default language, shown in Figure 3-3.
Ubuntu uses this language to display text messages during the installation process, plus sets the default language used when the operating system runs. However, this doesn't necessarily mean that all the applications running on the system will use that language. Each individual application may or may not detect the default language configured in Ubuntu.
 
FIGURE 3-3: The Ubuntu language selection window.




Select a Keyboard, and then click Continue.
Next up in the installation process is to identify the keyboard you'll use with the Ubuntu system. While this may sound like a simple option, it can get complicated if you have a keyboard that includes special keys. Ubuntu recognizes hundreds of different keyboard types, and lists them all in the Keyboard Layout window, shown in Figure 3-4.
The Keyboard Layout window lists the different types of keyboards commonly used based on your country. The left-side listing lists countries, and the right-side listing lists the different known keyboard types used in the country selected. Select your country from the left-side listing first, then select your keyboard type from the right-side listing.
For most standard keyboards, the Ubuntu installation script automatically detects the correct keyboard and you won't have to do anything. There's also a button to force the installer to attempt to detect your keyboard again if something went wrong the first time. If you have a special keyboard, under the two listings is an area where you can test the keyboard selection. Just type any special or unique characters available on your keyboard to see whether the setting you selected produces the proper characters.
 
FIGURE 3-4: The Keyboard Layout window.




Select what software you'd like installed by default in your Ubuntu desktop, and then click Continue.
The Ubuntu installer gives you some choices on just what software to install, as shown in Figure 3-5.
 
FIGURE 3-5: The Updates and other software window.


The Ubuntu installer gives you two options for the software packages to install: 

Normal Installation: Includes software for web browsing, office automation (such as word processing and working with spreadsheets), games, and playing audio and video
Minimal Installation: Provides a minimal desktop software bundle, which includes only software for web browsing and standard desktop utilities to control your desktop environment
For most Ubuntu desktop installations, select the Normal Installation. If you're using an older workstation with a small hard drive you may have to go with the minimal desktop installation and then manually install any other software packages you need.
 If your PC is connected to a network the installer gives you the option to install any available updates from the Ubuntu software repository now if you prefer. Selecting this option increases the installation time, but it also ensures your Ubuntu desktop software is up to date when you first log in.
The last option is to install third-party software. This topic is a bit controversial in the Linux world. Some hardware companies use proprietary drivers so Linux can interact with their hardware. These drivers aren't open source, so many Linux purists prefer not to use them. There are also certain audio and video formats that are proprietary as well, and as you can suspect, these also cause consternation among Linux purists. I'll leave the decision as to whether to select this option to you, but just beware if you choose to not install this bundle your desktop may not work with some of your hardware devices, or be able to play some of the more popular audio and video formats.


Select how to install Ubuntu on your hard drive, then click Install Now.
This step in the installation is quite possibly the most important, and also the most complicated. Here's where you need to tell the Ubuntu installer exactly where to place the Ubuntu operating system on your system. One bad move here can really ruin your day.
The options you get in this window during the installation depend on your hard drive configuration, and if you have any existing software on your hard drive. If you went through the steps in Chapter 2, you should be all set for this quiz! Figure 3-6 shows an example of what the Installation type window looks like.
The Ubuntu installer tries to detect your exact system setup and provides some simple options: 

If your entire hard drive is currently used for Windows, the Ubuntu installer offers to shrink the partition to make room for an Ubuntu partition, and create a dual-boot environment.
 
FIGURE 3-6: The Ubuntu Installation Type window.



If you've already shrunk your existing Windows partition manually (as discussed in Chapter 2), the Ubuntu installer offers to install Ubuntu on the available empty partition and create a dual-boot environment.
If you have a previous version of Ubuntu already installed, the Ubuntu installer offers to upgrade only the OS and leave your data intact if possible.
If you have a second hard drive in your workstation the Ubuntu installer offers to use it for Ubuntu, leaving your existing hard drive alone, and create a dual-boot environment.
If you have a single hard drive that already contains an existing Windows or Linux partition, the Ubuntu installer offers to erase the entire partition and just install Ubuntu.
Allows you to manually partition your hard drive to create your own partitions.
Which option you select depends on just what type of setup you want to try. If you want to run an Ubuntu-only workstation, the option to erase the existing operating system is the quickest and easiest way to go.
 Even if you select one of the options to keep the existing operating system, it's a very good idea to back up any important files contained in that operating system. Mistakes can (and often do) happen when working with hard drives.
If you select an option to keep an existing operating system on your hard drive, the Ubuntu installer allows you to select how much disk space to allocate for the new Ubuntu partition. You can drag the partition separator to redistribute disk space between the original operating system and the new Ubuntu partition. Hopefully you remember your disk space requirements determined earlier in Chapter 2 to use here!
If you select the manual partition process, Ubuntu turns control of the partition process over to you. It does provide a great partition utility, shown in Figure 3-7, for you to use to create, edit, or delete hard drive partitions.
 
FIGURE 3-7: The Ubuntu manual partition utility.


The manual partition utility displays the current hard drives, along with any existing partitions configured in them. Once you become an experienced Linux user you can manually remove, modify, or create individual partitions on any hard drives installed on the system to customize your Linux setup.


If you're performing a manual partition, select a filesystem for your Ubuntu partition.
Part of the manual partition process is to assign a filesystem to each partition. A filesystem is a method used for storing and accessing files on the partition. Unlike some other operating systems, Ubuntu supports several different filesystems. You can select any of the available filesystems for any of the partitions Ubuntu will use. Table 3-1 shows the filesystem types available for you when creating disk partitions in Ubuntu.

TABLE 3-1 Ubuntu Partition Filesystem Types 
Partition Type
Description
ext4
A popular Linux journaling filesystem that is the current extension over the original Linux ext2 file system
ext3
A legacy Linux journaling filesystem that is an extension over the original Linux ext2 file system
ext2
The original non-journaling Linux filesystem
btrfs
A newer, high-performance filesystem that supports large file sizes
JFS
The Journaled Filesystem, created by IBM and used in AIX Unix systems
XFS
A high-performance journaling filesystem created by Silicon Graphics for the IRIX operating system
FAT16
Older Microsoft DOS filesystem
FAT32
Newer Microsoft DOS filesystem compatible with Microsoft Windows
swap area
Virtual memory area
encrypted volume
Linux allows you to encrypt an entire partition — just don't forget the key
Do not use
Ignore the partition

The most common partition type (and the default used by the Ubuntu guided methods) is the ext4 format. This filesystem format provides a journaling filesystem for Ubuntu. A journaling filesystem logs any file changes into a log file before attempting to commit them to the disk. If the system should crash before it can properly commit the data, the journal log file is used to complete the pending file commits, and return the disk to a normal state. Journaling filesystems greatly reduce file corruption in Linux.


If you're performing a manual partition, select the mount points for the partitions.
After selecting a filesystem for the partition, the next item that Ubuntu wants for the partition is where to mount the partition in the virtual filesystem (see Chapter 7). The Ubuntu virtual filesystem handles hard drives by plugging them into specific locations in the virtual filesystem. Table 3-2 lists the possible locations where you can mount a partition.
If you create just one partition for Ubuntu, you must mount it at the root mount point (/). If you have additional partitions available, you can mount them in other locations within the virtual filesystem.

TABLE 3-2 Mount Point Locations 
Location
Description
/
The root of the Linux virtual filesystem
/boot
The location of the Linux kernel used for booting the system
/home
User directories for storing personal files and individual application setting files
/tmp
Temporary files used by applications and the Linux system
/usr
A common location for multi-user application files
/var
The variable directory, commonly used for log files and spool files
/srv
A common location for files used by services running on the system
/opt
Optional package installation directory for third-party applications
/usr/local
A common alternative location for optional multi-user package installations

 If you're using the manual partition method, don't forget to allocate a partition for the swap area, even if you already have lots of physical memory installed on your system. The Linux kernel uses the swap area as a temporary holding ground to move sleeping applications out of physical memory to make more room for running applications. The standard rule for this is to create as large of a swap area as you have physical memory. Thus, if you have 8GB of physical memory, create an 8GB partition and assign it as the swap area.


If you're erasing an existing partition, or creating a new one, select any advanced disk features to use, and then click OK.
Ubuntu provides the option for you to use the Logical Volume Manager (LVM) feature in Linux with your hard drive partitions. LVM provides a way for you to easily add more space to an existing directory at any time if needed, even if there's data already in the directory. You may also choose to encrypt the logical volume if you need to. The other option is to use the ZFS filesystem, which is a commercial filesystem recently released to the open source world.

Click Install Now to accept the proposed hard drive partition changes and continue with the installation.
Up until this point you can change your mind about the hard drive changes. However, after you click Install Now here you're committed to those changes and there's no going back!

Select your location, and then click Continue.
Because Ubuntu is in use worldwide, you'll need to manually select just where in the world you are located so Ubuntu can assign the correct time zone and locale settings.

Create a Login ID, and then click Continue.
Up next in the installation process is the Login ID window, shown in Figure 3-8.
 
FIGURE 3-8: The Login ID window.


The login ID you create in this process is somewhat important. Unlike other Linux distributions, the Ubuntu distribution doesn't use an administrator login account (usually called root in the Unix/Linux world). Instead, Ubuntu provides the ability for normal user accounts to belong to an administrators group. Members in the administrators group have the ability to become temporary administrators on the system (see Chapter 17).
 Having an account with administrative privileges is important, as the administrator is the only account that's allowed to perform most system functions, such as changing system features, adding new devices, and installing new software. Without an administrative account, you won't be able to do much of anything new on the system.
Besides identifying yourself, you'll also need to assign a name to the computer itself. Ubuntu uses this name when advertising its presence on the network, as well as when referencing the system in log files. You should select a computer name that's unique on your network, is less than 63 characters long, and does not contain any special characters (although hyphens are allowed).
One final setting — you must determine whether you want the system to automatically log you into your desktop, or to prompt for your login password. I wouldn't recommend using this feature on laptops that you may accidentally leave behind somewhere. If you'll be the only one using the desktop PC (and there aren't any nosy people around) you can utilize the automatic login feature to save some time. Otherwise, set it to prompt you for a password each time you log into your system.


Sit back and enjoy the show!
As the installation process proceeds the installer presents a series of informational slides. Scan over these slides to learn about the features available in your new Ubuntu system. I cover each of these features more in-depth in the upcoming chapters.
After the Ubuntu system is installed on the hard drive, the installation program prompts you to reboot. The next time your system boots, you'll be in Ubuntu-land!

Your First Ubuntu Boot
After rebooting Ubuntu, it either logs you in automatically and takes you directly to your desktop, or you'll be greeted by a login window, depending on the setting you chose during installation. If you're greeted by a login window, click your user account, then enter your password into the password text box (you do remember what you set, don't you?).
The first time you get to your user desktop, Ubuntu asks a few housekeeping questions. Follow these steps to make your way to your desktop: 

If you have a network account from Ubuntu, Google, Nextcloud, or Microsoft, select the appropriate icon from the menu. If you don't have a network account, or choose not to use it, click Skip.
Ubuntu can sync many of your network account features such as your desktop calendar, along with any files you have stored in common cloud accounts from any of the listed providers. Just select the account type you have from the menu shown in Figure 3-9, then enter your login information, and select the items you want to sync.

Select whether you want to use the Ubuntu Livepatch feature. To use it, click Setup Livepatch. If you choose not to use it, click Next.
The Ubuntu Livepatch feature allows you to link multiple computers to the Canonical cloud network. Canonical is the corporation that sponsors Ubuntu, and provides some advanced features, some for free, and some as a subscription service. You can link up to three workstations for free, or pay to become an Advantage member to link more. If you participate in the Livepatch feature, Ubuntu automatically installs all updates on your system without you having to do anything!
 
FIGURE 3-9: Select your online account to sync.




Select whether to send Ubuntu a report on your installation experience. After you've made your selection, click Next.
Ubuntu developers use this information to determine what hardware was or wasn't detected properly on your system during installation, as well as what additional software you've installed after the installation. This information helps developers determine what to include or leave out in future versions.

Select whether to enable location services, then click Next.
Location services allow applications to determine your location automatically without having to prompt you.

Take a quick scan of the additional software available to install in the Ready to Go window, then click Done.
This is just a small sample of the software available for you to install. The Ubuntu software repositories contain hundreds of open source applications ready for you to install and use! I walk through the software installation process in Chapter 15.
Congratulations — you've made it through all the installation and post-installation prompts! By now your head is probably spinning a bit, so take some time to collect yourself, then continue on in the book to learn more about your Linux system.

Installing openSUSE
When you install from a full core Linux distribution, you're in for quite a surprise. If you noticed from the Ubuntu Live installation, one thing that was missing was choice. Aside from configuring your hard disk partitions, Ubuntu Live doesn't provide you with much control over what is installed on your system.
Life is a little different working with a core Linux distribution, such as openSUSE. You have lots more choices to control just what software the installation process installs, as well as how the installer script configures things.
This section walks through installing from the openSUSE full installation DVD. The openSUSE distribution also supports a Live install version, but if you want choices, the full installation is the way to go! Just follow these steps to get things installed: 

Download the full openSUSE Leap full installation ISO image file from www.opensuse.org.
At the time of this writing the openSUSE distribution currently supports two versions of the distribution: 

Tumbleweed is a rolling release that contains the latest versions of software. It's primarily intended for power users and software developers.
Leap is the stable regular release version that is designed for normal Linux users like us.

Burn the openSUSE Leap ISO image file onto a blank DVD disk, or use a program such as Rufus to create a bootable USB stick.
These processes are described in detail in Chapter 2.

Boot your workstation using either the DVD or the bootable USB stick. Click Installation to start the installation process.
When openSUSE boots, you're greeted by a menu, as shown in Figure 3-10.
The boot menu provides lots of options, including letting you boot from a hard drive in your workstation in case of an emergency, or to just upgrade an existing openSUSE installation. You want to perform a fresh installation, so select the Installation menu option.

Select your language and keyboard, then click Next to agree to the license.
As part of this first step the openSUSE installation automatically detects your network setting. If it has problems, it may ask you for specific network settings for your environment. If it can detect your network automatically, it shows a window for you to select the default language and keyboard, as shown in Figure 3-11.
As with Ubuntu, the openSUSE installation script attempts to detect your keyboard, but if you're using a fancy keyboard (such as the Dvorak layout) you may need to manually select it from the list.
 
FIGURE 3-10: The openSUSE installation boot menu.


 
FIGURE 3-11: The Language, Keyboard, and License Agreement window.




Select whether to use the openSUSE online software repositories. Click Yes if your PC has connectivity to the Internet so you can keep up with software changes and install new software.
Most Linux distributions maintain software in online repositories to make it easier for you to upgrade software packages and install new ones (see Chapter 15). The openSUSE installation allows you to choose whether to use the online software repositories. When you select Yes, another window appears showing the different repository options, as shown in Figure 3-12.
 
FIGURE 3-12: Selecting online openSUSE software repositories.




Select Next in the List of Online Repositories window.
By default, the installer selects the standard software repositories for finding updates, security patches, and both open source and non-open source software packages. If needed, you can additionally select the repositories for debugging software and for downloading the source code for applications. These aren't needed by normal Linux users, but are available for software developers.

Select Desktop with KDE Plasma from the System Role window to install the default openSUSE desktop environment, then click Next.
Here's your first taste of what a full installation is all about. Notice from the list shown in Figure 3-13 that the openSUSE installation gives you the option to not only install either a desktop or server environment, but also customize what type. I walk through the differences between the GNOME and KDE Plasma desktops in Chapters 4 and 5. For now, select the KDE Plasma option. If after reading Chapter 4 you think you'd like the GNOME desktop better you can add it later.
 
FIGURE 3-13: The System Role window.




Select the partitioning option you want in the Suggested Partitioning window.
Similar to the Ubuntu installer, the openSUSE installer attempts to detect your specific partition setup, as shown in Figure 3-14.
If you don't like the partition scheme proposed by the openSUSE installer there are two manual methods available: 

The Guided Setup option starts out with the proposed installer partition layout and lets you make tweaks.
The Expert Partitioner option lets you take full control over how the hard drive(s) on your system are partitioned and used by Linux.
 
FIGURE 3-14: The Suggested Partitioning window.




If you'd like to take full control to customize your partition layout, click Expert Partitioner.
The Expert Partitioner window, shown in Figure 3-15, provides a graphical interface for you to add, change, and create disk partitions. Similar to the Ubuntu tool, you must select a filesystem type, along with a mount location for each partition you create.
One additional tool that the Expert Partitioner provides is a graphical representation of just how the partitions are formatted and mounted. Just click the Device Graphs in the System View pane to see the layout, as shown in Figure 3-16.
This gives you a bird's-eye view of just how the disk partitions are used in the proposed partition scheme. It's a great tool to help you organize the disk layout!
Click Accept to accept the final partition scheme.
 
FIGURE 3-15: The Expert Partitioner tool.


 
FIGURE 3-16: The Expert Partitioner graphical design layout.




Select your hardware clock setting and time zone, then click Next.
The Clock and Time Zone window, shown in Figure 3-17, allows you to not only select your time zone, but also advanced clock features, such as if your workstation sets the BIOS time using UTC instead of local time. If your network uses its own network time server, click Other Settings and you can configure openSUSE to use it rather than the default.
 
FIGURE 3-17: The Clock and Time Zone window.




Create a login ID, then click Next.
Up next in the installation process is the Login ID window, shown in Figure 3-18.
The Login ID you create in this process identifies you on the system. The openSUSE distribution uses a separate user account named root for administration. Besides creating your user account, there's also a check box to set the administrator account password to the same as your user account. If you remove the check, you're prompted to set a separate administrator password. That can come in handy if you're sharing the system with others who may need root access to install software packages.
 
FIGURE 3-18: The Login ID window.


One final setting — you must determine whether you want the system to automatically log you into your desktop, or to prompt for your login password.
 If you happen to be upgrading from a previous version of openSUSE, you can choose to import your user settings from the previous installation. While this isn't foolproof, it can help with migrating your account some.


Select Install to begin the installation.
The Installation Settings window, shown in Figure 3-19, summarizes all of your selections.
This is another place where using a full installation shines. You can click any category and make any changes necessary before you start the actual install. For example, if you click the Software title, you'll see the Software Selection and System Tasks window. In this window you can set exactly what software packages are installed (or not installed) on your workstation setup. You can also make changes to the boot loader, the network settings, and even if the system starts in graphical or text mode. Now that's power!
 
FIGURE 3-19: The Installation Settings window.


Once the installer finishes doing its thing, you're all set — you should have a fully functional openSUSE workstation! Now you're ready to move on to the next set of chapters, which dive into discussing the different desktop features in Linux so you can start working your way around the desktop. 







Chapter 4
Examining the GNOME Desktop

IN THIS CHAPTER
 The GNOME desktop history
 Examining the desktop
 Customizing your desktop
 Setting accessibility features

Some people like to characterize Linux as being an operating system built by nerds, exclusively for nerds. This instills visions of having to type cryptic commands to get anything done on your computer. However, that can't be further from the truth! Linux supports several graphical desktop environments that provide some of the most user-friendly interfaces available for desktop computers.
What can be a bit confusing, though, is that there's no one standard Linux graphical desktop. Linux is full of choices, and nowhere is that more evident than in the graphical desktop world. In Chapters 4, 5, and 6, I cover the most common Linux graphical desktop environments used by the popular Linux distributions. This chapter starts out the discussion by examining the GNOME desktop.

The History of GNOME
The GNU Network Object Model Environment (GNOME) desktop is (as you can suspect from its name) part of the GNU project, popular for creating and supporting many open source packages used in Linux (see Chapter 1). The initial version of GNOME became popular as the default desktop used by the popular Red Hat Linux distribution, one of the first commercial Linux distributions. It has since been adopted by many other Linux distributions, including Ubuntu.
However, GNOME's history hasn't been all rosy. While the original version of GNOME was popular, in 2011 the GNOME development team made a major change in version 3.
Instead of the standard graphical desktop environment that most people had grown to love and had been comfortable with, GNOME 3 incorporates a completely new paradigm for graphical desktops — using a consistent interface among different devices, such as laptops, tablets, and mobile phones. No matter what type of device you use the GNOME 3 desktop on, your user experience is the same.
The new design accomplished this by placing less emphasis on user interfaces that are awkward to use on mobile devices (such as selecting items from long drop-down menus) and more emphasis on user interfaces that you can scroll and click through (such as selecting items from a list of icons). While this made things easier for tablet and mobile phone users, this was perceived as an inconvenience for desktop and laptop users. The new version of GNOME sent the Linux world into a tizzy, and even produced some new graphical desktop environments based off of the original GNOME version (as you can see in Chapter 6).
However, over time people became more comfortable with the desktop paradigm behind GNOME 3, and it's now become (mostly) accepted in the Linux world. The following sections walk through the major points of the GNOME 3 desktop, and how you can customize things to your liking.
 The user interface of the GNOME 3 graphical desktop is now referred to as the GNOME Shell. This gets somewhat confusing, and you may see GNOME 3 and GNOME Shell used interchangeably in documentation and books. I prefer to just use GNOME 3 so as not to confuse it with the original GNOME desktops or the command line shell.

Breaking Down the GNOME Desktop
Simplicity has become the hallmark of the GNOME 3 desktop environment. There aren't any long menus from which you need to select things from, nor do you need to go digging through folders looking for files, but getting comfortable with the new interface may take some time. This section walks through the basic features of the GNOME 3 desktop so you can maneuver your way around.

Menus, please!
At the top of the GNOME 3 desktop is a panel (called the top bar) that when the desktop first opens, contains just three menu selections, as shown in Figure 4-1.
 
FIGURE 4-1: The default GNOME 3 desktop as used in Ubuntu.


The three menu items are: 

Activities
Calendar and notifications
System menu
The following sections walk through what each of these menus contains.

The Activities menu
The Activities menu is how you get to your applications and check the status of any running applications. You can open the Activities menu using three different methods: 

Click the Activities menu item in the top bar.
Move your mouse pointer to the top-left corner of the desktop (some Linux distributions, such as Ubuntu, have this feature disabled).
Press the Super key on your keyboard (the Windows logo on PCs).
When you open the Activities menu, you see the activities overview layout, as shown in Figure 4-2.
 
FIGURE 4-2: The activities overview in Ubuntu.


The activities overview provides one-stop shopping for getting to all your applications, and viewing the status of any applications already running on the desktop. It consists of three main items: 

The dash
The windows overview
The workspace selector
I dig deeper into the activities overview in the "Exploring the Activities Overview" section later on.

The Calendar menu
The Calendar menu item produces what you'd expect — a calendar, as shown in Figure 4-3. But wait, there's more!
To the left of the calendar is the notification area. The notification area displays any upcoming calendar events that you have scheduled. GNOME 3 allows you to sync your calendar with an online calendar from many popular applications, such as Google, Facebook, and Microsoft, providing a great way to see all your calendar events in one place!
 
FIGURE 4-3: The GNOME 3 calendar menu.


Besides keeping up with your appointments, the notification area also displays any messages produced by the system, such as when there are upgrades and patches available to install, or whether your system is running low on disk space. The Do Not Disturb slider allows you to disable system messages from popping up on your desktop.

The system menu
At the far right-hand end of the top bar is the system menu. The system menu displays icons showing the status of several features on your system, depending on what hardware is available on your system. This menu is highly customizable, and often differs slightly between different Linux distributions. The system menu options could include: 

A network connection status
A sound card status
A display brightness setting
A battery status
The status of the logged-in user
The reboot options
To get to these menu options, click the down-arrow icon in the system menu. A drop-down menu of system options appears, as shown in Figure 4-4.
 
FIGURE 4-4: The GNOME 3 system menu.


If your PC has a sound card, you can adjust the volume or mute the speakers, and if your PC has a display that's dimmable there's also a setting to adjust the display brightness.
Next you see a menu that allows you to manage your network connection, if available. If your PC uses a wireless network connection, a drop-down menu allows you to select the wireless network to connect with, along with other network settings. If your PC uses a wired network connection, you see options to disable the network connection, and change the network settings. There are a lot of things to deal with when it comes to network settings, so I dive deeper into that in Chapter 9.
As part of the system menu, most Linux distributions include an option to get to the system settings — usually as either a menu option, or as an icon at the bottom of the system menu. When you select either option the System Settings dialog box, shown in Figure 4-5, appears. It allows you to customize your desktop experience to your liking. I discuss this more in the "Customizing Your Ride" section, later in this chapter.
Also in the system menu is an option to manage the currently logged in user account. Some Linux distributions customize this option, so your result may vary from what's shown in Figure 4-4. In Ubuntu, you can only lock the desktop for the current user. Fedora Linux allows you to also log out from this menu, or go to the Settings dialog box for the user account.
At the bottom of the system menu is the option to power off or log out of the system. The power off menu option provides another menu, allowing you to choose to either restart, shut down, or suspend the system. 
FIGURE 4-5: The Settings dialog box.




Application menu
While I mentioned that only three menus are visible in the top bar by default, a fourth menu appears at times. When you launch an application in the GNOME 3 desktop, a separate menu appears in the top bar. This is the application menu, which contains options related to the application. Instead of placing the application menu in the application's window title bar, GNOME 3 placed it in the top bar, separate from the application window. This can take some getting used to.
The options available in the application menu differ depending on the application that you have open on the desktop. Most applications provide options to allow you to open a new window of the application, or quit the existing window. Some applications also provide other application-specific features as well.

The desktop
In many graphical desktop environments, the desktop is king. Often just about everything you do happens from an icon on the desktop. Have a favorite application? Create an icon on the desktop to launch it. Have a file that you need to open on a daily basis? Create an icon on the desktop to open it. Plug in a new USB stick? The system creates an icon automatically on the desktop to access it.
The GNOME 3 paradigm has changed that a bit. Desktop icons are no longer the preferred way to launch applications, store files, or access removable media. In fact, many Linux distributions don't even bother creating any icons on the desktop at all by default! However, if you have trouble breaking old habits, GNOME 3 does still allow you to create and use icons on the desktop.
The Ubuntu Linux distribution does create two desktop icons by default: 

The Home folder: Opens the Files file manager program and defaults to the user account Home folder.
The Trash folder: Opens the Files file manager program and defaults to the Trash folder for the user account.
You can do a few things from the desktop. Right-click an empty area on the desktop and a pop-up menu opens, as shown in Figure 4-6.
 
FIGURE 4-6: The GNOME 3 desktop pop-up menu.


The desktop pop-up menu provides you with a few different choices: 

New Folder: Create a new folder under your user account's Desktop folder.
Paste: Paste any copied files or folders to the desktop.
Show Desktop in Files: Open the Desktop folder using the Files file manager program (see Chapter 8).
Open in Terminal: Open the Desktop folder using the Terminal command line interface (see Chapter 16).
Change Background: Modify the picture used for the desktop background.
Display Settings: Change the orientation and resolution settings for the display.
Settings: Access the Systems setting tool.
This gives you quick access to a few of the system settings related to the desktop, as described later in the "Customizing Your Ride" section.
 Many graphical desktops allow you to create new files by right-clicking the desktop, unfortunately GNOME 3 isn't one of them. If you want to create an icon for a file on your desktop, you need to store the file in the Desktop folder, located in your Home folder, using the Files file manager program (see Chapter 8).

Exploring the Activities Overview
The activities overview area is what has replaced the Application menu system used in older versions of GNOME, and is what has made GNOME 3 so controversial. While it was designed to be easy to navigate around in, the overall structure and layout can be confusing, especially if you're already comfortable using the old menu system. This section walks through the three features of the activities overview — the dash, the windows overview, and the workspace selector.

The dash
The dash is a set of application icons that appears on the left-hand side of the activities overview by default. Some Linux distributions have opted to display the dash by default, so it appears on the desktop without you having to do anything, as shown in Figure 4-7.
Other Linux distributions have opted to keep the dash as part of the activities overview section, so you need to click the Activities menu option in the top bar to see it.
Either way, once the dash appears it contains several icons, as explained in the following sections.
 
FIGURE 4-7: The dash as shown in an Ubuntu desktop.



Favorites
While parents aren't supposed to play favorites, Linux users often do. The dash provides an area where you can have icons that launch your favorite applications, making it easy to start commonly used applications.
Most Linux distributions provide a handful of default applications as favorites to help you get started with things. In Ubuntu the favorites are: 

The Firefox web browser
The Thunderbird email client
The Files file manager program
The RhythmBox audio player
LibreOffice Writer for word processing
The Ubuntu software application
The Ubuntu desktop help guide
Clicking a favorite icon launches the corresponding application. Right-clicking a favorite icon produces a menu with the following default options: 

Open a new window for the application
Application-specific options, such as to open a private browsing window for Firefox, or to create a new document for Writer
Remove the favorite icon from the dash
Some applications provide extra options in the dash menu so you can control features within the application directly from the dash icon, while others don't. You need to consult the documentation for a specific application to see what options you have available for that application.

Running applications
Besides icons for your favorite applications, the dash also shows icons for any desktop applications that are currently running. When an application is active a dot appears next to the application icon in the dash.
Right-click the icon for a running application and a small pop-up menu offers a few choices of things you can do: 

Open the application window, or a specific window of the application if the application has more than one window open.
Open a new window for the application.
Add the application to the dash as a favorite if it's not already a favorite.
When you exit an application, its icon automatically disappears from the dash (unless it's an application marked as a favorite).

Removable media
When you insert a removable media device (such as a DVD or USB stick) in your PC an icon appears in the dash for that device, as shown in Figure 4-8.
 
FIGURE 4-8: The dash icon for a removable media device after inserting a USB stick.


Click the device icon to open a Files window to view the contents of the removable device. When you're ready to remove the device, right-click the device icon and select the Eject menu option.

Application overview icon
When you click the application overview icon in the dash (the grid icon at the bottom of the dash), you see the application overview in the center of the desktop, as shown in Figure 4-9.
 
FIGURE 4-9: The application overview area.


The application overview area displays icons for all the currently installed desktop applications. You can scroll down the application overview area to see additional pages if more icons are present. At the bottom of the application overview area are options to show all the application icons, or just the frequently used application icons. Selecting the frequently used applications reduces the application icons down to just the applications you've recently used.
In the application overview area, click an application's icon to launch it in the desktop. If you'd like to add the application to the favorites area on the dash, right-click the icon in the application overview and select Add to Favorites.
 Quite possibly the most versatile feature of the application overview is the Search text box at the top. The Search text box allows you to search not only for applications, but documents located in folders. This is a great tool for finding misplaced documents!

The windows overview area
At the middle of the activities overview is the windows overview. The windows overview provides quick access to managing active applications on the desktop. It displays a set of thumbnail images of all the application windows currently running on the desktop. When you click an application's thumbnail in the windows overview, the running application on the desktop comes to the forefront. You can also terminate a running desktop application by clicking the red circle that appears at the top right-hand corner of the thumbnail when you hover your mouse over the thumbnail.
A search text box is also at the top of the windows overview area (refer to Figure 4-2). Just like in the applications overview area, here you can enter an application name, filename, or resource name to look for on your system. As you type, GNOME searches a preset group of locations looking for matching applications and files, and displays a list of matching results in the search area. When you see what you're looking for, just click its icon to launch it. This is a great way to access files you have buried in your folders!
Besides the windows overview there is another way to switch between running applications on the desktop: 

Press the Super key (the Windows key on Windows PCs) and the Tab key.
The window switcher appears in the middle of the desktop, showing icons for each of the currently running applications on the desktop.

Hold down the Super key, and press the Tab key to switch between the running applications.
Release the Super key when you highlight the application you want to switch to.
 After you open the window switcher using the Super + Tab key combination, you can select which application to switch to directly by clicking the application icon with the mouse.

Working with workspaces
At the far right-hand side of the activities overview is the workspace selector. A concept that's been around for quite a while is the virtual desktop feature. Virtual desktops allow you to define separate desktop areas and open application windows in the separate desktops. That allows you to group applications together and switch desktops instead of having lots of open windows all on the same desktop.
GNOME 3 implements virtual desktops, but with a bit of a twist. Workspaces are part of the same desktop; they just place application windows into separate groups to make it easier to manage them. You control this using the workspace selector.
When you first open the activities overview the workspace selector is reduced in size, but if you hover the mouse pointer over the area it appears in full, as shown in Figure 4-10.
 
FIGURE 4-10: The workspace selector in Ubuntu.


By default, Ubuntu creates a single default workspace and places any applications you start in that workspace. You can move an application into a new workspace by following these steps: 
Open the activities overview.

Click and hold the application thumbnail in the windows overview area that you want to move.
The mouse pointer turns into a hand.

Drag the application thumbnail to the workspace selector area.
When you move the hand pointer to the workspace selector, a new workspace window appears in the selector.
Drop the application thumbnail into the new workspace area.
After you have applications in two or more workspaces, you can easily switch between which workspace is active on your desktop. There are two methods for doing that: 

Open the activities overview, and then select the workspace from the workspace selector.
From the desktop, press the Super + Page Down keys to move to the next lower workspace, or the Super + Page Up keys to move to the next higher workspace in the rotation.
If you're a true multitasker and have lots of applications open on your desktop, this provides an easy way to help keep things organized!

Customizing Your Ride
I mentioned at the beginning of this chapter that Linux is well known for providing choices when it comes to graphical desktops. What I didn't mention is that even after you choose a specific desktop to use you still have lots of choices available to customize your desktop experience.
This is done with the desktop settings options in the general Settings tool for GNOME 3. You can get to the Settings tool either by right-clicking an empty area on the desktop and selecting Settings, or by selecting the Settings option in the system menu discussed in the earlier "Menus, please!" section.
You can customize lots of things with the Settings tool. For now, I just discuss the different desktop-related settings you can use to customize your GNOME 3 desktop experience.

Background
Each Linux distribution's developers select a default desktop background image to help identify their distribution. Fedora uses a different stylized color scheme for each release, while Ubuntu uses some type of stylized image of the animal the release is named after.
However, you're not stuck with those desktop backgrounds. You can easily change your desktop background; just follow these steps: 

Open the Background options in the Settings tool.
You can do this by right-clicking the desktop and choosing Change Background. Or, if you're already in the Settings tool, select Background in the left-hand menu.
Each Linux distribution selects its own set of images to include by default.

Scroll through the available images and select one.
 If you have your own image to use, click the Add Picture button at the top of the Settings tool.
Each user on the system can select his or her own desktop background, so if you have to share your PC with someone else you're not stuck having to stare at a picture of the other person's favorite pet all day!

Appearance
Not only can you change the desktop background, but you can also change the coloring used in application windows themselves. From the Settings tool, click the Appearance option in the left-hand menu. The Appearance window appears, as shown in Figure 4-11.
In the Window Colors section, the Appearance option lets you set the shading of application windows: Choose light, standard, or dark.
Beneath that are some settings you can change to control the dash (referred to as dock in the Settings). If your Linux distribution displays the dash on the desktop, you can choose to auto-hide it when an application wants to go to full screen mode. This feature allows applications to push the dash out of the way and take up the full desktop viewing area.
From here you can also change the size of the application icons that appear in the dash (both the favorites and running applications), as well as set the side of the desktop that the dash appears when you open the activities overview (left, right, top, or bottom). 
FIGURE 4-11: The Appearance window.




Displays
Trying to get graphical desktops to work with a myriad of different video cards and monitors can be a nightmare. Most Linux distributions try their best to automatically detect your video card and monitor at installation time and set the desktop resolution, but they're not always accurate, or don't recognize your specific hardware setup. If that's the case often the installation script falls back to a default setting, which may not be optimal for your setup.
If that's the case for you, there's still some hope in that you can customize the display settings for the GNOME 3 desktop. In the Settings tool, click the Displays entry in the left-hand menu, and you see the different options you can change for your display, as shown in Figure 4-12.
What you see here mostly depends on your monitor setup. At a minimum you should see three options to change: 

Orientation: How the monitor is oriented in relation to the keyboard. With flat-screen monitors you have a lot of mounting options — such as setting a monitor on its side. If that's the case, you can change the screen orientation to Portrait here. If your monitor has to be mounted upside down, just select the Landscape (flipped) option.
Resolution: Here's where you can change the resolution or aspect ratio settings for your monitor. You can play around with different settings to find one you're comfortable with.
Fractional Scaling: This setting allows you to scale the size of windows and text within the desktop. Enabling this feature allows you to set a fractional value, such as making objects 125% or 200% larger than normal.
 
FIGURE 4-12: The Displays settings in GNOME 3.


If you have multiple monitors connected to your PC, this is where you can control how they behave. When GNOME 3 detects multiple monitors, it expands the Displays settings to include settings for the multiple monitors, as shown in Figure 4-13.
First thing you should do is choose a display mode. There are three: 

Join Displays: By default, GNOME 3 uses the second monitor to extend the desktop and places the second monitor on the right side of the primary monitor (if you move the mouse cursor off the right-hand side of the desktop, it enters the desktop area of the second monitor). If your second monitor is physically located elsewhere, you can move the second monitor icon to any side of the primary monitor icon to reflect its physical location. Figure 4-13 shows my secondary monitor moved to the left-hand side of the primary monitor. If necessary, you can even select which monitor is the primary monitor.
Mirror: Instead of extending the desktop area with the second monitor you can choose to just mirror a single desktop on all the monitors connected to the PC. Whatever you do on the primary desktop mirrors on any other monitor desktop. This is handy when making presentations.
Single Display: The third option available is to treat each monitor as a separate display, not extending the primary desktop.
 
FIGURE 4-13: The Displays settings with support for multiple monitors.


After you've made your selection from the appropriate button at the top of the Displays setting, the additional options for the monitors change accordingly.

Mouse and touchpad
The mouse and touchpad settings are another area where the installation scripts try to automatically detect what's needed for your specific hardware, but don't necessarily always get them right. Click the Mouse & Touchpad option in the left-hand of the Settings tool to customize your mouse and/or touchpad settings, as shown in Figure 4-14.
The settings allow you to select which mouse button is the primary button (left-click for right-handed orientation, and right-click for left-handed orientation).
 
FIGURE 4-14: The Mouse and Touchpad settings options.


You can also set the mouse speed as you move it across the desktop, as well as to enable natural scrolling, which moves the content of a window instead of the entire window view.

A Closer Look at Accessibility Features
The GNOME 3 desktop includes several features that enable people with disabilities to operate applications on the desktop using alternative methods. These features include screen magnifiers (which enlarge areas of the screen), screen readers (which read text on the screen), and keyboard and mouse assistive features (such as sticky keys and slow mouse clicks). You can enable each feature as necessary.
You access the accessibility features from the Settings tool. Follow these steps to do that: 
Open the Settings tool.
Select the Universal Access option from the left-hand menu.
Enable the features you require for your environment.
When you select the Universal Access options in the Settings tool, you see lots of options to enable, as shown in Figure 4-15.
 
FIGURE 4-15: The Universal Access options available in Ubuntu.


The options are divided into four categories: 

Seeing: Options for enabling features for sight-impaired individuals
Hearing: Options for enabling features for deaf and hard-of-hearing individuals
Typing: Options for enabling assistive typing features
Pointing & Clicking: Options for enabling assistive features for using the mouse
The Seeing category includes these features: 

High Contrast: Makes windows and icons more vivid so they're easier to see.
Large Text: Use larger fonts for desktop text.
Cursor Size: Change the size of the cursor to make it easier to find.
Zoom: Enlarge specific areas of the screen to make it easier to read.
Screen Reader: Use the Orca voice program to read text on the screen.
Sound Keys: Produce an audible tone when keys are pressed.
The Hearing category includes just one feature — the ability to enable visual alerts when an alert beep is produced by the system.
The Typing category includes these features: 

Screen Keyboard: Display an on-screen keyboard when text can be entered.
Repeat Keys: Simulate multiple key presses when a key is held down.
Cursor Blinking: Make the cursor pointer blink to make it easier to find.
Typing Assist: Allows you to enable three separate typing features — sticky keys, slow keys, and bounce keys.
The Pointing & Clicking category includes these features: 

Mouse keys: Simulate mouse movement and clicks using keyboard keys.
Locate Pointer: Makes it easier to find the pointer on the desktop.
Click Assist: Simulate a double-click by either holding down the primary button or hovering the mouse pointer over a spot.
Double-Click Delay: Set the speed at which the mouse button is double-clicked to send the double-click event.
If you need to turn specific assistive features on and off frequently, the Universal Access settings also has a drop-down menu that you can enable in the system menu. Just enable the Always Show Universal Access Menu feature in the settings and an icon appears in the system menu, as shown in Figure 4-16.
 
FIGURE 4-16: The Universal Access quick menu.


When you click the menu the drop-down menu appears, allowing you to easily enable and disable specific features. 







Chapter 5
Examining the KDE Plasma Desktop

IN THIS CHAPTER
 Walking through KDE Plasma
 Setting up your workspace

In Chapter 4, you get to see how the GNOME 3 desktop works. This chapter discusses the "other" popular desktop in the Linux world — KDE Plasma. The KDE Plasma desktop environment provides a graphical interface to your Linux distribution using features commonly found in Microsoft Windows systems. It's available as a software package in Fedora, openSUSE, and Ubuntu, and is the main desktop used in Kubuntu, a Linux distribution based on Ubuntu, but focused on the KDE Plasma desktop. This chapter walks through the KDE Plasma desktop features, showing you how to work your way around the desktop and get the most from your workspace.

The KDE Plasma Desktop
KDE desktop was first released in 1996 as the Kool Desktop Environment, but these days it tries to be a little more sophisticated and prefers to be called just the K Desktop Environment (but it is still pretty "cool"). It quickly became popular among Linux beginners because it provides a Windows-like interface for your Linux desktop.
Besides the graphical desktop, the KDE community releases lots of other software applications, so to avoid confusion, starting with version 4.4 the KDE desktop has been called the KDE Plasma desktop, or just Plasma, to distinguish it from the other software projects the KDE organization produces. Figure 5-1 demonstrates the Plasma desktop used in the openSUSE Leap 15.1 Linux distribution.
 
FIGURE 5-1: The openSUSE 15.1 KDE Plasma desktop.


To find out more about the KDE project, take a look at the KDE website, which can be found at www.kde.org.
 As with everything else in Linux, the Plasma desktop layout is highly customizable, so what you have on your system may vary from what you see in the figures in this chapter. Don't panic; all of these features are there, and I show you just how to customize your desktop to suit your needs and desires!
The Plasma desktop contains three main components that you should become familiar with: 

The application launcher
The panel
The desktop
In the following sections, I walk through each of these components and see what they look like.

More menus!
You access the application launcher from a single icon on the far-left side at the bottom of the panel. Clicking the icon produces the entire application launcher layout, as shown in Figure 5-2.
 
FIGURE 5-2: The Plasma application launcher layout in openSUSE.


The bottom of the launcher includes five tabs, each containing a selection of menu items: 

Favorites: Icons for easy access to applications you frequently use
Applications: Submenus of program icons to launch programs on your system
Computer: Shortcuts to special locations on your computer
History: A list of the applications you recently ran, and the documents and folders you recently opened
Leave: Options for exiting the current desktop session
 Menu items that have an arrow to the right offer submenus. Open the submenus by clicking your mouse on that menu choice. Sometimes the submenus have their own submenus within, offering even more programs.

Favorites
The Favorites menu tab provides an area where you can place icons for applications you frequently use. Just navigate to a program entry in the Applications menu, right-click it, then select the Add to Favorites option. The openSUSE Plasma desktop provides seven entries for you in Favorites: 

Web Browser: The Firefox web browser (see Chapter 10)
Personal Information Manager: The Kontact calendar, contact, and email package (see Chapter 10)
Word Processor: The LibreOffice Writer word processing package (see Chapter 12)
File Manager: The Dolphin file manager program (see Chapter 8)
Configure Desktop: Opens the System Settings dialog box
Help Center: Opens the KDE user manual, which has great information about all things related to the Plasma desktop as well as other KDE software packages
Terminal: The Konsole command line interface tool (see Chapter 16)
 Remove entries from the Favorites tab by right-clicking the entry and selecting Remove from Favorites.

Applications
The Applications menu tab provides quick access to all the installed programs on your system. Obviously, the choices available here depend on what you have installed, but openSUSE uses some standard first-level menu items you may run into in your system. Table 5-1 describes these.

TABLE 5-1 Applications Menu Contents 
Menu Choice
What You Find
Games
Programs to kill some time
Graphics
Image manipulation programs
Internet
Programs for interacting on the Internet
Multimedia
Applications for handling audio and video files
Office
Programs for office-related tasks, such as word processing, spreadsheets, and presentation graphics
Settings
Utilities for configuring user-specific settings
System
Utilities for monitoring and setting system-wide features
Utilities
Various programs and utilities for handling small functions on your desktop and system

You may notice some duplication of effort in the first-level menu items. Not all Plasma systems use all of these menu options. Different distributions use different combinations of the menu items to provide a custom look and feel for their menu.

Computer
The Computer menu tab (described in Table 5-2) provides a quick way to jump to a specific location on your system to view files, plus quick access to some popular features. These are divided into three categories: 

Applications: Provides menu options for commonly used system applications, such as: 

KRunner: Produces a command line to start a program
Configure Desktop: Opens the System Settings tool for changing your desktop preferences
Info Center: Opens the KInfoCenter application, which provides information on your system hardware and desktop setup
Software Center: Opens the Discover software management application
Places: Provides links to open specific locations in the virtual directory in the Dolphin file manager program.
Removable Storage: Links to open any connected removable storage devices using Dolphin. If no removable storage devices are connected, this category is not shown.

TABLE 5-2 The Computer Menu Places Contents 
Menu Choice
What You Find
Home
View the contents of the user's Home folder.
Desktop
View the contents of the user's desktop folder.
Downloads
View the contents of the user's downloads folder.
Root
View the contents of the virtual directory structure.
Trash
View the items stored in the special Trash folder, and empty the trash.
Network
View any shares available on the local network.
Today
Use the Dolphin timeline feature to display files opened today.
Yesterday
Use the Dolphin timeline feature to display files opened yesterday.
Documents
Use the Dolphin search feature to display all documents under the user's Home folder.
Images
Use the Dolphin search feature to display all image files under the user's Home folder.
Audio Files
Use the Dolphin search feature to display all audio files under the user's Home folder
Video
Use the Dolphin search feature to display all video files under the user's Home folder.

The Places options use the Dolphin file manager to jump directly to specific locations within the virtual directory (discussed in detail in Chapter 8). A lot of location options are listed under the Places category; Table 5-2 shows a few that you may be interested in finding.
The Computer menu items also expand to include any removable media you insert into your workstation, such as a CD or DVD, or a USB memory stick. Just select that menu item to access files and folders on the removable media.

History
The History tab provides quick access to the things you've done recently, so if you're a creature of habit, this is the place to go! There are two sections in the History tab: 

Applications: Links to applications you've recently run
Documents: Links to folders you've recently worked in, or documents you've recently opened

Leave
There may be 50 ways to leave your lover, but there are only six ways to leave your desktop (at least without crashing your system)! The Leave tab provides seven options for exiting the desktop session, itemized in Table 5-3.
When you select an option from the Leave menu, a dialog box appears, prompting you for a confirmation. That helps prevent "oops" moments from happening!
 With all these different menu options, it can be cumbersome to find what you're looking for. To help out, the application launcher also provides a quick search query tool. It's somewhat hidden at the top of the menu under your username. Just click the text under your username and the search query tool appears (refer to Figure 5-2). You can enter text here to quickly find any related menu entries. The application launcher quickly returns any menu options that match the search term. Just click the menu item from the search results!

TABLE 5-3 The Leave Menu Components 
Menu Choice
What It Does
Lock
Lock the desktop and display a screensaver. To reenter the desktop, you must enter the password for the logged-in user.
Logout
End the current desktop session and return to the login screen.
Switch User
Suspend the current user's session, and allow another user to log in.
Suspend
Write the current session state to a disk file and put the system in a low-power mode.
Hibernate
Write the current session state to a disk file and turn off the computer. Only available when installed on a laptop.
Reboot
End the current desktop session and reboot the system.
Shut Down
End the current desktop session, halt all processes on the system, and power off the system.

 If you find that you're really not a fan of the application launcher format, you have more choices! Right-click the application launcher icon and select Alternatives. You're presented with other application launching menu systems, such as Application menu, which provides a more old-fashioned menu system, and Application Dashboard, which looks a lot like the GNOME 3 application overview system.

The panel
At the bottom of your Plasma desktop you'll see a line with a bunch of icons. This is called the panel. The panel contains widgets, or small programs that run on the panel to provide functions directly on the panel.
The layout of the Plasma panel is another feature that can be easily changed, so it often looks different in different Linux distributions. Usually, it's common for distributions to place the icon for the application launcher on the far-left side of the panel. (Which just so happens to be the same place that Microsoft Windows places its Start icon. I told you Plasma was kind to ex-Microsoft Windows users!)
On the openSUSE Plasma desktop (refer to Figure 5-1), after the application launcher icon are the following widgets on the panel: 

Pager: Allows you to switch between different virtual desktop workspaces
Task Manager: Displays thumbnail images for running applications
System Tray: Contains icons for utilities and system applications that run in background mode, such as the sound system, the Network Manager, and the clipboard
Digital Clock: Displays the current time
Panel Editor: Allows you to modify the panel layout and widgets
You can easily modify the panel layout to suit your likes. Just click the panel editor icon on the far-right side of the panel to put the panel in edit mode, as shown in Figure 5-3.
 
FIGURE 5-3: The Plasma panel in edit mode.


The edit mode panel contains icons for working with your panel. Table 5-4 shows what each of these icons does.

TABLE 5-4 The Panel Editor Features 
Feature
What It Does
Screen Edge button
Select which side of the desktop the panel appears on.
Height button
Select the height of the panel.
Add Widgets button
Add new widgets to the panel.
Add Spacer button
Add an empty space between widgets in the panel.
More Settings button
Access buttons to align the panel widgets, auto-hide the panel, or indicate if application windows can cover the panel.
Exit button
Exit the panel editor.
Left-side pointer
Set the location of the left side of the panel.
Right-side top pointer
Set the maximum location of the right side of the panel.
Right-side bottom pointer
Set the minimum location of the right side of the panel.

In panel edit mode, you can also move existing widgets around by dragging and dropping them, or remove existing widgets by right-clicking the widget icon and selecting the Remove option. With all these features, you can select just how your panel looks on your desktop!

The desktop
The desktop is possibly the most controversial feature in Plasma. It behaves significantly different from other desktop environments. The desktop in Plasma works more like an extension of the panel rather than a desktop. You can't place files, folders, or application icons in the Plasma desktop. Instead, you just place additional widgets.
However, that said, there's a trick you can use to make the Plasma desktop behave similar to the Windows desktop. One of the widgets you can use is the Folder View widget, which provides a Windows desktop-like area on your Plasma desktop. The default openSUSE Plasma desktop uses the Folder View widget to display the user's Desktop folder contents. (Refer to Figure 5-1.) Not all Linux distributions do that.
The Folder View area allows you to place files, folders, and application icons on your desktop within the defined Folder View area. Actually, you can create a folder view area for any folder on your system, but it's most common to create it for the Desktop folder in your Home folder (see Chapter 7). This is the default Folder View provided in the openSUSE Plasma desktop. Thus, items placed in the Desktop Folder View appear in the Desktop folder of your home area, just like the desktop in Windows.
Aside from the Folder View, the default openSUSE desktop only includes one other icon, the desktop toolbox, typically at the very top right-hand corner of the desktop. The desktop toolbox icon allows you to add additional widgets to your desktop, just like on the panel.
The Plasma desktop and panel both use the same widgets, so I take a closer look at the widgets next.

Using Widgets
The keys to the Plasma desktop environment are the widgets. Widgets are small applications that run on the desktop. Each widget provides a different utility or small program to use in your desktop. This section walks through how to add, remove, and get new widgets in your Plasma environment.

Adding widgets
The Plasma package provides lots of different widgets for you to use in both your panel and desktop. Clicking the Add Widgets button from the panel or desktop editor produces a list of the widgets currently installed on your workstation. Figure 5-4 shows what this looks like.
 
FIGURE 5-4: The Add Widgets menu.


Widgets that are already active on your desktop or panel have a mark next to them. Adding a new widget is as easy as selecting the desired widget and clicking the Add Widget button. Table 5-5 lists the widgets that are available by default in openSUSE.

TABLE 5-5 openSUSE KDE Widgets 
Widget Name
What It Does
Activities
Displays the activities manager.
Activity Bar
Displays individual activities so you can switch between them.
Activity Pager
Easily switch between activities.
Analog Clock
Displays a good ole round clock with hands!
Application Dashboard
A full-screen display of icons of the installed applications.
Application Launcher
Displays a tabbed menu for starting applications.
Application Menu
Provides an old-style menu of applications.
Audio Volume
Controls current volume settings for audio devices.
Battery and Brightness
Displays the charge status of your laptop battery as well as display brightness settings.
Binary Clock
The geek's time tool!
Calculator
Provides quick access to the KDE calculator.
Calendar
Displays appointments and events.
Clipboard
View the history of past items placed in the clipboard.
Color Picker
Allows you to capture the color values of any color on the desktop.
Comic Strip
Displays a daily comic strip.
Dictionary
For those times you just can't figure out how to spell a word.
Digital Clock
Displays the time in digital format.
Disk Quota
Displays details about disk usage.
Fifteen Puzzle
Quick entertainment for puzzle freaks.
Folder View
Provides a graphical display of a specific folder's contents.
Global Menu
Display a global menu bar at the top of the display.
Grouping Plasmoid
Group widgets together.
Hard Disk I/O Monitor
Monitor hard disk throughput.
Hard Disk Space Usage
Monitors hard disk space.
Icons-only Task Manager
Switch between running applications by using icons.
Input Method Panel
Displays a generic input method.
Kate Sessions
Launch and track sessions of the Kate editor.
KDE Connect
Displays notifications from devices using KDE Connect.
Konsole Profiles
List and launch Konsole terminal sessions.
Lock/Logout
Easy access to log out or lock your workstation.
Media Frame
Display pictures.
Media Player
Displays controls for multimedia players.
Memory Status
Displays the status of physical and virtual memory.
Minimize All Windows
Return to desktop by minimizing all open application windows.
Network Monitor
Display network usage.
Networks
Display available network connections.
Notes
Just like in real life — leave sticky notes for yourself all over your desktop!
Notifications
Display system notifications and jobs.
Pager
Allows you to quickly jump between workspaces.
Printers
List and manage printers.
QuickShare
Paste text/images to a remote server.
QuickLaunch
Launch favorite applications.
Search
Search for applications and documents.
Show Desktop
Show the Plasma desktop by minimizing running application windows.
Software Updates
Get and install software updates.
System Load Viewer
Displays CPU and memory status.
System Tray
Access hidden applications minimized in the system tray.
Task Manager
Switch between running applications.
Timer
Provides a countdown timer.
Touchpad
Displays current touchpad status.
Trashcan
Provides quick access to the Trash folder.
User Switcher
Quickly switch between users.
Wacom Tablet Settings
Hotplug and profile support for Wacom tablets.
Weather Forecast
Displays current weather information.
Web browser
Launch a web page from your desktop.
Window list
Displays a list of open application windows.

That's quite a collection of widgets available to play with! You can experiment with widgets by adding them to your panel or desktop, and then easily remove them if you don't find them useful.
Most widgets provide a simple control menu to modify the layout and behavior of the widget by either right-clicking the widget in the panel, or hovering your mouse pointer over the widget on the desktop. From this menu you can move the widget, remove the widget, or for some widgets, access a Properties dialog box to configure the widget.

Getting more widgets
Besides all of the standard widgets, you can even download more! Clicking the Get New Widgets button in the Add Widgets dialog box produces a drop-down box with two options: 

Download from Internet: Browse the online repositories for new widget packages.
Install from File...: Browse to a location on your workstation to install a new widget package from a file already on your workstation.
If your workstation is connected to the Internet (see Chapter 9), follow these steps to install new widgets from the Internet: 

Select the Download from Internet option from the Get New Widgets button.
The Plasma Add-On Installer opens, as shown in Figure 5-5.
The installer dialog box contacts the configured widget repositories and provides a list of available widgets. You can order the list of widgets by the ones with the most downloads, the newest ones, or the ones with the highest ratings. You can also select to show just the widgets you have installed. Just select the appropriate radio button to the right of the list.
 
FIGURE 5-5: The Add-On Installer.




Click the Install button for the widget you want to use.
The Add-On Installer automatically downloads the widget from the repository and installs it on your workstation.

Click the Close button to close the Add-On Installer.
The newly installed widget appears in the Add Widgets dialog box.
Select the new widget from the Add Widgets dialog box.
Click the Add Widget button to add the new widget to your desktop or panel.
After you've installed the new widget on your desktop or panel, you can access the control menu to manage the widget.

Plasma System Settings
With Plasma you can configure just about every feature in your desktop environment to your liking. The Plasma System Settings utility provides quick access to all of your configuration needs.
You start the Plasma System Settings utility from the Applications Launcher. In openSUSE, just select the Configure Desktop menu item from the Computer menu tab. The main System Settings dialog box, shown in Figure 5-6, appears.
 
FIGURE 5-6: The Plasma System Settings dialog box.


The dialog box contains six separate areas: 

Appearance: Access to most of the common "look and feel" features of the desktop.
Workspace: Manage how windows appear, and how you control windows on the desktop.
Personalization: Set custom actions for your user account, such as setting accessibility features, notifications, and connecting with online accounts.
Network: Control how your system connects to the network (see Chapter 9).
Hardware: Define new hardware devices such as monitors, keyboards, mice, and printers.
System Administration: Manage high-level features such as creating new user accounts, managing network services, and software repositories.
As you can see, there are lots of things you can customize in your Plasma desktop environment. However, oddly enough there's one more place where you can tweak things on your desktop.

Desktop Folder Settings
I mentioned that the desktop in Plasma really isn't a desktop, but actually another widget, called the Folder View. Because of that, the desktop settings are separate from the rest of the Plasma settings. There are, however, a few settings you can change for your desktop.
To access the desktop folder settings, right-click an empty space in your desktop and select Configure Desktop.
 Unfortunately, this Configure Desktop is different from the Configure Desktop option in the application launcher that launches the System Settings.
The Desktop Folder Settings dialog box, shown in Figure 5-7, appears.
 
FIGURE 5-7: The Desktop Folder Settings dialog box.


The Desktop Folder Settings allows you to customize a few different things related to the desktop: 

Wallpaper: Lets you choose what appears as the background of the desktop area
Mouse Actions: Allows you to set what actions each mouse button takes
Location: Determines what directory the desktop Folder View displays
Icons: Sets the properties of the icons displayed on the desktop
Filter: Allows you to filter out icons for specific types of files from the desktop display
Tweaks: Options for displaying the Desktop Toolbox and widget behavior
 These settings only apply to the desktop folder view; for settings related to desktop behavior, you need to go to the System Settings.

Accessibility Settings
While not overly obvious to find, Plasma does include settings to control desktop behavior for persons with disabilities. To access these settings, open the System Settings dialog box by selecting the Configure Desktop menu item in the application launcher, then select Accessibility in the Personalization section. The Accessibility Options dialog box is shown in Figure 5-8.
 
FIGURE 5-8: The Plasma accessibility settings.


The accessibility settings are divided into five tabs: 

Bell: Allows you to customize the bell sound, as well as provide a visual flash when an action activates the bell sound.
Modifier Keys: Set sticky key and locked key features.
Keyboard Filters: Enable slow keys and bounce keys features.
Activation Gestures: Set how to enable/disable sticky or slow keys features, as well as how to notify when those events happen.
Screen Reader: Activate a screen reader program, and set which screen reader program to use.
The Plasma accessibility features help level the playing field for those with disabilities to use the graphical desktop features. 







Chapter 6
Exploring Alternative Desktops

IN THIS CHAPTER
 The Cinnamon desktop
 Examining the MATE desktop
 The simplicity of the Xfce desktop

Chapters 4 and 5 walk through the GNOME 3 and KDE Plasma desktops, respectively. While these are by far the two most popular desktops used in Linux systems, they're not the only games in town. There are lots of graphical desktops to choose from in Linux, and just because the Linux distribution you selected uses one by default doesn't mean you're stuck with it. Every Linux distribution allows you to install an alternative desktop, providing you a wealth of options for how to interact with your Linux system.
This chapter walks through the basics of three additional graphical desktops you'll come across in the Linux world — Cinnamon, MATE, and Xfce. Hopefully, it gives you an idea of how other desktops work within Linux.

Spicing Things Up with Cinnamon
In Chapter 4, I mention that there was great angst in the Linux world with the release of the GNOME 3 desktop. Many hardcore Linux users were perfectly comfortable with the look-and-feel of GNOME 2, and the desktop paradigm change introduced by GNOME 3 upset their worlds.
This gave rise to some new desktops that were spin-offs from the original GNOME desktop. Cinnamon is one of those spin-offs. This section walks through the basics of the Cinnamon desktop.

History of Cinnamon
The Cinnamon desktop project was initiated in 2011 by the developers of the Linux Mint distribution as an alternative to GNOME 3. It uses much of the same background code as the GNOME 3 desktop project, but keeps the original look-and-feel of the GNOME 2 desktop, as shown in Figure 6-1.
 
FIGURE 6-1: The Cinnamon desktop as seen in Linux Mint.


The Cinnamon desktop in Linux Mint has many similar features to the Windows desktop: 

A single panel at the bottom of the desktop
An application launcher at the left-hand edge of the panel
A system tray at the right-hand edge of the panel
A desktop area where you can save folders and files
The Cinnamon application launcher was designed to be similar to the old GNOME 2 menu system. I dig deeper into that in the next section.
 Your specific Linux distribution's Cinnamon desktop may vary slightly from what's shown in Figure 6-1. With Cinnamon you can move the panel to any side of the desktop, and you can even have multiple panels. Just right-click an empty place on the panel and select the Move option to move the panel, or the Add Panel option to create additional panels.

Looking at the menu
The Cinnamon application launcher, called simply the Cinnamon Menu, provides quick access to applications and directories on the system. Figure 6-2 shows the default menu layout as seen in Linux Mint.
 
FIGURE 6-2: The Cinnamon Menu used in Linux Mint.


There are four main sections contained in the Cinnamon Menu: 

A list of Favorites on the left-hand side
A list of categories in the middle
A detailed list of applications that match the category selected from the middle
A Search text box at the top to help search for files, directories, or applications
The default Favorites provided in Linux Mint are: 

Firefox web browser
Software Manager to install and remove applications
System Settings to manage desktop settings
Terminal to provide a command line interface
Files to browse files and folders
Lock Screen to lock the current desktop session
Logout to leave the current session
Quit to shut down or reboot the computer
Next to the Favorites are the application categories, listed in Table 6-1.

TABLE 6-1 Application Menu Categories 
Category
Description
All Applications
Lists all applications installed on the system
Accessories
Simple GNOME utilities such as the calculator, document viewer, and disk viewer
Graphics
Graphical manipulation applications
Internet
Applications for connecting online, such as Firefox and Thunderbird Mail (see Chapter 10)
Office
The LibreOffice productivity applications (see Chapter 12)
Sound & Video
Video and audio file playing applications
Administration
Applications for managing your Linux system
Preferences
Allows you to change desktop settings
Places
Uses the Nemo file manager to display directories
Recent Files
Lists recently opened documents

As you hover your mouse pointer over each category, the list of applications shown in the right-hand column changes appropriately. Just click the icon you need to launch the application.
 You can modify the Cinnamon menu layout by right-clicking the menu icon in the panel, and selecting Configure. From the Configuration dialog box, click the Menu button at the top to alter the menu behavior and menu items. You can add and remove menu items, as well as set whether icons are displayed in the menu or not.

Changing settings
The Cinnamon desktop allows you to customize lots of features from the System Settings dialog box, accessed from the application launcher. The System Settings dialog box layout is shown in Figure 6-3.
 
FIGURE 6-3: The System Settings dialog box in Cinnamon.


There are four sections in the dialog box: 

Appearance: Controls how the desktop looks, such as the background, fonts, and window themes.
Preferences: Allows you to set features of the desktop, such as accessibility features, how the panel looks, and the use of hot corners.
Hardware: Sets the display, printer, and network features.
Administration: Manage user accounts, software sources, and the firewall.
The Preferences section is where you can really go to town customizing your desktop environment. Table 6-2 details the different items you see in Preferences.

TABLE 6-2 The Cinnamon Preferences 
Item
Description
Accessibility
Enable accessibility features such as larger fonts, screen readers, keyboard assists, and mouse assists.
Account Details
Manage your user account, such as changing the password or adding a picture.
Date & Time
Define the date and time format, as well as the time zone settings.
Desktop
Control what icons appear on the desktop.
General
Settings related to the video compositor used by the graphical manager.
Hot Corners
Define applications to launch when you place the cursor in a corner of the desktop.
Input Method
Define how to input special and foreign characters not available on the keyboard.
Languages
Define the language and format to use for time, currency, and characters.
Online Accounts
Configure access to your online accounts or calendars and email.
Preferred Applications
Define applications to launch when specific actions are required, such as a web browser, email client, or multimedia player.
Privacy
Set the duration for which the Recent Files menu option tracks opened files.
Screensaver
Define when the screensaver should kick in, and how it behaves.
Startup Applications
Define what applications start when the desktop opens.
Windows
Configure how application windows look and behave.
Workspaces
Configure how Cinnamon handles multiple virtual workspaces.



Adding more spice
The Cinnamon desktop and panel both allow you to add widgets (called spices) to provide additional functionality to your desktop. To add spices to the desktop, right-click anywhere on the desktop area and select Add Desklet. You see a list of currently available desklet spices, plus a tab that allows you to download even more.
Similarly, when you right-click the panel area and choose Applets you see a selection of applets you can add to your panel(s), as shown in Figure 6-4.
Applets that appear with a checkmark are already installed. Some applets allow you to configure their behavior, as indicated by the gear icon next to them. 
FIGURE 6-4: The list of panel applets available in Linux Mint.




Working with MATE
Another popular GNOME spin-off is the MATE desktop environment. It has many of the same features as Cinnamon, but with some twists. This section walks through the components of MATE, and how to customize them to your liking.

The history of MATE
The MATE (pronounced "ma-tay," after the South American plant) desktop was also created in 2011 as a result of the GNOME project's switch to GNOME 3. It was created by a developer for the Arch Linux distribution, but has also gained popularity as a desktop alternative in other Linux distributions. Figure 6-5 shows the default MATE desktop in the Fedora MATE spin.
In many ways, the MATE desktop keeps the basic GNOME 2 desktop layout: 

A top panel that includes three separate menus instead of just one: 

Applications: Provides access to all the installed graphical applications on the system.
Places: Provides access to various directories, such as Home, Documents, Downloads, and any network drives.
System: Provides access to system preferences, administration, and shutdown features.
A bottom panel that includes three main sections: 

Show Desktop icon: When clicked, minimizes all open windows.
Running applications: Displays icons and titles of all open windows on the desktop.
Workspace Switcher: Allows you to change the active workspace area displayed on the desktop.
A system tray at the upper right-hand corner of the desktop, including icons for the time and date, network status, and sound card status.
A desktop area where you can save folders and files, and where you can create icons for files, directories, and applications, just like the old GNOME 2 desktop did. It also has several icons for favorite applications to provide quick access to often-used applications. 
FIGURE 6-5: The default MATE desktop in Fedora MATE.




Looking at the menu
As discussed in the previous section, the default menu setup used in Fedora MATE creates three menu entries on the top panel. The Applications menu is shown in Figure 6-6.
 
FIGURE 6-6: The Applications menu as seen in Fedora MATE.


The Applications menu provides quick access for launching any graphical application installed. It breaks the applications into eight categories, as outlined in Table 6-3.
As you add new software packages using the software manager (see Chapter 15), they automatically appear in the Applications menu.
TABLE 6-3 The MATE Applications Menu Entries 
Category
Description
Accessories
Small utility programs such as clocks, calendars, and text editors
Education
Educational software packages geared toward learning
Graphics
Graphical software packages for viewing and editing images
Internet
Packages for accessing Internet features such as browsers and email clients
Office
The LibreOffice office productivity packages
Sound & Video
Packages for playing and editing audio and video files
System Tools
Packages for managing the Linux system
Universal Access
Packages that provide accessibility features



Changing desktop settings
As with any other graphical desktop environment in Linux, you're able to change just about everything in the MATE desktop layout. To do that, you need to go to the Control Center. You can get there from the System menu in the top panel. The main Control Center dialog box is shown in Figure 6-7.
 
FIGURE 6-7: The MATE Control Center.


The Control Center divides the settings into six main sections: 

Administration: Set features such as software management, printing, firewall, and login window.
Hardware: Manage hardware features such as the sound card and power management.
Internet and Network: Configure advanced network settings.
Look and Feel: Set the appearance of windows, pop-up windows, and the screensaver.
Personal: Enable accessibility features, preferred applications, and applications to run at startup.
Other: Set character display for special characters.
 The Appearance settings in the Look and Feel category allow you to change the background and theme of the desktop. You can also get to this location directly by right-clicking an empty place on the desktop and selecting Change Desktop Background.

Applets
Similar to Cinnamon, MATE also provides applets that you can add to any of the panels on the desktop from the Add to Panel dialog box shown in Figure 6-8.
 
FIGURE 6-8: The Add to Panel dialog box in MATE.


To add a new applet, follow these steps: 
Right-click an empty place in the panel, and then choose Add to Panel to open the Add to Panel dialog box.
Click the applet you want to add.

Click the Add button.
The applet appears in the main panel.
Right-click the applet and select Move.
Move the mouse pointer to reposition the applet on the current panel, or point to another panel to move the applet to that panel. Click the location where you want the applet to reside.

The Xfce Desktop Interface
While the GNOME 3, KDE Plasma, Cinnamon, and MATE desktops are very fancy, they all require quite a bit of computing resources to operate. One of the original selling points of Linux is that it could run on just about any old PC you had laying around. Unfortunately, with those desktops, that's not always the case.
However, other graphical desktop environments are less resource-intensive, and can indeed run on just about anything. The Xfce desktop is one such desktop. This section explores the features of the Xfce desktop, and shows how you can customize it.

History of Xfce
The Xfce desktop is actually one of the older desktop packages in the Linux world, created in 1996 by Olivier Fourdan as an open source replacement of the (at then) commercial Common Desktop Environment (CDE) used in Unix. Because it was created at a time when x486 computers ruled the world, it doesn't take many resources to run Xfce, and that's still true today.
Because of its lightweight requirements, the Xfce desktop is popular in Linux distributions oriented toward older hardware, or less-powerful hardware such as devices that use the ARM processor chip. Figure 6-9 shows the default Xfce desktop used in the MX Linux distribution.
 
FIGURE 6-9: The Xfce desktop in MX Linux.


The key to Xfce is simplicity. The desktop contains two elements — a single panel (in MX Linux it defaults to the left-hand side of the desktop), and the desktop area. The Xfce panel uses applets to provide different features. The default panel setup in MX Linux contains several applets by default: 

Action button: Provides a pop-up window to log out, restart, or shut down the system
Digital clock: When clicked brings up the Orage calendar application
Active windows area: Displays icons for open application windows on the desktop
Favorites: Icons for quickly launching favorite applications
Notification area: Icons for showing the status of various applications, such as the network, sound, and software update applications
Pager: Allows you to switch between workspaces
Whisker menu: Provides access to applications
You'll notice that many of the same features found in the "big name" graphical desktops are available in Xfce. It's amazing what they can do with a minimal amount of memory requirements.

The Whisker menu
The Whisker menu (named because the mascot for Xfce is a mouse) provides quick access to all the graphical applications on the system. Figure 6-10 shows the default Whisker menu provided in MX Linux.
At the top of the menu you find the user account that you're logged in as, along with four icons: 

Settings Manager: Brings up the Settings Manager dialog box. (See the "Changing Xfce settings" section.)
Lock: Locks the desktop with a screensaver.
Switch user: Keeps the current user account logged in and allows another user to log in.
Log out: Displays a dialog box to log out, restart, or shut down the system.
 
FIGURE 6-10: The Xfce Whisker menu in MX Linux.


Under the user account is a search text box, allowing you to enter the name of an application to quickly display matching application icons. Just click the application icon to launch the program.
At the bottom of the Whisker menu is the applications menu area. Similar to other menu systems, there are two sections. One the right-hand side is a list of categories, and on the left-hand side is a list of programs within the selected category. Table 6-4 outlines the different categories used in the MX Linux Whisker menu.

TABLE 6-4 The Whisker Menu Categories 
Category
Description
Favorites
Applications marked as favorites for quick access
Recently Used
List of recently launched applications
All Applications
Complete list of all graphical applications installed
Accessories
Simple utilities such as calculator and text editor
Development
Applications for software development
Games
Games for when you're bored
Graphics
Graphical image viewing and editing software
Internet
Applications for browsing, email, and other network functions
Multimedia
Play audio and video files
MX Tools
Specialized tools for the MX Linux environment
Office
LibreOffice office productivity applications
Settings
Quick access to specific settings in the Settings Manager program
System
Disk, printer, and software manager programs

You can customize the Whisker menu by right-clicking the menu icon and selecting Edit Applications. You can then change existing entries and add new ones!
 You can also quickly access the Whisker applications menu by right-clicking in the desktop area and selecting Applications.

Changing Xfce settings
As you would expect, the Xfce desktop allows you to customize things to your liking. To do that you use the Settings Manager dialog box, shown in Figure 6-11.
 
FIGURE 6-11: The Xfce Settings Manager dialog box.


To open the Settings Manager, click the Whisker menu icon in the panel, and then click the Settings Manager icon at the top of the menu area.
The Settings Manager is a one-stop place to configure most of the things you need to customize in Xfce. There are four separate sections in the dialog box: 

Personal: Customize the desktop theme and appearance.
Hardware: Manage hardware devices such as printers, the display, and network connections.
System: Set system-related items such as the firewall, the Samba server to share directories with Windows clients, and set accessibility features.
Other: Odds and ends such as an ad blocker and Adobe Flash settings.
 Notice that in Xfce you set the accessibility features in the System section of the Settings Manager. That's somewhat different from most graphical desktops.

Applets
A surprise feature of the Xfce panel is the ability to add applets. You wouldn't expect such a feature from a bare-bones graphical desktop environment, but Xfce provides quite a few fancy applets that you can add to the panel. Follow these steps to add a new applet: 

Right-click an empty spot on the panel.
A pop-up menu appears, allowing you to move applet icons, remove them, or add new ones.
Hover over the Panel menu option.

Select Add New Items from the menu.
The Add New Items dialog box appears, showing a list of the applets available to add, as shown in Figure 6-12. From here you can also add an Application Launcher icon, or add a separator to produce a blank space between applet icons in the panel.
 
FIGURE 6-12: The Xfce Add New Items dialog box.



Find the applet you want to add, and then click the Add button.
Right-click the app icon in the panel, and then select Move.
Move the applet icon to the location on the panel where you'd like it to stay.
Before long you can have your Xfce desktop customized to look and behave just like the fancier GNOME 3 or KDE Plasma desktop environments! 








Part 2
Getting Up to Speed with Linux

IN THIS PART...
Discover where various things are stored in your Linux filesystem.
Navigate the Linux filesystem like an expert.
Connect your Linux computer to the Internet.








Chapter 7
Getting to Know the Linux Filesystem

IN THIS CHAPTER
 Discovering your way around the filesystem
 Finding your removable media
 Understanding filesystem permissions

One of the most frustrating things about mastering a new operating system can be figuring out where it keeps files. Instead of keeping all important system files in a single directory, such as the C:\Windows directory in Microsoft Windows, Linux follows the lead of its UNIX cousins and spreads out things a bit more. Although the Linux and Windows setups involve different methods, they are both logical, although it may not feel that way until you understand where to look.
After taking you on a tour of where to find things, this chapter shows you how to work in your filesystem on the command line. Reading this section isn't mandatory if typing commands gives you heart palpitations, but it can be handy if you need to fix something later, and some people just like to know how to do these things.

Pieces of the Puzzle
It helps to understand the lingo before getting started. A lot of this will be familiar to you from other operating systems such as Microsoft Windows, but there are some differences that you'll need to get used to as well. To start, the word "filesystem" is actually used in more than one way. The general use (and what I am typically referring to throughout the book when I use this term) means "the files and directories (or folders) you have access to right now."
The first major difference to be aware of is that Linux uses a forward slash (/) between directories, not the backslash (\) that Windows does. So, the file hosts in the directory etc is /etc/hosts. Files and directories can have names up to 256 characters long, and these names can contain underscores (_), dashes (-), and dots (.) anywhere within, even more than one. So my.big.file or my.big_file or my-big-file are all valid filenames.
In Linux, upper- and lowercase in filenames also matter quite a bit. They have to match exactly. The files hosts and Hosts are not the same as far as Linux is concerned. Finally, the same filesystem can span multiple partitions, hard drives, and removable media such as DVD drives and USB sticks. You just keep going down through subdirectories, not having to care if something is on disk A, B, or whatever. I expand on this a little more in the "Where removable media lives" section later on.

Touring the Linux Filesystem
In this section, I take a look at the contents of the typical Linux filesystem. Being at least a bit familiar with it helps you track things down later, and will help you to know where it's safe to mess with things and where you need to be very careful.

The root of the tree
Everything in the Linux filesystem is relative to the root directory, which is referred to as /. Don't confuse this with the system Administrator, who is the root user, or the /root directory assigned to the root user. (I'm not sure why Unix and Linux geeks like the word "root" so much!) The root directory is the filesystem base — a doorway into all your files. The root directory contains a mostly predictable set of subdirectories. Each distribution varies slightly, but certain standards exist to which they all conform. The standards keep the Linux world somewhat sane.
 In the early days of Linux different distributions did use different places to store files. Thankfully, a standard has evolved, called the Filesystem Hierarchy Standard (FHS), which has made life much easier. If you're interested in these standards, go to refspecs.linuxfoundation.org/fhs.shtml and look at the latest version of the rules.
Table 7-1 lists what you might find in the base directories, meaning the items you find in /. (This list can vary depending on what you installed.) An asterisk (*) at the end of a description indicates that you shouldn't mess with this directory unless you have a really good reason because it contains files that are very important to the functioning of your system. Really, most of the base directories should be left alone. It's sections inside them that are safe to change.
Some of these directories have some equally important subdirectories, which I cover in the upcoming sections.
TABLE 7-1 Standard / Contents in Linux 
Directory
Contains
/bin
Essential commands that everyone needs to use at any time*
/boot
The information that boots the machine, including your kernel*
/dev
The device drivers for all the hardware that your system needs to interface with*
/etc
The configuration files for your system*
/home
The home directories for each of your users
/lib
The libraries, or code that many programs (and the kernel) use*
/media
A spot where you add temporary media, such as DVDs and USB sticks; not all distributions have this directory
/mnt
A spot where you add extra filesystem components such as networked drives; items you aren't permanently adding to your filesystem but that aren't as temporary as DVDs and USB sticks
/opt
The location that some distributions use for installing new software packages, such as word processors and office suites
/proc
Current settings for your kernel (operating system)*
/root
The superuser's (root user's) home directory
/sbin
The commands the system Administrator needs access to*
/srv
Data for your system's services (the programs that run in the background)*
/sys
Kernel information about your hardware*
/tmp
The place where everyone and everything stores temporary files
/usr
A complex hierarchy of additional programs and files
/var
The data that changes frequently, such as log files and your mail



The importance of being /etc
The /etc base directory contains primarily configuration files. It's best not to mess with these unless you know what you need to do. Some important directories here (which vary depending on what you have installed) are 

The directories beginning with /etc/cron contain instructions for various programs that run at automated times.
The /etc/cups directory contains configuration information for your printer.
The directories beginning with /etc/rc and /etc/systemd all contain data about what starts and what doesn't at boot time and shutdown. When you see talk about services such as in Chapter 17, these are the directories that store when they run.
The /etc/NetworkManager directory has network configuration information (see Chapter 9).
The /etc/X11 directory contains configuration details for the X Window System (X), which runs your graphical user interface (GUI). See Chapters 4, 5, and 6 for more on the GUI.
The /etc/opt directory contains configuration files for the programs in the /opt directory, if you decide to use it.

Where removable media lives
One of the more confusing things for people moving from Windows to Linux is how Linux handles removable media, such as DVDs and USB sticks. While Windows assigns different drive letters to removable media devices, in most Linux distributions when you insert a removable media drive Linux automatically places it within the root filesystem structure for you (called mounting).
Typically, Linux creates a subdirectory in the /media directory using your userid, followed by another subdirectory under that which is a unique identifier for the media, such as the DVD label, or USB unique identifier number. For example, after I plugged a USB stick into my PC, Ubuntu created the new directory named /media/rich/88CE-4A75 where I can access all the files on the USB stick.
 In the "Managing Your Filesystem without a Net (or Mouse)" section later in this chapter, I show you how to find these items using the command line. In Chapter 8, you find out how to find them using the handier point-and-click method in the graphical desktop.

Where the computer is the /usr
The /usr directory is often referred to as its own miniature filesystem tree. This directory has lots of important or interesting subdirectories, as shown in Table 7-2. An asterisk (*) at the end of a description indicates that you need to leave that directory alone unless you have good reason to mess with it — after you gain lots of experience with Linux and know exactly what changes you need to make — so that you don't accidentally alter something your system needs to function correctly. An interesting thing to remember about this section of the filesystem is that many advanced Linux users often use /usr to store programs that can be shared with other Linux machines.

TABLE 7-2 Standard /usr Subdirectories 
Subdirectory
Contents
/usr/bin
The commands that aren't essential for users but are useful*
/usr/games
The games that you install on your system, except for those that you can choose to place in /opt
/usr/include
The files that the C programming language needs for the system and its programs*
/usr/lib
The shared code used by many of the programs in this /usr subhierarchy*
/usr/local
The programs and other items that you want to keep locally, even if you're sharing everything else in /usr
/usr/sbin
The commands that aren't essential for Administrators but are useful*
/usr/share
The information that you can use on any Linux machine, even if it's running incredibly different hardware from what this one is running*



Managing Your Filesystem without a Net (or Mouse)
Chapter 8 covers how to use the point-and-click file managers to work your way around the Linux filesystem. In this section, I take a look at how to use the command-line tools to find your way around the filesystem. It isn't vital for you to know this, but it could certainly prove useful someday!

Viewing information about files on the command line
If you decide to do any serious work in Linux, you'll want to become familiar with the command line interface (CLI). The CLI allows you to submit commands directly to Linux, without a graphical go-between, and see the results immediately.
If you're in the older generation, the CLI may remind you of the early days of MS-DOS. You just get a prompt to enter a text command, and you see the text response on your monitor — boring, but efficient!
In the GUI world you can get to the CLI by using the Terminal program, shown in Figure 7-1.
 
FIGURE 7-1: The Terminal program in Ubuntu.


The Terminal program provides a graphical window that displays the CLI, allowing you to enter commands and view the results.
To view files and directories, you want to use the ls command. Just by itself it shows you the names of the non-hidden files and directories that you ask for; Figure 7-1 shows an example.
Depending on your Linux distribution setup, the ls output may appear in color, each color telling you something about the type of item you're looking at. While not an exhaustive list, here are some of the more popular colors you may see in your directory listing: 
Text Color
Usually Means
White
A regular file that doesn't match any of the special types that needs a color.
Red
An archive or package (see Chapter 15).
Pink
An image file (if it recognizes the file extension, such as .jpg, .tif, and .gif). Sometimes pink is also used for another type of special file, but it's heavily specialized and not something you need to worry about. If you don't see an image extension on the filename but you see a pink file, just ignore it.
Dark blue
A directory.
Light blue
A soft link to another file.
Green
A program (called an executable) in Linux.
White text with a red background
A broken link.
Yellow text with a black background
A device file (basically, the file that is used to talk to a piece of hardware, like your monitor).
Black text with a green background
A directory where you can only delete or change the files that you own or have write permissions for. (See the section "Understanding file listing information" later in this chapter for more.)

The ls command shows everything in the requested location except for hidden files, which start with a dot. To see the hidden files too, type ls -a, and you get results as shown in Figure 7-2.
So far all you've done is look at files, and find out a little about them from the colors you see. The next section shows you how to discover more.

Understanding file listing information
To see more information than just names and vague types, you'll want a long format file listing. You get this listing with the command ls -l (if you want long format and hidden files, then you would type ls -la). Figure 7-3 shows a sample of what you might see.
You may find some parts of this format easier to understand, at a glance, than others. The first item in each listing (the part with the letters and dashes — for example, for the .bash_history file the -rw-------) is the permission set assigned to the item. Briefly, permissions define who can read the file, change it, or run it if it's a program. You can read more about permissions in "A Permissions Primer," later in this chapter. The second item in the first line (for the .bash_history file, 1, 2) is the number of hard links to the item. A hard link is a pointer to the same file, but uses a separate filename.
 
FIGURE 7-2: The home directory shown with the ls -a command to see the hidden files as well.


 
FIGURE 7-3: The beginning of the brand-new home directory with both hidden and non-hidden files displayed in long format.


The third item (rich for the .bash_history file) is the file's owner, and the fourth (rich) is the group — depending on which version of Linux you're using; these items may or may not be identical. You can find out more about both of these in "A Permissions Primer," later in this chapter. The fifth item is the file's size in bytes. All directories show up as 4,096 bytes. Everything else has its own size. You can tell an empty file from the size of 0 bytes.
The sixth, seventh, and eighth entries are all related to the last time the file was changed: for the .bash_history file, the month (Jun), the date (24), and the time in 24-hour format (08:12). Finally, the ninth item is the filename (for example, .bash history).

Comprehending file types
The first letter in any long format file listing tells you which type of file you're dealing with. In Table 7-3, I list the types you're likely to run into. Some of these may seem familiar after examining the file listing color scheme.
In addition to those mentioned in Table 7-3, you find lots more different file types out there in the Linux world. By types, I'm not referring to extensions, such as .exe or .doc. Linux sees everything within its filesystem — even directories and hardware like your monitor — as "files." As a result, assigning a type to a file is merely a Linux machine's way of keeping track of what's what.

TABLE 7-3 Linux File Types 
Label
Type
Description
-
Regular file
The item is an everyday file, such as a text file or program.
b
Block device
The item is a driver (control program) for a storage medium, such as a hard drive or DVD drive.
c
Character device
The item is a driver (control program) for a piece of hardware that transmits data, such as a modem.
d
Directory
The item is a container for files, also referred to as a folder in some operating systems' lingo.
l
Link
The item is a link to another file. The item doesn't exist as a separate file, but is a pointer to another file.

The main thing Windows users in particular want to know when they move to Linux is how to recognize programs. Instead of looking for files with particular extensions (like .exe), programs have (or need to have) an executable permission set so the system knows they're allowed to run. See Chapter 8 for how to do this in Nautilus.
 On the command line, try the file command, such as file Desktop, to find more about what a particular file contains.

Navigating the filesystem in Linux
In case you're enjoying playing around on the command line, here's a short primer on some other commands you'll find useful when it comes to wandering through your filesystem. To move, you can use cd to change from one directory to another. For example, to go from /home/rich to /home/rich/Documents, you could type one of the following: 
cd /home/rich/Documentscd Documents
Either of those commands gets you there. Then to go back to /home/rich from /home/rich/Documents, you could type one of the following: 
cd /home/richcd ..
Again, either of these commands works for the purpose. In both cases, the first commands are referred to as absolute navigation ("I want to go to exactly this address") and the other is called relative ("I want to go three houses down from here"). The .. backs you up one directory in the tree. If you get lost and can't figure out which branch of the tree you're on, type pwd (which may seem like an odd command, but is short for "print working directory") to find out what directory you're in right now.
Now some quick commands to work with files. To work with their contents, see Chapter 11 about using text editors in Linux. However, just to copy files at the command line, use the cp command such as the following to copy file1 to a new file named file2: 
cp file1 file2
If you want to rename a file, use the mv (move) command in the same format, or use this same command to move a file from one location to another. To create a directory, use the mkdir command such as the following to create a Documents directory in the current directory: 
mkdir Documents
To delete files, use the rm (remove) command, such as this format to delete file1 from the directory /home/rich: 
rm /home/rich/file1
 
Finally, to remove a directory, with the special rmdir command, first you have to delete all the files inside it, and then you can delete it. To remove all the files in the directory /home/rich/notes and delete it at the same time (make sure you really want to do this!), you can type either 
rm -rf /home/rich/notes
or you can type the following series of commands: 
cd /home/rich/notesrm *cd ..rmdir notes
This should be enough to get you started. Happy exploring!

A Permissions Primer
If you find yourself scratching your head when looking at parts of that long format file listing in Figure 7-3, don't worry. It's just code that describes the permissions assigned to the file. Linux was created as a multi-user operating system — meaning that it assumes more than one person is using the system, and it also assumes you'll want some type of security on who can (or can't) mess with your files.
The "Comprehending file types" section earlier gave you a feeling for the first letter on each line, but nine more characters are attached to that item before you get to the next column. This group of nine is the set of permissions (also called a permission set) for the file or directory. Linux uses these permissions as a way of providing file and directory security by giving you the means to specify exactly who can look at your files, who can change them, and even who can run your programs. You need this capability when you have a bunch of different users on the same machine, networked to the world.

Checking out the triplets
Each permission set consists of three triplets. Each of the triplets has the same basic structure but controls a different aspect of who can use what. Consider the long format listing for /home/rich in the following code: 
total 464drwx------ 23 rich  rich  4096 Dec 15 05:01 .drwxr-xr-x  3 root  root  4096 Dec  3 06:27 ..-rw-------  1 rich  rich     5 Dec  3 07:07 .bash_history-rw-r--r--  1 rich  rich    24 Jul 12 00:11 .bash_logout-rw-r--r--  1 rich  rich   176 Jul 12 00:11 .bash_profile-rw-r--r--  1 rich  rich   124 Jul 12 00:11 .bashrc
As you've already seen, the first character in the permission set refers to the type of file. For a directory, the character is shown as a d, as you see here for the first two items in the preceding list; files are designated with a dash (-) instead. Each file or directory's permission set is a group of nine characters — that is, the nine characters that follow the first character (for a total of ten). But this group of nine is really three groups of three, as shown in Figure 7-4.
 
FIGURE 7-4: Breakdown of the nine permission characters.


The three triplets are read as follows: 

The first triplet consists of the second, third, and fourth characters in the long format file listing. This triplet sets the permissions for the user, or owner, of the file. (Owners are discussed in the "Beware of owners" section, later in this chapter.)
The second triplet consists of the fifth, sixth, and seventh characters in the long format file listing. This triplet sets the permissions for the group that is assigned to the file. (Groups are discussed in the "Hanging out in groups" section, later in this chapter.)
The third triplet consists of the eighth, ninth, and tenth characters in the long format file listing. This triplet sets the permissions for other, or everyone who isn't the file's owner or a member of the owning group.
Although each triplet is often different from the others, the internal structure of each one is made up in the same way. Focus specifically on how to read one triplet before looking at the set of them together. Each triplet includes three characters: 

The first character is either an r or a dash. The r stands for read permission. If r is set, the triplet allows the entity it stands for (user, group, or other) to view the directory or file's contents.
The second character is either a w or a dash. The w stands for write permission. If w is set, the triplet allows the entity it stands for to add, delete, or edit items in this directory or file.
The third character is either an x or a dash. The x stands for execute permission. If x is set, the triplet allows the entity it stands for to access the files contained in this directory or to run the particular program in this file.
 In all cases, if the dash sits in place of r, w, or x, the triplet doesn't allow the entity the read, write, or execute permission.
The following sections describe owners and groups in more detail.

Beware of owners
You may have noticed by now that I talk a great deal about owners (users) and groups in Linux. Every file and directory has both of these components: a user from the /etc/passwd file that's assigned as its owner and a group from /etc/group assigned as the group.
Although an everyday user probably doesn't need to change file ownerships often, the root user does so regularly. If you add the file comments, for example, to /home/rich while you're logged on as the superuser (another term for the Administrator, who is the person who owns the root account), root owns that file. The user rich can't do anything with it unless you have set the last triplet's permissions to allow the other folks (those who aren't the file's owner or in the specified group) to read and write to the file. But this method is a pretty sloppy way of doing things because the whole idea of permissions is to reduce access, not to give everyone access. Instead, remember to change the file's owner to the user rich. You do this with the chown (change owner) command. For example, by typing chown rich comments, root changes the ownership over to rich. Then rich can work with this file and even change its permissions to something he prefers.

Hanging out in groups
Groups are more interesting to work with than owners. You use groups to allow the root user to assign to multiple users the ability to share certain filesystem areas. For example, in many versions of Linux, all users are added to a group named users (openSuSE does this, for example). Then rather than a long format file listing such as the one shown earlier in this chapter, you may see the following: 
total 20drwx------ 2 rich  users 4096 Jul 29 07:48 .drwxr-xr-x 5 root  root  4096 Jul 27 11:57 ..-rw-r--r-- 1 rich  users   24 Jul 27 06:50 .bash_logout-rw-r--r-- 1 rich  users  230 Jul 27 06:50 .bash_profile-rw-r--r-- 1 rich  users  124 Jul 27 06:50 .bashrc-rw-rw-r-- 1 rich  users    0 Jul 29 07:48 lsfile
Everyone in the users group has read access to the files. In other distributions (such as Ubuntu), a unique group is created for every user, so one user can't access the files created by another user by default. This is why the earlier listing showed the owner and group items as identical (rich rich).
Now that you've seen the basics of how Linux handles files, continue on to the next chapter to see how to use the graphical tools available in Linux desktops to maneuver your way around the Linux system with the greatest of ease! 







Chapter 8
Using the Filesystem

IN THIS CHAPTER
 Managing your filesystem with Files
 Exploring the Dolphin file manager
 Taking a look at Thunar

Chapters 4, 5, and 6 detail some of the more popular graphical desktops available in Linux and how to use them, but I deliberately skipped one skill: handling files. Chapter 7 addresses how to work with files and directories using the command line, which can be somewhat clunky, especially if you're new to Linux. If you're familiar with the Microsoft Windows or Mac OS worlds, you're used to using graphical tools to manipulate files and directories (and in the graphical world, directories are often called folders because of the folder icon used to represent them). Don't worry — Linux won't disappoint you. This chapter focuses on pointing and clicking your way through your directories and file manipulation with ease.

Clicking Your Way Through the Filesystem
The key to managing files and directories from your graphical desktop is the file manager program. The file manager program provides a nice graphical interface to the mess of files and directories present on your system. Instead of having to dig through command line commands, you just point and click your way to a managed filesystem!
However, as with just about everything else in the Linux world, you can choose from several different file manager programs. The default one available in your Linux distribution mostly depends on which desktop you're using. The main players are: 

Files: The default file manager used in the GNOME 3 desktop
Dolphin: The default file manager used in the KDE Plasma desktop
Thunar: The default file manager used in the Xfce desktop
Of course, just because a file manager is the default for a desktop doesn't mean that you're stuck having to use it! Any of the file manager programs work just fine in the other desktop environments. In fact, if you install the KDE Plasma desktop in Ubuntu the Files file manager still stays as the default!
The following sections walk through the features of each of these popular file manager programs, allowing you to get comfortable maneuvering around.

Using Files
As I pointed out, in the GNOME 3 desktop environment the default file manager is Files. Moving through the filesystem in Files involves a couple of different skills than using the command line. You may know exactly where in the filesystem you want to go, but not what to click to get there. In the first place, you need to know where you want to begin. This decision isn't as difficult as it sounds.
 In the earlier versions of GNOME, the file manager program was called Nautilus. In GNOME 3, it's the same program, but the name changed to Files. To make things even more confusing, internally in GNOME it's still referred to as the Nautilus project. You often see the two names used interchangeably in documentation and help files. I do my best to remember to call it Files in this book!
There are usually a few different ways to start Files from the GNOME 3 desktop: 

Click the Files icon in the dash. Most Linux distributions include the Files icon (the picture of the folder) as a favorite in the dash.
Double-click your desktop's Home icon. Ubuntu (and many other GNOME-based distributions) includes the Home icon on the default desktop. This opens Files to the user's home directory.
Open the application launcher, and then select the Files icon. Files is installed by default in all Linux distributions that use the GNOME 3 desktop. Just open the application launcher and click the Files icon that appears.
Regardless of how you start the program, Files opens using your Home folder as the default location, as shown in Figure 8-1.
 
FIGURE 8-1: The GNOME Files file manager window.


The Files window consists of three main sections: 

Toolbar: The toolbar is located at the top of the window, and contains back and forward buttons for directory navigation, a path bar to identify where in the directory structure you currently are, a search button for finding files, a button that allows you to change the layout and behavior of the content area, and the application menu button.
Sidebar: The sidebar allows you to navigate to common directories in your Home folder, as well as quickly navigate to installed removable media drives and network drives. If you prefer you can hide the sidebar by pressing the F9 key.
Context area: The main area of Files, displays the files and directories contained in the selected directory. You can customize how much information Files displays in the context area.
Status bar: When you select a file or directory a floating status bar appears at the bottom of the window, showing some information about the file or directory.
The context area is where the action occurs. You can take a few actions on the items you see in the context area: 

Double-click a file icon to open the file using the default application. For application files, the application opens. For text files, the standard GNOME text editor opens for you to view the file if a default application isn't assigned for the file you're prompted for how to open the file. Proceed to the section "Opening files and running programs," later in this chapter, for more information on that.
To open a directory, you have a few options: 

Double-click the directory icon to open it in the existing context area.
Middle-click the directory icon to open it in a new tab in the Files window. If you don't have a three-button mouse, the middle click feature is often emulated by clicking both the left and right buttons at the same time.
Right-click the directory icon to view a context menu. You can select to then open the directory in a new tab or a new window, along with performing other operations, such as changing the directory permissions.
To close the Files window, choose Files ⇒   Quit from the panel applications menu, or click the X in the window's upper-right corner.
If you select to open a subdirectory in the same Files window, notice that the path bar in the toolbar adds a new button to the path, indicating the directory currently displayed, as shown in Figure 8-2.
 
FIGURE 8-2: Opening a subdirectory in Files.


You can click any of the directory buttons in the path bar to jump directly to that directory. This allows you to walk your way down or up a directory structure.
 Often it's easier to drag and drop files between tabs in the same window rather than trying to switch between separate windows!

Setting how much info you see
By default Files only displays icons that represent the files and directories, along with the file or directory name. Often you want to see a little more information than that, such as the size of the file or directory, and possibly the owner. This is where the view buttons in the toolbar come into play: 

Toggle View: Switch between icon view and list view. List view displays more information about the file or directory.
View Options: The options available in this menu depend on which view mode Files is current using: 

In icon view, you can select the order in which Files sorts the file and directory icons (by name, by size, by date, and so on).
In list view, you can select what information Files displays for each file or directory using the Visible Columns menu option.
With a little customization, the list view can provide some very detailed information about the files and directories, as shown in Figure 8-3.
 
FIGURE 8-3: Files using the list view mode in rich's home directory.


Along with these options, you can choose the view's Zoom In, Zoom Out, and Normal Size options if you need to change the visual size of the folder's contents. The Reload option can come in handy if you've recently added a file to a directory and it doesn't appear yet.

Creating new directories
You can use the graphical interface in Files to create a new directory. Just follow these steps: 

Browse to the directory you want to create the directory in.
You need to have the directory open and be inside its window before proceeding.

Right-click an empty spot inside that directory.
Make sure that you didn't highlight anything in the directory. A context menu appears.

Choose New Folder.
A new directory icon appears, highlighted, and with the name open for editing.

Type the name you want to assign to this directory and then click Create.
The name is assigned to the directory.
That's a lot easier than messing around with the cryptic mkdir command in the command line!

Opening files and running programs
To open a file or run a program in Files, just double-click it. That's it! Well, not entirely. You can also right-click a file to open a context menu that provides a few more options: 

Open with Program: If the file is associated with a particular program already, choosing this option is the same as double-clicking the file. More than one of these options may be listed, if your system knows that you have more than one program installed that can do the job — the top item with the folder icon next to it is the default. Choose whichever option you prefer.
Open with Other Application: Choosing this option opens the Select Application dialog box that contains a list of installed programs the system is aware of. You can select one of these programs, or if you don't see what you need, click the View All Applications button. After you select the program to open the file with, click Select to proceed.
Most common file types already have a default application defined in Files that's used to open the file, such as text files, multimedia files, and LibreOffice documents, spreadsheets, and presentation files.

Copying and moving files
You can copy and move items by using two different methods in Files. The first is by using the usual method you're probably familiar with from Windows or Mac OS — clicking and grabbing a file or directory and then dragging it where you want to go. You can click and drag between directory windows anywhere on the desktop, even into specific directory icons within Files. Here are some handy tips to follow: 

Hold down the Ctrl key while you drag if you want to make a copy rather than just move the file.
If you want to move the file into a directory, drag it to the directory icon, and when it's highlighted, release the mouse.
If you want to move the file into a directory window but not into one of the directory icons, make sure that the directory icons are not highlighted before you release the mouse.
The other method for copying and moving files and directories involves the following steps: 
Right-click the file or directory you want to copy or move.

From the context menu that appears, choose Cut if you want to move the file or Copy if you want to copy it.
The file doesn't disappear after you make your selection if you're trying to move it.

Navigate into the directory you want to move the file into.
You're ready when you have that directory's window open.
Do one of the following:

If you want to move or copy the file into a directory window, right-click inside that window (just make sure that nothing is highlighted) and then choose Paste.
If you want to move or copy the file into a directory icon rather than an open folder window, right-click the icon and then choose Paste into Folder.
 If you only have one Files window open, it can be difficult trying to navigate around to other directories to cut or copy a file. If you select the Copy To or Move To options, a new window appears, allowing you to navigate to the directory where you want the file to go.

Deleting files and directories
To use Files to delete either a file or a directory from the filesystem, follow these steps: 
Browse to the file or directory's location.

Select the file or directory.
You can select the file or directory by doing one of the following: 

Click the single file or directory to highlight it.
For multiple sequential files or directories, click the first item, hold down Shift, and then click the last item in the group to choose them all.
For multiple items not in a group, click the first item, hold down Ctrl, and then click each individual item you want to select.
Click and drag your mouse button so that you make a box that contains all the items you want to select.

Press the Delete key or right-click and choose Move to Trash.
The file or directory vanishes from view. Keep in mind that if you are deleting a directory and it contains other files or directories, they go to into the trash right along with it.
 These deleted items are in fact sitting in the Trash can, so they aren't really deleted from your hard drive. You can move these files out of the trash and back into your filesystem if you want to.

Taking out the trash
You can permanently delete the contents of your Trash folder by following these steps: 

Right-click the Trash icon and choose Empty Trash from the shortcut menu.
A confirmation dialog box opens.

Click Empty in the confirmation dialog box to delete the contents of the Trash folder.
Linux permanently removes the items in the Trash directory. You can tell whether the Trash directory is empty by looking at the Trash waste can. If it's empty, it contains no files. If you see papers in it, it contains files.

Viewing and changing permissions
In Chapter 7, you see that every file and directory in Linux has a set of permissions that govern who is allowed to view it, run it, delete it, and so on. These permissions are used to make sure that people can't mess with the system's or each other's files, so they're pretty important. In this section, I focus on how to work with files in the GUI.
To view and change a file or directory's permissions in Files, you need to follow these steps: 

Browse to the file or directory's location.
Opening the folder window that contains this item is sufficient.

Right-click the file or directory and choose Properties from the shortcut menu.
The Properties dialog box appears with the Basic tab open.

Click the Permissions tab.
The Permissions portion of the Properties dialog box appears, as shown in Figure 8-4.
 
FIGURE 8-4: The Files file manager's Properties dialog box with the Permissions tab displayed.




Set the new permissions and ownerships.
See Chapter 7 for a breakdown of what all this stuff means. Notice that the GUI has the user, group, and "others" broken down into separate drop-down list boxes. Unless you're familiar with SELinux, leave the Context option alone.

Click Close to close the dialog box.
The file's permissions are now changed.
That pretty much covers the basics of everything you'd want to do with the filesystem in Files. In the next section, you take a look at the KDE Dolphin package.

Swimming with Dolphin
If you're using a new Linux distribution with the KDE Plasma desktop, most likely you're using the Dolphin file manager program. Dolphin works very much like Files, allowing you to easily browse through directories in the filesystem from a single window.
To open a Dolphin window, the Plasma menu system (see Chapter 5) provides links under the Computer tab to specific locations on your workstation. You can view your Home folder, remote shared folders found on the network, the entire filesystem starting at the root folder (see Chapter 7), or the special Trash directory. Figure 8-5 shows the main Dolphin window layout.
 
FIGURE 8-5: The user rich's Home folder as seen in the Dolphin file manager.


Taking a look at the default Dolphin window you see that it has many of the same features as Files: 

The toolbar: Provides buttons for quick access to commonly used menu features: 

Go Back: Navigate to the previously viewed folder.
Go Forward: Navigate to the folder viewed next if you've navigated backwards.
Go Up: Navigate up one level in the directory structure.
Icons View mode: Display files and directories as icons.
Compact View mode: Display smaller icons for files and directories to see more in the view window.
Details View mode: Display more information about the files and directories.
Find: Search for files and directories.
Preview: Display a thumbnail image of the contents of text and image files.
Split: Display two windows to easily drag and drop files and folders from one location to another.
Control: Display a context menu to select features and options for the view window.
The location bar: The area under the toolbar that displays the current directory name as well as any directories higher in the directory structure.
The Places panel: Provides easy access to drives and bookmarked directories.
The status bar: Displays the number of files and folders in the currently viewed folder, along with the current amount of free space available on the disk.
When you single-click a directory icon in the view window the folder opens in the same window, and the path to the folder appears above the location bar. That's called a breadcrumb. Just like leaving breadcrumbs in the forest to find your way back, you can click anywhere along the breadcrumb pathname to find your way back to the folder you started in.
Creating, copying, and renaming files and folders in Dolphin works exactly as in Files. Right-clicking a file or directory icon produces a shortcut menu, which allows you to cut or copy the file, or move it to the trash folder for removal.
 Be careful when working in Dolphin; by default it uses the KDE Plasma single-click method of activating an icon. That means if you just single-click an icon, Dolphin attempts to display the file using the default application for the file. That's somewhat annoying for those coming from a Microsoft Windows environment. You can change that using the System Settings feature (see Chapter 5).
Dolphin also allows you to produce side-by-side windows of your filesystem in the Split display mode, shown in Figure 8-6.
 
FIGURE 8-6: The Split display mode in Dolphin.


Using this feature, you can easily drag and drop files from one folder to another anywhere on the system!

Don't Forget Xfce!
With the low-power requirements of the Xfce desktop you wouldn't expect anything too fancy in the way of a default file manager. However, you're in for a surprise! The Thunar file manager program is a gem of a tool that works well in underpowered PCs.
To start Thunar, click the File Manager icon (the file cabinet) in the panel favorites. The main Thunar window, as shown in Figure 8-7, appears.
Look a little familiar? Despite its small size, Thunar has many of the same features as Files and Dolphin. The Side Pane displays a list of common locations, divided into three sections: 

Devices: Lists the devices, such as hard drives and removable media
Places: Lists common directories within your Home folder
Network: Allows you to easily browse the network for shared drives
 
FIGURE 8-7: The Thunar file manager in MX Linux.


The main area in the window displays the file and directory icons contained in the selected directory. To change the layout, click the View option in the menu bar, then select the icon, detailed list, or compact list view. To customize the fields in detailed list view, select the Configure Columns option.
Choosing View ⇒   Preferences brings up the File Manager Preferences dialog box, as shown in Figure 8-8.
From here you can change the basic layout and behavior of Thunar, such as whether to open files with a single- or double-click to mimic Files or Dolphin behavior.
Right-click a file or directory icon to bring up the shortcut menu, as shown in Figure 8-9.
From the shortcut menu you can select what application to open the file with, or whether to copy, move, or delete the file. Also just like with the other tools, you can select the Properties menu option to change the file properties, including setting permissions for access to the file.
With the power of Thunar you'd never know you were operating in a low-power computing environment!
 
FIGURE 8-8: The Thunar File Manager Preferences dialog box.


 
FIGURE 8-9: The Thunar shortcut menu.



Using DVDs and Other Removable Media
As discussed in Chapter 7, when it comes to removable media (CD-ROMs, DVD-ROMs, USB thumb drives, and so on), you end up having to look around for them if you're working on the command line. However, having a GUI file manager program available makes finding the media you've attached a much easier process.
Typically speaking, in the GNOME 3 desktop when you insert a new removable item (say a DVD or USB thumb drive), an icon appears in the dash with the name of the device assigned to it. When you double-click the icon, a Files window opens to the directory of the device.
When you're done using the removable media device, you need to eject it before trying to take it out. If an Eject option is available (the up arrow next to the drive icon), just click the up-arrow icon to make it safe to remove. If an up arrow isn't present, right-click the device icon and choose Eject from the shortcut menu.
 In cases where the Eject option is not available, use Unmount before removing the item (such as a USB thumb drive) from the computer. This action ensures that all the data you saved actually is written, because Linux doesn't always put the data on the drive right away.
The KDE Plasma desktop doesn't automatically produce a desktop icon for removable media. However, once you insert a removable drive such as a DVD or USB thumb drive, a message appears in the Device Notifier panel widget, as shown in Figure 8-10.
 
FIGURE 8-10: The Device Notifier in KDE Plasma.


Accessing the removable media is as easy as clicking the entry in the pop-up window produced by the Device Notifier icon! Once you open the removable media it appears as a new place in the Dolphin Places menu.
 To remove the media, open Dolphin, right-click the device entry in the Places menu, and select Safely Remove.
In the GNOME 3 desktop, when you insert a music CD or DVD, a music player (see Chapter 13) opens to play the music (for KDE Plasma you have to select it from the New Device Notifier widget). See Chapter 13 for how to add support for even more types of music files. When it comes to video DVDs, you often have to install extra software due to a number of issues discussed in Chapter 14.

Accessing Windows Drives on This Computer
If you're dual-booting between Windows and Linux, you will have times when you want to access information on your Windows drive from Linux (unfortunately Windows cannot access the information on Linux drives). If you're using the GNOME 3 desktop, to access the files on your Windows drive from Linux when they're both on the same computer, you should see the Windows partitions appear in the Files sidebar. Just click the partition icon to open the Windows directory. You can than copy and paste files between Linux and Windows!
Likewise, if you're using the KDE Plasma desktop the Windows drives appear in the list of locations in the Dolphin sidebar area, again using the same drive long name as in Windows.
 Some Windows PCs use a hidden partition on the hard drive to hold emergency restore files. These partitions won't be hidden in Linux, so be careful that you don't ruin anything important to your Windows system (unless of course you're planning on removing Windows)!

Accessing Network Drives
Sometimes the drive you want to access is on another computer. If the drive on the other computer is set up to be accessible through your network you can access it via the Files, Dolphin, or Thumar file managers.
In Files, select Network to walk through a list of shared folders found on your network. If you want to access a Windows computer, double-click Windows Network. The Windows computers on your network that have drives available for browsing are displayed. From there, you can browse to where you want to go!
In the KDE Dolphin world, you need to go to the Network option under the Remote section of the Places menu. The Dolphin file manager opens in network mode, as shown in Figure 8-11.
 
FIGURE 8-11: Dolphin in network mode.


Your Windows network shares should appear under the Shares folder.

Finding Things
Both the GNOME 3 and KDE Plasma desktops provide easy ways for you to search for files and folders in the filesystem. For the KDE Plasma desktop, the KFind utility is the way to go.
Open the KDE menu and at the top you see the KFind Search text box. Enter the filename you need to find, and as you type, KFind displays matching files, as shown in Figure 8-12.
Select the matching file you need to open, using the default application.
As expected, the GNOME 3 desktop also has its own file searching utility, simply called File Searcher. You don't actually start File Searcher; it comes up automatically as the Search text box in either the application overview or the activities overview window, as shown in Figure 8-13.
 
FIGURE 8-12: The KFind search window.


 
FIGURE 8-13: The GNOME 3 File Searcher dialog box.


As you enter the name of the file to find, File Searcher brings up a list of all matching files as you type.
Using the Find feature can often save you from having to hunt through folders using the standard file manager! 







Chapter 9
Connecting to the Internet

IN THIS CHAPTER
 Understanding common Internet connection methods
 Knowing your hardware
 Connecting to your Internet Service Provider (ISP)
 Understanding enough TCP/IP to be dangerous

You may already be connected to the Internet if you're on a machine that's connected to a LAN, and you've configured the networking during installation. To test whether you have a connection, open a web browser and try to go to an outside website (such as www.gnu.org). If it works, you're up! No need for this chapter. Otherwise, read on.

Internet Connectivity 101
Don't let high-speed providers discourage you from using Linux with their services. Just because they don't support Linux directly doesn't mean that the technology doesn't work with Linux. TCP/IP (the set of traffic rules for the Internet) was developed for the UNIX operating system, from which Linux descends.
If you are dual-booting to Windows, your ISP can help you install your broadband connection, and then you can tinker with getting Linux connected as you have the time and inclination. In the following list, I point you to some sites that can help you configure your broadband connection as you look at the types available: 

Cable modems: When you subscribe to a cable Internet service, the installation technician typically provides you with a special device, called a cable modem. Cable modems use either wired coaxial cables or fiber optics to carry the signal to the cable modem. You can connect your workstation directly to the cable modem using either an Ethernet cable connected to an Ethernet port on the cable modem, or wirelessly if your workstation includes a wireless network chipset. To find the exact speeds available, you need to talk to your cable provider. The following web page provides a document that contains helpful information about various cable providers and Linux: 



www.tldp.org/HOWTO/Cable-Modem

Digital Subscriber Line (DSL): DSL carries data to your telephone jack in a digital format. DSL is popular because it utilizes the existing copper telephone wiring provided by your telephone company. You can even use the same phone line as a regular phone line! A DSL connection requires additional communication hardware, which your Internet Service Provider (ISP) should provide.
Note that several variants of DSL exist: 

ISDN (Integrated Services Digital Network) Digital Subscriber Line (IDSL) — see later in this bulleted list for a definition of ISDN
Symmetric Digital Subscriber Line (SDSL)
Asymmetric Digital Subscriber Line (ADSL)
Generic DSL (XDSL)
You can find out from your ISP how fast your DSL connection would be, because it varies. For an overview of DSL and Linux, visit www.tldp.org/HOWTO/DSL-HOWTO/.
Integrated Services Digital Network (ISDN): ISDN is one of the oldest residential high-speed options. It appeared when 28 Kbps (half the speed of today's regular dialup modems) was about all that you could milk from the copper strands that connected your telephone to the telephone company. ISDN is still available in some areas and promises a steady 128 Kbps — as long as you're within 3.4 miles of the telephone company's central office. You need two special devices to use ISDN: an ISDN modem (typically provided by the ISDN ISP) and a network adapter (sometimes an Ethernet card). The overall Linux modem HOWTO (www.tldp.org/HOWTO/Modem-HOWTO.html) does contain pointers to the latest ISDN information, as well as just being plain interesting to read.
Satellite modems: Those who live in particularly remote or low-infrastructure areas without access to cable, DSL, or ISDN connections might go the route of satellite modems (www.tldp.org/HOWTO/Sat-HOWTO.html). You can consider this service equivalent in many ways to cable, in that you get it typically through the same providers that you get your satellite television signals. However, satellite has some drawbacks. If your satellite television service is unreliable, your Internet service suffers the same fate. The upload and download speeds can also vary dramatically.
Dialup modems: Even in this day of high-speed Internet, the dialup modem is still used in areas where broadband is either not available or not affordable. It translates the digital signal from the computer into an analog signal required for transmission from the wall jack to the telephone company. Because the modem utilizes existing voice telephone service, you don't need any special setup beyond subscribing to an ISP. However, you can't use the same phone line for both dialup and a phone conversation at the same time. Because modems are mostly a thing of the past, there hasn't been much recent activity in the Linux world with modem support, but you can find the basics at www.tldp.org/HOWTO/Modem-HOWTO.html.

Setting Up the Hardware
Before you get too comfortable in your chair, you must physically check some items. This may require you to do some low-level maneuvers (such as crawling under your desk): 

Ethernet cable connections: If you have a cable, DSL, or ISDN modem that requires a wired connection from your workstation you need to make sure that: 

An Ethernet cable (like a phone cable but the connector is wider) is plugged into your computer's Ethernet port and into the special modem your ISP installed.
The fancy modem thing is powered on. (These contraptions often have their own power supplies.)

Wireless connections: If you have a wireless card or built-in chipset, you also have to have a wireless router to collect and direct your wireless traffic between computers and/or bridge to let your workstation talk to your Ethernet network. How far and through what (walls, floors, and so on) a wireless router or bridge can be from the card depends on the technology you're using. Part of setting up your wireless access includes: 

Determining the wireless standard your wireless router or bridge uses. Currently five major types of wireless standards exist, and they're often referred to as a group as Wi-Fi (802.11a, 802.11b, 802.11g, 802.11n, and 802.11ac). You need to make sure that the wireless router or bridge you purchase can support the wireless standard used by your devices.
Creating a unique network name for your wireless network.
Enabling security for your wireless network.
A few different wireless security standards are available. WEP, WPA, and WPA2 are the most common, with WPA2 being the most secure of the three. If your wireless router supports WPA2 security, use it.
Modem: If you're using a modem for dialup Internet service, you need to verify that: 

One end of a telephone cable is plugged into the wall jack, and the opposite end is plugged into the modem.
If an external modem, ensure a cable is securely connected from the modem to the proper port on the computer and that it's powered on.
If an internal modem, ensure it is not a software modem that requires special Windows drivers (commonly referred to as WinModems).
Okay, now you can climb back into your chair.

Selecting an Internet Service Provider (ISP)
Because of the meteoric rise in the popularity of Linux, many ISPs are training their support staff in the ways of Linux. If you already have an ISP, give one of them a call to let them know of your Linux pursuits. Chances are, that person already has information pertinent to Linux subscribers and can provide you with that information. If you're shopping for a new ISP, this section offers some practical selection advice.
 Some ISPs provide their own proprietary software that you must install on your PC to connect to the Internet. The software they provide is likely to run only on Windows.
If you're shopping around for an ISP, consider these questions: 

Does it provide technical support for Linux? If you're planning on running Linux, this consideration is an important one. It doesn't have to be a deal breaker, but it is handy.
Can you get a recommendation? Ask a friend. An ISP's best friend is an endorsement from a satisfied customer.
Will you have your contracted bandwidth? Many ISP's oversubscribe their networks, assuming not everyone will be on the Internet at the same time. Make sure you're getting the proper bandwidth that you're paying for at all times of the day, especially late in the evenings when all your neighbors are at home streaming movies!

Getting Information You Need from Your ISP
Most reputable ISPs provide you with a customer information sheet after you sign up for its services. This sheet should include information on how your network is assigned an IP address, required to talk on the network. In some situations that network address is passed along to your local workstation, while in other situations your IP address is just assigned to the router and the individual workstations on your local network are assigned private IP addresses.
There are two methods that an IP address is assigned to your Linux workstation: 

Static: You always have the same IP address. Static addresses are more common for servers than for desktops. If you're using static, your ISP needs to give you your nameserver IP addresses, your gateway address, the network address, and the netmask. This information should all be on the customer information sheet.
Dynamic: Your IP address changes each time you connect, or at regular intervals. On most desktops, you just don't always need to have the same address, and it makes life easier on ISPs. It also makes life easier for computers like laptops, which get moved around often from network to network. If you're using dynamic addressing, you're told that you need to connect by using the Dynamic Host Configuration Protocol (DHCP). With DHCP, your cable, DSL, ISDN, or satellite modem does double duty as a router and assigns separate IP addresses to devices on your local network.
If you're using the ISP as your email provider, you also need to know some additional information to configure into your email client (see Chapter 10): 

The outbound SMTP relay server address required to send email messages to the Internet.
The inbound POP3 or IMAP email server address to retrieve email messages from your own inbox on the server.
With this information, you can establish an Internet connection by using your Linux system.

Configuring Your Connection
Okay, so you've got your network hardware and your ISP information, now what? The answer is to configure your Linux system to jump on the Internet!
The configuration process is slightly different depending on the hardware you're using. Fortunately, networking in the Linux world has evolved to the point where it could quite possibly be painless for you to connect to the Internet. This section covers the big three methods for accessing the Internet: 

Using the graphical Network Manager tool
Using command line tools to fine-tune things
Using software for modems
The following sections walk through each of these areas.

Network Manager
The Network Manager application provides one-stop shopping for all of your network configuration needs. Just about every popular Linux distribution uses the Network Manager application these days, including Ubuntu and openSUSE.
Different desktops use different methods for starting Network Manager: 

In the GNOME 3 desktop click the system tray, then select the network feature (either wireless or wired) to enter the setup.
In the KDE Plasma desktop click the networking icon in the panel, then select the Control Center icon.
When you start the Network Manager it shows you the currently active network connection, as shown in Figure 9-1.
 
FIGURE 9-1: The Network Manager dialog box for a wireless connection.


This window provides different information depending on your connection type: 

Wired Ethernet card connections
Wireless Ethernet card connections
Mobile Broadband (wireless modem) connections
Virtual Private Network (VPN) connections
DSL connections
Most likely you're working on either a wired or wireless network in your home. The following sections walk through the basics of working on these two types of networks.

Playing with wires
If you use a wired network card to access a broadband connection, most likely the Network Manager software automatically detected and configured it for you during the installation process. You can tell by looking for the Network Manager active connection.
If for some reason Network Manager didn't detect your network settings correctly (or if you have to manually set a static IP address), you can do that using the Network Manager interface: 

Click the gear icon for the wired network card in the listing.
The Wired dialog box opens, shown in Figure 9-2.
 
FIGURE 9-2: The Network Manager Wired dialog box.




Configure the wired network card settings.
The Wired dialog box contains five tabs of information for the network card: 

Details: Provides a summary of the connection information for the network interface.
Identity: Sets the Media Access Control (MAC) address for the card (which Linux automatically detects) and the Media Transfer Unit (MTU) size, set for automatic. In most network environments you never need to mess with these settings.
IPv4 Settings: Determines how the IP address for the network card is set. This can be either dynamically from a DHCP server, or statically using a configured IP address, netmask, router, and DNS server provided by your ISP.
IPv6 Settings: Determines network information for the IP version 6 protocol used on some networks. This information can either be set dynamically from a DHCP server, or statically using a configured network information from your ISP.
Security: Sets login details for connecting to a protected wired network. This feature is used by some network switches to restrict access to a wired network. If your network uses 802.1x security, consult with your network administrator on the proper settings to use.
Click the Apply button to save the new settings.
Once you've configured Network Manager for your wired Ethernet card it always attempts to start it when you start your workstation! If something does go wrong, check out the "It's all Fun and Games Until Something Doesn't Work" section, at the end of this chapter.

Look Ma, no cables!
In the wireless world, your first hurdle may be the wireless network card itself. In the past, wireless network support was a sticky point in the Linux world, as many wireless chip manufacturers failed to provide Linux drivers for their chips. However, over the years this has changed, and all the popular wireless chip manufacturers now provide Linux drivers that are most often included in Linux distributions.
 If your wireless network card is not supported, you have a last-ditch effort in the ndiswrapper project. The ndiswrapper project is an open source project that uses Windows network drivers supplied for wireless network cards to create a pseudo-Linux driver. Unfortunately, neither Ubuntu nor openSUSE provides the ndiswrapper software in the default configuration, but you can find it in other areas. You can find out more about ndiswrapper by visiting ndiswrapper.sourceforge.net.
If you're lucky enough to have a wireless network card that is supported by your Linux installation, you can use the Network Manager tool to configure it for your wireless access point: 

Left-click the Network Manager Applet icon to display a list of wireless access points detected, as shown in Figure 9-1.
The signal strength of each network is depicted by an icon to the left of the network name. Networks that are protected by a security password are indicated with an additional lock icon on the right-hand side. Select the network you want to connect with.

If you don't see the name of the network you want to connect with, such as if the network uses a hidden SSID, select the Connect to Hidden Wireless Network menu item.
Enter the name of the wireless network, and the security scheme (if any) that it uses. If you select a security scheme that requires a password, a new text box appears for you to enter the password.

Configure the wireless network settings.
Figure 9-3 shows the basic wireless connection settings.
Just like a wired network you need to assign an IP address to your wireless connection — either using DHCP or manually. You can also change the security settings required for the wireless router.
 
FIGURE 9-3: The wireless configuration dialog box.



Save the settings by clicking Apply.
The Network Manager Applet displays an animated icon in the panel indicating that it's trying to connect to the wireless network. If the connection is successful, you see the signal strength meter icon.

Command line tools
If you're not working with a graphical desktop client environment, or if you'd like to use a more hands-on approach to configuring your network settings, you can use one of several Linux command line tools. There are quite a few different command line tools that you have at your disposal. This section covers the ones you're most likely have available in your Linux distribution.

Network Manager command line tools
Your graphical friend the Network Manager tool also provides two different types of command line tools: 

nmtui: Provides a simple text-based menu tool
nmcli: Provides a text-only command line tool
Both these tools help guide you through the process of setting the required network information for your Linux system. To start the tool, just enter the tool name at the command prompt. The nmtui tool displays a stripped-down version of the graphical tool where you can select a network interface and assign network properties to it, as shown in Figure 9-4.
 
FIGURE 9-4: The Network Manager nmtui command line tool.


The nmcli tool doesn't attempt to use any type of graphics capabilities; it just provides a command line interface where you can view and change the network settings. By default, the command displays the current network devices and their settings: 
$ nmclienp0s3: connected to enp0s3        "Intel 82540EM Gigabit Ethernet Controller (PRO/1000 MT Desktop Adapter)        ethernet (e1000), 08:00:27:73:1C:6D, hw, mtu 1500        ip4 default        inet4 10.0.2.15/24        route4 0.0.0.0/0        route4 10.0.2.0/24        inet6 fe80::5432:eddb:51ea:fb44/64        route6 ff00::/8        route6 fe80::/64        route6 fe80::/64
The nmcli command uses command line options to allow you to set the network settings: 
# nmcli con add type ethernet con-name eth1 ifname enp0s3 ip4 10.0.2.10/24 gw4 192.168.1.254
This example sets the IPv4 address and default router for the Ethernet interface named enp0s3, and assigns it the simple name eth1. While this format may look somewhat overwhelming at first, as you get more comfortable working with network connections you may find using the command line tools faster than trying to click through separate dialog boxes to set the information!

Legacy tools
If your Linux distribution doesn't support one of the Network Manager tools, you can use these five legacy command line tools: 

ethtool: Displays Ethernet settings for a network interface
ifconfig: Displays or sets the IP address and netmask values for a network interface
ip: Displays or sets the IP address, netmask, and router values for a network interface
iwconfig: Sets the SSID and encryption key for a wireless interface
route: Sets the default router address

ETHTOOL
The ethtool command allows you to peek inside the network interface card Ethernet settings, and change any properties that you may need to communicate with a network device, such as a switch.
By default the ethtool command displays the current configuration settings for the network interface: 
$ ethtool enp0s3Settings for enp0s3:    Supported ports: [ TP ]    Supported link modes:   10baseT/Half 10baseT/Full                            100baseT/Half 100baseT/Full                            1000baseT/Full    Supported pause frame use: No    Supports auto-negotiation: Yes    Supported FEC modes: Not reported    Advertised link modes:  10baseT/Half 10baseT/Full                        100baseT/Half 100baseT/Full                        1000baseT/Full    Advertised pause frame use: No    Advertised auto-negotiation: Yes    Advertised FEC modes: Not reported    Speed: 1000Mb/s    Duplex: Full    Port: Twisted Pair    PHYAD: 0    Transceiver: internal    Auto-negotiation: on    MDI-X: off (auto)Cannot get wake-on-lan settings: Operation not permitted    Current message level: 0x00000007 (7)    drv probe link    Link detected: yes$
You can change features such as speed, duplex, and whether the network interface attempts to auto-negotiate features with the switch.

IFCONFIG
The ifconfig command is a legacy command for configuring network device settings. It allows you to set the network address and subnet mask for a network interface: 
$ sudo ifconfig enp0s3 down 10.0.2.10 netmask 255.255.255.0

IP
The ip command is more robust in what it can do, and is becoming the more popular method to use for defining network settings from the command line. The ip utility uses several command options to display the current network settings, or define new network settings. Table 9-1 show these commands.

TABLE 9-1 The ip Utility Command Options 
Parameter
Description
address
Display or set the IPv4 or IPv6 address on the device.
addrlabel
Define configuration labels.
l2tp
Tunnel Ethernet over IP.
link
Define a network device.
maddress
Define a multicast address for the system to listen to.
monitor
Watch for netlink messages.
mroute
Define an entry in the multicast routing cache.
mrule
Define a rule in the multicast routing policy database.
neighbor
Manage ARP or NDISC cache entries.
netns
Manage network namespaces.
ntable
Manage the neighbor cache operation.
route
Manage the routing table.
rule
Manage entries in the routing policy database.
tcpmetrics
Manage TCP metrics on the interface.
token
Manage tokenized interface identifiers.
tunnel
Tunnel over IP.
tuntap
Manage TUN/TAP devices.
xfrm
Manage IPSec policies for secure connections.

Each command option utilizes parameters to define what to do, such as display network settings, or modify existing network settings: 
$ ip address show1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN groupdefault qlen 1000    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00    inet 127.0.0.1/8 scope host lo       valid_lft forever preferred_lft forever    inet6 ::1/128 scope host       valid_lft forever preferred_lft forever2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_faststate UP group default qlen 1000    link/ether 08:00:27:73:1c:6d brd ff:ff:ff:ff:ff:ff    inet 10.0.2.15/24 brd 10.0.2.255 scope global noprefixroute dynamicenp0s3       valid_lft 84411sec preferred_lft 84411sec    inet6 fe80::5432:eddb:51ea:fb44/64 scope link noprefixroute       valid_lft forever preferred_lft forever$
This example shows two network interfaces on the Linux system: 

lo: The local loopback interface
enp0s3: A wired network interface
The local loopback interface is a special virtual network interface. Any local program can use it to communicate with other programs just as if they were across a network. That can simplify transferring data between programs.
The enp0s3 network interface is the wired network connection for the Linux system. The ip command shows the IP address assigned to the interface (there's both an IP and an IPv6 link local address assigned), the netmask value, and some basic statistics about the packets on the interface.
If the output doesn't show a network address assigned to the interface you can use the ip command to specify the host address and netmask values for the interface: 
# ip address add 10.0.2.15/24 dev enp0s3
Then use the ip command to set the default router for the network interface: 
# ip route add default via 192.168.1.254 dev enp0s3
 
Then finally, make the network interface active by using the link option: 
# ip link set enp0s3 up

IWCONFIG
Before you can use the ip command to assign an address to a wireless interface, you must assign the wireless SSID and encryption key values using the iwconfig command: 
# iwconfig wlan0 essid "MyNetwork" key s:mypassword
The essid parameter specifies the access point SSID name, and the key parameter specifies the encryption key required to connect to it. Notice that the encryption key is preceded by an s:. That allows you to specify the encryption key in ASCII text characters; otherwise you need to specify the key using hexadecimal values.
If you don't know the name of a local wireless connection, you can use the iwlist command to display all the wireless signals your wireless card detects. Just specify the name of the wireless device, and use the scan option: 
$ iwlist wlan0 scan

ROUTE
While the ip command is a one-stop method for changing network settings, an alternative way to specify network routing settings for your network is the route command: 
# route add default gw 192.168.1.254
You can also use the route command by itself to view the current default router configured for the system. 
$ routeKernel IP routing tableDestination     Gateway         Genmask         Flags Metric Ref Use Ifacedefault         192.168.1.254   0.0.0.0         UG    0      0   0   enp0s3192.168.1.0     *               255.255.255.0   U     1      0   0   enp0s3$
The default router defined for the Linux system is 192.168.1.254, and is available from the enp0s3 network interface. The output also shows that to get to the 192.168.1.0 network you don't need a gateway, as that's the local network the Linux system is connected to.
If your network is connected to multiple networks via multiple routers, you can manually create the routing table in the system by using the add or del command line options for the route command. The format for that is: 
route [add] [del] target gw gateway
where target is the target host or network, and gateway is the router address.

Dialin' out
Using a modem to dial a connection to your ISP is a two-step process. First, you must configure your modem with the settings from your ISP. After that, you must manually start and stop the Internet connection. (You probably don't want your modem tying up your phone line all day long.)
The GNOME 3 and KDE Plasma desktops each have their own package for configuring the modem and connecting to an ISP: 

GNOME-PPP: For the GNOME 3 desktop
KDEPPP: For the KDE Plasma desktop
If your Linux distribution doesn't include these programs, both packages can be installed from the standard installation CD of most Linux distributions. (See Chapter 15.) Once installed, you can walk through configuring them to work with your modem.

It's All Fun and Games Until Something Doesn't Work
In a perfect world, the network configuration steps in the preceding section would work 100 percent of the time. The Linux vendors have truly hidden all the mystery that has traditionally surrounded networking. Unfortunately, in many situations (mostly related to modems and hardware), a simplified configuration doesn't work. If you can't connect to the Internet after following these steps, an excellent site to find help is LinuxQuestions.org (www.linuxquestions.org). And yeah, I know — you'll have to use a separate computer, smartphone, or hotspot that already has Internet access to get that help. (Catch-22, anyone?) It's simply impossible to anticipate the wide range of problems people can run into, and the Linux community is your best bet; this site is well known for its helpful community members.
Also, go to your favorite search engine and search on the error message you're getting from the system — it doesn't hurt to add the network hardware's make and model and the name of your distribution as well if just the error message isn't working. When you're trying to figure out what's wrong with your network connection — or trying to gather information that can help someone else figure out what's wrong — you can use a cool tool: the handy command line program, ping.
 Some hosts and firewalls block the kind of traffic sent with pings, so these commands don't always work as expected, even with a good connection.
The ping command is akin to a submarine using sonar to detect other objects in the ocean. Sonar sends out a ping signal, which reflects off a hard surface. By measuring the amount of time between sending the ping and the ping's return, the submarine's engineer can determine whether an object is out there and how far from the submarine the object is.
The ping command in Linux provides information similar to what sonar provides — and it's so useful that you see it here as both a Linux command and a time-honored word. If you consider the Internet to be your ocean, you can determine, by pinging, what other network computers exist — and also how long it takes for your ping command to return. You use this command in the format ping hostname or ping ipaddress, such as ping bob.example.com or ping 192.168.1.5. If you can't ping another computer in your house or office (assuming that you have them all connected to the same network and not on separate dialup connections), something is wrong with the machine you're pinging from. On the other hand, if you can ping another machine in your house or office but you can't ping a machine elsewhere on the Internet, something may be wrong with your connection to your ISP.
 Latency, or the amount of time it takes for a signal to travel on the Internet, has little to do with physical distance. Rather, factors such as network traffic, bandwidth, and network hardware all contribute to slow latency. These factors determine whether a ping command to your neighbor's computer takes longer than pinging a host at the South Pole.
For example, try pinging Google by opening a command prompt (see Chapter 7) and typing the following command: 
ping www.google.com
 Press Ctrl+C to stop the ping; otherwise, your computer continues to ping the target.
The output, shown in Figure 9-5, provides information about what ping is doing. If the ping can't reach the host, you receive a message that the host is unreachable. If the ping can reach the host, you receive feedback that provides how long it takes — in milliseconds (ms) — for the signal from your computer to get to the destination computer and back again. (The lower the numbers, the better.) For computers connected to the same local network, a ping time of 1 ms to 3 ms is an acceptable response time. For dialup connections, expect somewhere around 150 ms. When you start seeing ping times climbing to 900 ms or higher, the network is likely under heavy use (or you have something wrong with your cables).
 
FIGURE 9-5: Sample results of the ping command.




After You're Connected
After you're connected, you'll probably want to leap straight to Chapter 10 for how to use the various Internet programs available to you. In the meantime, let me offer you a number of sites you might find useful when you need help, have questions, or otherwise want to explore the Linux world further — some of these are pretty geeky, but you'll grow into them! You also may want to update your machine (see Chapter 15), add new software (also Chapter 15), and give extra thought to system security (see Chapter 18) to protect yourself from nasty people and programs.
Useful sites include 

www.linuxsecurity.com: A somewhat geeky (but useful) place where you can track what's going on in the world of Linux security.
www.linuxquestions.org : I mention this site elsewhere in the book, but it's worth mentioning again. It's a popular hangout for people who have questions to ask, and for those who like to help them find answers.
Inag.sourceforge.net/: The Linux Newbie Administrator Guide is a massive collection of information that you may find useful.
www.tldp.org: Contains lots of help documentation written for various user levels.
www.slashdot.org: Uber-geek hangout (with a rather hostile culture, unfortunately) that features lots of pointers to interesting articles online. Best used to view the articles; skip the arguments in the comments section.
In addition to these recommendations, keep in mind that your favorite search site can also be very handy. 








Part 3
Getting Things Done

IN THIS PART ...
Connect to the outside world with web browsers, email, and more.
Get work done with text processors, word processors, and office suites.
Have fun with audio and video.








Chapter 10
Using the Internet

IN THIS CHAPTER
 Browsing the web
 Checking your email
 Sending instant messages
 Grabbing files
 Talking across the Internet

The Internet is a vast network of computers that spans the globe. Many different types of computers and operating systems work together to allow you access to information across the Internet. Linux, along with the other related UNIX operating systems, has long supported and worked with the Internet. Practically all the different services available on the Internet are available from your Linux desktop.
When you install Linux, one or more web browsers, mail programs, and other Internet tools are placed onto your new system. In this chapter, I introduce you to some tools you can use to access different services on the Internet, such as accessing web sites, using email, utilizing FTP, and talking on the network — assuming that your Internet connection is configured (see Chapter 9).

Browsing the Web with Firefox
Many people attribute the explosive growth of the Internet to the graphical web browser. The Internet has been around for much longer than the invention of the browser. It's just that most of the work done on the Internet was in plain old text, which held little attraction for those people who like pretty pictures.
In the world of Linux, the most popular browser is arguably Firefox (www.mozilla.org/products/firefox), which is based on Mozilla — essentially Firefox is just the web browser portion of Mozilla, whereas Mozilla can also handle email and news browsing.

Configuring Firefox
You can start surfing right now, if you want. You don't need to customize your browser. However, you may want to take a moment to tell Firefox your preferences, such as the default website to show when it starts, what font sizes to use by default, what colors to use, and many other options.
The following steps introduce you to the Preferences window, where all the Firefox configuration parameters are stored: 

Start Firefox.
There's usually more than one way to start Firefox. Linux distributions that use the GNOME 3 desktop often provide an application launcher icon in the Dash favorites (see Chapter 4). Distributions that use the KDE Plasma desktop often include Firefox as a favorite either in the panel, or in the Applications menu (see Chapter 5).

Click the Firefox menu button and select Preferences.
The Preferences window appears, as shown in Figure 10-1. This dialog box contains all the settings you need to play with for your web browsing experience.

Click the entries along the left-hand of the Preferences window to access the various preferences categories.
Some categories have subcategories of preferences listed as separate sections.
If you get tired of reading through menus, just click Close to close the Preferences dialog box and get back to surfing.
The following sections walk through the Preferences categories, explaining what each one does.

General preferences
The default category — shown in Figure 10-1 — allows you to determine how you want Firefox to look and act when it runs. Seven separate sections govern this dialog box: 
 
FIGURE 10-1: The Firefox Preferences window in Ubuntu.



General: Select whether to restore your previous Firefox session, or start a new session when you open Firefox, as well as select how to work with session tabs inside the Firefox window.
Language and Appearance: Select fonts, colors, zoom preferences, and language preferences.
Files and Applications: Determine how to handle file downloads from websites. From here you can define a specific folder for file downloads to use, or specify an application to automatically open based on a downloaded file type.
Firefox Updates: Firefox automatically updates itself with the latest versions; this shows what version is currently installed.
Performance: Set whether to use the recommended performance settings. If you disable the recommended performance settings, you can select whether to use hardware acceleration to display images or limit the amount of memory each tab can use.
Browsing: Control how Firefox handles scrolling, cursor keys, and recommended file extensions.
Network Settings: Only needed if your network uses a web proxy server.


Home
The Home section contains two setting areas: 

New Windows and Tabs: Setting that determine what content the Firefox browser displays as your initial web page
Firefox Home Content: Allows you to select which elements appear on the Firefox main page, such as a search toolbar, list of top sites you've visited, and highlights of your most recent activities

Search
The Search category provides options to customize the built-in search features of your browser: 

Search bar: Set whether to display a separate search bar, or use the standard address bar as a search bar as well.
Default Search Engine: Select the search engine to use for your searches.
Search Suggestions: Select how to display search engine results, either in the window, or in the search bar. As you type text in the address bar, Firefox automatically searches for the typed text dynamically using one or more search engines. This setting allows you to determine how those search results display as you type.
One-Click Search Engines: Enable one or more alternative search engines to use as you enter keywords into the search bar. You can also alter the order in which the search engine results appear.

Privacy & Security
Every time you click a website link you're exchanging information across a network. Although you don't need to lose sleep over it, you should be conscious of every request you make on the Internet. Take a moment to examine the Privacy and Security categories and determine whether there's anything you want to change: 

Browser Privacy: Settings to help prevent websites from tracking your activity. These include: 

Enhanced Tracking Protection: Set the level of restrictions for tracking movement between websites. The default of Standard protection provides a fair mix of security and performance features. You can use Strict protection to block all cookies and trackers, but this may (and often does) break many websites.
Cookies and Site Data: Set whether to allow websites to store your browsing data as files (cookies) that they can later retrieve.
Logins and Passwords: Set whether to remember login IDs and passwords for websites.
Forms and Autofill: Select whether to remember common form field data for use in future web transactions.
History: Set how much or how long to remember your browsing history. If you share the workstation with others, you may want to clear your browsing history after each web session.
Address bar: Set whether past browsing websites, your saved bookmarked pages, or your browsing history should appear as suggestions in your address bar as you type an address.
Permissions: Set permissions to allow or block websites from accessing workstation features such as your location, camera, or microphone.
Firefox Data Collection and Use: Settings that allow Firefox to send technical and usage data back to Mozilla.
Security: Block potentially dangerous website transactions, as well as control any certificates used for secure transactions.
The default privacy settings in Firefox are stricter than many other browsers, providing you a basic level of both privacy and security as you browse the Internet. However, these days you can never be too careful, so use caution when accessing unknown websites!

Sync
If you're using the Firefox browser on more than one device, use this feature to synchronize your bookmarks, browsing history, tabs, passwords, add-ons, and preferences across all your devices.

Extensions and Themes
Manage the extensions, themes, and plugins installed in your Firefox browser. This is a great feature of Firefox, which deserves its own section, discussed next.

Expanding your universe with add-ons
Firefox has a set group of features that it supports in the basic setup. However, with the wide world of web browsing, there's always something you'll run into that's not supported in the basic Firefox setup.
However, don't fear; help is close by! Firefox allows you to add new features to the basic setup with just a few clicks of the mouse button. Firefox supports that through add-ons.
Add-ons are small software programs that add additional features to the basic browser. Firefox has three types of add-ons: 

Extensions: Add new features to the Firefox program, such as customized toolbars and utilities such as dictionaries.
Themes: Allow you to change the look and feel of your entire Firefox browser interface.
Plugins: Provide support for additional multimedia formats, such as video and audio types, directly in the browser window.
Do you ever get irritated at those websites that insist that you download special software just to view the site? The difference between a plugin and an external program is this: A plugin displays the results in the browser, and an external program runs outside the browser. By default, Firefox comes with one plugin installed, as shown in Figure 10-2.
 
FIGURE 10-2: The Firefox plugin list.


The OpenH264 plugin allows Firefox to play videos using the H.264 codec to play inside the browser, without requiring the use of an external video program.

Surfing the web
Firefox is your viewing window into the wonderful World Wide Web. Firefox's primary purpose is to fetch web pages on your command, download all their graphics and related files into your computer's memory, and, finally, render the page for your interactive viewing pleasure.
If you're used to using Microsoft Edge or Safari on the Mac, using Firefox should be a snap. It has all the familiar navigation tools, such as an address bar; Back, Forward, Reload, and Stop buttons; and a feature that stores links to your favorite websites (bookmarks).
Firefox also has a History sidebar feature — press Ctrl+H to show or hide it (see Figure 10-3) — which you can use to access a web page you recently visited.
 
FIGURE 10-3: Firefox with the History Sidebar open.


The tabbed browsing feature enables you to open several websites in the same window. This helps prevent clutter on your desktop from needing several browser windows open to view different websites at the same time. If you need to actually view the different pages at the same time you need to open separate windows.
After you start the Firefox web browser, the website defined as your home page appears in a tabbed page. Then you can use the following shortcuts to keep your browser organized with additional tabs: 

Open a site in a new tab. Press Ctrl+T and a new web page appears within the same Firefox window, but as a tabbed page.
Switch tabs. Click the appropriate tab at the top to go to that site.
Open a new tab through a link. Right-click the link and select Open Link in New Tab. This feature is great for navigating through complex websites where you need to refer to previous pages.

Communicating with Email
Before you start hacking away at trying to set up your email package, you need to grab some information about the Internet Service Provider (ISP) that supports your email address. Most of this information you should be able to obtain either from the information you received from your ISP with your email account, or by calling the Help Desk at your ISP and asking a few simple questions.
The items you need to have handy before you start are: 


Your email address
This should be assigned by your ISP, with a format such as me@myhost.com. You need to remember to enter this in your email package exactly as it appears in your email or people won't be able to respond to your messages!

The type of email server your ISP uses for incoming mail
ISP email servers use several different methods to communicate with email clients. The two most popular are POP (also called POP3 to refer to the version) and IMAP.
The main difference between these two protocols is that POP usually requires you to download all your incoming messages from the ISP server to your local workstation. Once they're downloaded to your PC, the ISP deletes them from the server.
IMAP allows you to create folders on the ISP server and store all of your messages on the server. IMAP servers usually allow you a specific amount of storage space on the server, so you must be careful on how much mail you accumulate. One nice feature of an IMAP mailbox is that you can access your email from multiple devices, because all the mail is on the server and not downloaded to individual devices.

The hostname or IP address of your ISP incoming mail server
Your ISP should provide a hostname or IP address for you to connect to receive your mail, such as pop.isp.com

The type of email server your ISP uses for outbound mail
Sending outbound email require a different protocol than retrieving inbound email. Most ISP email servers use SMTP for sending email from clients.

The hostname or IP address of your ISP outbound mail server
Some ISPs use a separate server for outbound mail than inbound mail. Check with your ISP for the outbound server hostname, such as smtp.isp.com.
Any special ports or passwords needed for authentication in an encrypted session
Nowadays many ISPs require that you log in with your email account to establish an encrypted connection for both inbound and outbound emails. If this isn't a requirement on your ISP server, you should still consider using it if your ISP supports it.
After you have all that information in hand, you're ready to configure your email package. The three main email client software packages you run across in the Linux world are: 

GNOME Evolution
KDE KMail
Mozilla Thunderbird
The following sections walk through the basics of how to use any one of these packages.

Evolving into email
If you're using the GNOME 3 desktop, the default email package is called Evolution. Evolution should remind you very much of Microsoft Outlook. If you like being able to integrate your calendar, address book, task manager, and email, you should feel right at home with Evolution.
This section walks you through the steps of getting Evolution talking with your ISP.
 Not all Linux distributions that use the GNOME 3 desktop install the Evolution email software by default (such as Ubuntu), but it's easy to install from the distribution repository as it's a standard GNOME application. See Chapter 15 on how to do that.

Setting up Evolution
When you start Evolution for the first time, the Evolution Setup Assistant launches. Click Next to proceed past the Welcome screen, after which the Restore from Backup window appears. If you've previously saved a backup copy of your Evolution setup, you can quickly and easily restore it from this window. Click Next if this is just the first time you've used Evolution.
The Identity dialog box (see Figure 10-4) opens next. To fill in this dialog box, complete the following steps: 

Change the Full Name field, if you want.
Some people don't want to use their real name and opt to use a nickname. There may or may not be default values assigned, depending on what other programs you've configured on your machine.
Change the Email Address field if it doesn't match the address your ISP gave you (it probably doesn't).
 
FIGURE 10-4: The Evolution Identity dialog box.




Select the Look Up Mail Server Details Based on the Entered Email Address check box.
This saves you a lot of time in having to manually configure your email server information. Evolution already knows the information for many common ISPs!
 If you want people to respond to a different email account than what you're sending the message from, enter that email address in the Reply-To field. Otherwise, you can keep this field blank. You can also choose to enter your organization in the Organization field.

Click Next to proceed.
If you didn't allow Evolution to automatically find your email server info, or if it couldn't find the info for your particular email server, you'll move to the Receiving Email dialog box.

In the Receiving Email dialog box, select the Server Type from the drop-down box.
The Receiving Email dialog box, shown in Figure 10-5, is where you need to know your email server type (POP or IMAP), your username required to log into the server, and any security settings required.
 
FIGURE 10-5: The Evolution Receiving Email dialog box, with IMAP selected.




Enter the full name for your mail server in the Server text box.
The name may be something similar to pop.example.com.

Enter your login name for checking mail in the Username text box.
If your email address is rich@mytest.com, your username is rich.
Select the security encryption method required to connect to your email server.

Under Authentication, select the appropriate authentication option.
If you don't know what kinds of authentication your mail server uses, click the Check for Supported Types button. If your ISP server supports an encrypted authentication method, Evolution automatically detects and uses it. Typically, the authentication method is just a plain text password, so you can select the Password option.

Click Next to proceed to the secondary Receiving Options dialog box (see Figure 10-6).
Whether this dialog box appears is determined by which type of incoming mail server you're using. If you're not using IMAP and you get a secondary dialog box, it may not match the one shown here, although it does share some of the options shown.
 
FIGURE 10-6: The Evolution Receiving Options dialog box for IMAP mail users.




If you want to check for new email automatically, check the Check for New Mail check box.
If you don't have a permanent connection to the Internet, you may prefer to check mail manually. If so, leave the box unchecked and skip to Step 14.
In the Minutes text box, set how often you want to automatically check for new email.

Select any filter options you want.
Filters allow you to block potential spam messages from downloading.

Click Next to proceed.
You're now finished setting up for incoming mail. In the Sending Email dialog box, shown in Figure 10-7, do the following:
 
FIGURE 10-7: The Evolution Sending Email dialog box.




Change the Server Type entry if yours isn't SMTP.
I assume that you're sending email with SMTP.

Enter the full name of the SMTP mail server in the Host text box.
The name may be something similar to smtp.example.com.

If you were told to use additional authentication for sending mail, select the Server Requires Authentication check box.
These days just about all ISPs require authentication before they allow you to forward email messages. If you don't check this box, skip to the next set of instructions. Otherwise, proceed to the next step.
If you were told to use SSL for security, select the value your ISP has specified from the Encryption Method drop-down list box.

Under Authentication, select the appropriate Type as instructed by your ISP.
If you're not sure, select Check for Supported Types.

Under Username, enter the login name you're supposed to use to authenticate with your outgoing mail server.
This name may be different from the one you use for incoming mail.

Click Next to proceed.
You have now reached the Account Summary section, which summarizes the entries you've made (or Evolution automatically detected) for your email server.

Assign a name for the account used to identify it in Evolution.
The name you assign in the Account Summary section doesn't have to match your name or email address; it's just an identifier used if you use Evolution to track multiple email accounts.
Click Next to accept all the settings, or Back to return to previous dialog boxes to make corrections.

Click Apply to save your settings.
The Evolution program opens, as shown in Figure 10-8.
 If you need to add an email account, just click the down arrow button next to the New button and select Mail Account.


Sending and checking email
The following steps outline how to create a new email and send it: 

Click New.
A Compose Message window opens, as shown in Figure 10-9. If you want to open another new item such as a new contact list entry or a new calendar appointment, click the arrow next to New to open the list of options to choose from.
 
FIGURE 10-8: The Evolution application window.


 
FIGURE 10-9: An Evolution Compose Message window.



Type the recipient's email address (such as bob@example.net) or a list of addresses separated by commas (such as bob@example.net, tom@example.org) in the To text box.

If you need to add a CC (Carbon Copy) or BCC (Blind Carbon Copy) to the list of recipients, open the mail message's View menu and select the appropriate field(s) to appear and then enter the appropriate address(es) into those fields.
Don't be confused on the CC and BCC options. Mail addresses added to the CC field appear in the header of the mail message for everyone to see. Mail addresses added to the BCC field don't appear in the header of the mail message (but the message is still delivered to them). This is a sneaky way to send someone a copy of a message without others knowing it, and is also a great way of sending messages to a group of people if you don't want each one to see the other email addresses.
Type the topic of your email into the Subject text box.

In the lower window, type the body of your email.
Use the handy formatting buttons and the Format menu if you want to "pretty up" your email. If you want to use the formatting buttons, set your Format type to HTML first.

If you want to add a signature to the bottom of your email, click the drop-down list box next to Signature and select Autogenerated.
To create custom signatures, go to the main Evolution window and choose Edit ⇒   Preferences to open the Evolution Preferences dialog box Select the account you want to create the signature(s) for and then click the Edit button to open the Evolution Account Editor (see Figure 10-10). In this dialog box, in the Identity tab, click Add New Signature. Here, you can create and format your new signature, and after you click the Save and Close button, you can choose which signature should be the default in the Identity tab's Signature drop-down list box. Get rid of the extra dialog boxes by clicking OK or Close on each one.

When you finish typing your message, click the Send button.
The email is now added to your Outbox, and sent if the account is configured to send and receive mail automatically. If not, you can edit messages in the Outbox if you want.

Click the Send/Receive button.
Your email goes out, and Evolution checks for new incoming mail.
Take some time to really explore Evolution. As you can see just from the figures in this chapter, this program has many features, including the ability to filter junk mail. 
FIGURE 10-10: The Evolution Account Editor dialog box.




Working with KMail
Linux distributions that use the KDE Plasma desktop often provide the KMail application for email access. KMail is another all-in-one package similar to Evolution — it provides an email client, calendar, and task scheduler all in one window.
This section walks through the steps you need to take to get your KMail software working with your ISP, then walks through using it to send and receive email.

Setting up KMail
You can usually find the KMail application in the Internet group of the Applications menu section (see Chapter 5). The first time you start KMail you're greeted by the KMail wizard.
 If you're previously opened KMail and didn't create an account, you won't be greeted by the wizard. Just choose Settings ⇒   Add Account to start the wizard to add a new account.
Click the Next button to get the configuration process started. Before you can start sending and receiving email you need to tell KMail how to interact with your ISP's email server. Unlike the monolithic Evolution setup wizard, KMail's wizard is a little more compact: 

Enter your account information, leave the Find Provider Settings on the Internet check box selected, and click Next.
The Account Assistant dialog box asks for your real name, your email address, and the password for your email account. (See Figure 10-11.)
 
FIGURE 10-11: The KMail Account Information dialog box.



(Optional) If KMail recognizes your email server provider, it fills in all the required information for you. If not, manually enter the appropriate information. Click Next to move on.

Create an encryption key so you can send encrypted emails, and click Next.
Some ISPs keep your encryption key on the server, while others don't. KMail attempts to upload your encryption key to the server if that's allowed.

Select your receiving email server type, and click Next.
The Select Account Type allows you to select the protocol required to retrieve email from your ISP server, such as POP3 or IMAP.

Select the Basic setup in the KWallet wizard and click Next.
Just like keeping little slips of paper in your wallet, the KWallet application stores all your passwords in a single location that applications can access only with your approval. This makes storing passwords lots easier, as you only have to remember one password to allow applications to access your stored passwords.

Enter your username, incoming server address, and outgoing server address. Click Next when done.
The KMail wizard attempts to contact your email server and create your account. When it completes, the KWallet application appears, asking you to store your account password in an encrypted location on your workstation. Fill out the required information and the main KMail window opens, shown in Figure 10-12.
 
FIGURE 10-12: The main KMail window.




When the KWallet application appears, enter a password for the wallet to store the password required to access your email.
The KWallet application creates a single location (called the wallet) to store any passwords you use from desktop applications. This way you only need to know the password to your wallet, and it does the rest!
After you create a new account you'll go to the main KMail window. The main KMail window is divided into four sections: 

Favorite folders: Allows you to quickly access popular folders if you have more than one email account configured
Folder: Displays all the folders used in KMail for the account. Each email account has a separate group of folders
Message list: Displays your messages, sorted by any of the columns (just click a column to sort by it)
Preview pane: Displays the currently selected email message
From the main KMail window you can view your inbox by simply selecting the inbox entry in the Folders section. Click the Check Mail icon in the toolbar to manually connect with your ISP server to check your mailbox.
Sending email messages is as easy as clicking the New button in the toolbar. The Composer window, shown in Figure 10-13, appears with the standard email layout, which is similar to Evolution. (Refer to Figure 10-9.)
 
FIGURE 10-13: The KMail Composer window.




The amazing Thunderbird
While Evolution and KMail are geared toward their prospective desktop environments, you can use one email client package in any desktop environment. Thunderbird is part of the Firefox family of software packages from Mozilla. It provides a look-and-feel very similar to Evolution.
Due to its popularity, you can usually find Thunderbird in the software installation repository of most Linux distributions (see Chapter 15), and it's now even the default email client package installed in Ubuntu.
Once you have Thunderbird installed, you need to go through the configuration wizard to get things set up. Just start Thunderbird (it should be located in the Internet group of your menu system) and the wizard, shown in Figure 10-14, appears.
 
FIGURE 10-14: The Thunderbird New Account Setup wizard.


From here just follow these steps to get things set up: 

Enter your name and email address in the Identity page, and click Continue.
These are the values that appear in your outgoing email messages, so enter what you want others to see. Select the Remember password check box if you don't want to enter your password each time you open Thunderbird.
Thunderbird attempts to auto-configure your email server information. If it succeeds, click Done. If it fails, continue to Step 3.

Enter the user ID information to connect with your incoming and outgoing ISP mail servers, then click Done.
Fill out the required information in the form for your specific inbound and outbound email servers (see Figure 10-15).
 
FIGURE 10-15: The Thunderbird manual email server dialog box.


After setting up your email configuration the main Thunderbird page appears, as shown in Figure 10-16.
 
FIGURE 10-16: The main Thunderbird mail page.


From here you should recognize the basic email interface features, such as the Write button in the toolbar for creating a new message, or the Get Messages button for checking for new mail on the email server.
As with KMail, if you need to customize your ISP connections you need to do that in the Account Settings page. Just click the menu button and choose Preferences ⇒   Account Settings to open the Account Settings window, shown in Figure 10-17.
 
FIGURE 10-17: The Thunderbird Account Settings window.


From here you can select the Server Settings option on the left-hand side and fill out the additional information required to connect with your incoming ISP server, such as an encryption type.

Ol' Fashion File Transfers
While websites are all the rage, there are times where you just need to perform a simple file transfer to move data or application files around. There are still plenty of Internet sites that require you to download files by using the old File Transfer Protocol (FTP) method. You will often find file repositories for applications, utilities, and other neat stuff on FTP sites.
Most Linux distributions include a command line ftp client (simply called ftp), but don't include a graphical FTP client by default. The three most popular graphical FTP programs in the Linux world are: 

gFTP: The GNOME project's graphical FTP client
Kget: The KDE project's graphical FTP client
FileZilla: A graphical FTP client package created to run on any desktop, including Windows and Mac
The FileZilla package is available in most Linux distributions, and works equally well in both the GNOME 3 and KDE Plasma desktop environments. It also has support for secure FTP sessions, which are more popular these days. If you're looking for a robust graphical FTP client program, try out FileZilla by installing it using the standard techniques discussed in Chapter 15. Once you have it installed, follow these steps to give it a whirl: 

Start FileZilla from the Internet group in your desktop menu system. In the GNOME 3 menu, click the application launcher and look for FileZilla.
The main FileZilla window appears, as shown in Figure 10-18. FileZilla provides a side-by-side look at your filesystem and the remote FTP server's filesystem. By default, FileZilla points to your home directory as the local directory (shown in the left-side list box).
 
FIGURE 10-18: The FileZilla main window.




Enter the hostname of the remote FTP server in the Host text box, the username in the Username text box, and the password in the Password text box.
If you've connected to a host previously, its hostname and user login name appear in the text boxes.
When the remote FTP session starts, a list of files and folders available appears in the right-side list box.
Find and select the file(s) you want to download, select the folder to download them to in the left-side list box, and then drag and drop to transfer the file(s).
When finished, click the disconnect icon in the toolbar to disconnect and end the FTP session.
It's as simple as that. Using a graphical FTP client makes transferring lots of files almost painless.

Talking with Skype
Real-time communication with others across the Internet has become a hot topic, with lots of different websites and applications available to chat with your friends across the street or across the globe! Applications such as Zoom and Microsoft Teams have become popular, but one of the earliest real-time communications packages is Skype.
Many Linux distributions install Skype as the default IP phone software. Unfortunately, neither Ubuntu nor openSUSE does, but you can find it in their software repositories. If you prefer, though, you can download the latest version of Skype directly from the Skype website. To do that, just do the following: 
Point your web browser to www.skype.com.

On the Skype home page, click the Download link.
You're taken to the Download Skype page.

Click the version of Skype for Linux appropriate for your distribution.
The Download page attempts to automatically detect your system type and suggest an appropriate download package. If it guesses wrong, click the down arrow and select the package appropriate for your system; RPM for Red Hat-based distributions (such as openSUSE), DEB for Debian-based distributions (such as Linux Mint), or SNAP for distributions that utilize the SNAP database (such as Ubuntu).

Either select the Open with Software Installer option and click OK, or click to download the install file to your workstation.
If you have the option to immediately open the Software Installer, when the download is complete the Software Installer program for your distribution (see Chapter 15) starts. If you download the install file to your workstation, you need to find it, and then click it to start the Software Installer program.

Start the installation from your Software Installer.
Depending on your distribution the Software Installer may have to download additional files to support the Skype installation. This happens automatically by the Software Installer, so just sit back and watch the installation happen.

When the installation finishes, Skype should appear in the Internet menu group on your desktop. Click the entry to start Skype.
When Skype starts, a wizard appears, allowing you to either enter your Skype account information or connect to a Skype server and create a new account, as shown in Figure 10-19. After you have an account, you can use the Skype interface to connect to the Skype server and start placing calls!
 
FIGURE 10-19: The Skype Internet telephony client new account window.




Working with Other Internet Tools
You may want to explore a variety of other types of tools, depending on your needs. This section covers some pointers to get you started, so if you go to Chapter 15 and want to add the appropriate software (or find yourself digging through menus and wondering what the program may be called), you aren't completely lost. 

Instant messaging: While messaging is a common feature of mobile phones, you can also use your Linux desktop to message others using a common IM service. Look for packages such as GNOME Pidgin and KDE Kopete to do this.
IRC programs: Although the IM clients support IRC (Internet Relay Chat) these days, you may prefer a program that's used only for IRC. Common programs for this purpose are X-Chat and KIRC.
File sharing: LimeWire, and its newest fork WireShare, are popular file-sharing applications if you want to use the Gnutella network.
RSS readers: The Really Simple Syndication (RSS) protocol allows websites to send concise content updates to subscribers so they don't have to reload an entire web page. While popular in the old dialup modem days, RSS feeds are still a handy way to automatically retrieve new content, especially from websites that constantly provide updated news stories. Firefox has a number of RSS extensions designed for it. In addition, Straw is a popular RSS program.
In general, if you're not sure what programs to use, do a web search on the type of thing you want to do (such as RSS) and the word Linux. 







Chapter 11
Putting the X in Text

IN THIS CHAPTER
 Viewing the contents of text files
 Manipulating text files in nano
 Working with text files in gedit

From text editors to word processors, Linux offers a wide variety of options for working with words. These days with software packages trying to incorporate multiple features, it can be difficult to tell the difference between a text editor and a word processor. By text editor, I refer to a tool that's primarily used by programmers to create plain text files with no formatting. While word processors can do that too, their primary focus is on creating fancy documents that format text using different fonts and styles. In this chapter, I take a look at different ways to work with plain text files, using some simple text editors in both the non-GUI and GUI environments. In Chapter 12, I take a look at office suites for those who would rather do word processing.

Viewing the Contents of a Text File
Almost all configuration files in Linux are text files. In addition, many pseudoprograms (called shell scripts), all HTML documentation, and many other items in your system are text files. Fortunately, if you just want to see what's in a text file and don't want to do anything to its contents, you don't have to use an editor or word processor. You can use three command-line commands to view text files: cat, less, and more. I bet that you will grow to love them.
Yes, that first command is cat, and it's taken from the word concatenate, which means to bring together end to end — you can use the cat command on multiple-text files to have their text joined, one file's contents directly after another's. Typically you use this command in the Linux world in the format cat filename, where the contents of the file filename are displayed on the screen. For example, if you create the short text file greetings and then type cat greetings, you see the following: 
$ cat greetingsThese are the contents of the greetings file.Meow!$ _
Of course, if the file contains more than a screen's worth of information, cat spews it all out at one time like a big hairball, and all but the last screen of text scrolls off the screen. It's a good thing that you have some other choices. The one you're likely to choose is less, which displays the contents of a file a full screen at a time. Then you press the spacebar to continue to the next screen, or the B key to scroll backwards one screen. You can also use the arrow keys to move up and down one line at a time, if you want.
An alternative to less is more. The main difference between the two is that with more, you can move only forward through the file and see only a screen's worth of information at a time. You can't back up.
To use either less or more, the format is similar to the format used with the cat command: less filename or more filename. When you finish reading the document, press Q to exit. (Remember, you can't change any of the text in the document with less or more.)

Editing Text Files with nano
If you aren't using (or can't use) the GUI, you have numerous text editors available to you. The most powerful of these are vi and emacs, which you'll hear many people go on about. However, both these programs require a learning curve. For beginners who want to just edit the file and move on, I recommend nano, which offers a friendly, menu-driven interface.
To open a file in nano, type nano filename, such as nano file1. The file opens in the nano editor, as shown in Figure 11-1.
You can then edit or type in that file as much as you need to.
 
FIGURE 11-1: The file file1 open in the nano editor in Ubuntu.



Saving your work as you go
To save your file's contents without closing it (so that you can keep working on it): 

Press Ctrl+O to Write Out.
A prompt appears toward the bottom of the screen, asking for the name of the file and offering the current name as the default option.

If you want to use the same name, press Enter. If you want to change the name, make your changes and then press Enter.
The lower part of your screen now displays that it wrote (saved) a certain number of lines.
Get back to work!

Saving and moving on with your life
To save your file's contents and close it (because you're done working on it for now) — or to close the file and not save the changes — do the following: 

Press Ctrl+X to Exit.
A prompt appears toward the bottom of the screen, asking whether it should save the modified buffer. This question is a fancy way of asking whether you want to save your changes.

Press Y to save your changes or press N to not save them.
If you press Y, you're asked for the name of the file and offered the current name as the default option. If you press N, nano closes and exits, so you're finished with these steps.

If you want to use the same name, press Enter. If you want to change the name, make your changes and then press Enter.
The nano editor saves and closes your file.

Going with gedit
You're not stuck with just command-prompt-based text editors in Linux. Lots of graphical options are available. In this section, I cover gedit (Figure 11-2) because it's the default GUI text editor for the GNOME 3 desktop.
 
FIGURE 11-2: The gedit window with a blank file, in Ubuntu.


 If you're looking for the gedit application in the application launcher, GNOME just calls it Text Editor.

Entering and editing text in gedit
gedit is strictly a text editor, in that you use it to generate raw text, whereas a word processor creates marked-up text that can be opened only by programs that can read that word processor's file formatting. If you want to add bold, italics, underlines, or any other special features to your document, proceed to Chapter 12.
To enter text in gedit, just click within the big white space and start typing. You have access to the standard collection of editing tools, such as cut, paste, and copy. To use these, select the text you want to work with and then right-click and choose the appropriate command from the context menu.
The gedit editor utilizes plugins to perform specialized functions to help as you type. Two of my favorites are the Date/Time plugin, which automatically enters the current date and time for you, and the Snippet plugin, which can automatically complete common words for you. Just start typing a word and press the Tab key to see the possible ways to complete it. Check out the "Plugins" section coming up for details on how to install new plugins.

Saving your work
As with most programs, you have two choices for saving your work. You can save your work and keep going or save it and then close the program. To just save the file and keep going, follow these steps: 

Click the Save button.
This button appears in the window title area. If you have never saved this file, clicking it opens the Save As dialog box.

If necessary, browse through the directories in the left or right pane until you're in the directory where you want to save the file.
Double-click the name of a directory to enter it or double-click the entry in the left pane to jump to its location first.
Type the file's name in the Name text box.

Click Save to save the file.
The dialog box closes.
To close gedit, follow these steps: 

Choose Text Editor ⇒   Quit from the panel, or click the Close button in the Text Editor window.
If you haven't saved this file since the last time you changed it, the Question dialog box appears.

If you see the dialog box, click Save to save your work or click Close without Saving to abandon it.
The program closes, unless you have more than one file open, in which case you see the Question dialog box for each file you have altered but not saved.

Setting preferences
As you saw when looking at the Plugins area, the application menu contains a Preferences item. This allows you to set the look and feel of gedit. The gedit Preferences dialog box, shown in Figure 11-3, contains a few different features.
 
FIGURE 11-3: The gedit Preferences dialog box.


This is where you can customize the operation of the gedit editor. The Preferences dialog box contains four tabbed areas for setting the features and behavior of the editor.

View
The View tab provides options for how gedit displays the text in the editor window: 

Display features: Enable options such as showing line numbers, margins, the status bar, and grid lines.
Text Wrapping: Determines how to handle long lines of text in the editor. The Enable Text Wrapping option wraps long lines to the next line of the editor. The Do Not Split Words over Two Lines option prevents auto-inserting hyphens to long words that can be split between two lines.
Highlighting: Enables features to highlight the current line where the cursor is located, and highlighting parentheses, bracket, and brace pairs in programming code, allowing you to easily match if-then statements, for and while loops, and other coding elements that use these elements.
The line numbering and bracket matching features provide an environment for programmers to troubleshoot code that's not often found in some text editors.
 If you're using gedit to edit program code, choose View ⇒   Highlight Mode. You can select the programming language you're using from the list to customize gedit. Your code appears with the different elements (such as variable names, constants, and text) in different colors!

Editor
The Editor tab provides options for how the gedit editor handles tabs and indentation, along with how files are saved: 

Tab Stops: Sets the number of spaces skipped when you press the Tab key. The default value is eight. This feature also includes a checkbox that when checked, inserts spaces instead of a tab skip.
Automatic Indentation: When enabled, gedit automatically indents lines in the text for paragraphs and code elements (such as if-then statements and loops).
File Saving: Provides two features for saving files, whether to create a backup copy of the file when opened in the edit window, and whether to automatically save the file at a preselected interval.
The autosave feature is a great way to ensure your changes are saved on a regular basis to prevent catastrophes due to crashes or power outages.

Font & Colors
The Font & Colors tab allows you to configure (not surprisingly) two items: 

Font: Allows you to select the default system font, or to select a customized font and font size from a dialog box
Color Scheme: Allows you to select the default color scheme used for text, background, selected text, and selection colors, or custom choose a color for each category
The default colors for gedit match the standard GNOME desktop theme selected for the desktop. These colors change to match the scheme you select for the desktop.

Plugins
The Plugins tab provides control over the plugins used in gedit. Plugins are separate programs that can interface with gedit to provide additional functionality. The Plugins tab is shown in Figure 11-4.
 
FIGURE 11-4: The gedit Plugins Preferences tab.


Several plugins are available for gedit, but not all of them are installed by default. To use these features, you need to follow these steps: 

Choose Preferences from the gedit application menu.
The Preferences dialog box opens.

Click the Plugins tab.
The Plugins tab's contents appear.
Click an item you're interested in within the Plugins tab.

Click the About button to get more information.
The information is contained within the small About window that appears.
Click Close to get rid of the About window.

If you want to use this plugin, select its check box.
The plugin is activated if a check appears in the check box.

If the Preferences button becomes active for the plugin you just selected, click the button to open the tool's plugin configuration dialog box.
This dialog box is different depending on which plugin you're using.
When you're finished with the individual plugin's configuration, click OK to return to the Preferences dialog box.
If you want to examine more plugins, return to Step 3.
When you're finished selecting plugins, click Close to close the Preferences dialog box.
You can now access the plugins from your gedit menus. Each one is placed in its appropriate location: For example, Insert Date/Time appears in the Tools menu.

Editing Text in the KDE Plasma Desktop
Not to be left out, the KDE Plasma environment also provides a way to graphically edit text files. In fact, it offers two different packages, KWrite and Kate. If you do your work in the KDE Plasma world you'll want to get familiar with at least one of them. In this section, I take some time to go over how they both work.
 Some Linux distributions install only one of the two editors, while others install both of them. If your Linux distribution only installs one, it's easy to use the software installation tool (see Chapter 15) to install the other, as both are part of the standard KDE project application suite.

Writing with KWrite
The basic editor for the KDE Plasma environment is KWrite. It provides simple word processing-style text editing, along with support for code syntax highlighting and editing.
The default KWrite editing window is shown in Figure 11-5.
 
FIGURE 11-5: The default KWrite window in openSUSE.


You can't tell from Figure 11-5, but the KWrite editor recognizes several types of programming languages, and uses color coding to distinguish constants, functions, and comments. If you're a programmer (or an aspiring programmer) you'll love this feature!
The KWrite editing window provides full cut and paste capabilities using the mouse and the arrow keys. Just as in gedit, you can highlight and cut (or copy) text anywhere in the editor area and paste it at any other place.
To edit a file using KWrite, you can either select KWrite from the KDE menu system on your desktop (some Linux distributions even create a panel icon for it), or start it from the command line prompt, and specify the file you want to open: 
$ kwrite factorial.sh
The kwrite command has several command line parameters you can use to customize how it starts: 

--stdin: Causes KWrite to read data from the standard input device instead of a file. This is commonly used in scripts to send output directly to the KWrite editor.
--encoding: Specifies a character encoding type to use for the file.
--line: Specifies a line number in the file to start at in the editor window.
--column: Specifies a column number in the file to start at in the editor window.
The KWrite menu bar contains the following items: 

File: Load, save, print, and export text from files.
Edit: Manipulate text in the buffer area.
View: Manage how the text appears in the editor window.
Bookmarks: Set a bookmark at specific lines in the document so you can quickly jump back to them at any time.
Tools: Contains specialized features to manipulate the text.
Settings: Configure the way the editor handles text.
Help: Get information about the editor and commands.
The Edit menu bar item provides all your text editing needs. Instead of having to remember cryptic key commands (which by the way, KWrite also supports), you can just select items from the Edit menu, as shown in Table 11-1.

TABLE 11-1 The KWrite Edit Menu Items 
Item
What It Does
Undo
Reverses the last action or operation.
Redo
Reverses the last undo action.
Cut
Deletes the selected text and places it in the clipboard.
Copy
Copies the selected text to the clipboard.
Paste
Inserts the current contents of the clipboard at the current cursor position.
Clipboard History
Display previous clipboard entries so you can select them.
Copy as HTML
Copies the selected text as HTML code.
Select All
Selects all text in the editor.
Deselect
Deselects any text that is currently selected.
Block Selection Mode
When enabled, allows you to select text between columns instead of whole lines.
Input Modes
Sets input mode as either normal or vi mode.
Overwrite Mode
Toggles insert mode to overwrite mode, replacing text with new typed text instead in just inserting the new text.
Find
Opens the Find Text search box, which allows you to perform a text search.
Find Variants
Finds next, previous, selected, or selected backwards modes.
Replace
Opens the Replace With search box, which allows you to perform a text search and replace.
Go to Line
Opens the Goto dialog box, which allows you to jump to a matching bracket if a bracket is selected, jump to the next or previous modified line, or enter a line number. The cursor moves to the specified location.

The Find feature displays a search text box at the bottom of the KWrite window to enter text to find. KWrite then highlights all matching entries in the document.
The Find Text feature uses the word at the current cursor location as the default text value to search for. You can use a few buttons to customize the search as well, such as whether to perform a case-sensitive search, or to only look for whole words instead of finding the text within a word.
The Tools menu bar item provides several handy features for working with the text in the editor area. Table 11-2 describes the tools available in KWrite.

TABLE 11-2 The KWrite Tools 
Tool
What It Does
Read Only Mode
Locks the text so no changes can be made while in the editor.
Mode
Select the filetype scheme used in the text, such as editing programming languages.
Highlighting
Highlights text based on content, such as program code, or a configuration file.
Indentation
Automatically indents lines based on a programming language selection.
Encoding
Sets the character set encoding used by the text.
End of Line
Determines whether to use the Unix (default), Windows, or Mac OS method of line termination.
Add Byte Order Mark
For multi-byte character sets (such as UTF16), sets whether to include the Byte Order Mark (BOM) character.
Scripts
Lots of pre-built scripts for working with programming code, such as finding matching HTML tags, increasing or decreasing numbers, and moving sections of code.
Invoke Code Completion
Enable completing code statements when appropriate.
Word Completion
Enable completing common words already used in the document.
Spelling
Enables and sets spell-check features
Clean Indentation
Returns all paragraph indentation to the original settings.
Align
Forces the current line or the selected lines to return to the default indentation settings.
Toggle Comments
For programming code that contains comment lines, this option allows you to hide the comments and only view the programming code.
Uppercase
Sets the selected text, or the character at the current cursor position, to uppercase.
Lowercase
Sets the selected text, or the character at the current cursor position, to lowercase.
Capitalize
Uppercases the first letter of the selected text or the word at the current cursor position.
Join Lines
Combines the selected lines, or the line at the current cursor position and the next line, into one line.
Apply Word Wrap
Enable word wrapping in the text. If a line extends past the editor window edge, the line continues on the next line.

There are lots of tools for a simple text editor! The Settings menu includes the Configure Editor dialog box, shown in Figure 11-6.
The Configure Editor dialog box uses icons on the left side for you to select the feature in KWrite to configure. When you select an icon, the right side of the dialog box shows the configuration settings for the feature.
 
FIGURE 11-6: The KWrite Configure Editor dialog box.


The Appearance feature allows you to set several features on how the text appears in the text editor window. You can enable word wrap, space highlighting, and the word or line counter from here. With the Fonts & Colors feature you can customize the complete color scheme for the editor, determining what colors to make each category of text in the program code.

Meet Kate
The Kate editor is the flagship editor for the KDE Project. It uses the same text editor as the KWrite application (so most of those features are the same), but it incorporates lots of other features into a single package.
The Kate editor handles files in sessions. You can have multiple files open in a session, and you can have multiple sessions saved. If you have one or more sessions saved, Kate provides you with the choice of which session to return to, as shown in Figure 11-7.
 
FIGURE 11-7: The Kate session dialog box.


When you close your Kate session, it remembers the documents you had open, and displays them the next time you start Kate!
After selecting a session, you see the main Kate editor window, shown in Figure 11-8.
The left side frame shows the documents currently open in the session. You can switch between documents just by clicking the document name. If this frame gets in the way, you can remove it by choosing View ⇒   Tools.
To start a new file, just click the Create New Document icon on the left side. To open an existing file, just click the Open an Existing Document icon. This allows you to graphically browse to locate your file.
 
FIGURE 11-8: The main Kate editing window.


Kate also supports multiple tabs, but with a twist! Choose View ⇒   Split View to select how tab windows appear: 

Split the current windows vertically
Split the current windows horizontally
Move the splitter up, down, left, or right
Close the current window
To set the configuration settings in Kate, choose Settings ⇒   Configure Kate. The Configure dialog box, shown in Figure 11-9, appears.
The Editor settings area is exactly the same as for KWrite. This is because the two editors share the same text editor engine. The Application settings area allows you to configure settings for the Kate items, such as controlling sessions, the documents list, and the editor appearance. Kate also supports external plugin applications, which can be activated here. One of my favorite plugins for the Kate editor is the built-in terminal window, shown in Figure 11-10.
The terminal button at the bottom of the text editor window starts the built-in terminal emulator in Kate (using the KDE Konsole terminal emulator). This feature horizontally splits the current editing window, creating a new window with Konsole running in it. You can now enter command line commands, start programs, or check on system settings without having to leave the editor! To close the terminal window, type exit at the command prompt.
 
FIGURE 11-9: The Kate Configure dialog box.


 
FIGURE 11-10: The Kate built-in terminal window.


 







Chapter 12
Word Processing and More with LibreOffice

IN THIS CHAPTER
 Installing the LibreOffice suite
 Completing office tasks: LibreOffice Writer (word processing), Calc (spreadsheets), and Impress (presentations)
 Using other programs: LibreOffice Draw (drawing), Base (database), and Math (formulas)

These days, just about everyone who has a computer has at least one office suite at their fingertips. If they're Microsoft Windows users, this suite is probably Microsoft Office, although it may be another worthy contender, such as Corel WordPerfect Office, or if your PC is connected to the Internet, the Google suite of programs. In Linux, typically the suite is LibreOffice, which has separate programs for word processing, spreadsheets, presentations, and even working with databases.
After you figure out how to use one of the programs in this suite, you may be happy to find that the others are designed to look and work in very similar ways. You can even open and save files in Microsoft Office format, if you need to share them with people who are using it — and you can edit the Office files people send you, too.
That's enough about LibreOffice. In this chapter, you can actually use it!
 Apache OpenOffice is another open source office suite for Linux. Actually, Apache OpenOffice and LibreOffice come from the same parent — OpenOffice.org. In 2010 OpenOffice.org was bought by Oracle, which concerned many in the open source community. In 2011 the original developers of OpenOffice.org split and created LibreOffice from the same source code base. Oracle then turned OpenOffice.org over to the Apache Foundation, which renamed it Apache OpenOffice. Both Apache OpenOffice and LibreOffice have similar features, but it appears at least as of now, that LibreOffice is the more popular of the two packages and is commonly installed by default in most Linux distributions.

Installing the LibreOffice Suite
Before you can take off creating your masterpieces, you must make sure that LibreOffice is available. When you install Ubuntu or openSUSE, the LibreOffice suite of software packages is installed automatically. For other Linux distributions you may need to install it separately.
The full LibreOffice suite includes six separate programs: 

Writer for word processing
Calc for spreadsheets
Impress for presentation graphics
Draw for drawing graphics
Base for creating and using databases
Math for creating complex mathematical formulas
However, not all Linux distributions install all these pieces. For example, Ubuntu doesn't install the Base package by default.
If you chose not to install the Office productivity software at installation time, or you need to install one of the packages that wasn't installed by default in your Linux distribution, don't sweat it; you can do that now without having to completely reinstall your Linux distribution. Just use Chapter 15 to find how to add the LibreOffice packages from the software package manager used in your distribution.
After you've installed the LibreOffice packages, most of them are listed in the GNOME 3 or KDE Plasma application menus. The two oddballs are the Draw and Math packages, which unfortunately often don't rate a listing of their own.
To access either of these packages, you need to start one of the other LibreOffice packages (such as Writer), and then choose File ⇒   New. The New menu area contains the options for creating a new Drawing (which starts Draw) or a new Formula (which starts Math).
 In some Linux distributions the Writer package even has its own quick-launch icon on the panel. Just a single click of the icon launches Writer with a blank document.

Word Processing with LibreOffice Writer
Word processors are almost required equipment these days. Kids use them to write letters to their grandparents. Grandparents use them to write letters to their grandkids. Whether you're working on the great American novel or a school book report, LibreOffice Writer has all the best features you expect to find these days in a word processor.

Taking a tour of LibreOffice Writer
Before you proceed, take a look at the GUI layout shown in Figure 12-1.
 
FIGURE 12-1: The LibreOffice Writer layout.



Menu bar
Along the top of the window is the menu bar, something you should be used to if you typically work with Windows programs. LibreOffice Writer has all the features you expect from a modern word processor. It has too many menu options to cover in depth, so I give you instead a (nonexhaustive) summary of what you find on each major menu: 

File: The usual Open, Save, Save As, Print, and Print Preview (or Page Preview) commands, along with a set of wizards (scripts that help you create a fax, letter, or convert a document saved in a Microsoft format), plus the ability to send documents through email, create templates, create web pages, and to access your database information
Edit: The usual Select All and Find commands, along with change tracking, document merging, and document comparing
View: The usual zoom functions and toolbars, along with the abilities to show or hide formatting characters, and to see what the document would look like as a web page
Insert: The usual page breaks and special characters, along with indexes, tables, bookmarks, headers, footers, and cross-references
Format: The usual character, paragraph, and page settings, along with styles, autoformatting capabilities, and columns
Styles: A set of predefined text styles such as headings, emphasized, or various list types
Table: The usual table control options, including the ability to insert, delete, and select cells, convert between tables and text, and more
Form: Standard form elements such as text boxes, check boxes, lists, predefined fields such as time and date
Tools: The usual spell-checking and thesaurus entries, in addition to hyphenation, autocorrection, and a bibliography database
Window: Commands to open specific windows, close windows, or open a new window
Help: The online user guide, and view information about Writer
These menus have more features than what is listed here. Go through and take a look; you may find a new favorite feature in there somewhere.

Standard toolbar
Beneath the menu bar is the standard toolbar. Each icon in this series represents a different functionality, which is detailed in Table 12-1.
 If the entire standard toolbar doesn't fit in the window size, Writer puts a drop-down button at the end. Click the drop-down icon to see and access the remaining toolbar icons.

TABLE 12-1 The LibreOffice Writer Standard Toolbar, from Left to Right 
Button or Item
What You Can Do
New
Create new documents of various types. Click the downward arrow to select a particular type of document to create, from among any of the LibreOffice (OOo) types.
Open
Open an existing file for reading or editing.
Save
Save the current document. If you haven't saved this document before, the Save As dialog box opens.
Export Directly as PDF
Open a Save As dialog box with PDF selected as the file type.
Print
Send a file to the default printer.
Print Preview
Show this page as it would look if you printed it. To return from preview mode, click Close Preview.
Cut
Remove the selected object from the document and save it in memory.
Copy
Make a copy of the selected document text and save it in memory.
Paste
Place the text from memory into the document at the cursor's current location. Click the down arrow to see options of how the text can be pasted.
Clone Formatting
Pick up the formatting of the first text you click and apply it to the second text you click.
Undo
Undo the last change you made to the document. Click the down arrow to choose how far you want to back up to.
Redo
Reinstate the last change to the document after using Undo to cancel it. Click the down arrow to choose how far you want to redo.
Find and Replace
Search for text and replace it.
Spellcheck
Run the spell checker on your entire document or the selected text.
Toggle Formatting
Turn formatting marks (such as paragraphs) on or off.
Insert Table
Insert a new table. Click the down arrow to drag and choose how many rows and columns the table should have.
Insert Image
Add a picture to the document.
Insert Chart
Add a chart created from Calc.
Insert Text Box
Add a text box area within the document.
Insert Page Break
Create a page break to force a new page.
Insert Field
Add a special data field, such as the current date or time.
Insert Special Characters
Provides a method for adding special characters not found on the keyboard.
Insert Hyperlink
Add a clickable URL hyperlink to the document.
Insert Footnote
Add and format a footnote to the page.
Insert Endnote
Add and format and endnote to the document.
Insert Bookmark
Set a bookmark to easily jump back to this spot in the document.
Insert Cross-reference
Mark a section of text as a cross reference to another location in the document.
Insert Comment
Add a comment outside of the document text.
Show Track Changes Functions
Enable and disable the ability to track changes to the document.
Insert Line
Draw a simple line in the document.
Insert Basic Shapes
Add a simple shape to the document.
Show Draw Functions
Enable the Draw toolbar at the bottom of the window to perform more complicated drawing functions.


Formatting toolbar
The Formatting toolbar is directly below the standard toolbar in a default LibreOffice setup — though not on all distributions. As usual, you can remove the Formatting toolbar at any time by using the View menu. This series of icons allows you to click buttons and expand drop-down list boxes that represent standard word-processing functions, such as styles, fonts, font sizes, and formatting instructions. Most features on this toolbar are identical to what you see in most modern word processors. The button for paragraph background formatting is the only one that's particularly unusual.
 This toolbar actually changes depending on what you're doing. If the cursor is within a table, for example, the Formatting toolbar contains useful buttons for working with tables.

Ruler
Directly below the Formatting toolbar in a default LibreOffice setup is the ruler. All modern word processors offer this item, which marks out the margins and tabs, for example, of your document in the measuring system of your choice. To change which system you want to use, right-click the ruler to open the Measurements dialog box.

Your document
Oh, yeah — that big, blocked-off white space that takes up most of the window. That's where you work on your documents! Just click in there and start typing. You can also access a Formatting shortcut menu by right-clicking in the document section.

Working with Writer files
LibreOffice Writer can work with lots of different file types. This allows you to create documents that can be used with many different types of word processing systems.
Not only can you save new documents in various formats, but you can also read documents created on other word processing programs. Here's a list of the different document types you can use with LibreOffice Writer: 

OpenDocument (.ODT) format: The default LibreOffice document format, a proposed open standard that may one day be supported by all word processing programs.
Microsoft Word 2007-365 (.DOCX) format: Yes, you can read and write Word documents with Writer.
Microsoft Word 97-2003 (.DOC) format: And even some of the older Word formats.
Rich Text (.RTF) format: A standard format for saving basic font and document information.
Plain Text (.TXT) format: You can also choose the character encoding scheme used to store raw text with no formatting information.
Extensible Markup Language (.XML) format: A standard used for easily identifying data objects across multiple platforms.
Hypertext Markup Language (.HTML) format: Save your documents in HTML format for viewing as web pages.
Although not available in the Save As dialog box, the LibreOffice Writer toolbar allows you to export any format document to the PDF document format. This feature alone can save you from having to purchase an expensive commercial product (from an unnamed commercial software company).

Spreadsheets with LibreOffice Calc
From tracking bowling scores to performing complex economic forecasts, spreadsheets provide a platform for performing just about any type of calculations. I'm sure that you have your own favorite uses for spreadsheets, and were wondering just how well LibreOffice Calc can support your needs. The following sections take a look at LibreOffice Calc so that you can get to work.

Taking a tour of LibreOffice Calc
Much of what you see in LibreOffice Calc should look familiar, between looking through LibreOffice Writer and other spreadsheet programs you have used. Take a look at the GUI layout shown in Figure 12-2.
 
FIGURE 12-2: The LibreOffice Calc layout.



Menu bar
Along the top of the window is the menu bar, a standard in the GUI world no matter which operating system you're using. LibreOffice Calc has all the features you expect from a modern spreadsheet system. It has too many menu options to cover in depth, so, instead, here's a (nonexhaustive) summary of what you find on each menu: 

File: The usual Open, Save, Save As, Print, and Print Preview (or Print Preview) commands, along with a set of wizards; plus, the ability to send documents through email, create templates, and create web pages
Edit: The usual Select All and Find commands, along with change tracking and cell protection features
View: The usual zoom functions and toolbars, along with the options for showing or hiding column and row headers
Insert: The usual page breaks and special characters, along with cells, rows, functions, and external data
Format: The usual cell and row formatting, cell merging, and page settings, along with conditional formatting
Styles: The ability to apply styles to cells, such as coloring and providing accents
Sheet: Spreadsheet functions such as adding or removing cells, rows, or columns
Data: Data-related functions, such as sorting, filtering, or forcing a recalculation after data changes
Tools: The usual spell-checking and thesaurus entries, in addition to hyphenation, autocorrection features, and a macro creator and editor
Window: Commands to close the current window, select another open window, or open a new window
Help: The usual options of viewing user guides, help tips, and information about the Calc version
These menus have more features than those listed here. Go through and take a look; you may find a new favorite feature in there somewhere.

Standard toolbar
Beneath the menu bar is the standard toolbar. Each icon in this series represents a different functionality, as shown in Table 12-2.


Formatting toolbar
The Formatting toolbar is directly below the standard toolbar in a default LibreOffice setup. As usual, you can remove the Formatting toolbar at any time by using the View menu. This series of icons allows you to click buttons and expand drop-down list boxes that represent standard spreadsheet functions, such as styles, fonts, font sizes, and number formatting instructions. Most features on this toolbar are identical to what you see in most modern spreadsheets.

TABLE 12-2 The LibreOffice Calc Standard Toolbar, from Left to Right 
Button or Item
What You Can Do
New
Open new documents of various types. Click the downward arrow to select a particular type of document to create, from among any of the OOo types.
Open
Open an existing file for reading or editing.
Save
Save the current document. If you haven't saved this document before, the Save As dialog box opens.
Export Directly as PDF
Open a Save As dialog box with PDF selected as the file type.
Print
Send a file to the default printer.
Print Preview
Show this page as it would look if you printed it. To return from preview mode, click Close Preview.
Cut
Remove the selected text from the document and save it in memory.
Copy
Make a copy of the selected document text and save it in memory.
Paste
Place the text from memory into the document at the cursor's current location. Click the down arrow to see options of how the text can be pasted.
Clone Formatting
Pick up the formatting of the first text you click and apply it to the second text you click.
Clear Formatting
Remove any formatting applied to the cell.
Undo
Undo the last change you made to the document. Click the down arrow to choose how far you want to back up to.
Redo
Reinstate the last change to the document after using Undo to cancel it. Click the down arrow to choose how far you want to redo.
Find and Replace
Open or close the Find and Replace dialog box.
Spellcheck
Run the spell checker on your entire document or the selected text.
Row
Insert or delete rows.
Column
Insert, delete, or hide columns.
Sort
Sort the spreadsheet on one or more data item.
Sort Ascending
Re-order the selected data in ascending order.
Sort Descending
Re-order the selected data in descending order.
Auto Filter
Only display data values that match the defined filter.
Insert Image
Insert an image into the cell.
Insert Chart
Create a chart based on the selected data.
Insert or Edit Pivot Table
Create or edit a pivot table based on two or more data columns.
Insert Special Characters
Insert a character not available on the keyboard.
Insert Hyperlink
Insert an active link to a URL.
Insert Comment
Add a comment outside of the spreadsheet data.
Headers and Footers
Create or edit headers or footers in the spreadsheet.
Define Print Area
Specify what part of the spreadsheet appears in the print output.
Freeze Rows and Columns
Lock rows or columns when scrolling.
Split Window
Split the display to view two or more spreadsheets side-by-side.
Show Draw Functions
Enable the Draw toolbar at the bottom of the window to utilize Draw functions in the spreadsheet.


Formula bar
Directly below the Formatting toolbar in a default LibreOffice Calc setup is the Formula bar. Table 12-3 lays out what you find in this short collection of entries. This bar actually changes depending on what you're doing, offering you buttons for particular tasks, so don't panic if you look here and this table doesn't match what you see on your own Formula bar.

TABLE 12-3 The LibreOffice Calc Formula Bar, from Left to Right 
Button or Item
What You Can Do
Name Box
Displays the name of the current cell. You can also assign a name to a group of cells for future reference in your spreadsheet.
Function Wizard
Click to open the Function Wizard dialog box and browse to find the particular spreadsheet function you're looking for.
Select Function
Click to select a simple function such as sum, average, count, min, or max.
Formula
Click to place an = in the Input Line to signal that you're about to enter a function.
Input Line
Assign values or enter functions to fill a spreadsheet cell.



Your document
The document area is where you work on your spreadsheet. Just pick a cell and start typing. You can also access a Formatting shortcut menu by right-clicking in the document section.

Working with Calc files
Just like the Writer package, the Calc package allows you to read and write many different spreadsheet formats: 

OpenDocument Spreadsheet (.ODS) format: The standard LibreOffice spreadsheet format, a proposed standard spreadsheet document format
Data Interchange Format (.DIF): A text file format used to import and export spreadsheets between dissimilar spreadsheet programs
dBase (.DBF): Exports the spreadsheet data into a dBase database file
Microsoft Excel 2007-365 (.XLSX) format: The standard Microsoft Excel spreadsheet formats used by the current and recent versions of Excel
Microsoft Excel 97-2003 (.XLS) format: And even the older Excel spreadsheet format
SYLK (.SLK) format: The Symbolic Link format, used to exchange data between spreadsheets and other applications, such as databases
Text CSV (.CSV) format: The comma separated text values, often used to export data to databases
HTML (.HTML) format: Formats spreadsheet data as an HTML web page
Also, similar to Writer, the Calc standard toolbar provides a button for you to export the spreadsheet directly as a PDF document.

Presentations with LibreOffice Impress
Most people would rather eat glass than speak in front of a group. Still, if you have to, you may as well have some cool presentation software to back you up. The LibreOffice Impress package provides just about all the fancy bells and whistles you may be using in your Microsoft PowerPoint presentations, and your audience won't even know you didn't pay anything for it! Give LibreOffice Impress a chance to impress you.

Creating a new presentation
When you open LibreOffice Impress, the first thing that launches is the Select a Template dialog box, which allows you to select the overall template theme for your slide presentation, as shown in Figure 12-3.
 
FIGURE 12-3: Creating a new presentation in LibreOffice Impress.


LibreOffice comes with quite a few different themes to choose from, and you can import more by clicking the Import button.
 If you prefer to do your own thing, just remove the check in the Show This Dialog at Startup check box. The next time you start a new presentation you'll be greeted with a blank presentation!
After you select the template to use, you go to the presentation editor window, shown in Figure 12-4.
The Properties tool on the right-hand side of the window allows you to fine-tune the layout of your slides. Across the top is the standard set of toolbars you should be accustomed to from other LibreOffice packages. The following sections take a closer look at those.

Taking a tour of LibreOffice Impress
Before you proceed, take a look at the GUI layout shown in Figure 12-4. The Slides pane on the left and the Properties sidebar on the right might look like clutter to some; if you don't need them, just click the X in the upper-right corner of each pane. You can bring them back at any time by choosing View ⇒   Slide Pane and/or View ⇒   Sidebar.
 
FIGURE 12-4: The LibreOffice Impress default look in Ubuntu.



Menu bar
Along the top of the window is the menu bar. LibreOffice Impress has the many features you expect from a modern presentation package. It has too many menu options to cover in depth, so I give you instead a (nonexhaustive) summary of what you find on each menu: 

File: The usual Open, Save, Save As, and Print commands, along with a set of wizards, plus the ability to send documents through email and create templates
Edit: The usual Select All and Find commands, along with the ability to quickly duplicate a slide
View: The usual zoom functions and toolbars, along with the ability to select whether you're looking at just slides, notes, or another section
Insert: The usual new slide, along with charts, frames, graphics, and spreadsheets
Format: The usual text-formatting features, along with layout, graphics, and style formatting
Slide: Commands to create new slides, delete existing slides, or hide slides
Slide Show: The usual slide show controller menu
Tools: The usual spell-checking feature, in addition to hyphenation, autocorrection, and an image gallery
Window: Commands to start a new Impress window, close the existing window, or switch to another open window
Help: The user guide or other information about Impress
 These menus have more features than those listed here. Don't forget to do some exploring on your own.

Standard toolbar
Along the top of the window is the standard toolbar, which you can remove at any time by choosing View ⇒   Toolbars ⇒   Standard. Each icon in this series represents a different functionality and is described in Table 12-4.

TABLE 12-4 The LibreOffice Impress Standard Toolbar, from Left to Right 
Button or Item
What You Can Do
New
Create new presentation.
Open
Open an existing presentation.
Save
Save the current presentation.
Export as PDF
Save the presentation slides as a PDF document.
Print
Print the presentation slides.
Cut
Cut the selected object to the clipboard.
Copy
Copy the selected object to the clipboard.
Paste
Paste the clipboard contents to the selected position.
Clone Formatting
Select text to copy formatting style to other text.
Clear Format
Clear any formatting on the text.
Undo
Undo the last operation.
Redo
Restore the previous operation.
Find and Replace
Open or close the Find and Replace dialog box.
Spellcheck
Use the spell check feature on the selected text.
Display Grid
Display grid lines in the slide to help you position objects in the slide.
Display Views
Change the edit mode used.
Master Slide
Apply the master slide formatting to the current slide. Creating a master slide template allows you to easily format all the slides in a presentation to look the same.
Start from First Slide
Start the slideshow at the first slide.
Start from Current Side
Start the slideshow at the current slide.
Table
Insert a table in the slide.
Insert Image
Insert an image in the slide.
Insert Audio or Video
Add an audio or video clip in the slide.
Insert Chart
Insert a chart in the slide.
Insert Text Box
Add a text box in the slide.
Insert Special Characters
Add a special character not found on the keyboard.
Fontwork
Select a fancy font style.
Insert Hyperlink
Add a hyperlink URL to the slide.
Show Draw Functions
Display the Draw function toolbar at the bottom of the window.
New Slide
Create a new slide at the current position.
Duplicate Slide
Duplicate the current slide.
Delete Slide
Delete the current slide.
Slide Layout
Select a layout template for the slide.



Drawing toolbar
Beneath the standard toolbar is the Drawing toolbar, which allows you to select lines, arrows, shapes, and more for your presentation creation needs. Most of these buttons have downward-pointing arrows, which allow you to see the full range of features they offer.

Line and Filling toolbar
The Line and Filling toolbar is sometimes activated next to the Drawing toolbar. As usual, you can remove the Line and Filling toolbar at any time by using the View menu. This series of icons allows you to click buttons and expand drop-down list boxes that represent standard presentation-software functions, such as arrow styles, colors, line styles, and other formatting instructions. Most features on this bar are identical to what you see in most modern presentation programs.

View switchers
If the Views tab bar is activated, above your document you'll see a series of tabs, each of which takes you to a particular way of viewing your slides (in Ubuntu this isn't activated by default, but to activate it just choose View ⇒   Views Tab Bar). Table 12-5 outlines the available views and what you find in them.

TABLE 12-5 Available LibreOffice Impress Views 
View
What You Find
Normal
Individual slide view in which you can add content to your slide.
Outline
All-slides view with the slides listed in order for easy stepping through. Along the side, the slides are shown in thumbnail mode in a separate window as you navigate.
Notes
Individual slide view in which you can see a small version of the slide plus your notes about that slide.
Slide Sorter
All-slides view with as many slides packed in as possible in columns and rows. Re-ordering slides is as simple as dragging them where you want to go and then dropping them.



Your document
The tabbed window contains your document. In Normal view, that document is your slide. If the slide already contains an object, click in the object to start editing it. Otherwise you need to click one of the tools in the Drawing bar (discussed in the next section) to be able to enter any content. To add more slides before or after this one, right-click the document area and choose Slide ⇒   New Slide. For each slide, you can use the layouts in the Tasks pane on the right to change their setup.

Working with Impress files
The LibreOffice Impress application doesn't support as many file types as its Writer and Calc siblings. Mostly this is due to a lack of standards in the presentation graphics environment.
The formats that Impress does support are 

OpenDocument Presentation (.ODP) format: A standard presentation graphics format proposed by LibreOffice.
Microsoft PowerPoint 2007-365 (.PPTX) format: The current format used by Microsoft PowerPoint packages. You can use Impress to read and write most PowerPoint slide presentations.
Microsoft PowerPoint 97-2003 (.PPT) format: The older Microsoft PowerPoint format.
Office Open XML Presentation (.PPTX) format: A proposed presentation standard, very similar to the Microsoft .PPTX format.
As with the other packages in the LibreOffice suite, Impress also provides a toolbar icon for you to save your slides as PDFs.

Fine Art with LibreOffice Draw
Whether you're an aspiring graphic artist or just need a tool that lets you generate simple graphics for use on their own, in a presentation, or elsewhere, LibreOffice Draw provides a host of drawing functions. If nothing else, it's a whole lot of fun to play with! Not everything in life has to be practical.

Taking a tour of LibreOffice Draw
Before you proceed, take a look at the GUI layout shown in Figure 12-5. If you find the Pages pane on the left too much clutter, click the X in its upper-right to get rid of it. You can bring it back at any time by choosing View ⇒   Page Pane.
 
FIGURE 12-5: The LibreOffice Draw layout.



Menu bar
Along the top of the window is the usual menu bar. LibreOffice Draw is a typical "vector" graphics program, meaning that it relies on lines rather than dots or other techniques. See Chapter 14 for discussion of the software used for editing photographs and other heavy-detail work.
LibreOffice Draw has too many menu options to cover in depth, so I give you instead a (nonexhaustive) summary of what you find on each menu: 

File: The usual Open, Save, Save As, Print, and Export commands, along with a set of wizards (scripts to help you get started with specific types of documents), plus the ability to send documents through email and create templates
Edit: The usual Find, Replace, and other commands, and the not so usual Image Map
View: The usual zoom functions and toolbars, along with the ability to select whether to use color, grayscale, or black and white
Insert: The usual charts, frames, graphics, and audio or video media items, along with scanning functions
Format: The usual line and graphics formatting, along with layers and style formatting
Page: Commands to create a new page in the drawing, duplicate an existing page, or insert a page from another drawing file
Shape: Shapes to create in the drawing page
Tools: The usual spell checker, as well as hyphenation, autocorrection, an image gallery, and an eyedropper for grabbing colors
Windows: Commands to open a new window or existing drawing window
Help: Online user guide and other Draw information
 These menus have more features than those listed here. Go through and take a look; you may find a new favorite feature in there somewhere.

Standard toolbar
Beneath the menu bar is the standard toolbar, which you can remove at any time by choosing View ⇒   Toolbars ⇒   Standard. Each icon in this series represents a different functionality, as described in Table 12-6. As you can see, this main toolbar is more similar to that in LibreOffice Impress than to the one in LibreOffice Writer.


Ruler
Directly below the standard toolbar in a default LibreOffice setup is the ruler. These items mark out the margins and tabs, for example, of your document in the measuring system of your choice. To change which system you want to use, right-click the ruler and change the Measurements to your preferences.

TABLE 12-6 The LibreOffice Draw Main Toolbar, from Left to Right 
Button or Item
What You Can Do
New
Create a new Draw document.
Open
Open an existing Draw document.
Save As
Save the current document.
Export
Export the document as a different image file type.
Export Directly as PDF
Export the document as a PDF document.
Print
Print the document.
Cut
Cut the selected object to the clipboard.
Copy
Copy the selected object to the clipboard.
Paste
Paste the clipboard contents to the current location.
Clone Formatting
Copy the format of the selected object to another object.
Undo
Remove the last operation.
Redo
Restore the previous undo operation.
Display Grid
Display grid lines in the document.
Helplines when Moving
Display grid lines only when moving an object.
Zoom and Pan
Zoom in or out of the document, or pan the viewing area.
Insert Image
Add an image to the document.
Insert Text Box
Add a text box to the document.
Insert Special Characters
Add a special character not found on the keyboard.
Fontwork
Select a fancy font style.
Transformations
Apply rotation, flipping, or distortion to the object.
Align
Align the object with other objects in the document.
Arrange
Move an object in front of or behind another object in the document.
Distribution
Manage the spacing between three or more objects.
Shadow
Create a shadow effect on the selected object.
Crop Image
Select a copping area in the object.
Points
Add one or more points to a line.
Show Glue Points Functions
Show functions for connecting objects to points.
Toggle Extrusion
Toggle the selected object between 2D and 3D.
Show Draw Functions
Toggle the display of the Draw function toolbar, usually along the left-hand side of the window.


Your document
Click in that big white space and start doodling. You can also access a formatting pop-up menu by right-clicking in the document section.
If you prefer to deface other pictures, you can choose File ⇒   Open to select any standard graphics format file (such as .BMP or .JPG) to work with. After the file is opened in Draw, you can use all the standard Draw tools available on the picture.

Drawing bar
Along the left-hand side of the window is a Drawing toolbar, which allows you to select lines, arrows, shapes, and more for your drawing creation needs. Most of these buttons have downward-pointing arrows, which allow you to see the full range of features they offer.

Working with Draw files
At first glance, LibreOffice Draw appears to have the most limited file type support for saving when you use the Save As dialog box. From there, the only file formats you can save a document as are 

OpenDocument Drawing (.ODG) format: The LibreOffice proposed standard for graphics files
OpenDocument Drawing template (.ODT) format: Creates a template file that can be used to create other files with similar objects
Flat XML OpenDocument Drawing (.FODG) format: The XML standard for defining drawing file
That's not much to work with, especially when dealing with picture files. Fortunately, Draw has a few tricks up its sleeve. You can save images to a format other than the standard formats by clicking the Export icon on the standard toolbar, or choosing File ⇒   Export.
This produces a host of supported graphics formats: HTML, XHTML, SWF (Flash), BMP, EMF, EPS, GIF, JPEG, PNG, SVG, TIFF, and WMF. That should satisfy any computer artist.

Managing Data with LibreOffice Base
Those who are used to using Microsoft Access, or who have to interact with a variety of database products, have in the past been left scratching their heads and wondering how best to handle these needs under Linux. Well, wonder no more! LibreOffice Base provides an interface to both Microsoft Access files and to other databases.

Getting help from the wizard
You can use this program in many different ways. The essentials involve creating a database from scratch in a file on your system, working with Microsoft Access files, and working with databases that were created to use with many of the major database servers — even over the network. Because approaches abound and my space is limited, I focus on two of the more common choices: creating new database files, and opening existing files, which include Microsoft Access files.
The first interface you encounter when opening anything but a document you already worked with from the File ⇒   Recent Documents menu option is the Database Wizard (Figure 12-6).
 
FIGURE 12-6: The LibreOffice Base Database Wizard, used to open existing databases and create new ones.



Creating a new database file in the Database Wizard
In the Database Wizard dialog box, do the following to create a brand-new database file: 
Select the Create a New Database radio button.

Click Next.
The Decide How to Proceed After Saving the Database dialog box appears, as shown in Figure 12-7.
 
FIGURE 12-7: The LibreOffice Base Database Wizard's Decide How to Proceed After Saving the Database dialog box.




If you want to register this database as a data source in LibreOffice, leave Yes, Register the Database for Me selected; otherwise, select the No, Do Not Register the Database radio button.
A registered database is accessible by all of your LibreOffice applications, rather than just LibreOffice Base.
If you immediately want to open this file for editing, leave the Open the Database for Editing check box checked; otherwise, click this option to uncheck the box.

If you want to immediately create a new table in the database by using the Table Wizard (using the wizard is recommended), select the Create Tables Using the Table Wizard check box.
For now, it's best to leave it off so you can explore one step at a time.

Click Finish.
The Save dialog box opens.
Enter the name for your document in the Name text box.
Either select the directory you want to save the document to in the Save in Folder drop-down list box, or click the right-facing arrow next to Browse for Other Folders to navigate to where you want to save the document.

Click the Save button.
Whatever you specified should happen, happens. If you chose to immediately open the database, you see something equivalent to Figure 12-8.
 
FIGURE 12-8: A database open in LibreOffice Base.




Opening an existing file in the Database Wizard
If you have an already existing Microsoft Access file that you want to open in LibreOffice Base, do the following from the initial Database Wizard dialog box: 
Select Open an Existing File.

If the file is in the Recently Used drop-down list box, select the file there. Otherwise, click the Open button.
If you clicked the Open button, the Open dialog box appears. If you selected an item from Recently Used, click Finish, and you're done opening the file.
Navigate to the file you want to open, and select the file.

Click Open.
The file is opened in a window similar to that shown in Figure 12-8.

Taking a tour of LibreOffice Base
Before you proceed, refer to Figure 12-8. This is your main LibreOffice Base window after you have a database open to work with. Here's a look at what you'll find there.

Menu bar
Along the top of the window is the menu bar. LibreOffice Base gives you access to many of the features you may expect in a database interface: 

File: The usual Open, Save, and Save As commands, along with a set of wizards and the ability to send documents through email
Edit: The usual Cut, Copy and Paste commands, along with access to database properties, advanced settings, and the Form and Report Wizards
View: Toolbars and database objects, along with preview and sort features
Insert: Forms, queries, and more
Tools: Relationships between tables, filter tables, run SQL queries, create macros, and more
Windows: Commands to open a new or existing windows
Help: The online user guide or other information about Base

Standard toolbar
Beneath the menu bar is the standard toolbar, which you can remove at any time by choosing View ⇒   Toolbars ⇒   Standard. The icons you see in this pane depend on which database function you have selected in the Database pane. The icons available in the Table function are described in Table 12-7. 

The Database pane
To the left of the main window is the Database pane. In this pane you see four icons: Tables, Queries, Forms, and Reports. Select these icons to determine what appears in the two rightmost panes — for example, to work with your tables, select the Tables icon.

TABLE 12-7 The LibreOffice Base Standard Toolbar, from Left to Right 
Button or Item
What You Can Do
New
Open new documents of various types. Click the downward arrow to select a particular type of document to create, from among any of the OOo types.
Open
Open an existing file for reading or editing.
Save
Save the current document. If you haven't saved this document before, the Save As dialog box opens.
Copy
Make a copy of the selected document text and save it in memory.
Paste
Place the text from memory into the document at the cursor's current location. Click the down arrow to see options of how the text can be pasted.
Sort Ascending
Sort the entries in the lower-right pane in alphabetical order.
Sort Descending
Sort the entries in the lower-right pane in reverse alphabetical order.
Form
Create a form.
Help
Open the LibreOffice Help dialog box.
New Table Design
Create a new table in the database.
Open Database Object
Open the selected item in the lower-right pane.
Edit
Open the design view for the selected item in the lower-right pane.
Delete
Delete the selected table.
Rename
Rename the selected table.

 A query allows you to ask complex questions regarding your database.

The Tasks pane
The upper-right pane is the Tasks pane. In here, you see what types of things you can do for a particular selection in the Database pane. Use the Description to the right to decrypt any of the terms that make your eyes cross.

The Tables/Queries/Forms/Reports pane
The lower-right pane shows the tables, queries, forms, or reports that already exist. You can open any of these to work in by double-clicking them in this pane.

Sitting down at the table
Tables are the core of the database system. They are what hold your data, and allow you to quickly access the information. It's a good idea to understand how tables are organized in Base, and how you can use them to hold and display your data.
To create a new table, you can either use the Base Table Wizard if you think you have a standard table, or you can just create your own table in Design View. Figure 12-9 shows a table being created in the Table Design View dialog box.
 
FIGURE 12-9: The Table Design View dialog box in Base.


Each row in the Table Design represents a data field in the table. Each field must have a unique Field Name and be assigned a Field Type. The Field Type defines the type of data present in the field (characters, numbers, dates, and so on). The Description area allows you to write a brief description describing the meaning of the data field.
Creating a new table is easy: 
Click the Table icon in the Database pane.
Click the New Table icon in the standard toolbar.
Enter a text name for the Field Name describing the data.
Select a Field Type from the drop-down menu.
Enter a brief description in the Description text area.

If the field is a primary key, right-click to the left of the row and select Primary Key.
A table's primary key is a data field that can uniquely identify each record in the table. In the example in Figure 12-9, each employee is identified by a unique employee ID because more than one employee can have the same last name. The key icon appears for the field you select as the primary key.
Enter the remaining rows to complete the data elements in the table.
Choose File ⇒   Save As to save the table, using a unique table name.
The new table now appears on the main Base window under the Tables area. Double-clicking the new table brings up the Data Viewing and Entry window, as shown in Figure 12-10.
 
FIGURE 12-10: The Data Viewing and Entry window in the Base application.


If you're familiar with Microsoft Access, you should feel right at home here. This window allows you to view the existing data records in the table, and easily add new data records.

Layout with LibreOffice Math
There's nothing like trying to type a math or science report and having to either use multiple lines to show your equations (which never looks right!) or write them by hand. LibreOffice Math is a great solution to this problem. You can lay out your equations and more in this program and then insert them into any of your LibreOffice documents. Whether you're a middle-school student or a professional engineer, LibreOffice Math just may thrill you.
Many LibreOffice Math functions are different from what you're used to if you have looked at all the other LibreOffice programs. However, in many ways this program is less complex than some, thanks to its special-purpose nature. Keep in mind that it's not a calculation program. It's for laying out complex formulas on paper or the screen.
Starting LibreOffice Math is a little tricky, as often you can't find it in the panel menus (such as in Ubuntu). If your Linux distribution doesn't have it in the menus, you can still start a new Math document by opening Writer, then choosing File ⇒   New ⇒   Formula.
Before you proceed, take a look at the GUI layout shown in Figure 12-11.
 
FIGURE 12-11: The LibreOffice Math layout.


Close the Elements dialog box by clicking the small X in the upper-right corner of its window for now, to keep things as uncluttered as possible. You can get it back at any time by choosing View ⇒   Elements.

Menu bar
Along the top of the window is the menu bar, a standard in the GUI world no matter which operating system you're using. LibreOffice Math may be unlike any program you may have used already, so I don't say anything about what you may expect to find there. I just give you a (nonexhaustive) summary of what you find on each menu: 

File: The usual Open, Save, Save As, and Print commands that you find in most GUI programs, along with a set of wizards and the ability to send documents through email
Edit: The usual Select All, Copy, and Paste commands, along with specialized commands for moving within the formula
View: The usual zoom functions and toolbars, along with screen update features and more
Format: The usual font type, font size, spacing, and alignment features and more
Tools: The usual Customize and Options entries for customizing the program's setup and behaviors, in addition to formula importing and access to the symbol catalog
Window: Commands for opening an existing window or creating a new window
Help: The online user guide or other Math information

Standard toolbar
Along the top of the window is the toolbar area. Two toolbars appear on the one line, the Standard toolbar and the Tools toolbar. You can display or hide either one at any time by choosing View ⇒   Toolbars, and selecting Standard or Tools.
Each icon in this series represents a different functionality. You're likely to find this main toolbar quite different from those in the other LibreOffice programs. Mostly, it just has fewer icons. Each icon is described in Table 12-8.

TABLE 12-8 The LibreOffice Math Standard and Tools Toolbars, from Left to Right 
Button or Item
What You Can Do
New
Open new documents of various types. Click the downward arrow to select a particular type of document to create, from among any of the OOo types.
Open
Open an existing file for reading or editing.
Save
Save the current document. If you haven't saved this document before, the Save As dialog box opens.
Attach to Email
Open a Compose email window in your preferred email program, and automatically attach this document.
Export Directly as PDF
Open a Save As dialog box with PDF selected as the file type.
Print
Send a file to the default printer.
Cut
Remove the selected text from the document and save it in memory.
Copy
Make a copy of the selected document text and save it in memory.
Paste
Place the text from memory into the document at the cursor's current location.
Undo
Undo the last change you made to the document. Click the down arrow to choose how far you want to back up to.
Restore
Reinstate the last change to the document after using Undo to cancel it. Click the down arrow to choose how far you want to redo.
Help
Open the LibreOffice Help dialog box.
Zoom In
Show the image larger.
Zoom Out
Shrink the image.
100%
Show the image at its actual size.
Show All
Show the whole formula in the largest size that will fit on the screen.
Update
Update the formula shown in the document window.
Formula Cursor
Turn on or shut off the formula cursor.
Symbols
Insert Greek letters used in equations, or other special math symbols.



Document section
Things get tricky here if you've never used formula-editing software. You can't type anything in the main (upper) document window in LibreOffice Math. Instead, you type in the Commands (lower) window. Right-clicking the Commands window opens a shortcut menu. To help you get used to working with the formulas, I suggest that you play around with this tool. For example, if you have never used software like this, you might follow these steps: 

Right-click the Commands window.
The main shortcut menu opens.

Select a submenu to open.
For example, Formats.

Select a formula component within this submenu.
I'm a geek, and I fondly remember taking a class on matrices, so I chose matrix {...} as an example. Immediately, the code that's needed to add a matrix to my formula appears in the Commands dialog box. A moment later, because I'm letting the program refresh the rest of the screen as I work, I see what the matrix looks like in the document window. The combination is shown in Figure 12-12.
 
FIGURE 12-12: Starting to add a matrix in LibreOffice Math.




Replace each of the <?> entries with the proper letters and numbers for your formula.
When I change matrix{<?> # <?> ## <?> # <?>} to matrix{A # B ## C # D}, I see the result shown in Figure 12-13.

Continue adding components to the formula until you finish.
Suppose that you want to multiply the matrix by 3. To find out how, press Enter to go down to the next line in the Commands window (to use as "scratch paper"), right-click to display the pop-up menu, and choose Unary/Binary Operators ⇒   a Times b. This choice adds the phrase <?> times <?> beneath the matrix code. Now you know how to format a multiplication, so erase this phrase and use it as a guideline to change your formula to: 

3 times matrix{A # B ## C # D}
This line gives the result shown in Figure 12-14. I could go on, but I hope by now that you're eager to start with your own explorations!
 
FIGURE 12-13: A 4-x-4 matrix in LibreOffice Math.


 
FIGURE 12-14: A complete formula in LibreOffice Math.


LibreOffice Math supports its own OpenDocument format (.ODF) and MathML 1.01 (.MML), which isn't a program. The Mathematical Markup Language (MathML) is a standard similar to HTML for working on the web, and 1.01 is a specific version of this standard. For this particular version of MathML, see www.w3.org/TR/REC-MathML. The main standard page is available at www.w3.org/Math/. If you need to add formulas to web pages, this site can be quite an interesting read! 







Chapter 13
Messing with Audio

IN THIS CHAPTER
 Listening to music
 Using, recording to, and ripping from CDs
 Fixing sound problems

If you're like me, everything's better with music. Many people use their computers to play audio CDs or listen to digital music files. So, I can assure you that there are many ways to listen to music within Linux. Read on to find the various methods available!

What Sound? I Don't Hear a Thing!
These days, just about every workstation and laptop comes with a built-in sound card or chip, and most Linux distributions do a great job of automatically detecting those during the installation process. If for some reason your sound setup failed the test, or you try playing sound by using one of the options in this chapter and it doesn't work, use this section to diagnose and fix your problem.
First start with a sound setup that passed the test but for some reason you can't hear anything. Check and make sure that your speakers or headphones are hooked up correctly. Many modern laptops use a single audio port for both a microphone and headset connection, and it can be tricky making sure you have the correct connector. Consult your hardware user manual for those requirements.
Next, it's possible that your audio settings got turned down to zero, or muted. Both the GNOME 3 and KDE Plasma desktops provide an icon in the system tray to immediately access the volume control for the sound system. Just look for the speaker icon on your panel. Left-clicking the icon produces a simple slide bar that you can drag up or down with your mouse to increase or decrease the volume level, or click the speaker icon to mute or unmute the output.
For more detailed volume adjustments, you need to go to the system settings for your desktop. In GNOME 3 desktops, just click the system tray area and select Settings, and look for the Sound option in the left-hand menu; see Figure 13-1 for the Sound options.
 
FIGURE 13-1: The GNOME 3 Sound options in Settings.


When this pane is open, it helps to understand the terms you're about to see: 

System Volume: The main volume control for the sound card. You can mute and unmute the sound by clicking the speaker icon.
Volume Levels: Controls the volume for individual audio applications. By default it shows a control for sounds generated by the operating system.
Output: Controls the output card used if multiple options available, and the audio method used.
Input: Controls the microphone input used, along with its sensitivity.
Alert Sound: Select the sound played when the operating system is trying to get your attention.
If you're working on the KDE Plasma desktop, after you open the Configure Desktop app, select the Multimedia icon in the Hardware settings section to access the audio settings. The multimedia settings are shown in Figure 13-2.
 
FIGURE 13-2: The KDE Plasma multimedia settings.


In the left-hand side of the multimedia settings window you see separate icons for different elements: 

Audio CDs: Controls options for how KDE Plasma handles playing audio CDs, such as the how much CPU to spend on encoding the data while playing, and what informational data to extract from the encoded CD.
Audio Volume: Selects the audio input and output methods, default volumes, and operating system notification volume. Figure 13-3 shows what this interface looks like.
Audio and Video: Manages the physical hardware devices used for audio and video playback and recording.
Now that you know what you're looking at in this dialog box, look for one of these two major clues as to what might be wrong: 

Are any of the items you see muted? You can tell by looking for red Xs on top of the volume icon for each section. Is the one you see muted responsible for your problem? For example, if you had headphones hooked up to your audio jack and the port was muted, you would put on your headphones and hear nothing. To unmute, click the X to get rid of it.
Are any of the volume sliders all the way down? Even if the audio port wasn't muted, you would hear nothing because the sliders are down. Slide them up and see whether you can hear anything.
Once you get the basic sound and volume issues fixed, you're ready to start listening to your music! 
FIGURE 13-3: The KDE Plasma audio settings dialog box.




Listening to CDs
If you have a CD/DVD player in your PC, you can play your audio CDs while you work (or play)! The application you use depends again on your desktop. The following sections walk through the most common applications used in the GNOME 3 and KDE Plasma desktop environments.

GNOME 3 and Rhythmbox
In the GNOME 3 desktop, by default the first time you insert an audio CD GNOME mounts it but doesn't play it. If you click the CD icon in the dash you'll probably be equally disappointed — the Files application opens and just shows you the audio files on the CD, as shown in Figure 13-4.
However, note in the upper right-hand corner of the Files window is a button to launch Rhythmbox. Ubuntu includes the Rhythmbox application for playing audio CDs. Just click that button to launch Rhythmbox.
 
FIGURE 13-4: The GNOME Files application displaying an audio CD.


If you prefer to automatically launch Rhythmbox when you insert an audio CD, follow these steps: 
Click the System Tray in the upper right-hand corner of the desktop and choose the Settings option.
Click the Removable Media category in the left-hand listing.

In the CD Audio drop-down box, select the Rhythmbox application.
If you have other CD handling applications installed, they're listed too.
Close the Settings dialog box.
Rhythmbox scans the CD, and displays the tracks and track lengths of the CD in the main window. If your workstation is connected to the Internet, Rhythmbox also contacts a remote CD database to extract information about the CD to include the CD title, individual track song titles, and the album cover art for the CD if available. Figure 13-5 shows the Rhythmbox window after opening an audio CD.
The main Rhythmbox interface is fairly straightforward. It lists the individual CD tracks in the main window area, along with the basic track information that it retrieved. The toolbar at the bottom of the Rhythmbox window provides buttons for the basic functions you'd expect for interacting with a CD player: 

Play: Start the current track.
Previous: Jump to the previous track in the song list.
Next: Jump to the next track in the song list.


 
FIGURE 13-5: Starting an audio CD using Rhythmbox.



Repeat: Repeat the current track.
Shuffle: Randomly play the tracks in the song list.
Timeline: Show the current location of the audio playback relative to the total length of the audio track.
Eject: Remove the CD from the CD tray.
 You can minimize the Rhythmbox window and control playback by right-clicking the Rhythmbox icon in the dash. The context menu that appears allows you to play, stop, or go to the previous or next tracks.

KDE Plasma and CDs
When you insert an audio CD while on your KDE Plasma desktop the Device Notifier panel widget appears, asking you to select an installed application to use to play the CD, as shown in Figure 13-6.
The KDE project actually supports several different multimedia applications, so there's not one application that's guaranteed to be installed on your KDE Plasma desktop — different distributions select different player applications. Some of the more common ones you see are: 
 
FIGURE 13-6: The KDE Plasma Notification panel widget.



Elisa: A simple no-frills music player.
Kaffeine: A more full-featured music player that was popular at one time, but has faded in popularity some in recent years.
KMPlayer: Geared toward the Windows world, the KMPlayer has a Linux version and is supported by the KDE project for use in KDE Plasma.
Besides the standard GNOME and KDE audio applications, other open source multimedia applications are very popular. Among those, the most popular is the VLC application.

VLC to the rescue
The VLC application is the Swiss army knife of multimedia tools. It can handle just about any type of removable media, audio or video media file, or even retrieve an audio or video media file directly from the Internet using a URL and play it. Because of its versatility, many Linux distributions (such as openSUSE) install it as their default multimedia tool.
In openSUSE when you insert an audio CD and select VLC from the Device Notifier panel widget, the main VLC window appears as it starts to play the CD, as shown in Figure 13-7.
As you would expect, it has all the standard interfaces for playing a CD, along with a volume control slider.
 
FIGURE 13-7: The VLC main window.


You probably also noticed that just like Rhythmbox, VLC goes out to the Internet to retrieve the album and tracks names (if you have an Internet connection). That makes watching the VLC interface lots more interesting than staring at a boombox!

Listening to Downloaded Music
Downloading music from the Internet is a fun activity. However, these days it has become mired in a web of copyright and license complexities. A lot of people like to pretend that it's both legal and ethical to download any music files they find on the Internet, when in fact at times it's often theft, depending on where you grabbed the music. I'll leave the ethics to you.
One source of legal songs is artists' websites. Many popular artists offer free samples of their songs, and many new artists offer their entire songs free for downloading to gain a following. In these situations, you're more than welcome to download and listen!
As you probably know by now, the program used to listen to downloaded music depends on your desktop. This section takes a look at Amarok for the KDE Plasma desktop, and sees how Rhythmbox can help you out on a GNOME 3 desktop.

Amarok
In the KDE Plasma desktop world, the king of audio file playing is the Amarok package. Many Linux distributions install it by default, and if not, it's usually available in the distribution software repository (see Chapter 15) for easy installation.

THE OTHER MP3 CONTROVERSY 
Depending on where you live, you may also have to worry about the legality of being able to process the MP3 file itself without a license. The MP3 audio file format is a standard that was created by several developers over the course of several years. Because of that odd process, multiple companies had filed, and were granted, patents on the MP3 technology in various countries at various times. Over time, each of the different companies have successfully enforced those patents in court, suing any software package that used MP3 technology without a license.
Because of this, the viewpoint of most Linux distributions was to not allow MP3 libraries or players in standard software repositories. However, those patents have (mostly) expired, and in most countries (including the United States) it's legal to read and process an MP3 file without a license. Because of that, some Linux distributions now install MP3 libraries by default, while others provide the option to add them during the installation process (see Chapter 3). Most software packages that play audio files now check if the MP3 libraries are installed, and if not, won't provide the option to read MP3 audio files.

When you first launch Amarok it asks to scan the Music folder in your Home folder hierarchy by default, looking for audio files to add to your playlist library. If you have other locations where you've stored your music files, follow these steps: 
From the menu bar in Amarok, choose Settings ⇒   Configure Amarok.

In the Configure dialog box, click the Local Collection icon one the left-hand side of the window.
The Configure Local Collection screen appears, as shown in Figure 13-8.
In the Collection Folders window, select the folder(s) where you have music files stored by clicking the check box next to the folder name. Click the arrow icons to expand or contract folders.

Select the check boxes for Scan Folders Recursively and Watch Folders for Changes.
This ensures any new music files you save will be added to the Amarok playlist library.

Click OK to complete importing your collection and exit the Configure screen.
The default Amarok screen opens, shown in Figure 13-9.
 
FIGURE 13-8: The Amarok Local Collection screen.


 
FIGURE 13-9: The main Amarok screen.


Along the left side of the Amarok window is a collection of tabs. What you see and what I see might be different, depending on what audio files Amarok found on your system. Each tab offers a certain segment of functionality, and may change the interface to the left of the playlist. The tabs displayed in my setup, from top to bottom, are: 

Local Music: Shows the music collection found by scanning your directories (from the directories you provided in the configuration process), as well as an audio CD if you have one inserted. Above the listing, click the Edit Filter button to choose features such as whether the collection is organized by group, album, and so on. You can quickly search for a specific song by entering it in the search text box.
Internet: If you have a connection to the Internet, Amarok allows you to connect to popular Internet radio stations that provide streaming audio, search for book and audio recordings you can purchase online, or listen to podcasts.
Playlists: Here is where you can sort your music library. Just like playlists on popular Mac or Windows audio players, you can create new playlists to organize your listening options, and then access those playlists to play them. The Dynamic Playlists category is constantly changing. The Random Mix dynamic playlist, for example, chooses music randomly from your collection and then keeps choosing it as you continue listening. The Saved Playlists are the playlists you've created and saved. The Automated Playlists allows you to create a filter to match songs based on genre, artist, or group. Any songs added to your library that match the filter are added to the playlist!
Files: Browse through your filesystem to find individual songs you want to click and drag into the playlist.
Podcasts: A list of podcasts that you've subscribed to. Click the Add Podcast button to specify the podcast location and Amarok does the rest.
No matter how you get music over into the playlist, when it's there you can click the Play button at the top left-hand side of the pane to play the entire playlist of songs, or double-click a specific track in the playlist to play it. Adjust the volume with the slider on the top right-hand side of the pane.
There is much more to Amarok. Take the time to explore this tool and really customize it to your satisfaction. When you close this program, the Docking In System Tray widget appears. It warns you that Amarok is continuing to run and appears as a system tray icon on the panel. This allows you to start your playlist, then minimize Amarok so it stays out of the way while you do your work (but continues to play music). If you really want to quit Amarok, choose Amarok ⇒   Quit rather than clicking the X in the corner of the application to close the program. If you leave the program on the panel, you can open it at any time by clicking the little wolf icon.
 If you listen to your digital audio files using a mobile digital audio player or a smartphone you may be able to use Amarok to interface with your digital player. Amarok can detect digital players plugged into the USB port, and creates a Device tab in that tab section. Select the tab to see whether Amarok can interact with your device!

Rhythmbox revisited
The most popular tool for playing audio files in the GNOME 3 desktop is Rhythmbox. That's right, the same tool that plays audio CDs also can play audio files.
By default, the main Rhythmbox library area is the Music folder under your Home folder. When you select the Music link in the Library section of the main page, Rhythmbox displays the files it finds in your library. Just like Amarok you can create playlists to group specific files.
 If you attempt to play an audio file that your Linux distribution doesn't have a codec for (such as MP3 files), it displays a warning message, and may provide a link for you to download and install a codec for that music file type.

Listening to Internet Radio
Listening to Internet radio is, for the most part, a snap in Linux, unless you want to listen to streams that are in Windows formats. The software options most people choose for Internet radio in Linux are Rhythmbox for GNOME 3 and Amarok for KDE Plasma (sound familiar?).

STREAMING VERSUS DOWNLOADING 
Due to the popularity of home broadband Internet, Internet radio stations and music streaming, services have exploded in popularity. With services from Google, Amazon, Spotify, Pandora, and many others, you can (legally) have an entire library of music available at your fingertips. However, you only have the right to listen to the music via the stream, or possibly temporarily download the music file to a specific player, not export the music file for use in other programs. Services that allow you to purchase and download music files save those files as true audio files, which you can then use in any player. Be careful what type of streaming service you sign up for!

To find the preprogrammed stations in Rhythmbox, select the Radio entry in the Library section. You'll see quite a list of free Internet radio stations of various genres to listen to!
If you're using Amarok you have a little bit of work to do so you can listen to Internet Radio. Amarok performs this feature using plugins. To enable an Internet radio plugin in Amarok, follow these steps: 
Start Amarok from the application launcher by choosing Multimedia ⇒   Amarok.

Choose Settings ⇒   Configure Amarok.
The Configure dialog box appears.
Click the Plugins icon on the left-hand side.

Select the desired plugin from the Internet Services section.
Some services are free, but require that you create an account on their website. If your service requires that, Amarok provides a place to specify your user account information.

Click OK to add the plugin to Amarok.
Your new plugin appears at the bottom of the Radio Streams folder.
To listen to the station, double-click it in the listing. You should see the station's options appear in the right-side window. Select an option to hear that station. 

Ripping Music Tracks from CDs
This is another topic that's impossible to cover without at least acknowledging that both ethical and legal issues are involved. I'm not going to get into legalities here, but my personal ethics are that it's fine to rip (copy) music off my own CDs for my own use. If I want to pull my favorite songs off CDs that I purchased and set them up so I can listen to them collectively in a random playlist off my computer's hard drive, I don't see a problem (but you may want to check with your own country laws). However, doing this and then returning the CD for a refund or giving the CD to your friend, in my opinion, is theft.
So, with that said, to rip the tracks off of your CDs in Linux you need to use one of the popular ripping software packages. You already saw how Rhythmbox can rip songs from audio CDs, so in this section I take a look at another popular package — Sound Juicer.
The Sound Juicer package is available in most Linux distributions, including Ubuntu and openSUSE. If you don't see it in the multimedia area of your menu system, just use the methods discussed in Chapter 15 to install it.
After you have Sound Juicer, it's easy to rip songs from an audio CD: 

From a KDE Plasma desktop, choose Applications ⇒   Multimedia ⇒   Sound Juicer CD Extractor. From the GNOME 3 application launcher, just find the Sound Juicer icon.
Sound Juicer starts, displaying the tracks on the CD (see Figure 13-10). If your workstation is connected to the Internet, it also displays the album and track titles if available.
 
FIGURE 13-10: The Sound Juicer CD Extractor in Ubuntu.




For each song that you don't want to rip, uncheck the check box next to the song.
The check mark disappears for each song that you don't want to digitize.

Choose Sound Juicer ⇒   Preferences.
The Preferences dialog box appears, as shown in Figure 13-11.

Select your preferred sound format in the Output Format drop-down list box.
If you're limited on space, the Ogg Vorbis (.oga) is a good choice, in that it provides superior compression with minimal loss of audio quality. However, if you plan on copying your music files to a portable music player, select the MP3 format, as that's most widely recognized. If you want to go for higher quality for a home sound system, then choose FLAC (.flac), which is another open format but without any loss in sound quality. However, because of that, FLAC audio files are typically much larger in size.
 
FIGURE 13-11: The Sound Juicer Preferences dialog box.




Click the Folder drop-down list box to choose where you want to save your music files.
If the location you want to use isn't listed, select Other and then browse to the folder you want to use.
In the Track Names section, select how you want Sound Juicer to name and arrange the files in subdirectories.
Notice the check boxes to automatically eject the CD after ripping, and open the Music folder after ripping. Make whichever selections you choose for those situations.
When finished making changes, close the window.

Click Extract.
The Sound Juicer window shows a progress bar along the bottom, and highlights the track it's currently working on. A dialog box appears when the extraction is complete.

Choose Sound Juicer ⇒   Disc ⇒   Eject.
The CD tray opens.
Remove the CD and close the tray.
Close Sound Juicer.
Now you have your CD tracks stored as digital audio files. You can then import these files into your Rhythmbox or Amarok libraries for listening without having to drag out the CD all the time!

Burning Audio CDs and DVDs
Chapter 8 discusses how you can use the Brasero and K3b applications to create data CDs and DVDs to store your important data in a safe location. However, both packages also have an option that allows you to create an audio CDs from digital music files.

Using Brasero
To create an audio CD using Brasero, follow these steps: 

From the GNOME 3 desktop, click the application launcher and either find the Brasero icon or start typing the application name in the Search text box.
The Brasero main window, shown in Figure 13-12, appears.
 
FIGURE 13-12: The Brasero main window.




Click the Audio Project icon.
The New Audio Disc Project window appears.

Drag and drop music files from a Files window into the Audio Project window, or click the + icon to browse to a file and select it.
The audio files appear in the window, as shown in Figure 13-13. Drag and drop files to rearrange them in the order on the CD.
When you have the files collected, click Burn to create the audio CD.
 
FIGURE 13-13: Adding audio files to burn onto the CD in Brasero.


You can now play the audio CD in your favorite boombox (yes, that's an old '80s flashback reference)!

Using K3b
To create an audio CD using the K3b package, follow these steps: 

Start K3b by choosing Applications ⇒   Multimedia ⇒   K3b.
When the application starts, you see the window shown in Figure 13-14.
 
FIGURE 13-14: The K3b CD and DVD burner.




Click the New Audio CD Project option on the main K3b page.
The Audio CD window (see Figure 13-15) appears.
 
FIGURE 13-15: The K3b Audio CD Project window.



In the top section, click the folder button and navigate to the files you want to burn onto the CD.

Drag and drop the files you want to burn into the lower section of the page.
As you drag files into the lower section, the status bar at the bottom grows, showing you how much space is left on the CD.

When you're finished, click the Burn button in the lower section.
The Audio Project dialog box opens, as shown in Figure 13-16.

Insert a blank CD, select the number of copies you want (if necessary), and click the Burn button.
The burn process starts copying your digital audio files onto the CD as analog audio files.
Remove your new CD from the drive and then click Close to close the burn information dialog box, and Close again to close the main burn dialog box.

After you've completed the burning process, it's usually a good idea to label the CD — I can't tell you how many unlabeled CDs I have laying around! Now you can take your audio CD to virtually any CD player to listen to your downloaded files!
 
FIGURE 13-16: The K3b Audio Project dialog box.


 







Chapter 14
Messing with Video and Graphics

IN THIS CHAPTER
 Watching online and downloaded videos
 Watching DVDs
 Creating and modifying high-powered graphics with GIMP
 Playing 3D games

There's no question that video is one area where Linux has been playing catch-up. The original Linux systems didn't even support a Windows-style desktop! In the early days of Linux, it was close to impossible to display any type of videos, let alone use them for playing movies or high-end computer graphics games.
Fortunately, nowadays, things are much different. There aren't many things your Linux computer can't do in the video world (unless of course it's illegal, but more on that later). In this chapter, I walk you through your Linux computer's video and graphics capabilities.

Watchin' Videos on the Web
The Internet has become a clearinghouse for just about any type of video content you can imagine (and even some you couldn't imagine if you tried). From silly YouTube web clips to the myriad of video streaming services such as Netflix, there are lots of sites to keep you entertained.
Your Linux system has the ability through the Firefox web browser (see Chapter 10) to display lots of different types of streaming video, but unfortunately, not all of them by default.

Firefox video support
Trying to navigate through the maze of video formats used on the Internet can make your head spin. The problem is a result of the ridiculous amount of data that must be used to represent video. A single high-definition video frame shot in 1920x1080 resolution requires 8,294,000 bytes of storage. A typical video uses 30 frames per second, so a one-minute video clip would require 1.39GB of storage!
Because of the huge file size requirements for raw video files, different groups have devised different video compression techniques to make video files more manageable. Unfortunately, this is where the problems start. Each organization releases its compression techniques and formats using different licensing schemes. To view all the different video formats, a software package needs to ensure it complies with all the required licensing.
For embedding videos in web pages, the HTML5 web standard supports three main compressed video formats: 


MPEG4: A patented video compression format using the H.264 video compression algorithm (so you may also see this called H.264 format). MPEG4 is a patented video compression format that requires a license. Even though this is the most popular file format used on the Internet, Firefox doesn't include a decoder for it by default, but there's a plugin.
Most Linux distributions include the Cisco H.264 plugin that supports playing MPEG4 videos in web pages. If your distribution doesn't include it, you can install the plugin yourself; just head to Chapter 10 for instructions on how to do that.
WebM: A video compression standard acquired by Google and released for use as an Internet standard. The WebM video format doesn't require a license to use — it's an open video standard — so Firefox includes a decoder for it.
Ogg: An open source video standard maintained by the Xiph.Org Foundation. The same as WebM, Ogg is an open video standard and doesn't require a license, so you can also find a decoder in Firefox for it.
You can easily check to see what plugins you already have installed in your Firefox setup from the Add-ons Manager. Choose the Plugins item, shown in Figure 14-1.
 
FIGURE 14-1: The Firefox Add-ons Plugins area in Ubuntu.


 Technically, although free, the Cisco H.264 plugin is licensed software, so some Linux distributions don't install it by default. Others (such as Ubuntu and openSUSE) provide you with an option at installation time on whether to install licensed software. If you didn't select that option there's a good chance that the Cisco H.264 plugin wasn't installed in Firefox. Check with your specific Linux distribution on how to install these licensed components after the initial installation.

Getting even more video support
If you remember from Chapter 10, Firefox also supports a feature called Extensions. Extensions are small applications that provide additional features to your Firefox browser. If you're looking for more video support, or just some fancy video features, plenty of Extensions are available to help out. The official Mozilla site for Extensions is addons.update.mozilla.org. You can also browse through the Extensions directly from the Add-ons dialog box in Firefox.
One of my favorite Extensions is Fast YouTube Video Downloader. Fast YouTube Video Downloader allows you to save embedded streaming video content from YouTube as a video file on your computer. Here's what you need to do to load and install it: 

Open Firefox from your desktop.
You can start Firefox by clicking the Firefox icon in the KDE Plasma application menu, or the GNOME 3 dash.

Open the Add-ons dialog box by choosing Open  ⇒ Add-ons.
The Recommendations window opens, which provides links to popular Firefox Extensions that you can download and install.
Enter Fast YouTube Video Downloader in the Search box.

Click the link for the Fast YouTube Video Downloader Extension.
The full information window for the Extension displays.

Click the Add to Firefox button for the Fast Video Download extension.
Because the Fast YouTube Video Downloader Extension requires access to your file system to save the downloaded video file, a dialog box appears asking you whether you really want to install it, as shown in Figure 14-2.
 
FIGURE 14-2: Installing the Fast YouTube Video Downloader Extension in Firefox.




Click the Add button to install the Extension.
When complete, the Add-ons dialog box appears, showing that the installation was successful.
Restart Firefox for the new Extension to work.
Now when you go to a YouTube video page there is a new Download As button under the video window, as shown in Figure 14-3.
 
FIGURE 14-3: The Fast YouTube Video Downloader Extension installed.


Click that button to see a list of video formats you can download the video as (you can even download just the audio track if available). Click the format you desire, and the download begins. You can see the status of the download from the Firefox download status icon in the toolbar.

Viewing Movie Files
With the popularity of digital video recorders, it's not uncommon to receive a video clip of your niece's ballet recital in an email, or from a file-sharing site (just be careful that the file-sharing site is legal). These files are often stored in a variety of video formats: 

AVI: Audio Visual Interleave format, a standard video format supported by most video software packages.
DivX: A proprietary AVI video compression format that must be licensed to work in Linux.
MPG: Moving Pictures Experts Group (mpeg) standard format. This includes both MPEG and MPG formats.
WMV: Windows Media Video format, a proprietary Microsoft format.
RM: The RealNetworks proprietary video format. This requires the RealOne video player.
MOV (and QT): The proprietary Apple QuickTime video formats.
To watch these movies you need a video player application. A few different video players are available in Linux. Which player your Linux distribution uses by default depends mostly on your desktop, although there are some great video players that have versions for all desktops. This section walks through the most popular Linux video players.

GNOME Videos
The default video file player in the GNOME 3 desktop environment is Videos. In Ubuntu you can start Videos either by double-clicking a saved video file, or start it from the application launcher by selecting its icon or typing its name in the Search text box.
As with the Firefox video plugins, due to licensing restrictions, the default Videos installation may be somewhat limited in the types of files it can play. If you selected the option to install third-party software during installation, Videos can play the popular MPEG4 video file type.
When you start a video, or just open the Videos window, the main viewing window appears, as shown in Figure 14-4.
 
FIGURE 14-4: The main GNOME Videos viewing window.


If you just open Videos without specifying a video file, the Videos window displays a playlist showing icons of recently played videos. You add new videos to the playlist by clicking the + icon in the toolbar, which provides two options for loading movies into the Videos viewer: 

Add Local Video: Opens a file browser for you to find video files on your system to add to the playlist.
Add Web Video: Displays a text box for you to enter the URL of a video found on the Internet.
You can change some of the settings used by Videos by clicking the Menu icon in the toolbar and selecting Preferences. There are three preference tabs: 

General: Enable using subtitles from external files, select the font to use for subtitles, and a button to enable/disable plugins.
Display: Set the overall color features, such as brightness, contrast, saturation, and hue.
Audio: Set the audio features, such as mono or stereo.
After you start a video, click the Menu button in the toolbar to view a list of options you can set as the video plays, such as setting the aspect ratio to view the video, and enabling or disabling subtitles for the video.

KDE Dragon
The flagship video player application for the KDE Plasma desktop is Dragon. If your distribution didn't install it by default, you can easily find it in the software repositories (see Chapter 15).
You can start Dragon from the Applications menu by choosing Applications ⇒ Multimedia ⇒ Dragon. Figure 14-5 shows the main Dragon window.
The left-hand navigation bar allows you to start videos from three types of sources: 

Files: Opens a file manager to navigate to the video file to play
DVDs: Attempts to detect the removable DVD location to play the DVD
Streams: Prompts for a URL to find the video to play from the Internet
 
FIGURE 14-5: The KDE Dragon video player.


The playback toolbar in Dragon is located at the top, above the viewing area. Nothing too surprising here; just standard controls for playing or pausing your video. However, you can change what controls display in the playback toolbar by choosing Settings ⇒ Configure Toolbars. Just select which controls appear!

VLC
Chapter 13 discusses how to use the VLC multimedia player for playing audio files, but VLC also works great as a video player! The VLC project has created versions that work in just about every Linux graphical desktop environment, so it's common to see it used across many Linux distributions (and it's even the default video player in openSUSE).
The main VLC window, shown in Figure 14-6, isn't all that exciting.
The Media menu option allows you to select a video file from several locations: 

Open a single file.
Open multiple files simultaneously.
Open all the files contained in a specified directory.
Play a DVD disc.
Open a network stream using a URL.
Directly capture video from a connected device (such as a camcorder).
 
FIGURE 14-6: The main VLC viewing window.


After you've opened a video file, the controls at the bottom of the VLC window provide the standard controls for playing the video.

Watchin' DVDs
Watching a DVD in Linux is a bit of a legal quagmire if you live in the United States. The Digital Millennium Copyright Act (DMCA) and other issues make it tricky for any open source program to navigate the licensing maze when it comes to movies that are encoded or protected in various fashions. However, not all DVDs have such countermeasures enabled: There are DVDs that Americans can watch under Linux with no trouble. (Note that I say watch, and not copy or pirate.)
 DVDs created by video burning software such as K3b or Brasero don't include copyright protection, and thus can be played just fine using the standard Linux video players mentioned here.
How you watch videos depends on your distribution: 

Ubuntu uses Videos. However, just like when viewing video files, you need to ensure the third-party software extensions are installed to be able to play commercial DVDs.
KDE uses the Dragon video player. It provides a button to launch a video from a DVD, but it too requires third-party software extensions to be installed to play commercial DVDs.
openSUSE uses the VLC multimedia player. After you install a DVD the Device Notifier prompts you to select what software to use to play the DVD. After you select VLC, the movie starts (assuming it's not protected, and that you have the correct codec installed).
 You may be tempted to use a Linux DVD burning software package such as Brasero or K3b to copy a commercial DVD — don't. It's illegal to copy a commercial DVD that includes copyright protection, even just for your own use.

Creating and Modifying Graphics
The GIMP software package is a graphics program that's considered in many ways equivalent to Adobe Photoshop. Many don't consider GIMP the friendliest program on the planet, but at the very least, it has enough features to keep you busy experimenting for weeks! Because of its size and specialty use, most Linux distributions don't install GIMP by default. You need to use one of the methods outlined in Chapter 15 to install GIMP in your Linux distribution.
After you start GIMP, a collection of one or more windows pops up containing the GIMP main window (see Figure 14-7) plus two additional tool windows. You can close the right-side window that contains the Paintbrush selector and Layers sections. The Toolbox window on the left-hand side and the main window are somewhat incorporated together.
 
FIGURE 14-7: GIMP's main window in Ubuntu.


GIMP is an incredibly complex program, with entire books written for the people who really want to use it heavily. Here are a few things to get you started.

GIMP basic tools
The beauty of GIMP is that all the tools appear in separate windows, allowing you to lay out multiple tools as you draw. The main window allows you to coordinate between the different tool windows while editing an image.
The File menu allows you to open or acquire an image to work with. GIMP allows you to edit images from five different sources: 

Start a new image from scratch on a blank canvas.
Load an existing image from your computer. GIMP supports all the standard image types, such as GIF, JPEG, TIFF, and others.
Retrieve an image from a remote web location.
Retrieve an image from a scanner connected to your computer.
Produce an image of a screenshot of your desktop, or a single application window on the desktop.
When you open an image, it appears in the main window within an editing window area. If you open more than one image at a time, each image opens in its own editing window. This feature allows you to work on several images at the same time without having to flip around between images in a single window.
The Toolbox window contains all the image editing tools you'd expect from an image editor. The toolbox consists of tools for selecting image areas; reorienting the image (such as flipping); drawing with a pencil, paintbrush, ink, or airbrush; filling colors, and adding basic special effects.
For each tool you select, the bottom section of the Toolbox window shows detailed settings for the tool. In Figure 14-8, the paintbrush tool is selected, so settings related to the paintbrush (such as brush size and opacity of the color) appear in the middle section.
You can also keep the detailed settings for multiple options open as separate windows. The menu bar in the main window allows you to select the editing features to open. Choosing Tools produces a list of the different tool windows you can have open on your desktop, as shown in Figure 14-8.
 
FIGURE 14-8: The GIMP Tools window list.


Below the tools in the Toolbox window is an area to select the foreground and background colors (the black and white squares). Double-click the black area to set the foreground color, and double-click the white area to set the background color for the image. Alongside that is an icon allowing you to easily change the drawing instrument shape and size.
To demonstrate the abilities of GIMP, in the next section I do some work on a sample image.

Capturing screenshots
To get an image to work with, test the screenshot feature. Follow these steps to create a screenshot image: 
Open GIMP from the application launcher by clicking the GIMP icon (or however your Linux distribution launches it).

From the GIMP menu bar, choose File ⇒ Create ⇒ Screenshot.
The Screenshot dialog box appears, as shown in Figure 14-9.
You can select to capture either a single application window, or the entire desktop. You can also set a delay for when GIMP takes the screenshot, allowing you time to set up the window just the way you want it before you take its picture.

Click the Snap button to initiate the screenshot process.
When the screenshot is taken, GIMP opens the image in an image editing window.
 
FIGURE 14-9: The GIMP Screenshot dialog box.




Choose File ⇒ Export As to save the image file.
If you use the Save As option from the File menu, GIMP saves the image in the .xcf format, which GIMP uses to store additional information about the file editing. To save the image using a common image format, use the Export As menu option. GIMP allows you to save the image in most common image formats. All you need to do is place the proper image format extension on the filename (such as .jpg, .tiff, .gif, or .bmp). After clicking OK, GIMP may produce another dialog box asking for options specific to the image file type you saved the image as.
You now have a saved image file that you can play with in GIMP.

Editing an image file
Now open your saved image file and play around with the GIMP image editing features. 

Choose File ⇒ Open and select the image file you saved from your screenshot.
GIMP opens the image in an image editing window, as shown in Figure 14-10.
In the GIMP Toolbox, choose one of the selection tools (such as the rectangular box) and select an area on your image.
 
FIGURE 14-10: The GIMP image editing window.




In the GIMP Toolbox, choose the Rotate Tool.
The Rotate dialog box appears, allowing you to set the details of the rotation, or you can grab the image and move the mouse pointer to rotate it. As you increase or decrease the angle of rotation, you see the selected image area actually rotate in the editor. When you get to just the right spot, click the Rotate button to set the rotation.

In the GIMP Toolbox, select the drawing instrument of your choice (paintbrush, pencil, and so on) and do some doodling in the image.
By default, the drawing color is set to black. To change the color, you can double-click the foreground icon area in the GIMP toolbox. The Change Foreground Color dialog box appears, as shown in Figure 14-11.
This tool provides an easy way to select just the right color for your drawings. You can point-and-click to any shade of color you're looking for.
Save your new creation either as the same filename, or use another filename to create a separate image file.
That was some pretty basic stuff. You're probably thinking that you could do the same thing with some not-too-sophisticated tools, such as Microsoft Paintbrush. Well you're right, in a way. This does show how simple GIMP can be to manipulate images. But wait, there's more. Now follow along with this: 

If you've closed your image file, open it by choosing File ⇒ Open so it's in a new image editing window.
The image editing window has a few tricks of its own that you can use.
 
FIGURE 14-11: The GIMP Change Foreground Color dialog box.




Click the Filters menu item and select a special effect from the menu list.
The Filters section contains lots of special effects to enhance the look of your image. Figure 14-12 shows the result of the Distorts ⇒ Whirl and Pinch effect.
 
FIGURE 14-12: The image after applying the Whirl and Pinch effect.


Now you're starting to see the power of GIMP. But wait, there's even more.

Using GIMP scripts
For those of us who are lacking in artistic ability, GIMP tries to help out as best it can. Lots of artistic people have contributed scripts to GIMP that provide more special effects than you'll see in a Hollywood action movie.
The key to special effects is being able to string together a series of special effects to create an overall effect. GIMP allows you to string special effects together by using a scripting language. Fedora includes both the Python-Fu and Script-Fu GIMP scripting languages.
The Python-Fu and Script-Fu scripts are accessible from the Image menu. Each script has its own set of parameters that you can set to alter the effect of the script. Because scripts apply several layers of special effects to an image, they often take a while to complete.
The premade scripts included with GIMP produce some pretty amazing effects. Figure 14-13 demonstrates the Weave Script-Fu effect on the saved desktop image.
 
FIGURE 14-13: The sample image after applying the Weave Script-Fu effect.


That's pretty professional looking for a simple open source program! Take the time to play around with the different script effects available in GIMP. You'll be surprised at the quality of the special effects. You can always reverse any mistakes by choosing Edit ⇒ Undo, so feel free to play.

Playing 3D Games
One of the strengths of Windows PCs has been support for advanced video games. These games utilize high-end graphics that often require specialized 3D video cards to operate.
Again, this is another area where Linux had never quite caught up to Windows — until now. Two major 3D video card vendors, ATI and NVIDIA, have released Linux drivers for their products, allowing game developers to enter the Linux market.
There's a catch to this, though. Both NVIDIA and ATI released Linux binary drivers for their 3D video cards, but not the source code. A true open source system must include source code for all the components included in the system. This has caused quite a dilemma for Linux distributions.
For a Linux distribution to include the ATI or NVIDIA binary drivers violates the true spirit of open source software. But if a Linux distribution doesn't provide these drivers, it risks falling behind in the Linux distribution wars and losing market share.
Ubuntu prompts you during installation whether you want to install third-party drivers, or use the generic drivers that Ubuntu provides. You can check just which drivers your system is using by opening the application launcher and searching for Software & Updates (note this is different from the Software Updater program).
After the Software & Updates dialog box opens, click the Additional Drivers tab to view which driver Ubuntu is currently using, and if there are other drivers you can download.
For openSUSE, you need to use the YaST administration program to install any non-standard display drivers. From the openSUSE menu, choose Applications ⇒ System ⇒ YaST. When the YaST window opens, select the Software category from the left-hand side icons, and then select Add-On Products.
In the Add-On Products window, click the Add button, select Community Repositories, and click Next. YaST scans the community repositories, which contain the third-party hardware drivers needed for your 3D display. 








Part 4
Junior Administrator Boot Camp

IN THIS PART ...
Install new software and keep your Linux system up to date.
Perform basic system administration tasks such as creating and managing user accounts, caring for your filesystem, setting up printing, and more.
Ditch the GUI and become a command line aficionado.
Speed up mundane tasks with automation.
Expand your Linux system with virtual software.
Learn how to keep your Linux system secure.








Chapter 15
Adding Software to Linux

IN THIS CHAPTER
 Recognizing tarballs, RPMs, and compressed files
 Creating tarballs and archives
 Compressing files
 Opening tarballs, archives, and compressed files
 Installing and removing RPMs

Whenever you install a new operating system, you always need to install applications to go with it. Linux is a bit different from other operating systems in that most Linux distributions install quite a bit of software by default, but even with that, there's usually something else you need.
Back in the old days that meant having to get a DVD (or in the really old days, a set of floppy disks) to install new applications. If your computer is connected to the Internet you don't need to mess with DVDs anymore! This chapter walks through the different ways you can easily install applications on your new Linux system.

Opening Downloaded Files
The Linux and UNIX worlds are full of strange terms and acronyms. For example, if someone comes up to you out of the blue and starts talking about tarballs, you probably get a mental image of sticky, smelly balls of tar, maybe rolled in feathers. Yet a tarball is something you run into regularly in the Linux world, especially when you're looking for software or you need to save yourself some space. A tarball is a bunch of files (and possibly directories) packaged together into an archive file using the tar utility, and then compressed by using the gzip utility.
Fortunately, all you need to know is how to double-click a file to access the many formats listed in Table 15-1. When you double-click the file, your desktop File Manager shows you what's inside.
Although Table 15-1 mentions operating systems, it doesn't contain hard and fast rules. People tend to use whatever kind of programs they're comfortable with no matter what operating system they're on.
 WinZip (www.winzip.com) can handle .gz, .tgz, and .tar.gz files (along with the .bz2 versions) for Windows users.
TABLE 15-1 Potential Formats for Downloaded Files 
Extension
Meaning
Program(s) Involved
.bz
Older form of .bz2.
bzip, bunzip
.bz2
Slower but more efficient compression for some types of files, such as text files.
bzip2, bunzip2
.deb
All the files related to an application bundled together using a Debian-specific format, used in Ubuntu.
dpkg
.gz
Typical compressed file for Linux and UNIX.
gzip, gunzip
.xz
Newer compression method for Linux.
xz
.iso
A CD-ROM or DVD-ROM "image," which is a single file that contains a CD or DVD's entire contents. You have to tell your CD or DVD burner software that this file is an image so that it knows to create a CD or DVD rather than just place a copy of this file onto the media.
See Chapter 3.
.rpm
All the files related to a single application bundled together using a format designed by Red Hat, and used in openSUSE.
rpm
.tar
A bunch of files bundled together.
tar
.tar.bz2
A tarball, which in this case is a .tar file inside a .bz2 file.
tar, bzip2, bunzip2
.tar.gz
A traditional tarball, which is a .tar file inside a .gz file.
tar, gunzip, gzip
.tgz
A traditional tarball, which is a .tar file inside a .gz file.
tar, gunzip, gzip
.Z
Old-style UNIX compressed file.
compress, uncompress
.zip
Windows .zip file.
zip, unzip



Compressing and Packaging Files to Share
Life isn't all about "take, take, take" (or at least I should hope not!). Sometimes you've just gotta give. Creating care packages to share with other folks involves finding how to tell your file manager that you want to do so.
To package up and compress files for sending off to other people, navigate to the location where you've stored the file(s) — see Chapter 8 for how to move about in Files or Dolphin — and then: 

Determine whether you want to compress or package a single file, a group of files, or a whole folder.
If the files and folders that you want to bundle together are flung all over the place in your filesystem, you may want to create a new folder and copy the items you want to bundle together into it — just for the sake of convenience. Chapter 8 shows you how to do so.

Select the item(s) you want to package.
Chapter 8 explains how to do so. If you want to select a whole folder, navigate into its parent folder and just select the folder's icon instead of entering it.

Right-click the item(s) and choose Compress.
In Ubuntu Files, the Create Archive box appears, as shown in Figure 15-1.
 
FIGURE 15-1: Creating a compressed archive file using Ubuntu Files.




Name the compressed file, and if you're using openSUSE Dolphin, choose a compression option.
You can select either the .zip or .tar.gz compression option. Select .zip to create just a compressed file, or the tar option to create a tarball of the files in the same folder.

Click Create.
The archive is created. 

Keeping Up-to-Update
A vital feature of any operating system is the ability to quickly and easily update it. There are always new features, security fixes, and software bug fixes that you should install to keep things running smoothly.
Most Linux distributions include a program for automatically checking for updates to the installed software on your system via an Internet connection. If your PC is connected to the Internet, you can receive daily notices about new updates and install them when you're comfortable doing so (and have the time to wait for the update to install). That helps your system be up-to-the-minute with all the latest patches! The following sections walk through how each of these programs works on your desktop system.

Updating Ubuntu
The Ubuntu distribution runs the Software Updater program in the background at all times to check for updates. If a new update is available, a notification appears on your desktop. You can click the option to install the updates now, or you can click the Remind Me Later button to get another notification later (sort of like an update snooze button!). You can also run the Software Updater program manually at any time: 

Select Software Updater from the top edge panel menu.
The main Update Manager window, shown in Figure 15-2, appears.

If you want to disable automatic update checks, or just change how they occur, click the Settings button.
The Updates settings allows you to customize how Ubuntu handles updates, such as enable automatic installation of security updates, but notify you of application updates.
 
FIGURE 15-2: The Ubuntu Software Updater window.




If you want information on individual updates, select the update in the list, and click the Technical Description arrow under the listing.
The information about the update appears below the update list.

Click the Install Now button to begin installing the updates.
You're asked for your password to ensure you have the proper privileges to run updates.
Click the Close button to exit the Software Updater dialog box.
Now your Ubuntu system should be current with all the available patches!

Updating openSUSE
Similar to Ubuntu, openSUSE runs an updater program in the background, and when updates are available, the Notifications widget in the system tray produces a pop-up notification. When you see the notification, click the Software Updates icon in the system tray, and then click the Install button to install them. It's that easy!
If you'd like to manually check for updates, you do that using the Discover program. Just follow these steps: 

From the KDE menu choose Applications ⇒ System ⇒ Software Center.
The Discover program is also available as a link in the favorites page. When Discover starts, it automatically checks for updates.

When Discover finishes looking for updates, click the Updates button in the bottom left-hand corner.
The Updates page appears, as shown in Figure 15-3.
Click the Update All button to install all of the updates, or select an individual update to install just that one.
 
FIGURE 15-3: The openSUSE Discover window showing available updates.


And just like that, your openSUSE system should be current with all the available patches!

Installing New Software
Besides updating existing software packages, I'm sure you want to install new ones. You can add new software in both Ubuntu and openSUSE in two ways: 

The Add/Remove Applications program: The Add/Remove Applications program allows you to add new software based on a complete application name. Often an application consists of several different components, called packages. Instead of having to install the individual packages one by one, you can just select to install the complete application. This method is commonly used for larger applications, such as LibreOffice or Firefox.
The Package Manager program: However, there are times when you just want to install an individual package, either because you just need part of a complete application, or because a program is not large enough to get its own entry in the Add/Remove Applications program. This is where the Package Manager comes in.
This section walks through using both of these tools to get new software on your system.

Adding applications
Because of the Add/Remove Applications program, adding complete applications isn't much harder than updating software. You just browse to the application you want to install, and select it! The Add/Remove Applications tool only retrieves software from reputable repositories, and automatically downloads the package and any dependencies for you.

Adding applications in Ubuntu
Just follow these steps to get your new applications install in Ubuntu: 

Click the Ubuntu Software icon in the dash favorites.
The Add/Remove Applications program opens, as shown in Figure 15-4.
 
FIGURE 15-4: The Add/Remove Applications program in Ubuntu.




Select the application category from the list.
You can also use the search icon at the top of the window to search for a specific application, or a keyword within an application.

Select the application to install from the icons that appear in the window.
A description of the application appears.
Click the Install button to install the application.
Repeat the process for any other applications you want to install.
In no time at all the new application is available on your system. Most of the time applications are automatically added to the Applications menu.

Adding applications in openSUSE
The Discover program (called Software Center in the menu) not only handles the update process, but also handles installing new applications. To install a new application, follow these steps: 

Choose K menu ⇒   Applications ⇒   System ⇒   Software Center.
The Discover main window, shown in Figure 15-5, appears.
 
FIGURE 15-5: The openSUSE Discover program main window.




Select the category from the left side Applications list.
You can also use the Search text box above the category list to search for a specific application, or a keyword within an application.
Select the application to install from the list in the right-hand side.
(Optional) Click the application name to expand the pane to show a full description of the application.
Click the Install button above the description to install the package. 

Adding packages
Both Ubuntu and openSUSE use different programs to install individual packages on the system. This section walks you through installing individual packages in your Linux system.

The Synaptic Package Manager
Ubuntu uses the Synaptic Package Manager to manage packages. This tool allows you to add, remove, and update packages manually from the same interface. Unfortunately, later versions of Ubuntu don't install it by default, but you can use the Ubuntu Software program to do that!
After you install Synaptic, to add a new package: 

Start Synaptic from the dash Application Launcher.
The Synaptic Package Manager starts, and displays the main window, shown in Figure 15-6.
 
FIGURE 15-6: The Synaptic Package Manager in Ubuntu.




Select the category of the package in the left side filter list, or type the package in the Search text box at the top.
Packages matching the filter category or search keyword appear in the right-side list.

Select a package from the list to view the details.
The details for the package appear in the lower window pane.
Click the check box and select Mark for Installation from the pop-up menu.
Click the Apply button to install the selected packages. 

Installing with YaST2
The openSUSE distribution uses the YaST2 program to install individual packages. Let's walk through looking for packages using YaST2: 

Choose KDE menu ⇒   Applications ⇒   System ⇒   Install/Remove Software.
Because installing and removing software requires root privileges, you're prompted for your password. After you enter your password, the main YaST2 window appears, as shown in Figure 15-7.
 
FIGURE 15-7: The YaST2 package manager in openSUSE.




Enter the package you want in the Search text box and click Search.
YaST2 allows you to specify what fields to search in, such as the package name, description, or keywords. This can help limit the results returned.
Click a package to display information about the package.

Click the check box on the package(s) you want to install.
When you click the check box, a plus sign appears in the box indicating that package has been selected for installation. Click the check box again to remove it from the installation list.
Click the Accept button to start the installation.
YaST2 downloads and installs all the packages you selected.

Finding More Software
What if you can't find what you're looking for through the official (and not so official) sources discussed in the previous section? Those aren't your only options. Although I can't anticipate every situation you might find yourself in, I can at least give you some tips for how to find extra software and how to install much of it.
Try these places to find new software: 


For Ubuntu and other Debian-based Linux distributions, check the Debian package distribution website (packages.debian.org).
It's best to stick with packages in the Stable distribution section. While the Testing distribution may have newer versions of applications, they haven't been fully tested and may cause issues.
For openSUSE and other Red Hat-based Linux distributions, check the RPM Fusion website (rpmfusion.org) for additional software packages that you can't find in the standard repositories.

If you don't know what you want, find one by opening your favorite web search engine and searching on a feature and the word linux.
For example, maybe you want something comparable to the program irfanview from the Windows world, so you would search on irfanview linux.
Sort through the search results and see whether a particular program is suggested. If not, add the word equivalent to your search and search again.
So, to continue the example, you would search again but this time use irfanview linux equivalent. Now you start to see a program called xnview mentioned. It wouldn't hurt to turn around and look to see whether your Linux distribution's Package Manager offers this program, before you bother installing it by hand.
When you find a program you want to download, follow these steps: 
From the program's web page, click the Download link.

Locate and download the most specific version matching your distribution.
You may be offered, say, Windows, UNIX, and Linux options. You would choose Linux in that case. If offered Linux amd64 versus Linux x86, choose amd64 unless you're using Linux on an older 32-bit workstation. If you're offered an RPM or a tarball (see the beginning of this chapter for more information on these), choose an RPM.
After you have the program downloaded, install it as follows:

If it's an RPM or DEB package, open your file manager and double-click the download to install it. You can also install it from a command line (see Chapter 7 for how to open a command line terminal). When you have the terminal window open, type su and press Enter. You're asked for your root password. Enter it, press Enter, and use the filesystem navigation commands in Chapter 7 to go to where you saved the RPM file, and then type rpm -Uvh filename. This command installs or updates the program as needed.
If it's a tarball, open your file manager. Double-click the file to open it and look at its contents. There should be a file in there called README or INSTALL. This file contains instructions on what you need to do, and there may be more instructions available on the website itself. Working with tarballs just requires practice; it gets easier over time, so extract the file and get to it!

Upgrading Your OS
Typically, Ubuntu and openSUSE users upgrade by downloading the new version of the distribution, starting the installation, and selecting Upgrade rather than a new install. By selecting the Upgrade option, you should be able to keep your personal data files and only upgrade the OS files. If you perform a new install, all your existing data will be lost. However, even with the Upgrade option, as with any major change to a system, it's always best to have a backup copy of your important files "just in case."
 Many Linux distributions allow you to create a separate partition for the /home directory. That way you can leave it untouched when upgrading to a new version of the operating system. 







Chapter 16
Working without the GUI

IN THIS CHAPTER
 Understanding the user shell environment
 Customizing the bash environment
 Working with commands, wildcards, long commands, variables, redirections, and pipes

Many computing old-timers speak fondly of the command line. Others who developed their skills by pointing and clicking refer to the command line as some antiquated tool used by crusty old-timers. The truth is that most skilled computing professionals recognize the merits of both the point-and-click graphical user interface (GUI), and the "lots of typing" command line interface (CLI). You must understand that the command line provides a powerful force for operating your computer. If you ever watch over the shoulder of a skilled Linux geek, you notice that, after logging in, the geek doesn't take long to start tapping seemingly cryptic instructions by hand.
In this chapter, I explore the Linux program that provides the CLI, which is called the bash shell. Although many shells are available for Linux, bash is the most common, and for good reason. Basically, the creators of bash rolled many good features of other shells into one terrific package.
Each shell has its own way of handling commands and its own additional set of tools. I start by explaining what a shell really is, and when you understand that, you're ready to get down and dirty with bash. I cover specifically what you can do with some of the best features of the bash shell. Then I continue with working at the command prompt and get into bash shell interior decorating.
 Shells come equipped to perform certain functions. Most of these features have evolved over time to assist the command-line jockey with myriad tasks. I only scratch the surface here, and I encourage you to read the man page for bash because it's likely one of the more complete and readable man pages in existence. You can read all about how to use man pages (the online Help system in Linux) in the "Help!" section, later in this chapter.

Playing the Shell Game
You need a way to tell the computer what you want it to do. In Linux, one of the ways to communicate with the computer is through something called the shell. A shell isn't a graphical thing; it's the sum total of the commands and syntax you have available to you to do your work.
The shell environment is rather dull and boring by graphical desktop standards. When you start the shell, all you see is a short prompt, such as a $, followed by a blinking cursor awaiting your keyboard entry.
The default shell used in Linux is the bash shell. This work environment is based on the UNIX shell, which is called the Bourne shell and is also referred to as sh. The term bash stands for the Bourne again shell. The bash shell comes with most Linux distributions.

Getting a shell
You can start a bash session by using a terminal application in your GUI desktop. The terminal application you use depends of course on your desktop: 

Terminal is the default terminal used in the GNOME 3 desktop. To start it, select the Terminal icon from the application launcher, or if you don't see it, type Terminal in the Search text box. After you start Terminal, you see the interface, as shown in Figure 16-1.
Konsole is the default terminal used in the KDE Plasma desktop. To start it, choose K menu ⇒ Applications ⇒ System ⇒ Konsole. The Konsole interface is shown in Figure 16-2.
Notice the prompt in the middle of the window — that's the shell command line prompt. You enter your commands there.
Both Terminal and Konsole have a few additional cool features that can come in handy, such as cutting and pasting text, and changing the color of the text and background. You can even go old-school and have green text on top of a black background — just like the computer terminals you see in the old '70s movies!
 
FIGURE 16-1: The GNOME Terminal window.


 
FIGURE 16-2: The KDE Konsole window.


 If you use your shell prompt quite a bit like I do, add the terminal window to your favorites icons. See Chapters 4 and 5 to do so.

The shell prompt
Often, your shell prompt includes helpful information. For example, if you're logged in as rich on the machine testbox in Ubuntu, your prompt looks like this: 
rich@testbox:~$
 
The tilde character (~) indicates that I'm in my Home folder (see Chapter 7). The dollar sign indicates that the bash shell is ready for me to enter a command.
Before surveying a few of the shell capabilities, I need to tell you about another method for starting a shell session. You may not use it much but you might find it helpful at some point. First of all, notice that your shell prompt is merely inside a window that is part of your GUI desktop. Suppose that you want your whole screen to be text only.
Each Linux distribution starts one or more virtual terminals when they boot. Each virtual terminal acts like a separate physical terminal, providing a separate shell. To switch to a different virtual terminal, press Ctrl+Alt+F#, where # is a virtual terminal number from 1 to 8. The trick, though, is that different Linux distributions place their default graphical shell on different virtual terminals (for example, Ubuntu uses terminal 2, while openSUSE uses terminal 7).
Use the Ctrl+Alt method to switch around between the different virtual terminals. Don't be alarmed when your familiar graphical desktop disappears. It's still running in the background, and you can get back to where you left off in a moment. Once you find a text-based virtual terminal, take a look at the screen layout.
You probably see something like this: 
testbox login:
Go ahead and type your username and password, which you're prompted for. You see a message indicating your last login date followed by the bash prompt: 
rich@testbox:~$
Notice the similarity between this prompt and the open window you left behind in the GUI desktop. Both prompts are an indication that you have a bash session open. Note that, although it's accurate to say they're both the results of using the bash shell, they're distinct and separate instances of the same program. In other words, the environment you're working with here is exclusive of the bash environment you still have open in the GUI terminal window.
Are you wondering where your GUI desktop has gone? Just to settle your nerves a bit, do some jumping around between the virtual terminals. Most of the virtual terminals provide a text-based login, while only one or two provide the graphical desktop environment. Just find the one where your original desktop session was located and switch to that. Within a second or two, your screen should flash and return you to your graphical desktop. Neat, huh? And guess what? The bash session you left open on the other virtual terminal is still there; you never logged out. Go back again to it by pressing the Ctrl+Alt plus the function key for that virtual terminal session. Voilà! — right where you left it. Feel free to jump back and forth a few times and try some other VTs (F1 through F8). Whoopee! This virtual terminal stuff rocks.
 If you use the Lock Screen tool for your desktop (discussed in Chapters 4, 5, and 6), only your GUI session is locked. Anyone could use Ctrl+Alt to move to a virtual terminal. So, make sure you log out of your virtual terminals before walking away from your computer.
Okay, when you have grown weary and bored with this little trick, exit (literally, type exit) to log out from each VT you may have opened and press the appropriate Ctrl+Alt shortcut to return to the graphical desktop and your bash prompt. Then you can explore what all the fuss is about with this shell doohickey.

Understanding bash Command Syntax and Structure
Many people happily skip through their Linux use without understanding the fundamentals of commands in the bash shell. Note that this approach makes you lose out on some cool capabilities available in bash. The more you know about how this shell's "language" works, the more interesting things you can do with it.
The basics of using bash at the command prompt often involve typing a command and any of its flags and values. For example, you enter the ls -la ~ command to see a long-format listing of all files in your home directory, including those that start with a dot (.), which are hidden files. That other mysterious squiggle character is technically called a tilde. The tilde is a bash shortcut character that points to a user's home directory. For this example, I merely list the contents of my home directory.
You can break a command into three distinct components: 

The command name
The options or flags
The arguments
Consider this example.
Start with a simple command. The du command (short for disk usage) lists the contents of the directory you're now in, and its subdirectories, and how much hard drive space each item takes up, with a total at the end. Try typing just the du command by itself: 
du
That's neat, but it probably raises more questions than it answers. The output gives you a long listing of data, but of what? Are those numbers in bytes, kilobytes, or messages from outer space? To clarify, try adding a simple option to your command: 
du -h
You're still issuing the same command, but now you're providing additional direction on what you want displayed. The -h option tells du to show you the information in terms that humans can read more easily. Now Ms, Ks, and Gs appear next to the numbers so that you can see how big these numbers actually are. But, wait — there's more. What if you just want to know the total amount of disk space this directory and its subdirectories are taking up? That calls for the -s option: 
du -s
What if you want the total for a different directory? Or just one of your subdirectories? In my case, I keep a Music subdirectory for the items I have copied from my CDs into Ogg Vorbis (see Chapter 13). I can type the following command to see how much hard drive space that directory takes up in a human-readable way instead of having to count zeroes: 
du -sh ~/Music
In this example, du is the command name, -sh indicates the options (which can be in any order), and ~/Music is an argument. The -sh options can be accompanied by many more options that provide various features applicable to the command.
Are you wondering where to find all the available options and arguments of a particular command? Most commands offer man pages, which are discussed in the "Help!" section, later in this chapter. Another good place to turn is the --help option, available with many commands. Note that --help displays a terse list of options, but it's nice and quick if you already know about an option but just can't remember exactly which one it is. Try it by entering the following command: 
du --help
Cool, huh?

Starting Programs from the Shell
The most obvious, but perhaps not so apparent, use of the shell is to start other programs. Most utilities you use in Linux are separate and distinct executable programs. Users need a method to start these programs. In the GUI, you can associate an icon with a particular program, and the graphical environment contains the intelligence to start the program. Note that programs often require information drawn from environment variables, which are a part of the shell environment. (I discuss environment variables in more detail in the section "Working with Variables," later in this chapter.) For this reason, the GUI often calls the intended program via the bash shell. So you see, even the GUI finds the shell a necessity — although the GUI does its best to hide this detail from users.
For example, in the Ubuntu GUI after you have a terminal window open, type the following command at the prompt: 
gedit
After a few seconds, the Gedit text editor opens. If you're using the openSUSE GUI, after you have a terminal window open type the following command at the prompt: 
kate
After a few seconds the Kate text editor opens. You can start any program at a command prompt that you can click from the GNOME or KDE menu if you know what the underlying program name is. Note that if you're in a virtual terminal (press Ctrl+Alt+F1) rather than the GUI, you may see an error message. Some programs require a graphical environment in which to run, which a character-based terminal obviously doesn't have.

Putting Wildcard Expansion to Good Use
Computing life would be tedious if you had to repeat the same command on multiple files. After all, aren't repetitive tasks what the computer was designed to do? Wildcard expansion refers to the ability of one command to be executed against many files. The asterisk (*) and the question mark (?) are two wildcard characters that are used to match any filename, or a portion of a filename. For example, you can use the following command to see a long directory listing that includes only files that end with a .doc filename extension: 
ls -l *.doc
 
The files listed may include resume.doc, cover_letter.doc, and to_editor.doc, for example.

Working with Long Commands
As you become used to the command line, you should find some shortcuts to ease your typing chores. In this section, I show you some features of the bash shell designed to make your life on the command line as pleasant as possible. These features include command-line completion, editing, and using the history of previously entered commands.

Asking Linux to complete a command or filename for you
Considering that you do much more typing on the command line in Linux than you may normally do in a GUI environment, a feature that provides typing shortcuts wherever possible is great. Command completion is a function of the shell that completes filename and system commands.
The capability of the Linux file system to deal with practically unlimited sizes of filenames means that many filenames can become huge. Typing these long filenames can become cumbersome. Fortunately, with command completion, typing a command or a long filename is short work.
You may want to use command completion in two situations: to enter a command or to complete a filename.

Completing a command
Suppose that you want to type a command, but you can remember only that it begins with the letters up and is supposed to return the length of time that has passed since the system was rebooted. Type up at the command prompt and then press Tab: 
rich@testbox:~$ up[TAB]
One of two things happens: 

If only one matching command is in the search path (directory locations for searching for programs; type echo $PATH to find out what yours is), your command line is completed with that command, and the system waits for you to press Enter to execute the command.
If you hear a beep, it means that more than one command begins with up. Simply press Tab a second time, and all the possibilities are displayed. Locate the command on the list and continue typing it until the first letters are unique, at which point you can press the Tab key to complete the command. If nothing is displayed after pressing Tab twice, there is no match at all.

Completing a filename
Command-line completion isn't only for commands; if you're typing a filename on your command line, you only need to type the first few characters and then press Tab. The shell usually searches the current working directory for filenames that match what you have typed and subsequently completes the filename on the command line. This feature behaves the same way as the command-completion feature in that, if more than one file contains the letters you type, you hear a beep and need to press Tab again to see a list of choices.
It takes a little getting used to, but after you have control of the Tab key and the shell command-line completion feature, you may wonder how you ever got along without it.

Accessing your command history
It's nice of the shell to remember what you have done, for better or worse. Having the shell keep track of the commands you enter makes it easy to return to those gawd-awfully long commands you pecked at a while ago — even days ago! For example, suppose that yesterday you managed to issue a command to find all the core dump files in your system (core dump files are massive files containing debugging data that only an expert programmer or your computer can understand) and delete them. The command looked something like this: 
find / -name core -exec rm {} \;
To re-execute the command, all you need to do is fish it out of your shell history and rerun it. The simplest way (if you're repeating the exact same version of the command you used last time, which in this case would be the find command) is to type !find and press Enter. Doing so tells your system to look through your history and rerun the last instance of find in the list.
On the other hand, if you have run the find command more than once and want to make sure that you're re-executing the right version, you need to read through your command history. You can do so line by line by pressing the up-arrow key repeatedly until you locate the command you want to re-execute. Then just press the Enter key to run the command again.
 The history command lists your last 20 commands (by default) when you enter it at the prompt, in case you're curious about what they were. If you want to see a longer list of them, use the techniques covered in Chapter 11 to view the contents of the file ~/.bash_history.

Working with Variables
Variables in the bash shell are words or strings of text that computers use to represent a piece of data. An example of using a variable is setting the variable fruit to contain the text apple. A number of standard variables contain information about your account and environment settings.

Variables versus environment variables
The first thing I need to make clear is that the bash shell has two types of variables: 

Variables: A variable can be referenced in a program or shell session, but it's visible and available to only that session or program.
Environment variables: An environment variable can also be referenced by the shell or program. However, it has the added behavior of having its value copied to any other program or shell that is created from its environment.
 You can usually tell at a glance the difference between a variable and an environment variable in bash. The normal convention is to name local variables in all lowercase or in mixed-case characters. An environment variable, however, is usually always in all uppercase letters.

Checking out commonly used environment variables
The bash shell has many environment variables. You may be amazed at the range of items these variables store. The handy thing is that, if something is stored in a variable, you can change it to suit your needs! In Table 16-1, I list the environment variables you're most likely to want to work with.

TABLE 16-1 Commonly Used bash Environment Variables 
Environment Variable
Purpose
Value
HISTSIZE
Determines the number of previously typed commands that are stored.
Number of commands
HOME
Sets the location of your home directory.
The path to your home directory
MAILCHECK
Sets how often the bash shell checks for new mail in your mailbox. If mail has arrived, you see a message similar to You have new mail the next time you do something at the command prompt.
Number of seconds to wait between checks
PATH
Sets the directories that bash looks in, and the order to look in them to find a program name you type at the command prompt.
Colon-separated directories
PS1
Sets your command prompt.
Command and formatting characters used to form the prompt

Most environment variables are established for you by the system Administrator or perhaps by the shell itself. These variables are mostly read by programs to gather information, and you don't need to change their values. However, you may want to alter the value of some environment variables. For example, in Table 16-1, the first entry, HISTSIZE, determines the number of lines of command line history that are kept on file. You may have read the discussion, earlier in this chapter, of re-executing a command from yesterday. (If not, refer to the section "Accessing your command history.") By setting a higher number for HISTSIZE, you can save an even longer list of previously executed commands.

Storing and retrieving variables' values
To assign a value to a variable, you just use the variable name followed by an equal sign (=), followed by the value to store: 
MyVariable=MyValue
To retrieve the value represented by that variable, you need to precede the variable name with a dollar sign ($). Look at a variable, created by the shell, that determines what your prompt looks like. This variable is named PS1. First, you view the value being held by PS1: 
echo $PS1
 
You likely see something like the following line: 
[\u@\h \W]\$
Each of the characters preceded by a backslash represents a special instruction to the shell to return specific information when the shell prompt is referenced. See Table 16-2 for examples of special slash characters you can use in customizing your prompt.

TABLE 16-2 Pieces of the PS1 Puzzle 
Component
Result
\!
Prints the position of the command in your history list.
\#
Prints the number of commands you have used during the current shell session.
\$
Prints a $ for user accounts or a # for the superuser.
\d
Prints the date in the following format: day month date.
\h
Prints the name of the machine you're logged in to.
\n
Moves the cursor down to the next line.
\s
Prints bash for the bash shell.
\t
Prints the time in 24-hour format.
\u
Prints your username.
\w
Prints the lowest current directory level.
\W
Prints the entire current directory.

Okay, on with the example; to change your shell prompt to something more amusing, enter the following line: 
PS1='Hello \u, what can I do for you? => '
Note the single quotes. Immediately after pressing the Enter key, you see that your prompt has changed into something more inviting. Don't worry if you would rather have the original prompt: You can either reassign to the original prompt the value stored in PS1 or close the terminal window and open a new one, and you're back to familiar territory.
Are you wondering which other variables your system has in store for you? You can view all environment variables at one time by typing env. Note that you may not have any reason to access variables on the command line as a casual user of Linux. However, after you get more proficient, you may want to journey into the shell programming capabilities of bash, in which case variable storage is quite handy, just as it is in any computer programming language.
What's with those single quotes? You have to be careful of some details when changing environment variables. If you're just assigning something to a number, you could just use, for example, HISTSIZE=250. However, if you want to use something with spaces in it, you need to use quotes. Which kind of quotes you use depends on what else you want to do.
If you want to display exactly what you have specified, use single quotes to create a literal text string. For example, type the following line at a command prompt: 
echo 'Hello, my name is $USER'
Kinda goofy, huh? Take a look at a different kind of string that the shell interprets differently: an interpolated string. An interpolated value is one in which the shell interprets special characters before processing the value. Rather than use single quotes, this time you use the same example with double quotes: 
echo "Hello, my name is $USER"
Notice what the output is this time. Instead of displaying the exact text you provided, the shell replaces the variable name, designated with a dollar sign, with the actual value stored in that variable.
 Why did I use single quotes in the PS1 example but double quotes with echo? The items with the backslashes (\) are interpreted one way or another. However, if you use double quotes with PS1, they're interpreted only once, so that item that lists what directory you're in changes only the first time. With a single quote, the variables are interpreted every time you do something. The double-quote example shows something like Hello, my name is bob. However, the single quote comes up with Hello, my name is $USER.
If you're going to play around with environment variables, I recommend that you start by using the methods I discuss in this section. After you have decided that you're comfortable with any changes you have made, you can make your changes permanent by opening the ~/.bashrc file and adding the same text there. The next time you log in, the changes go into effect. You can make changes for all your users' profiles in /etc/profile as well.
 If you experiment heavily with these files, create a separate user account so that you can do whatever you want without messing up your own login. This advice especially goes for /etc/profile. You can damage everyone's login with this one! To create a separate /etc/profile, you can make a backup by typing cp /etc/profile /etc/profile.original. Then edit /etc/profile knowing that you can always delete it with the rm command and use the mv command to rename /etc/profile.original to /etc/profile.
To create an environment variable from scratch, you typically name it with all capital letters and then you "export" it. For example: 
CUSTOMVAR="new variable"export CUSTOMVAR
Don't be too discouraged if you don't understand all this variable stuff right now. As you become more proficient with Linux, you should explore shell scripting. Shell scripting is the art of creating computer programs with just the shell. Most Linux and UNIX Administrators speak shell script language like you and I speak our native tongues.

Using Redirection and Pipes
Redirection and pipes facilitate the flow of information. A pipe is exactly what it sounds like: It directs the output of one program to the input of another program. A pipeline may consist of several utilities plumbed together by pipes. At either end of this pipeline is, optionally, a redirection.
Almost all Linux utilities that require input and output have been plumbed with the following common interfaces: stdin (standard input — typically the keyboard), stdout (standard output — typically the monitor), and stderr (standard error — typically also the monitor). By having a common method to feed input to a program or read data from the output of a program, you can glue utilities together into sophisticated solutions.

Redirecting command output
I discuss redirecting command output here because it's by far the most common form of information detouring. One example of output redirection involves telling a command to send its results to a file rather than to the screen, as you probably have been used to seeing. Start in some familiar territory by typing ls -la ~ and then pressing Enter, to produce something like the following: 
total 20drwx------ 2 rich  users 4096 Oct 30 07:48 .drwxr-xr-x 5 root root  4096 Oct 30 11:57 ..-rw-r----- 1 rich  users  24 Oct 30 06:50 .bash_logout-rw-r----- 1 rich  users 230 Oct 30 06:50 .bash_profile-rw-r----- 1 rich  users 124 Oct 30 06:50 .bashrc-rw-rw-r-- 1 rich  users   0 Jan 2 07:48 wishlist
Want to send this information to a file instead? You can use the > redirection operator to tell bash to send the data into a file rather than onto your screen. Enter the following command to send the information to a file named listing in the current directory: 
ls -la ~ > listing
Notice that nothing displays on the screen, as you normally would expect. That's because the shell has rerouted the output to a file named listing. To verify that the directory listing is there, enter the following command: 
cat listing
Appendix A explains the cat command (and more).
Note that if you type ls -la ~ > listing again, the data is overwritten, meaning that the file's contents are wiped out and replaced with the new output. You can avoid this situation by using >> as your redirection operator, which tells bash to add the command's output to the end of the specified file. If you type ls -la ~ >> listing in the same directory after making no changes, the contents of listing are as follows: 
total 20drwx------ 2 rich  users 4096 Oct 30 07:48 .drwxr-xr-x 5 root root  4096 Oct 30 11:57 ..-rw-r----- 1 rich  users  24 Oct 30 06:50 .bash_logout-rw-r----- 1 rich  users 230 Oct 30 06:50 .bash_profile-rw-r----- 1 rich  users 124 Oct 30 06:50 .bashrc-rw-rw-r-- 1 rich  users   0 Jan 2 07:48 wishlisttotal 20drwx------ 2 rich  users 4096 Oct 30 07:48 .drwxr-xr-x 5 root root  4096 Oct 30 11:57 ..-rw-r----- 1 rich  users  24 Oct 30 06:50 .bash_logout-rw-r----- 1 rich  users 230 Oct 30 06:50 .bash_profile-rw-r----- 1 rich  users 124 Oct 30 06:50 .bashrc-rw-rw-r-- 1 rich  users   0 Jan 2 07:48 wishlist



Laying pipes
Another bash shell feature enables you to connect commands so that the output of one becomes the input for the next one. This feature is referred to as a pipe. Suppose that you want to look over the details of all files in the /etc directory in long-listing format. If you type ls -la /etc to do so, a massive listing appears, and much of the information scrolls right past you. Although you can back up a bit by pressing Shift+PageUp, you may not be able to see everything.
To see all the information, you can do one of two things: 

Send the data to a file with redirection by typing something like ls -la /etc > ~/etclisting and then review the contents of ~/etclisting with your favorite editor.
Pipe the output to the more command (see Appendix A).
To pipe the output to more, type ls -la directory_path | more, where directory_path is the directory for which you want to list the contents. The | symbol (which on the keyboard looks more like two vertical bars stacked on top of each other rather than just one solid line) tells bash that you want to use a pipe. The output from the ls command is sent "behind the scenes" to the more command, which then is responsible for displaying it on the monitor in pages.

"Help!"
The man page system is the electronic manual for Linux (man is short for manual), designed to provide users with a convenient reference to all the detailed command information. This information includes command-prompt options, file formats, and program function usage.
The syntax for opening a man page is man <command name>.
Don't know the command you're looking for or need basic information about using the man page system? Just type man man to get started. When you're finished reading the man page, press Q to exit.

Clearing the screen
The clear and reset commands are handy to know about when you're working in a shell. The clear command simply wipes the bash screen clean. Don't worry; it's not deleting any files, clearing out the command history, or changing any settings — it's just tidying up so that you can start dumping new stuff to the screen again.
The reset command is a little more interesting. Suppose that you try listing a binary file to the screen with the cat command. After the computer finishes puking the result of executing the cat command on a binary file, you may get lucky and still be able to read your prompt. More likely, your prompt has been rendered into box characters of no special meaning, and typing on the keyboard gives you more of the same. To get back to normal, just type reset and press Enter. Note that it doesn't look like you're typing the word reset, but rest assured that the computer understands the series of characters and, after a couple seconds, should restore your shell environment to your native language. 







Chapter 17
Basic System Administration

IN THIS CHAPTER
 Managing users
 Playing with printers
 Watching programs

Okay, so you've got your Linux system running exactly the way you want it, with just the right combination of software packages installed. You're writing documents, creating fancy graphics, listening to music, and even playing games. But don't sit back and relax: There's still more left to do.
You'll always need to be tweaking things on your system — whether it's allowing other people to use it, installing a new printer, or trying to figure out why a software program is running so slow (yes, even Linux programs can go bad sometimes). Keeping everything in order and running properly can be a full-time job. Even for a home Linux system, you may need to manage several user accounts and printers, as well as keep track of over a dozen programs running on the system.
Linux provides a few tools that help in the management process. No doubt you've seen the Administration section under the menu area on your desktop (see Chapters 4, 5, and 6). Some of the items are fairly self-explanatory, such as Date and Time settings, Display settings, Keyboard settings, and the Language setting. However, other items aren't quite as easy to figure out how to use. This chapter walks through a few of the administration tools Ubuntu and openSUSE provide to help make running your system a little easier.

Managing Users and Groups
Whether you support a Linux system with hundreds of users, or just have a user account for you and one for your cat, you need to know how to manage user accounts. This section walks through the basics you need to know to manage user accounts on your Linux system.

Finding the right tool
Not all desktop Linux distributions include a useful GUI user management tool. However, user management tools are available for each of the common desktops, so finding one that works in your Linux distribution shouldn't be hard (see Chapter 15 on how to install software).
For example, the default Ubuntu user management tool is somewhat weak. While it tries to hide some of the complexities of creating user accounts, it limits you in what you can do when creating a new user account. However, the GNOME 3 project provides some great administration tools, including the GNOME User and Group utility. This utility allows you to perform just about any user or group function required on your system. Just use the Ubuntu Software application (see Chapter 15) and install the GNOME User and Groups program. Figure 17-1 shows the GNOME Users and Groups utility after it's started.
 Be careful when selecting the Users and Groups utility from the Ubuntu Software list. If you search for "Users and Groups" you see three different versions for different desktops. Just read the description and make sure you select the GNOME version.
 
FIGURE 17-1: The GNOME user manager utility.


In openSUSE, the main administrator tool is YaST. Fortunately, YaST includes a very good user management tool. To get to it, follow these steps: 
From the KDE menu, choose Applications ⇒   System ⇒   Administrator Settings.
In the YaST Control Center window, select the Security and Users icon on the left-hand side of the window.
Click the User and Group Management icon that appears on the right-hand side of the window.
The main window contains four tabbed panes — one for managing users, one for managing user groups, one for setting the default user properties, and one for defining the user authentication method used for the system (such as whether you want to use a centralized network authentication server for multiple workstations). The main User and Group Management window is shown in Figure 17-2.
 
FIGURE 17-2: The openSUSE user manager tool.


All user and group management tools have pretty much the same abilities and features. Instead of trying to walk through every possible situation, the following sections walk through the basics for adding, modifying, and deleting users and groups using the YaST User and Group management tool. You can apply these same principles to whichever tool you're using for your desktop environment.

Adding new users
When you first installed your Linux system, it created a user account for you. That account has its own home folder for storing files. If you're in an environment where others use the same system, it's a good idea to create separate user accounts for each user. That way, you don't have to worry about the cat accidentally deleting your important documents.
If you need to add additional user accounts, here's what you need to do: 

While in the Users tab, click the Add button.
The screen prompts for information about the new user account. In YaST, that's the User Data tab, as shown in Figure 17-3.
 
FIGURE 17-3: The User Data tab in the YaST user manager tool.



Type the full name of the user for documentation purposes in the User's Full Name text box.
Type a username for the user in the Username text box.

Enter a password for the user in the Password text box, and then retype it in the Confirm Password text box.
 For security you should always use passwords that aren't common words, contain a mixture of numbers and upper and lowercase letters, and are a minimum of eight characters long.

Click the Details tab to view the account details.
You can customize several account features, or use the default settings as defined in your Linux system, as shown in Figure 17-4.
 
FIGURE 17-4: The User Details tab in the YaST user management tool.



(Optional) Modify any of these settings:

User ID: Linux tracks user accounts by the user ID and not the username. Each user account must be assigned a unique user ID. Normally the user management tool picks the next available user ID, but you can change that if needed.
Home Directory: User accounts normally have their own user directory under the /home directory to store files. This defines the location of the user directory.
Home Directory Permission Mode: Normally each user account has permissions to only their user directory. You can change the permissions to allow users in the same group to read others' home directories (see Chapter 7).
Login Shell: Linux supports several different command line shell environments (see Chapter 16). Normally the bash shell is used by default.
Default Group: Some Linux distributions (such as Ubuntu) assign each user account to a unique group, while others (such as openSUSE) assign users to a common group.
Additional Groups: A user account can be a member of multiple groups, often used for sharing files; you can select these groups from the list.

Click the Password Settings tab.
Linux allows you to control how often passwords need to be changed. The Password Settings tab provides fields that allow you to control when the user account's password must be changed, or can be changed, as shown in Figure 17-5.
Click OK to create the new user.
 
FIGURE 17-5: The Password Settings tab in the YaST user management tool.


After the new user account is created, it appears in the user list under the User tab. Some utilities provide additional features for managing the new user account. The YaST tool has two tabs — one for uploading SSH keys for the user account to access remote hosts, and another for using plugin features, such as assigning disk quotas to the new user account.
 Most Linux distributions use the same tool to modify or delete existing user accounts. Just select the existing user from the list and click the button to either edit or delete the user account. When you edit the user account you see the exact same prompts as when you created the account, allowing you to change any of the settings you previously assigned.
 Some tools allow you to retain the user's home directory after deleting the user account. This can come in handy when you need to access some of the personal files from that user. However, the files are still be assigned to the old user ID of the original owner. You most likely need to change those assignments (see Chapter 7).

Adding new groups
Groups help you manage access to files and folders on the system. Each file and folder contains three sets of permissions — one set for the owner, another set for the group the file or folder is assigned to, and the last set for all other users on the system. By assigning a file or folder to a special group, you can allow all users that belong to that group to have full access to the file or folder.
Here's what you need to do to create a group in the openSUSE YaST user and group manager tool: 

Click the Groups tab in the User Management tool.
It lists the existing groups, and the users currently assigned to each group. Because many groups are system-related, the tool filters out those and only displays standard user groups, as shown in Figure 17-6.
 
FIGURE 17-6: The Groups tab in the YaST User Management tool.




Click the Add button.
The Create New Group window opens, as shown in Figure 17-7.
Type the name of the new group in the Group Name text box.
 
FIGURE 17-7: The Create New Group window in the YaST User Management tool.




(Optional) Enter a new Group ID if you don't want to accept the one automatically assigned.
By default, User Manager automatically assigns a unique group ID (GID) to the new group. If you prefer to use your own GIDs, select the check box, and then select an available GID from the drop-down list.

Set a group password (if required).
Linux allows you to require a password for a group member to access group resources (such as files assigned to the group). If no password is assigned, group members can access files with the group just like their own files.

Add group members.
Select which user accounts should be added to the new group.
Click OK to accept the settings and create the group.
The new group is created, and appears in the group listing under the Groups tab on the main User Manager window.
 The group manager tool also allows you to edit or delete existing groups. Just select the group you want to work with and click the Edit button to modify the group properties or the Delete button to remove the group.

Printing
Even though technology gurus keep predicting a paperless society, for now, we're still stuck having to print some things. In the past, printing was one of the dark areas in Linux. Trying to get modern printers working with Linux was quite the challenge. However, some amazing advances have recently been made in making Linux more printer friendly.
Possibly the biggest advance in this area has been the Common Unix Printing System (CUPS). CUPS provides a common interface between UNIX (and Linux) systems and printers. It runs in background as a service, connecting to any defined printers, and waiting for applications to send print jobs. Because it runs in the background, it can both talk with remote printers, and accept print jobs from remote systems.
Both Ubuntu and openSUSE include a Printer Configuration tool that interfaces with CUPS. The Printer Configuration tool provides an easy way to configure both the CUPS server running on the system, and any printers you've defined.
For Ubuntu, you get to the Printer Configuration tool by opening the Settings window, then clicking the Printers entry in the left-hand pane of the Settings window. In the openSUSE KDE desktop, look under the System group menu for the Administrator Settings entry. Then, in the Hardware section, click the Printer icon.
 Ubuntu tries to automatically detect any local or network printers for you. If it didn't find your printer, click the Additional Printer Settings button in the Printers pane to start the Printer Configuration Tool.
The main Printer Configuration window for Ubuntu is shown in Figure 17-8.
You can control two things from the Printer Configuration window: 

Server Settings: Allows you to control how the CUPS server manages system printing features
Local Printers: Allows you to change individual printer properties of all the locally defined printers on the system
 
FIGURE 17-8: The Ubuntu Printer Configuration window.


The main window area displays icons for the printers you've configured (or have been automatically detected by Linux). The Add drop-down button provides two options for you: 

New Printer: Starts a simple wizard to guide you through adding a new printer to the system.
New Class: Starts another simple wizard that guides you through grouping configured printers together to form a printer pool (called a print class in CUPS). Sending print jobs to a print class enables the job to be printed by any available printer in the class.
If you already have a printer defined in your system, right-click the printer icon to access these features: 

Properties: Allows you to set features for the printer.
Duplicate: Create another printer object from the selected printer.
Rename: Change the system name of the printer.
Delete: Deletes the selected printer.
Enabled: Allow print jobs to be serviced by the printer when checked.
Shared: When checked, this feature advertises the printer on the network for other Linux workstations using CUPS to connect to.
Set as Default: Use this printer by default when printing from an application.
View Print Queue: List the print jobs waiting to be printed by the printer.
The following sections describe how to use the Printer Configuration window to set the CUPS and printer properties for your system.

Printer server settings
Clicking the Server item on the Printer Configuration window menu bar produces the Basic Server Settings window, shown in Figure 17-9.
 
FIGURE 17-9: The Printer Configuration Basic Server Settings window.


You can play with a few different settings to help with your printer administration: 

Publish Shared Printers Connected to This System: Allows remote clients to connect to any of the local printers marked as shared (more on that later).
Allow Remote Administration: Enables remote clients to connect to the CUPS server running on this system.
Allow Users to Cancel Any Job (Not Just Their Own): By default, normal users can only cancel their own print jobs. Enabling this feature allows any user to cancel any other user's print job. Although this is a handy feature, it can get dangerous in a huge multiuser environment (especially if your users like playing tricks on one another).
Save Debugging Information for Troubleshooting: By default, the CUPS server generates a moderate amount of logging information to monitor usage or problems. If you're having trouble with a specific printer configuration, you can enable this feature to produce more (lots more) information in the log files.
Besides these options additional advanced are options available by clicking the Advanced Server Settings drop-down button. The advanced options allow you to control how CUPS manages the print job logs. After determining the settings appropriate for your CUPS server environment, you can move on to creating the individual local printers.

Adding a new printer
One amazing feature of both Ubuntu and openSUSE is their ability to automatically detect printers connected via USB cables, or located on your local network. If you have one of these printers, you most likely don't need to add it to the system. You should already see it listed under the Local Printers listing. You can just move on to the next section to configure it.
If you're not fortunate enough to have a printer that's automatically connected, you have to manually add your printer. Here are the steps for doing that: 

Click the Add button on the toolbar and select Printer, or just click the Add button.
The New Printer Wizard appears, as shown in Figure 17-10. If printers are on your local network, expand the Network Printer category to see if Ubuntu automatically detected them.

Select the connection type of the new printer.
There are five different types of printer connections to make a printer available to the system. These printer connection types are listed in Table 17-1.
 
FIGURE 17-10: The New Printer Wizard in the Printer Configuration tool.



TABLE 17-1 Ubuntu Printer Connection Types 
Connection Type
Description
AppSocket/HP JetDirect
A printer directly connected to the network, using a network card and Internet software
Internet Printing Protocol (IPP)
A remote CUPS system advertising local printers that can be used remotely using the HTTP, IPP, or IPPS protocols
LPD/LPR Host or Printer
An older UNIX standard for remotely sharing local printers
Windows Printer via Samba
A Microsoft Windows workstation or server that advertises shared local printers
URI
A specific Universal Resource Identifier (URI) used to map to a network printer

As you select each connection type in the left side of the window, a different Properties area appears in the right side. For example, if you select Windows Printer via Samba, text boxes appear where you can enter the printer name, and a user ID and password required to access the network printer.
After you've selected the connection type and changed any property settings, click Forward to continue on with the wizard.


Select the printer manufacturer, or the location of the PPD file.
CUPS uses standard PostScript Printer Description (PPD) files to handle formatting print for printers. These use the same concept as the standard printer drivers for Microsoft Windows you're probably used to. Each printer must have a PPD installed for CUPS to know how to format text and graphics sent to the printer.
This wizard window allows you to select the PPD file to use for the new printer. You have three choices: 

Select the printer manufacturer from the list of installed drivers.
Select to install your own provided PPD file for the printer.
Search the Internet for a PPD file to download.
If you're lucky enough to have the PPD file for your printer, copy it to a location on your Linux system and select the Provide PPD file option. Browse to the location of the file and select it, and then click Forward.
If you don't have the PPD file for your printer, you can try to search the standard repositories for one. If you find the printer manufacturer listed, select it and click Forward.

If you selected a printer manufacturer, the next wizard window provides a list of specific printer models and PPD files. Select the printer model and (optionally) the proper PPD file.
This wizard window asks you to select the specific model type for your printer. Hopefully your printer model is listed. If not, you must go back a step and find your own PPD file to install.
If your specific model is listed, select it, and a list of available PPD files is shown. Some models may only have one PPD file, but others may have two or more files to choose from. In that case, one is usually marked as recommended. Try that first: If it doesn't work, select a different PPD file. Clicking the Forward button takes you to the final wizard window.
Create a unique name for the printer, and optionally enter a description and location. Click Apply on the summary window to create the new printer.
The new printer is added to the list of local printers (even if you mapped to a remote printer). You should now see the new printer when printing from applications on your system. Before getting too carried away with your printing, it's a good idea to check how the printer is configured.

Modifying printer properties
You can modify the properties of any printer on the system (whether Linux automatically created it or you manually created it). Click the gear icon next to the printer and a content menu with four options appears.

Printer Options
The Printer Options dialog box allows you to set some properties for the physical printer setup. The properties available for you to modify are based on information provided by the individual printer's PPD file and depend on the physical characteristics of the printer.
These properties are divided into separate categories, depending on the printer's capabilities. The options available for my test printer are shown in Figure 17-11.
 
FIGURE 17-11: The Printer Options area of the Printer Configuration tool.


The Page Setup settings handle properties such as what types of paper the printer can handle, the print qualities it can produce, and the number and types of input trays. You can force the printer server to request a specific paper size for all print jobs, or even request which paper tray to take paper from.
The Installable Options settings set the specific features provided by the printer, such as custom page sizes or duplex printing.

Printer Details
The Printer Details area provides some basic settings you can change for the printer. From here, you can change the description and location tags for the printer, the URI of the printer, and the PPD file used for the printer.

Use Printer by Default
Most applications allow you to select a printer to use if you have more than one printer configured. However, some applications don't allow you to do that, or assume there's a default printer. Selecting this option sets this printer as the default printer for the system.

Remove Printer
Removes the printer definition from the CUPS server. This also removes any queues created for the printer so no printer jobs can be processed.

System Monitor
Although things usually go well on Linux systems, sometimes applications can go awry. When that happens, it's handy to be able to watch what's going on under the hood of the operating system.
The System Monitor tool provides information about how the system hardware and software are working. It's often included by Linux distributions to provide a graphical peek at your system. Both Ubuntu and openSUSE include this feature by default.
To start the System Monitor tool in Ubuntu, from the application launcher click the System Monitor icon, or enter it in the Search text box. In openSUSE, from the Applications menu select System and click the System Monitor icon. While there are some differences between the System Monitor tool in Ubuntu and openSUSE, they both provide much the same information. To save space I just walk through the System Monitor as it appears in Ubuntu.
There are three window tabs in the System Monitor: 

Processes: Shows information about programs currently running on the system
Resources: Shows information about CPU and memory usage.
Filesystem: Shows information about what hard drives are mounted on the system
Of course, just having a bunch of information thrown at you doesn't help at all. You need to know what that information means for it to be meaningful. The following sections help you understand how to interpret the various pieces of information contained in the System Monitor.

Processes
Clicking the Processes tab provides an overview of the programs currently running on the system, as shown in Figure 17-12.
 
FIGURE 17-12: The Processes tab in the System Monitor tool.


Processes — the Linux term for programs running on the system — are shown in a table format. The default view shows all the processes that are currently being run by your user account. Alternatively, you can watch all the processes, or just the ones that are actively working, by clicking the menu icon in the title bar and selecting which option you want to view.
You can sort the table rows based on any of the table columns. For example, to see what processes are using the largest percent of CPU time, click the % CPU column heading. The System Monitor automatically sorts the rows based on percentage of CPU usage.
Other columns are available for you to add. Choose Menu ⇒   Preferences to see the options available for the Processes tab. Table 17-2 lists the data available to display in the Processes tab.

TABLE 17-2 System Monitor Process Table Columns 
Column
Description
Process Name
The program name of the running process
User
The owner of the process
Status
The status (either sleeping or running) of the process
Virtual Memory
The amount of virtual system memory allocated for the process
Resident Memory
The amount of physical memory allocated for the process
Shared Memory
The amount of memory shared between this process and other processes
%CPU
The percentage of total CPU time the process is using
CPU Time
The actual CPU time the process is using
Started
The time the process started running
Nice
The system priority of the process; higher nice numbers have lower priority on the system
ID
The unique process ID (PID) the system assigned to the process
Command Line
The name of the command and any command line arguments used to start it
Memory
The amount of system memory the processes is using
Waiting Channel
The channel the process is waiting in
Control Group
The kernel control group the process belongs to
Unit
The systemd startup unit the process belongs to
Session
Additional details about the process session
Seat
The terminal the process was launched from
Owner
The userid that started the process
Disk read total
Total bytes read by the process
Disk write total
Total bytes written by the process
Disk read
Bytes read by the process since the last update
Disk write
Bytes written by the process since the last update
Priority
The system priority assigned to the process

You can set a few other options while you're in the Preferences dialog box: 

Update Interval in Seconds: How frequently the System Monitor refreshes the table data
Enable Smooth Refresh: Gathers new process information before refreshing the table data, instead of refreshing table data as it gathers process information
Alert Before Ending or Killing Processes: Provides a warning dialog box before you're allowed to terminate a running process "just in case"
Divide CPU usage by CPU count: Provides the CPU percentage based on the number of CPUs installed on the system rather than as a total
You can also control processes that you own directly from the Processes tab. Right-clicking a process produces a menu that allows you to stop, end, or kill a process, along with changing the priority of the process.

Resources
Clicking the Resources tab provides a quick overview of the hardware status of the system, as shown in Figure 17-13.
 
FIGURE 17-13: The Resources tab in the System Monitor tool.


Three real-time graphs are displayed: 

CPU History: Displays the running real-time CPU percent utilization. If the system contains more than one processor, each processor is shown as a separate history line.
Memory and Swap History: Displays two running real-time graphs: one for the amount of memory used by the user, and one for the amount of swap space used by the user.
Network History: Displays the amount of data send and received from the network interfaces.
The Resources tab can give you a quick overall picture of how your system is doing. If you see that the CPU or memory usage is running high, you can flip over to the Processes tab and sort the listing based on that parameter.

File Systems
Clicking the File Systems tab gives you a quick reference for the amount of disk space used on each mounted filesystem (shown in Figure 17-14) — see Chapter 7 for filesystems and mounting.
All hard drives and partitions are shown, along with their total disk space, free disk space, and used disk space. This allows you to get a quick indication of how much free space you have left on your hard drive.
As you can see, the System Monitor tool is really a bundle of various useful tools to help make system administration a little easier for you. 
FIGURE 17-14: The File Systems tab in the System Monitor tool.


 







Chapter 18
A Secure Linux Box Is a Happy Linux Box

IN THIS CHAPTER
 Implementing strong passwords
 Keeping your system up to date
 Plugging security holes
 Using the System Logs Viewer
 Securing your system by using best practices

You don't leave the front door of your house open when you go to work, do you? How about leaving it shut and locked but with a few nice, big windows open? The problem is that many people do this every day with their computers, and they don't even know it! In this chapter, I take a look at where your open doors and windows are and what you can do to secure them.
Every user's actions affect your overall system security. If your family members or officemates need access to your Linux machine, take the time to sit down and explain the facts of secure life to them. They can then apply this information to the other computers they use because these issues aren't specific to Linux.

Choosing Secure Passwords
The first line of defense from intruders is the passwords used on your system. For each account you have set up on your system, the passwords must be strong and difficult to figure out. If even one of the accounts has a weak password, you may be in for some trouble. Amazingly enough, in 70 percent of the cases where unauthorized individuals gained access to systems, the password for an account was the word password itself! When choosing good passwords, follow these rules: 

Don't use any part of your name.
Don't use the names of friends, loved ones, or pets.
Don't use birthdays, anniversaries, or other easily guessed dates.
Don't use dictionary words.
Don't keep your password written down near your computer, unless it's buried in something else, such as writing it into an address.
Don't tell anyone your password. If someone needs to access specific files, give the person an account and set up permissions and groups properly so that they can do so (described in Chapter 17).
Do use a mix of lowercase letters, capital letters, numbers, and special characters.
Do ensure that your password contains a minimum of eight characters, but the more the better.
Do use acronyms made from sentences, such as having the password M8yodniT to stand for "My eight-year-old dog's name is Tabby."
Every person on your system needs to follow these rules, including you! Consider keeping a sheet of paper with these rules on it next to the machine.
 I can't stress this advice enough: Never give out your password. Make sure that the people using your machine understand this rule. You can always find alternative methods to accomplish a task without giving your password. If someone wants to use your machine, make an account for that person. Then they can have their own password!

Updating Software
All users can download and install new software. Of course, the programs they install are limited to the user's own permissions. The thing to be careful of here — as with any operating system — is that you don't get a version of a program that has been tampered with or is even an all-out fake trying to trick folks into installing it.
The first place to look for new software is the distribution's repository (see Chapter 15). Use the built-in software installation tool to install new applications and you know you're safe. If you can't find the application in your distribution's repository, look for a package bundled by a trusted source. Make sure that you and other users of your Linux system are comfortable with the websites that are used and visited. You need to develop a list of trusted sites that provide you with the information you need and are not misleading in their presentation. As a starting point, if your Linux distribution is derived from a core distribution (such as Ubuntu being derived from Debian Linux) you can trust the repositories of the parent distribution. Other trusted software distribution websites include GitHub and SourceForge — both websites dedicated to distributing open source software. If either you or a user of your Linux system is unsure whether you can trust a particular website, do some research and perhaps ask others for their opinions.
Chapter 15 also details how to keep your distribution and its software up to date with security patches. Over time, even the most popular software packages are found to have security holes. Please, please, please, watch for security updates and install them! After all, as the person in charge, your job is to make sure that this computer stays intruder-free. In addition to making sure that you do all the same things a user would do for both your user accounts and the superuser (root) account, no matter which Linux distribution you're running, you must keep up-to-date with security problems.

Network holes
On a Linux server or workstation — or any computer at all, using any operating system — you should not have any network services running that you don't intend to use. Think of each network program running as a glass window or sliding glass door in your house. Each network service is a weak spot, and many nasty folks are out there on the Internet who like to go up to all the houses and make note of how many windows and glass doors are on them, what kinds they are, and how easy they are to breach.

Controlling your services
The more software you've installed on your system, the more services it may have running in the background. Both Ubuntu and openSUSE provide a utility to control what applications the system starts automatically.
Both Ubuntu and openSUSE use the systemd software for starting services. While openSUSE provides a graphical tool for managing the services, Ubuntu doesn't. However, on both systems you can use the systemctl command line command to view and manage the system services. To see a list of the services currently running on your Ubuntu or openSUSE system, just use this command: 
$ systemctl list-units --all --state runningUNIT                            LOAD   ACTIVE SUB     DESCRIPTIONcups.path                       loaded active running CUPS Schedulerinit.scope                      loaded active running System and Service Managersession-2.scope                 loaded active running Session 2 of user richauditd.service                  loaded active running Security Auditing Serviceavahi-daemon.service            loaded active running Avahi mDNS/DNS-SD Stackchronyd.service                 loaded active running NTP client/servercron.service                    loaded active running Command Schedulercups.service                    loaded active running CUPS Schedulerdbus.service                    loaded active running D-Bus System Message Busdisplay-manager.service         loaded active running X Display Managerfirewalld.service               loaded active running firewalld - dynamic                                firewall daemongetty@tty1.service              loaded active running Getty on tty1haveged.service                 loaded active running Entropy Daemon based on                                the HAVEGE algorithmlvm2-lvmetad.service            loaded active running LVM2 metadata daemonModemManager.service            loaded active running Modem ManagerNetworkManager.service          loaded active running Network Managernscd.service                    loaded active running Name Service Cache Daemonpolkit.service                  loaded active running Authorization Managerpostfix.service                 loaded active running Postfix Mail Transport                                Agentrsyslog.service                 loaded active running System Logging Servicertkit-daemon.service            loaded active running RealtimeKit Scheduling                                Policy Servicesshd.service                    loaded active running OpenSSH Daemonsystemd-journald.service        loaded active running Journal Servicesystemd-logind.service          loaded active running Login Servicesystemd-udevd.service           loaded active running udev Kernel Device Managerudisks2.service                 loaded active running Disk Managerupower.service                  loaded active running Daemon for power                                managementuser@1000.service               loaded active running User Manager for UID 1000avahi-daemon.socket             loaded active running Avahi mDNS/DNS-SD Stack                                Activation Socketcups.socket                     loaded active running CUPS Schedulerdbus.socket                     loaded active running D-Bus System Message Bus                                Socketlvm2-lvmetad.socket             loaded active running LVM2 metadata daemon                                socketsyslog.socket                   loaded active running Syslog Socketsystemd-journald-dev-log.socket loaded active running Journal Socket (/dev/log)systemd-journald.socket         loaded active running Journal Socketsystemd-udevd-control.socket    loaded active running udev Control Socketsystemd-udevd-kernel.socket     loaded active running udev Kernel Socket LOAD   = Reflects whether the unit definition was properly loaded.ACTIVE = The high-level unit activation state, i.e. generalization of SUB.SUB    = The low-level unit activation state, values depend on unit type. 37 loaded units listed.To show all installed unit files use 'systemctl list-unit-files'.lines 18-45/45 (END)$
As you can see, quite a few services run on the Linux system! Before trying to disable any of them, make sure you've looked up exactly what they do and decided your system doesn't need them. The Description column can give you some clues as to where to find more information about the service. You may remember the CUPS services from Chapter 17, or the NetworkManager service from in Chapter 9. Check with your specific Linux distribution's documentation to see what services should be running by default.
If you do find services that you don't want running, use the systemctl command to disable them: 
$ sudo systemctl disable ModemManager[sudo] password for rich:Removed /etc/systemd/system/dbus           -org.freedesktop.ModemManager1.service.Removed /etc/systemd/system/multi-           user.target.wants/ModemManager.service.$
If later on you decide you want that service, just use the enable command: 
$ sudo systemctl enable ModemManagerCreated symlink /etc/systemd/system/dbus-             org.freedesktop.ModemManager1.service     /lib/systemd/system/ModemManager.service.Created symlink /etc/systemd/system/multi-             user.target.wants/ModemManager.service     /lib/systemd/system/ModemManager.service.$
 
Using systemctl you can customize exactly what services are running on your Linux system!

Controlling and adjusting your firewall
Even better (but just as essential) than turning off unnecessary services is to make sure that you have a firewall in place. A firewall is like putting a big bunker around your house. It would then have openings that only fit people wanting to do certain kinds of things. Friends could fit in through one door, family another, and package deliveries to another.
 While most home networks are connected to the Internet through a router that already has firewall features built-in, it doesn't hurt to activate yet another firewall on your PC. This provides two layers of protections.
In computer networks, each of the services discussed earlier always comes in through the same door (port, in computer-world lingo). You use firewalls to prevent anyone from being able to so much as touch a door, or port, unless you've explicitly set it up so that they can do so.
Both Ubuntu and openSUSE install a firewall by default, but in Ubuntu it's not activated. The firewall package installed in Ubuntu is ufw. To activate the ufw firewall in Ubuntu, you need to do some work from the command line (see Chapter 7). Just follow these steps: 
Select Terminal from the Application Launcher to start the Terminal application.
Enter the following commands:

sudo ufw allow ssh/tcpsudo ufw logging onsudo ufw enablesudo ufw status
The first command enables secure connections on the SSH TCP port (I talk more about that in a little bit). The second command tells ufw to log any activity that it restricts in a log file. This enables you to see whether anyone is trying to hack into your system. The next command starts the ufw firewall, and the last command displays the status.
Type exit to exit the Terminal session.
Unfortunately, because ufw is a command line program, you must use the command line to add or remove any additional settings to the firewall.
On the other hand, openSUSE provides a handy graphical interface for configuring the firewall. If you ever want to make changes, from the KDE menu choose Applications ⇒ System ⇒ Administrator Settings. You may be asked to enter your root password along the way. In the Administrator Settings dialog box, click the Network Services icon on the left-hand side, and then scroll down and click the Firewall icon on the right-hand side. The Firewall Configuration window opens, as shown in Figure 18-1.
 
FIGURE 18-1: The openSUSE Firewall Configuration window.


On the right-hand side of the Firewall window you see the current status of the firewall, along with drop-down boxes to select what to do when you write a new configuration (stop, restart, or reload), and whether to start the firewall automatically when the system boots.
On the left-hand side of the Firewall window is a list of the different zones currently configured in the firewall, and which (if any) Ethernet interfaces are assigned to each zone. You can define a different set of rules or each zone, then move the network interface(s) into different zones as necessary.
By default the main Ethernet interface (called eth0) is assigned to the public zone. Click the public zone entry to see what (if any) services are blocked or allowed for that zone, as shown in Figure 18-2.
 
FIGURE 18-2: The default public firewall zone settings.


By default, only the DHCP service is allowed to connect inbound traffic on the eth0 Ethernet interface. To allow SSH connections, follow these steps: 
Scroll down the left-hand listing to find the ssh service and click it.

Click the Add button to add it to the Allowed list.
The ssh service now appears in the Allowed list as an allowed service by the firewall.
Click the Accept button.
Now you can establish a remote connection to the system using the SSH protocol, as described next.

The secure shell game (SSH)
One cool thing about Linux is that you can use the command line to connect to your account from anywhere, as long as you have the right software (and the machine you're connecting to isn't behind some kind of blocking software). That "right software" is called the Secure Shell (SSH). SSH is both a network protocol and a client/server protocol. The openSSH software package provides the tools you need to securely connect to your Linux system from any other device that supports SSH (including phone and tablet apps).
 In the old days people would use the telnet program to connect remotely to systems, but I beg you not to. Again, do not open the Telnet port in the security tool and do not use the telnet program. It sends information across the Internet in nice, raw text that anyone can snoop through. Now you can use the SSH protocol to log in interactively to your system, or copy files back and forth using the scp program.

Running a Linux SSH server
First, you need to make sure that you have SSH installed on your Linux system, that you have an SSH server running, and that you enable SSH in your firewall. (See the section "Controlling and adjusting your firewall," earlier in this chapter, to handle the third concern.)
The openSUSE distribution installs the SSH software by default, but doesn't start the SSH server service automatically. To do that, you can use the systemctl command: 
$ sudo systemctl enable sshdCreated symlink /etc/systemd/system/multi-          user.target.wants/sshd.service     /usr/lib/systemd/system/sshd.service.$ sudo systemctl start sshd
If you opened the SSH port in your firewall from the previous section, you're ready to connect to your Linux system from a remote client!
The Ubuntu workstation distribution doesn't install an SSH server by default, but you can install the OpenSSH server package using the apt-get command line tool: 
$ sudo apt-get install openssh-server
After you install the package you can check whether it's running using the systemctl command: 
$ systemctl list-units --all | grep ssh  ssh.service    loaded  active  running OpenBSD Secure Shell server$
If you elect to keep the SSH server running on your Linux computer, you can use any SSH client software to connect to the Linux computer from a remote computer. The software that you need depends on what type of computer you're connecting from.

Installing a Windows SSH program
If you want to connect to your SSH-enabled Linux box — or, actually, to any computer set up to accept SSH connection, not just a Linux one — from a Windows computer, you have several excellent choices of software packages available to choose from.
One popular SSH client package for the Windows world is PuTTY. This is a free software package released under the MIT license — similar to the GNU GPL license that most Linux distributions use — so you can use it to your heart's content without paying a dime.
The home page for PuTTY (www.chiark.greenend.org.uk/~sgtatham/putty/) provides a Download link to the download area. From here, you can select which version of PuTTY to use (you can even download the program source code and play with it yourself if that's what you're into). The easiest way to get PuTTY running on your Windows PC is to select the putty.exe Windows binary file for download. This is the complete PuTTY program in one simple file.
After downloading the putty.exe file, locate where you downloaded it on your computer by using your file manager program and double-click it. The main PuTTY window, shown in Figure 18-3, appears.
 
FIGURE 18-3: The PuTTY main window.


That's all there is to it: PuTTY doesn't require any installation setup. You're now ready to connect to a remote computer using SSH!

Setting up and making your SSH connection in Windows
Using PuTTY is almost as easy as downloading it. From the main PuTTY window: 
Click Session in the left side menu to show the session options. Refer to Figure 18-3.

Type the hostname or IP address of the remote computer you want to connect to in the text box at the top of the window.
If you're not sure of the address of your Linux system, open a Terminal prompt and type the command ip addr. You should see the IP address assigned to the Ethernet port.
Ensure the SSH radio button under the address is selected (this should already be selected by default).

If you want to save the connection settings, put a name in the Save Sessions text box and click Save.
You can select the saved session from the list box. PuTTY restores all the configuration settings to what you had saved.
Click the Open button to start the SSH session.
The first time you connect to your Linux system, PuTTY prompts whether you want to save the fingerprint key for the server. This ensures another server on the network doesn't steal your server's IP address and hijack your connection. Just click Yes to accept the key.
PuTTY emulates a console terminal as it presents the command line from the remote system. You can change the appearance of the terminal window by clicking the Appearance entry under the Window section of the main PuTTY window, as shown in Figure 18-4.
 If you use virtualization software to run your Linux workstation as a virtual machine (see Chapter 20), make sure you select the option to create a bridged network connection rather than a NAT network connection. The NAT network connection assigns an IP address to your Linux workstation that's not on your local network, and you won't be able to connect to it from a remote client.
The terminal emulation window then appears, asking you for the userid and password to use for the connection. After entering your login information, you should get a command line prompt for the remote computer, as shown in Figure 18-5.
 
FIGURE 18-4: The PuTTY window appearance configuration.


 
FIGURE 18-5: Connecting to a remote Ubuntu computer from a Windows PC.


Now you can enter Linux commands just as if you were on the Terminal or Konsole programs! SSH ensures that all your session data is safely encrypted before it's sent across the network. When you're finished, type exit at the command line and your session closes.

Connecting to your Linux box from another Linux box with SSH
Yes, you can connect from another Linux box, too. This task is a bit less complicated. Open a terminal window (see Chapter 7) and follow these steps: 

Type ssh username@ipaddress or ssh username@machinefullname to open the connection.
For example, type ssh rich@192.168.1.76 or ssh rich@computer.example.com. After you do this step, the following text appears: 

The authenticity of host '192.168.1.76 (192.168.1.76)' can't be established.RSA key fingerprint is ed:68:0f:e3:78:56:c9:b3:d6:6e:25:86:77:52:a7:66.Are you sure you want to continue connecting (yes/no)?

Type yes and press Enter.
You now see these lines: 

Warning: Permanently added '192.168.1.76' (RSA) to the list of known hosts.rich@192.168.1.76's password:
Enter your login password and press Enter. Now you're in!
Close the connection by logging out of the account (type logout).

Connecting to your Linux box from a Macintosh running OS X with SSH
The process from a Macintosh is similar to that under Linux. Go to Applications ⇒ Utilities ⇒ Terminal.app, which opens a command line window for you. Then type 
ssh IPaddress
to access the same user account on the remote machine (again, you can use a computer's full name rather than the IP address), or type 
ssh login@IPaddress
if you want to access the account login instead of the same account you're using on the Mac.

Software holes
When someone is already in your system — whether or not they're allowed to be there — you have additional security concerns to keep in mind. One of these involves what software you have on the machine. Believe it or not, each piece of software is a potential security hole. If someone can get a program to crash in just the right way, they can get greater access to your system than they should. That's a very bad thing!
One way to close software holes is to remove all programs you don't need. You can always add them later, if necessary. Most Linux distributions (including Ubuntu and openSUSE) provide a graphical tool to add and remove software packages (see Chapter 15) so you can easily remove any unnecessary software from your computer.
If it turns out that, as a result of dependencies, you lose other software that you want to keep, make sure to cancel the removal.

Keeping an Eye on Your Log Files with the System Log Viewer
One other security issue you may want to consider concerns log files. Your network programs, kernel, and other programs all run log files, which contain records of what has been happening on your system. You may be amazed at just how much information gets put in them! They're mostly in /var/log; take a look sometime.
Fortunately, tools are available that can help mere mortals sift through the wheat to look for the chaff of bugs and intruders. Both Ubuntu and openSUSE provide a graphical log viewer tool, which allows you to easily scan through the major log files on the computer.
In Ubuntu, open the Application Launcher and look for the Logs application. Click the icon to launch it. The main window appears, as shown in Figure 18-6.
The Logs program breaks down the log data into six categories for viewing: 

Important: Fatal errors from all log files
All: All entries from all log files
Applications: Log entries generated by applications
System: Log entries generated by the operating system
Security: Log entries generated from security events, such as logging into or out from the system
Hardware: Log entries generated from hardware devices
 
FIGURE 18-6: The Ubuntu Logs log viewer program.


When you click a category on the left-hand side of the window, the pertinent log entries appear in the right-hand side. Newer log entries are at the top, with older log entries at the bottom of the list.
In openSUSE, the log viewer is part of the YaST2 Control Center. Just click the KDE menu icon, and then choose Applications ⇒ System ⇒ Administrator Settings. Scroll down to the Miscellaneous section, and select the System Log entry. The System log viewer appears, as shown in Figure 18-7.
The openSUSE log viewer isn't quite as sophisticated as Logs in Ubuntu, but it gets the job done. At the top of the window is a drop-down box that allows you to select the log file to view: 

/var/log/messages: General system event logs
/var/log/boot.log: Boot-time events
/var/log/YaST2/y2log: Events generated by the YaST2 tools
In the log files, the most recent events are at the bottom of the listing, so you need to scroll down to the bottom to see what events have recently occurred on your system
 
FIGURE 18-7: The openSUSE log viewer program.


 The log files categorize entries based on severity. You don't necessarily need to be concerned about every notice that appears in the log file; those are mainly for informational purposes. However, if you see lots of warnings or errors, that's probably an indication that something is going wrong with your system!

Locating Security Resources
You can find a plethora of information on the Internet about desktop, network, and Linux security. Because of the massive volume of information available, I list some websites I like for security issues: 

www.sans.org : One of the major security-related sites on the Internet.
www.grc.com : Provides some interesting tools, such as tools to test which ports are open on a system. Also, this site features many excellent articles dealing with system and network security. Click the Shields Up graphic.
www.tldp.org/HOWTO/Security-HOWTO/index.html : The Linux Security HOWTO.
www.linuxsecurity.com : Presents a plethora of information from Linux Security.com.
www.securityspace.com : Has lots of information about security issues and tools for different operating systems. 







Chapter 19
Automating Your World

IN THIS CHAPTER
 Understanding what a shell script is
 Creating simple shell scripts
 Getting fancy with shell scripts

As you use your Linux system, you may find that you often need to perform the same tasks over and over, such as checking available disk space on the system, or creating user accounts. Instead of entering multiple commands every time, you can write scripts that run in the shell to do these tasks automatically for you. This chapter explores how bash shell scripts work, and demonstrates how you can write your own scripts to automate everyday activities on your Linux system.

The Basics of Shell Scripting
Shell scripting allows you to write small programs that automate activities on your Linux system. Shell scripts can save you time by giving you the flexibility to quickly process data and generate reports that would be cumbersome to do by manually entering multiple commands at the command prompt. You can automate just about anything you do at the command prompt by using shell scripts.
This section walks through the basics of what shell scripts are, and how to get started writing them.

Running multiple commands
Chapter 16 shows how to use the Linux command line to enter commands directly to the Linux system instead of using the graphical desktop. One exciting feature of the Linux command line is that you can enter multiple commands on the same command line and Linux will process them all! Just place a semicolon between each command you enter: 
$ date ; whoTue Jun 16 19:20:06 EST 2020rich     :0           2020-06-16 19:15 (:0)$
The Linux shell runs the first command (date) and displays the output, then it runs the second command (who) and displays the output from that command, immediately following the output from the first command. While this may seem trivial, this is the basis of how shell scripts work.

Redirecting output
Another building block of shell scripting is the ability to store command output. Often, when you run a command you'd like to save the output for future reference. To help with this, the shell provides output redirection.
Output redirection allows you to redirect the output of a command from the monitor to another device, such as a file. This feature comes in handy when you need to log data from a shell script that runs after business hours, so later on you can see what the shell script did when it ran.
To redirect the output from a command you use the greater-than symbol (>) after the command, then specify the name of the file that you want to use to capture the redirected output. This is demonstrated here: 
$ date > today.txt$ cat today.txtTue Jun 16 19:21:12 EST 2020$
This example redirects the output of the date command to the file named today.txt. Notice that when you redirect the output of a command, nothing displays on the monitor output. All the text from the output is now in the file, as shown by using the cat command to display the file contents.
The greater-than output redirection operator automatically creates a new file for the output, even if the file already exists. If you prefer, you can append the output to an existing file by using the double greater-than symbol (>>), as shown here: 
$ who >> today.txt$ cat today.txtTue Jun 16 19:21:12 EST 2020rich     :0           2020-06-16 19:15 (:0)$
The today.txt file now contains the output from the original date command in the first example, and the output from the who command ran in the second example.
 In Linux, everything is a file, including the input and output process of a command. Linux identifies files with a file descriptor, which is a non-negative integer. The bash shell reserves the first three file descriptors for input and output. File descriptor 0 is called STDIN, and points to the standard input for the shell, which is normally the keyboard. File descriptor 1 is called STDOUT, which points to the standard output for the shell, typically the monitor. This is where the standard output messages go. File descriptor 2 is called STDERR, which is where the shell sends messages identified as errors. By default, this points to the same device as the STDOUT file descriptor, the monitor. You can redirect only the errors from your shell script to a separate file from the normal output by using 2> instead of the standard > output redirection character. This allows you to specify a separate file for monitoring error messages from commands.
Output redirection is a crucial feature in shell scripts. With it, you can generate log files from your scripts, giving you a chance to keep track of things as the script runs in background mode on the Linux system.

Piping data
While output redirection allows you to redirect command output to a file, piping allows you to redirect the output to another command. The second command uses the redirected output from the first command as input data. This feature comes in handy when using commands that process data, such as the sort command.
The piping symbol is the bar (|) symbol, which usually appears above the backslash key as a shifted character on U.S. keyboards. Here's an example of using piping. 
$ ls | sortDesktopDocumentsDownloadsMusicPicturesPublicTemplatestest.txttoday.txtVideos$
The output from the ls command is sent directly to the sort command as input, but behind the scenes. You don't see the output from the ls command displayed on the monitor; you only see the output from the last command in the pipeline, which in this case is the sort command. There's no limit on how many commands you can link together with piping.
 The >, >>, and | symbols are part of a group of characters often referred to as metacharacters. Metacharacters are characters that have special meaning when used in the Linux shell. If you need to use a metacharacter as a standard character (such as using the > character as a greater-than symbol in your output instead of as a redirect symbol), you must identify the metacharacter by either placing a backslash in front of it or enclosing the metacharacter in single or double quotes. This method is called escaping.

The shell script format
Placing multiple commands on a single line, either by using the semicolon or piping, is a great way to process data, but can still get rather tedious. Each time you want to run the set of commands, you need to type them all at the command prompt.
However, Linux allows you to place multiple commands in a text file, then run the text file as a program from the command line. This is called a shell script because you're scripting commands for the Linux shell to run.
Shell script files are plain text files. To create a shell script file, you just need to use any text editor that you're comfortable with. Be sure not to use a word processing program, as those embed binary data into the text to define fonts and styling. If you're working from a KDE-based graphical desktop, you can use the KWrite or Kate programs; if you're working from a GNOME-based graphical desktop, you can use the Gedit program (see Chapter 11).
If you're working directly in a command line environment you still have some options. Many Linux distributions include either the pico or nano editors to provide a graphical editor environment by using ASCII control characters to create a full-screen editing window.
If your Linux distribution doesn't include either the pico or nano editor there is still one last resort: the vi editor. The vi editor is a text-based editor that uses simple single-letter commands. It's the oldest text editor in the Linux environment, dating back to the early days of Unix, which may be one reason why it's not overly elegant or user-friendly.
Once you've chosen your text editor you're ready to create your shell scripts. First, for your shell script to work you need to follow a specific format for the shell script file. The first line in the file must specify the Linux shell required to run the script. This is written in somewhat of an odd format: 
#!/bin/bash
The Linux world calls the combination of the pound sign and the exclamation symbol (#!) the shebang. It signals to the operating system which shell to use to run the shell script. Most Linux distributions support multiple Linux shells, but the most common is the bash shell. You can run shell scripts written for other shells, as long as that shell is installed on the Linux distribution.
After you specify the shell you're ready to start listing the commands in your script. You don't need to enter all the commands on a single line; Linux allows you to place them on separate lines. Also, the Linux shell assumes each line is a new command in the shell script, so you don't need to use semicolons to separate the commands. Here's an example of a simple shell script file. 
$ cat test1.sh#!/bin/bash# This script displays the date and who's logged indatewho$
The test1.sh script file starts with the shebang line identifying the bash shell, the standard shell in Linux. The second line in the code demonstrates another feature in shell scripts. Lines that start with a pound sign are called comment lines. They allow you to embed comments into the shell script program to help you remember what the code is doing. The shell skips comment lines when processing the shell script. You can place comment lines anywhere in your shell script file, after the opening shebang line.
 Notice that I used the .sh filename extension on the shell script file. While this isn't required in Linux, it's become somewhat of a de facto standard among programmers. This helps identify that the text file is a shell script that can be run at the command line.

Running the shell script
If you enter a shell script file at the command prompt to run it you may be a bit disappointed: 
$ test1.shtest1.sh: command not found$
Unfortunately the shell doesn't know where to find the test1.sh command in the virtual directory. The reason for this is the shell uses a special environment variable called PATH to list directories where it looks for commands. If your local home folder is not included in the PATH environment variable list of directories, you can't run the shell script file directly. Instead, you need to use either a relative or an absolute path name (see Chapter 7) to point to the shell script file. The easiest way to do that is by adding the ./ relative path shortcut to the file: 
$ ./test1.shbash: ./test1.sh: Permission denied$
Now the shell can find the program file, but there's still an error message. This time the error is saying you don't have permissions to run the shell script file. A quick look at the shell script file using the ls command with the -l option shows the permissions set for the file: 
$ ls -l test1.sh-rw-r--r-- 1 rich rich 73 Jun 16 19:37 test1.sh$
By default, the Linux system didn't give anyone execute permissions to run the file (see Chapter 7). You can use the chmod command to add that permission for the file owner: 
$ chmod u+x test1.sh$ ls -l test1.sh-rwxr--r-- 1 rich rich 73 Jun 16 19:37 test1.sh$
 
The u+x option adds execute privileges to the owner of the file. You can now run the shell script file and see the output: 
$ ./test1.shTue Jun 16 19:21:12 EST 2020rich     :0           2020-06-16 19:15 (:0)$
Now that you've seen the basics for creating and running shell scripts, the next section dives into some more advanced features you can add to make fancier shell scripts.

Advanced Shell Scripting
Whew, the previous section covered a lot of ground! If your head is spinning, take some time to just practice with the examples. Once you're ready, this section adds to that by showing more features available in shell scripts to make them look and act more like real programs.

Displaying messages
When you string commands together in a shell script file, the output may be somewhat confusing to look at. It would help to be able to customize the output by separating the output and adding your own text between the output from the listed commands.
The echo command allows you to display text messages from the command line. When used at the command line, it's not too exciting: 
$ echo This is a testThis is a test$
But now you have the ability to insert messages anywhere in the output from the shell script file. Follow along with this example: 
Open your favorite text editor and create the file test1.sh.
Enter the following text:

#!/bin/bash# This script displays the date and who's logged inecho The current date and time is:dateechoecho "Let's see who's logged into the system:"who
Save the file, and then use the chmod command to assign yourself execute privileges to it:

chmod u+x test1.sh
Run the test1.sh script:

$ ./test1.shThe current date and time is:Tue Jun 16 19:55:44 EST 2020Let's see who's logged into the system:rich     :0           2020-06-16 19:15 (:0)$
The shell script you created adds three echo commands to the test1.sh script. Notice that the first echo command doesn't use any quotes, but the third one does. The reason for that is the text output from the third echo command contains single quotes. The single quote is also a metacharacter in the shell, which confuses the echo command, so you need to place double quotes around the text. Also notice that the second echo command doesn't have any text on the line. That outputs a blank line, which is useful when you want to separate output from multiple commands.

Using variables
Part of programming is the ability to temporarily store data to use later on in the program. You do that by using variables.
Variables allow you to set aside locations in memory to temporarily store information, and then recall that information later in the script by referencing the variable name.
Two types of variables are available in the Linux shell. The following sections explain how to use both types in your shell scripts.

Environment variables
Environment variables track specific system information, such as the name of the system, the name of the user logged into the shell, the user's userid (UID), the default home directory for the user, and the search path the shell uses to find executable programs. You can display a complete list of active environment variables available in your shell by using the set command, as shown here: 
$ setBASH=/bin/bashBASHOPTS=checkwinsize:cmdhist:complete_fullquote: expand_aliases:extglob:extquote: force_fignore:histappend:interactive_comments:progcomp: promptvars:sourcepathBASH_ALIASES=()BASH_ARGC=()BASH_ARGV=()BASH_CMDS=()BASH_COMPLETION_VERSINFO=([0]="2" [1]="8")BASH_LINENO=()BASH_SOURCE=()BASH_VERSINFO=([0]="4" [1]="4" [2]="19" [3]="1"         [4]="release" [5]="x86_64-pc-linux-gnu")BASH_VERSION='4.4.19(1)-release'CLUTTER_IM_MODULE=ximCOLORTERM=truecolorCOLUMNS=80DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/busDESKTOP_SESSION=ubuntuDIRSTACK=()DISPLAY=:0EUID=1000GDMSESSION=ubuntu...
Environment variables track just about every feature of the command line shell. You can tap into these environment variables from within your scripts by using the environment variable name, preceded by a dollar sign. Follow these steps to create an example: 
Open your favorite text editor and create the file test2.sh.
Enter the following code:

#!/bin/bash# display user information from the system.echo User info for userid: $USERecho UID: $UIDecho HOME: $HOME

Save the file, and then use the chmod command to change the execute permissions:

chmod u+x test2.sh
Run the file:

$ ./test2.shUser info for userid: richUID: 1000HOME: /home/rich$
The $USER, $UID, and $HOME environment variables are commonly used to display information about the logged-in user. The values you see are related to your user account. This allows you to dynamically retrieve information about the user account running your shell script to customize the output.

User variables
User variables allow you to store your own data within your shell scripts. You assign values to user variables using the equal sign. Spaces must not appear between the variable name, the equal sign, and the value. Here are a few examples: 
var1=10var2=23.45var3=testingvar4="Still more testing"
The shell script stores all values as text, but the individual commands interpret the text as numbers or string data. Variables that you define within the shell script are called local variables, and are only accessible from within the shell script. Global variables are defined outside of the shell script at the main shell level, and are inherited by the script shell environment.
 The set command displays all the global variables set. If you need to see the local variables set for your session, use the printenv command.
Just like with environment variables, you can reference user variables using the dollar sign. Here's an example of writing a shell script that uses user variables: 
$ cat test3.sh#!/bin/bash# testing variablesdays=10guest=Katieecho $guest checked in $days days ago$
Running the test3.sh script produces the following output: 
$ chmod u+x test3.sh$ ./test3.shKatie checked in 10 days ago$
Once you store the data in a user variable you can reference it anywhere in your shell script!
 Be careful when using variables within the echo statement. Because variable names are just text values, if you try to append text to a variable name the shell considers the text as part of the variable name and you won't get the results you thought. If you need to do that, you can enclose the variable name in braces, such as ${guest}. This ensures any text appended to the end of the variable is separate from the variable name.

Command line arguments
One of the most versatile features of shell scripts is the ability to pass data into the script when you run it. This allows you to customize the script with new data each time you run it.
One method of passing data into a shell script is to use command line arguments. Command line arguments are data you include on the command line when you run the command. Just start listing them after the command, separating each data value with a space, in this format: 
command argument1 argument2 ...
You retrieve the values in your shell script code using special numeric positional variables. Use the variable $1 to retrieve the first command line argument, $2 the second argument, and so on. Here's an example that shows how to use positional variables in your shell script: 
$ cat test4.sh#!/bin/bash# Testing command line argumentsecho $1 checked in $2 days ago$ chmod u+x test4.sh$ ./test4.sh Barbara 4Barbara checked in 4 days ago$ ./test4.sh Jessica 5Jessica checked in 5 days ago$
The test4.sh shell script uses two command line arguments. The $1 variable holds the name of the person, and the $2 variable holds the number of days ago they checked in. When you run the test4.sh shell script be sure to include both data values in the command line. The shell won't produce an error message if a positional variable doesn't exist; you just won't get the results you expected: 
$ ./test4.sh richrich checked in days ago$
It's up to you to check whether the positional variable exists within your program code. I explore how to do that later in the "Logic statements" section.

The exit status
When a shell script ends it returns an exit status back to the parent shell that launched it. The exit status tells you whether the shell script completed successfully.
Linux provides you with the special $? variable, which holds the exit status value from the last command that executed. To check the exit status of a command, you must view the $? variable immediately after the command ends. It changes values according to the exit status of the last command executed by the shell: 
$ whorich     :0           2020-06-16 23:16 (:0)$ echo $?0$
By convention, the exit status of a command that successfully completes is 0. If a command completes with an error, then a positive integer value appears as the exit status.
You can change the exit status of your shell scripts by using the exit command. Just specify the exit status value you want in the exit command: 
$ /bin/bash$ exit 120exit$ echo $?120$
This example starts a new child shell with the /bin/bash command, and then uses the exit command to exit the child shell with an exit status code of 120. The parent shell then displays the $? variable value to see whether it matched the value set in the exit command.
 As you write more complicated scripts you can indicate errors by changing the exit status value. That way, by checking the exit status, you can easily debug your shell scripts.

Writing Script Programs
So far you've explored how to combine regular command line commands within a shell script to automate common tasks that you may perform as the system administrator. But shell scripts allow you to do much more than just that. The bash shell provides more programming-like commands that allow you to write full-fledged programs within your shell scripts, such as capturing command output, performing mathematical operations, checking variable and file conditions, and looping through commands. This section walks through some of the advanced programming features available from the bash shell.

Command substitution
Quite possibly one of the most useful features of shell scripts is the ability to store and process data. So far I've discussed how to use output redirection to store output from a command to a file, and piping to redirect the output of a command to another command. Another technique, however, can give you more flexibility in storing and using data in your scripts.
Command substitution allows you to assign the output of a command to a user variable in the shell script. After the output is stored in a variable, you can use standard Linux string manipulation commands (such as sort) to manipulate the data before displaying it.
To redirect the output of a command to a variable, you need to use one of two command substitution formats: 

Placing backticks (`) around the command
Using the command within the $() function
Both methods produce the same result — redirecting the output from the command into a user variable. Here's an example that demonstrates using both methods: 
$ var1=`date`$ echo $var1Tue Jun 16 18:05:38 EST 2020$ var2=$(who)$ echo $var2rich :0 2020-06-16 17:56 (:0)$
The output from the command substitutions is stored in the appropriate variables. You can then use those variables anywhere in your script program as a standard string value.
 The backtick character is not the same as a single quote. It's the character usually found on the same key as the tilde character (~) on U.S. keyboards. Because of the confusion between backticks and single quotes, it's become more popular in the Linux world to use the $() function format.

Performing math
Eventually you'll want to do more than just manipulate text strings in your shell scripts. The world revolves around numbers, and at some point you'll probably need to do some mathematical operations with your data. Unfortunately, this is one place where the bash shell shows its age. The mathematical features in the bash shell aren't quite as fancy as the features found in newer shells, such as the Z shell. However, you can use simple mathematical functions in bash shell scripts in a couple ways.
To include mathematical expressions in your shell scripts you use a special format. This format places the equation within the $[] characters: 
result=$[ 25 * 5 ]
 
You can perform lots of different mathematical operations on data using this method, but there is a limitation. The $[] format only allows you to use integers; it doesn't support floating point values.
If you need to do floating point calculations, things get considerably more complicated in the bash shell. One solution is to use the bc command line calculator program. The bc calculator is a tool in Linux that can perform floating point arithmetic: 
$ bcbc 1.07.1Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.This is free software with ABSOLUTELY NO WARRANTY.For details type `warranty'.12 * 5.464.83.156 * (3 + 5)25.248quit$
Unfortunately, the bc calculator has some limitations of its own. The floating-point arithmetic is controlled by a built-in variable called scale. You must set this variable to the desired number of decimal places you want in your answers, or you won't get what you're looking for: 
$ bc -q3.44 / 50scale=43.44 / 5.6880quit$
To embed a bc calculation into your script, things get a bit complicated. You must use a command substitution to capture the output of the calculation into a variable, but there's a twist. The basic format you need to use is: 
variable=$(echo "options; expression" | bc)
 
The first parameter, options, allows you to set the bc variables, such as the scale variable. The expression parameter defines the mathematical expression to evaluate using bc. While this looks pretty odd, it works: 
$ var1=$(echo "scale=4; 3.44 / 5" | bc)$ echo $var1.6880$
This is not ideal, but works for small projects. If you have a larger programming project that requires lots of calculations, I suggest looking into the Z shell. It supports lots of advanced mathematical functions and features.

Logic statements
So far all the shell scripts presented process commands in a linear fashion, one command after another. However, not all programming is linear. There are times when you'd like your program to test for certain conditions, such as whether a file exists, or whether a mathematical expression is 0, and perform different commands based on the results of the test. For that, the bash shell provides logic statements.
Logic statements allow you to test for a specific condition, and then branch to different sections of code based on whether the condition evaluates to a True or False logical value. There are a couple of different ways to implement logic statements in bash scripts.

The if-then statement
The most basic logic statement is the if-then condition statement. The format for the if-then condition statement is: 
if [ condition ]then commandsfi
If the condition you specify evaluates to a True logical value, the shell runs the commands in the then section of code. If the condition evaluates to a False logical value, the shell script skips the commands in the then section of code.
The condition expression has quite a few different formats in the bash shell programming. There are built-in tests for numerical values, string values, and even files and directories. Table 19-1 lists the different built-in tests that are available.

TABLE 19-1 Condition Tests 
Test
Type
Description
n1 -eq n2
Numeric
Checks if n1 is equal to n2.
n1 -ge n2
Numeric
Checks if n1 is greater than or equal to n2.
n1 -gt n2
Numeric
Checks if n1 is greater than n2.
n1 -le n2
Numeric
Checks if n1 is less than or equal to n2.
n1 -lt n2
Numeric
Checks if n1 is less than n2.
n1 -ne n2
Numeric
Checks if n1 is not equal to n2.
str1 = str2
String
Checks if str1 is the same as str2.
str1 != str2
String
Checks if str1 is not the same as str2.
str1 < str2
String
Checks if str1 is less than str2.
str1 > str2
String
Checks if str1 is greater than str2.
-n str1
String
Checks if str1 has a length greater than zero.
-z str1
String
Checks if str1 has a length of zero.
-d file
File
Check if file exists and is a directory.
-e file
File
Checks if file exists.
-f file
File
Checks if file exists and is a file.
-r file
File
Checks if file exists and is readable.
-s file
File
Checks if file exists and is not empty.
-w file
File
Checks if file exists and is writable.
-x file
File
Checks if file exists and is executable.
-O file
File
Checks if file exists and is owned by the current user.
-G file
File
Checks if file exists and the default group is the same as the current user.
file1 -nt file2
File
Checks if file1 is newer than file2.
file1 -ot file2
File
Checks if file1 is older than file2.

Follow these steps to test using conditions: 
Open your favorite text editor and create the file test5.sh.
Enter the following code into the editor:

#!/bin/bash# testing the if conditionif [ $1 -eq $2 ]then   echo "Both values are equal!"   exitfi if [ $1 -gt $2 ]then   echo "The first value is greater than the second"   exitfi if [ $1 -lt $2 ]then   echo "The first value is less than the second"   exitfi
Save the file, and then assign execute permissions to it using the command:

chmod u+x test5.sh
Run the file and provide two numeric parameters:

$ ./test5.sh 10 5The first value is greater than the second$
The test5.sh script evaluates two values entered as parameters on the command line. Only the command from the if-then statement that evaluated to a True logical value is processed by the shell script.

The case statement
Often you'll find yourself trying to evaluate the value of a variable, looking for a specific value within a set of possible values, similar to what I demonstrated in the previous example. Instead of having to write multiple if-then statements testing for all the possible conditions, you can use a case statement.
The case statement allows you to check multiple values of a single variable in a list-oriented format: 
case variable inpattern1) commands1;;pattern2 | pattern3) commands2;;*) default commands;;esac
The case statement compares the variable specified against the different patterns. If the variable matches the pattern, the shell executes the commands specified for the pattern. You can list more than one pattern on a line, using the bar operator to separate each pattern. The asterisk symbol is the catch-all for values that don't match any of the listed patterns.
Follow these steps to write a script that uses the case statement: 
Open your favorite text editor and create the file test6.sh.
Enter the following code in the editor:

#!/bin/bash# using the case statement case $USER inrich | barbara)   echo "Welcome, $USER"   echo "Please enjoy your visit";;testing)   echo "Special testing account";;jessica)   echo "Don't forget to log off when you're done";;*)   echo "Sorry, you're not allowed here";;esac
Save the file and change the execute permission using the command:

chmod u+x test6.sh

Run the file:

$ ./test6.shWelcome, richPlease enjoy your visit$
The case statement provides a much cleaner way of specifying the various options for each possible variable value.

Loops
When you're writing scripts you'll often find yourself in a situation where it would come in handy to repeat the same commands multiple times, such as applying a command against all the files in a directory. The bash shell provides some basic looping commands to accommodate that.

The for loop
The for statement iterates through every element in a series, such as files in a directory or lines in a text document. The format of the for command is: 
for variable in series ; do commandsdone
The variable becomes a placeholder, taking on the value of each element in the series in each iteration. The commands can use the variable just like any other variable that you define in the script. Here's an example that shows how to use a for loop to iterate through all the files in a directory. 
$ cat test7.sh#!/bin/bash# iterate through the files in the Home folderfor file in $(ls | sort) ; do   if [ -d $file ]   then      echo "$file is a directory"   fi   if [ -f $file ]   then      echo "$file is a file"   fidone$
If you run the test7.sh shell script you see a listing of the files and directories in your home directory: 
$ chmod u+x test7.sh$ ./test7.shDesktop is a directoryDocuments is a directoryDownloads is a directoryMusic is a directoryPictures is a directoryPublic is a directoryTemplates is a directorytest1.sh is a filetest2.sh is a filetest3.sh is a filetest4.sh is a filetest5.sh is a filetest6.sh is a filetest7.sh is a filetoday.txt is a fileVideos is a directory$
That saves a lot of coding from having to check each file manually in a bunch of if-then or case statements!

The while loop
Another useful loop statement is the while command. This is its format: 
while [ condition ] ; do commandsdone
The while loop keeps looping as long as the condition specified evaluates to a True logical value. When the condition evaluates to a False logical value the looping stops. The condition used in the while loop is the same as that for the if-then statement, so you can test numbers, strings, and files. Here's an example that demonstrates using the while loop to calculate the factorial of a number. (The factorial of a number is the multiplication of all the preceding numbers, making this a perfect application for a loop.) 
$ cat test8.sh#!/bin/bashnumber=$1factorial=1while [ $number -gt 0 ] ; do   factorial=$[ $factorial * $number ]   number=$[ $number - 1 ]doneecho The factorial of $1 is $factorial
The shell script retrieves the first parameter passed to the script and uses it in the while loop. The while loop continues looping as long as the value stored in the $number variable is greater than 0. In each loop iteration that value is decreased by 1, so at some point the while condition becomes False. When that occurs the $factorial variable contains the final calculation. When you run the test8.sh program you get the following results: 
$ chmod u+x test8.sh$ ./test8.sh 5The factorial of 5 is 120$ ./test8.sh 6The factorial of 6 is 720$
The while loop took all the hard work of iterating through the series of numbers. Now you can plug any number as the command line parameter and calculate the factorial value!
 The opposite of the while command is the until command. It iterates through a block of commands until the test condition evaluates to a True logical value. 







Chapter 20
The Virtual World

IN THIS CHAPTER
 Understanding virtualization software
 Installing, creating, and customizing VirtualBox
 Using the sandbox in VirtualBox

While the term virtual machine sounds an awful lot like air guitar, virtual machines are actually a good thing. They allow you to support multiple servers on a single physical machine, saving both space and money. They are quickly becoming all the rage in the corporate world, but can also have a place in the home environment. You can now install more than one Linux distribution on a single PC, or have Linux and Windows running on the same PC!

What Is Virtualization Software?
In this fast-paced world of changing technology, nothing is taken for granted. In the old days, if you needed to run ten separate servers on your network, you had to go out and purchase ten separate systems and place them in a huge data center taking up space.
Nowadays, you have another tool at your disposal — virtualization software. With virtualization software you can run all ten separate servers on one hardware system. You save in not only hardware costs, but also space in your data center, cost of electricity and cooling, and perhaps, even costs in people needed to support the servers.
The virtualization software plays the middleman between the host system and the servers. Each server has its own area, called a virtual machine, to run in. The host server gives the virtual machine memory and CPU time to use it just as if it were running directly on the underlying hardware.
The trick to running servers in virtual machines is all in the virtualization software. A few different virtualization software packages are around; the most popular in the Linux world are: 

KVM: An open source project that plugs directly into the Linux kernel. It only runs on systems that have a CPU that supports virtualization.
VirtualBox: A project sponsored by Oracle, which installs in any Linux distribution, no matter what the kernel or underlying CPU type.
VMware Server: A software package provided by VMware with both free and commercial versions that run on Windows, Mac, and Linux hosts.
Each of these virtualization software packages installs on a Linux host, and allows you to run different virtual server operating systems, including Linux and Windows!
In this chapter, I walk you through installing and using Oracle VirtualBox and running an Ubuntu workstation as a virtual machine.

Installing VirtualBox
The first step is to install VirtualBox. Depending on your Linux distribution, you may have this package available in the distribution software repository. For both Ubuntu and openSUSE, the VirtualBox software package is available in the standard software repositories. Just use the Ubuntu Software program or the openSUSE Software Center (discussed in Chapter 15) to install it on your system. After you install the package, it appears in the application launcher.
If your Linux distribution doesn't include the VirtualBox software, or if you just want to make sure you have the latest version, you can download it directly from the VirtualBox website, and install it from the download package. The VirtualBox website provides installation packages for many common Linux distributions (including Ubuntu and openSUSE). When you download the VirtualBox software, it's important that you select the right version for your Linux distribution.
Here are the steps for downloading and installing the VirtualBox package from the website: 

Open a web browser and go to http://www.virtualbox.org.
Although the VirtualBox project is sponsored by Oracle, it has its own website, which includes the download files, documentation, and a community forum area.
Click the Downloads link on the left-hand side of the main web page.

Determine the current version of VirtualBox for your Linux platform.
This is for the host platform that you're selecting. You can still run other operating systems, such as Microsoft Windows, within the VirtualBox software.
 Notice that there are also versions of VirtualBox for the Microsoft Windows and Mac OS X operating systems. If you're squeamish about adding Linux to an existing Windows or Mac installation, you can install VirtualBox on the system and run Linux within a virtual machine on the existing system! After you install VirtualBox in your Windows or Mac OS X environment, running a Linux distribution inside as a virtual machine is exactly the same as running it in a Linux host environment, as described in this chapter.

Select the link for your Linux distribution and version.
Try to match the distribution version with what you're running. If there's not a VirtualBox version for your specific version yet, grab the highest version available — there's a good chance it'll still work.

When the download starts, select the option to save the package on your hard drive.
The installation process is a bit lengthy and can crash. It's a good idea to just download the entire package to your hard drive and perform the installation from there.

Find the location of the VirtualBox installation package file using your file manager (see Chapter 8), and double-click the package file.
In Ubuntu you need to install a Package Manager program (see Chapter 15) first to extract and install the .deb package. The Dolphin file manager in openSUSE knows what to do automatically.
 VirtualBox needs the kernel header files to build modules that plug into the kernel. You most likely need to install these packages first before installing VirtualBox. Check your Linux distribution documentation on the package that installs the kernel header files; for openSUSE it's kernel-default-devel.
When the package manager prompts you for an administrative password, enter it.
You may or may not get an entry added to your desktop menu system for the new VirtualBox system. openSUSE places the menu entry under the Applications ⇒   System area in the KDE menu.
If you don't see a menu entry, you can start VirtualBox by opening a Terminal session (or Konsole session in the KDE Plasma desktop) and entering the command: 
VirtualBox
Be careful to make sure you have the capitalization correct, or Linux won't find the VirtualBox program. Figure 20-1 shows what the main VirtualBox window looks like after it starts.
 
FIGURE 20-1: The VirtualBox main window.


After you've gotten to the main window you're ready to start creating some virtual machines!

Creating a Virtual Machine
The next step in the process is to build a virtual machine for your guest OS to run in. In this process you need to tell VirtualBox the size of the virtual machine to play in. You need to select the amount of disk space to allocate for the virtual server, and the amount of memory to use. Both these items are shared with the host system, so be careful how much you dedicate for the virtual machine! Each Linux distribution lists the minimum amount of disk space and memory required to run, plus it's a good idea to add extra disk space so you have room to save your own programs and data. I like to give the virtual machines at least 20GB of disk space and 4GB of memory, more if it's available.
Follow along with these steps to create your first virtual server sandbox: 
If you closed the VirtualBox main window, open it.

Click the New icon in the VirtualBox toolbar area.
A wizard starts to walk you through creating the virtual machine.

Assign a name to the virtual machine, select the operating system you plan on installing, and click the Next button.
The drop-down menu gives you lots of choices for the types of operating systems you can install in the virtual machine. Select the operating system you want to install, as shown in Figure 20-2.
 The VirtualBox software package provides a way to run multiple operating systems from inside a host system, but it doesn't provide any licenses for those operating systems. It's your responsibility to obtain a proper license for any operating system software you install in VirtualBox.
 
FIGURE 20-2: The first dialog box in the VirtualBox new server wizard.




Select the amount of memory to dedicate for the virtual machine and click the Next button.
VirtualBox provides a recommended amount of memory to select based on the operating system you selected, and the amount of memory installed on the host system. You can increase or decrease that amount using either the slider, or typing the amount into the text box. Remember, the amount of memory you dedicate for the virtual machine is taken from the amount of memory available to the host server while the virtual machine is running!

Select hard disk emulation for the virtual machine and click the Next button.
VirtualBox emulates a hard drive by creating a large file on the host system. The amount of disk space you select for the hard drive is created inside the file, so it can't be larger than the disk space available on the host system.
Select the Create a Virtual Hard Disk Now radio button to create a new hard drive file. If you happen to have an existing hard drive file, select the Use an Existing Virtual Hard Disk File radio button and browse to its location using the file browser.

If you selected to create a new hard disk file, the next dialog box asks you to select a storage type. Select the type and click the Next button.
The VirtualBox Disk Image (VDI) is a proprietary format that can't be read by other virtualization software systems. However, it provides the best performance within VirtualBox. Select that if you just plan to run your virtual machine in VirtualBox.

Select the method of creating the storage file and click Next.
VirtualBox can either create the entire hard drive file at once (fixed size), or can create a base file and expand it as the virtual machine's operating system uses more disk space (dynamically allocated). By creating the disk space all at once you make disk access in the virtual machine faster, but eat up more disk space on the host system that may not get used by the virtual machine.

Select a name and location for the new hard disk file, along with the size of the file, and click the Create button.
You can place the hard disk file anywhere on the host system you have access to. Use the slider or the textbox to set the size of the hard disk file, as shown in Figure 20-3.
When you finish the wizard, your new virtual machine entry appears on the main VirtualBox window, shown in Figure 20-4.
Now that you have a virtual machine created, you're ready to start playing! 
FIGURE 20-3: Setting the virtual server hard disk file location and size.


 
FIGURE 20-4: The virtual server entry in the VirtualBox window.




Customizing a Virtual Machine
Before you can start entering your virtual world, you need to do a little more setup of your virtual machine. The New Virtual Machine Wizard sets up a generic environment, so you want to spruce things up a bit first. This section walks through how to customize the virtual machine and how to load your operating system in the virtual machine.

Changing settings
Each virtual machine you create in VirtualBox has its own set of configuration settings. These configuration settings determine just what VirtualBox emulates in the virtual machine.
To get to the configuration settings, select the virtual machine entry on the left-hand side (refer to Figure 20-4) and click the Settings icon in the toolbar. The Settings dialog box, shown in Figure 20-5, appears.
 
FIGURE 20-5: The VirtualBox Settings dialog box.


The Settings dialog box has ten setting categories, shown as icons with text on the left-hand side: 

General: Sets the virtual machine name and OS type. The Advanced tab allows you to enable the clipboard so you can copy and paste text, files, and folders between the host and the guest systems.
System: Sets the CPU and memory allocated for the virtual machine.
Display: Manages the video memory and virtual displays allocated to the virtual machine.

Storage: Defines the virtual hard drives and DVD drive emulation access. You should see the virtual hard drive you created listed here, but you can add additional drives if needed. Here's where you can also allow the virtual machine access to the DVD drive on the host system. Another cool feature of VirtualBox is that you can directly mount an ISO image file directly on the guest system. This way you can install Linux distributions directly from the ISO image file without having to burn them onto DVD! Figure 20-6 shows what this section looks like.
 If you're going to install the virtual machine operating system from a DVD, make sure you mount the drive in the DVD section. Unfortunately, that's not selected by default.
 
FIGURE 20-6: The Storage section of the Settings dialog box.



Audio: Manages access to the sound card on the host system. For Linux hosts, you can select the ALSA driver to allow the virtual server to send sound to the host Linux sound system.
Network: The virtual machine can tap into the network connection of the host system, and here's where you can configure that feature. The default NAT option creates an internal network between the virtual machine and the host system. This places a buffer between the virtual machine and your local network so that other devices on your network can't access the virtual machine. This is beneficial if you're testing an OS and want to keep it isolated from your network. If you really want the virtual machine to have full access to your local network, select the Bridged network option instead. You can then access the host server's network using the network interface on the virtual server. Figure 20-7 shows the standard settings for this section.
Serial Ports: Manage access to the serial communication ports on the host system if available.


 
FIGURE 20-7: The Network section of the Settings dialog box.



USB: List what USB devices on the host system you want to allow on the guest system.
Shared Folders: Allows you to create a folder that both the host system and the virtual machine can access. This makes a convenient pipeline for moving files between the two environments.
User Interface: Define which menu bar features you want activated for controlling the virtual machine.
After you have your settings customized, click OK to save them and return to the main VirtualBox window. Now you're ready to install some software!

Installing an OS
With the virtual machine all customized for your new operating system, you're all set to go! First, before you get started though, make sure that you have the DVD or USB drive required for the installation. After you have that in hand, you can follow these steps to get it installed: 

Insert the operating system installation DVD into the CD/DVD player on the host system, or point the virtual machine's DVD drive to the ISO image file.
If your desktop automatically opens a file manager application, you can close that out before proceeding. You may see the disk mounted on the system and appear as an icon on the desktop — that's okay.
Select the virtual machine you want to install the operating system on from the left-hand listing.

Click the Start toolbar icon.
This "powers up" the virtual machine, just as if you had turned on the power switch on the hardware. The VirtualBox console emulation window opens, as shown in Figure 20-8. Anything that would normally appear on the monitor appears inside this window.
 
FIGURE 20-8: The VirtualBox console emulation window.


A set of icons at the bottom of the window (refer to Figure 20-8) indicate when the virtual machine is accessing hardware on the system. The icons are: 

The hard disk
The DVD drive
The audio input/output
The network interface
The USB interface
The shared folder
Video memory
Recording
CPU status
The bottom-right corner of the window also includes a mouse icon, a key icon, and the phrase Right Ctrl. When you start the virtual machine, VirtualBox takes control of the keyboard and mouse on the host system, and turns them over to the virtual machine. If at any time you want to release control back to the host system (such as if you want to run another application at the same time), press the Ctrl key on the right side of the keyboard. To gain control back in the virtual machine, place the mouse anywhere inside the console emulation window and press the right Ctrl key again.


Proceed through the installation process of the operating system you're installing.
The virtual machine boots from the DVD or ISO file (if not, refer to the General section of the Settings dialog box). Just follow the normal installation process for the operating system. The operating systems detects all the emulated hardware you configured in the virtual machine.

Reboot the virtual machine when the installation is complete.
Most operating system installations automatically reboot the system. If this happens, the VirtualBox console emulation window detects the reboot and stays open, allowing you to watch the reboot process.
The final results is a perfectly working operating system running inside your virtual machine, as shown in Figure 20-9.
 
FIGURE 20-9: Running Ubuntu in an openSUSE VirtualBox window.


When you tell the virtual machine's operating system to shut down, VirtualBox automatically closes the console emulation window.

Working with the Virtual Machine
When you have your virtual machine running, you'll want to become familiar with a few VirtualBox commands. You've already seen the importance of the right-side Ctrl button. That's how you grab and release control over the keyboard and mouse in your virtual machine.
Three menu bar items can also help you in your virtual machine environment — Machine, View, and Devices.

The Machine menu area
The Machine menu area provides easy access to several common functions you may want to perform with your virtual machine: 

Settings: Displays the Settings dialog box for the virtual machine, allowing you to make changes to the virtual machine environment. Some of the settings won't take effect until the next time you start the virtual machine.
Take Snapshot: This is not related to taking a screen capture of the window. A snapshot in VirtualBox allows you to save a copy of the virtual disk file as it exists at the time. This provides a great way to perform backups of the virtual machine at any point in time. You can restore the state of the virtual machine back to the time of any saved snapshot. This is great for experimenting with new software or settings that could possibly crash the system. Just take a snapshot before making the changes, and if they fail, just restore the snapshot!

Session Information: Provides basic information about the virtual machine session running, as shown in Figure 20-10.
The Performance Monitor tab shown in Figure 20-10 shows current statistics on the virtual CPU and memory assigned to the guest system.
File Manager: Provides a graphical interface for viewing the host and guest filesystems, allowing you to copy files from one to the other.


 
FIGURE 20-10: The VirtualBox Session Information window.



Pause: Places the virtual machine in a suspended mode, but doesn't send any signals to the guest operating system to shut it down. You can then start the virtual machine and the guest operating system just picks up where you had stopped it as if nothing happened.
Reset: Emulates hitting the reset button on the workstation. This usually sends a shutdown signal to the guest operating system, and restarts the virtual machine.
ACPI Shutdown: Emulates hitting the power button on the workstation. This usually sends a shutdown signal to the guest operating system, and stops the virtual machine when the guest operating system has finished shutting down. 

The View menu
The View menu allows you to control just how the virtual machine appears on your desktop, and what options you have in the window: 

Fullscreen Mode: Enlarges the virtual machine console emulation window to take the full size of the host screen. To return back to windows mode, hold down the right-side Ctrl key and press the F key.
Seamless Mode: A special feature available with certain guest operating systems. VirtualBox allows you to install a video driver on the guest operating system, which allows VirtualBox to display and control the guest operating system as a normal window on the host.
Scaled Mode: Adjusts the console emulation window based on the resolution of the guest desktop.
Adjust Window Size: Change the size of the VirtualBox console emulation window on the host.
Take Screenshot: Take a picture of the current console area.
Recording: Start a video recording of all activity in the console area.
Menu bar: Change the settings for what's available in the menu bar.
Status bar: Change the settings for what's available in the status bar.
Virtual Screens: Controls the virtual displays assigned to the guest system. If more than one display is assigned, you can enable or disable them from here, as well as scale them as needed.

The Devices menu area
The Devices menu area allows you to control the status of the hardware devices being used in the virtual machine. The options available in this section depend on which hardware devices you selected when you created the virtual machine. The available options are: 

Mount Optical Drives: Allows you to connect the virtual machine to the host system's DVD drive, or to an ISO image of a DVD stored on the host system. This second feature is great for easily installing Linux distributions from ISO images without having to burn them onto a DVD or USB stick!
Audio: Control the audio output (speakers) or input (microphone) of the guest system.
Network Adapters: Provides access to the emulated network adapters on the virtual server. You can either enable or disable the network adapter from this interface. A check mark next to the adapter means it's enabled.
USB Devices: If you selected to allow the virtual machine to access your USB devices during the virtual machine setup, this menu option appears. When you plug a USB device into the host system, VirtualBox automatically detects the new device and passes it on to the guest operating system. After you've inserted the device, don't remove it until you disable the entry in this menu.
Shared Folders: If you selected to create shared folders for the virtual machine during the setup, use this area to enable and disable access to the shared folder.
Shared Clipboard: Control how the host clipboard can be shared with the guest system.
Drag and Drop: Control how you can move objects between the host and the guest system.
Install Guest Additions: You can download the VirtualBox Guest Additions CD from this menu entry. The Guest Additions CD contains specialized drivers you can install on guest operating systems to allow customized video and mouse interaction (see the earlier "The Machine menu area" section). This often improves performance for the guest system in using the display.
With VirtualBox you can run multiple desktop operating systems from the comfort of your own desktop! 








Part 5
The Part of Tens

IN THIS PART ...
Set up a web development environment to create web applications.
Find key troubleshooting tips and tricks for Linux systems.








Chapter 21
Ten Steps to Running a Web Server

These days the world runs on "the web." While most people use a web hosting company to provide their web presence, it can still come in handy to create your own web environment to experiment and develop your website, and then upload the files to your web hosting company platform. Being able to use your own workstation to develop your website makes it a snap to play around with different software and features to help liven up your web presence.
Just because you installed a Linux desktop doesn't mean you can't also run server programs on it. In fact, the graphical Linux desktop makes for an excellent self-contained web development environment! You can create entire web applications from the comfort of your own workstation, and then deploy them to real world web servers on the Internet. This chapter walks through just what you need to create your own web development workstation so you can work on your own website masterpieces.

The Required Parts
Just like that famous furniture that needs assembly, you need to assemble some separate components to get your web application development environment up and running. You need three main parts to assemble for your web development environment: 

A web server to process requests from client browsers to interact with your application.
A programming language server to run programming code embedded in your application. This is what creates dynamic websites that change as content is updated.
A database server to store the content data required for your dynamic application.
While on the surface this may seem fairly simple, what makes things more complicated is that each of these parts has different options and versions available. That can lead to literally hundreds of different combinations to wade through to build your web development environment!
Part of the process is determining just what software you need to install. So the first few steps help you decide just what you need, and then the remaining steps dive into creating your web development environment.

Step 1: Select a Web Server
The web server is what interacts with your website visitors. It quietly listens for client requests and passes their requests to your web application. After your application has done its thing, the web server then passes your application responses back to the clients.
The web server acts as a file server — it accepts requests for web page files from client browsers, and then retrieves those files and sends them back to the client browser. It uses the HTTP standard to allow anonymous requests for access to the files on the server, and respond to those requests.
Quite a few different web server options are around these days. A few of the more popular ones that you run into in the Linux environment are: 

Apache: The grandad of web servers, it was derived from the original web server developed at the University of Illinois. It's an open source software project that has been and is currently the most commonly used web server on the Internet. It's very versatile and supports lots of different features, but with versatility comes complexity. It can be somewhat confusing trying to wade through the configuration files for an Apache web server. However, for most web environments you just need to change a few of the default configuration settings.
nginx: The newer kid on the block, intended to ease some of the complexity of the Apache web server, and provide improved performance. It's currently gaining in popularity, but still has a long way to go to catch up with Apache.
lighthttpd: As its name suggests, a lightweight web server that's significantly less versatile and complex than the Apache web server. It works great for small development environments, and is becoming popular in embedded systems that need a web server with a small footprint. However, it doesn't hold up well in large-scale production web server environments, and probably isn't a good choice for a web development environment.
As you can tell from the descriptions, just about every web server is compared to the Apache web server. It has become the gold standard in Internet web servers. Unless you have a specific reason for not using the Apache web server, it's best to use it for your development environment, especially if you know your production web server environment will use it. That's the web server I walk you through installing and using.

Step 2: Select a Programming Language
These days, having a website with just static HTML web pages is not only boring for your site visitors, but can be monotonous for you to maintain if you have to constantly update those pages with content. Server-side web programming languages allow you to create dynamic web pages that automatically change in real-time as your content changes, keeping your site visitors up-to-date, and saving you lots of work in the process.
There is a plethora of different web programming languages in use these days, and many discussion group wars break out over trying to decide which one is best. For this project I've chosen the PHP language, because it's relatively easy to learn and has become one of the most popular web programming languages in use.
The PHP programming language began in 1995 as a personal project by Rasmus Lerdorf to help his web pages access data stored in a database. He released the first official version 1.0 to the open source community on June 8, 1995.
Since then the PHP language has taken on a life of its own, gaining in both features and popularity. The development of the PHP language is currently supported by the Zend corporation, which produces many PHP tools.
Because of the popularity of PHP, most Linux distributions have the PHP server software available in their software repositories and usually do a pretty good job of keeping up with latest PHP versions. This shouldn't be an issue if you're installing PHP using your distribution package manager.

Step 3: Select a Database Server
The world runs on data. Whether you're creating a website to track your favorite family recipes or the scores for your bowling league, you need some way of storing and retrieving data.
Just as you would expect in Linux, many different types of database servers can handle data for your web applications. By far the most popular one used in open source web applications is the MySQL server, whose name is a play on Structured Query Language (SQL), the standard programming language used to work with data stored in a database.
While many websites and web packages use the term "MySQL Server," there are actually a few different versions of it. Since Oracle acquired the MySQL project in 2010, it has split the project into four versions: 

MySQL Standard Edition: A commercial product that provides the minimal MySQL database features
MySQL Enterprise Edition: A commercial product that provides extra support, monitoring, and maintenance features
MySQL Cluster Carrier Grade Edition: A commercial product that in addition to the Enterprise Edition features, also supports multi-server clustering
MySQL Community Edition: The freely downloadable version of MySQL that supports the same features as the Standard Edition, but with no formal support

THE HISTORY OF MySQL 
The MySQL server project has had quite an interesting life. It was originally developed in 1994 as an open source project by a Swedish company, MySQL AB. It gained in popularity and features until Sun Microsystems purchased the company in 2008. Sun Microsystems maintained the open source status of MySQL, and all remained calm. However, Oracle purchased Sun Microsystems in 2010, and took control over the MySQL project.
When Oracle purchased the rights to MySQL from Sun Microsystems, the main MySQL developer and his team left to start their own separate open source branch of MySQL, called MariaDB. With the terms of the open source license this move was completely legal, and the project has gained some respect and following in the open source community. MariaDB is nearly 100 percent compatible with MySQL, and is often used as a direct replacement for the MySQL Community Edition in some environments. Any PHP code that you write to interact with the MySQL server also works with the MariaDB server. Don't be alarmed if the Linux distribution you use switches to MariaDB!

As you can see from the list, the MySQL server has both commercial and open source versions, which can get confusing. The commercial versions support some advanced features that aren't available in the open source version, such as hot backups (the ability to back up data while the server is still running), database activity monitoring, and being able to implement a read/write database cluster on multiple servers. These advanced features can come in handy in large-scale database environments, but for most small to medium-sized database applications the open source Community Edition of MySQL is just fine. That's what's included in Linux server packages. 

Step 4: Install the Servers
Even though you've installed the desktop version of a Linux distribution, you still have access to various server software in the standard software repositories. The same Linux kernel that runs high-end cloud servers is running in your desktop, so it's a snap to install and run server software packages!
The only downside is that the desktop graphical software installation packages that you may be accustomed to using usually don't include server applications, so you have to go "off road" a little and use command line tools to install them. Don't worry, though; it's a simple process!
The only quirk is that different Linux distributions use different software package formats (as discussed in Chapter 15), and thus different command line tools. When you use command line tools to install software, you need to know which format your Linux distribution uses so you know which tool to use. The two basic package formats used in Linux are: 

Debian Package Management: Used by Debian, Ubuntu, Mint, and other Debian-based Linux distributions
Red Hat Package Management: Used by Red Hat, CentOS, Fedora, openSUSE, and other Red Hat-based Linux distributions
In this step, I cover both methods of installing the server software packages.
 By using the distribution software packages for each server, you're guaranteed that the server will run correctly in your Linux environment. An additional benefit is that as you update the distribution software, they will include any security patches or bug fixes releases for the Apache, MySQL, and PHP servers automatically.

Installing servers in Ubuntu
For Debian-based systems, such as Ubuntu, you use the apt command line tool for the installation. You also need to have administrator privileges to install software — that's where the sudo command comes in. It allows you to run a single command with administrator privileges, as long as the system has you down as an administrator.
Just follow these steps to install the Apache, MySQL, and PHP servers: 
Open a command prompt using Terminal and install the Apache web server using the command:

sudo apt install apache2
As the installation proceeds, you see lots of text regarding what the installer is doing. Instead of hiding all the ugly details behind the scene like the graphical packages do, the command line tools show you everything that's going on! If you're prompted to proceed with the installation, just press Y to continue.
Install the MySQL server package using the command:

sudo apt install mysql-server

Install the PHP server packages:

sudo apt install php libapache2-mod-php php-mysql
This installs the PHP server files, the Apache modules required to process PHP code through the Apache server, and the PHP libraries needed for processing MySQL database commands.
And that's it. You've just installed a complete Apache, MySQL, and PHP environment in Linux! This combination is often referred to as a LAMP server.
If you'd like to test your progress, Ubuntu creates a default Apache web page. Open your browser and go to the URL: 
http://localhost/
The Apache default test page opens, shown in Figure 21-1.
 
FIGURE 21-1: The default Apache web page in Ubuntu.




Installing servers in openSUSE
Most Red-Hat based systems, such as Fedora and CentOS, use the dnf command line tool to install Red Hat-based packages. However, if you're using openSUSE, it uses its own tool called zypper. With openSUSE you also need to run the zypper program with administrator privileges, so I use the sudo command for that.
Follow these steps to load the servers on your openSUSE system: 
Open a command prompt using Konsole and install the Apache web server using the command:

sudo zypper install apache2
Enable the Apache web server service, and start it using these commands:

sudo systemctl enable apache2sudo systemctl start apache2
The Red Hat Apache package doesn't start the Apache web server by default, so these two lines use the systemctl utility to enable the Apache service so it starts automatically at boot time, and then manually starts it.
Install the MariaDB server and client packages using the command:

sudo zypper install mariadb mariadb-client mariadb-tools
Red Hat uses the MariaDB database server instead of the MySQL server, so you have to install that package. Fortunately, everything, including the MySQL command line commands, works the same in MariaDB.
Enable the MariaDB server service, and start it using these commands:

sudo systemctl enable mysqlsudo systemctl start mysql
Again, the Red Hat package doesn't start the MariaDB server by default, so these two lines use the systemctl utility to enable the service so it starts automatically at boot time, and then starts it.
Install the PHP packages using this command:

sudo zypper install php7 apache2-mod_php7 php7-mysql
This installs the PHP server, the required Apache modules to use PHP, and the PHP libraries to communicate with the MySQL database server.
Enable the PHP modules for Apache using these commands:

sudo a2enmod php7sudo systemctl restart apache2
The Red Hat PHP package doesn't enable the PHP module automatically in the Apache server, so you need to use the special Apache a2enmod command to enable the module and restart the Apache web server using the systemctl command.
Unfortunately openSUSE doesn't create a default web page for Apache, so you can't test that using your browser until after you've created your web application pages.
 When you install either MySQL or MariaDB the package sets the root user account password to an empty string. If you're just on your home network by yourself that's fine, but this is not recommended if your server is on a network with others. Fortunately there's a utility that you can run to change the root user account's password: 
mysql_secure_installation
When you run this script it prompts you to answer a few questions, such as the new password for the root user account, whether to restrict the root user account to only logging in from the local host, whether to remove the anonymous users feature, and whether to remove the test database.

Step 5: Examine the Apache Server
By default the Apache web server uses a text configuration file to store its settings. This file is usually called apache2.conf, and for Linux systems is usually stored in the /etc folder structure, often under the /etc/apache2 folder.
The httpd.conf configuration file contains individual lines called directives. Each directive defines one configuration option, along with the value that you set. For this simple project you shouldn't need to mess with any of the directives, but it helps to know they exist, and when you'd need to mess with them.
The Apache web server is very versatile, with lots of different options and features. The downside to that is it can make the configuration seem complex at first, but the configuration file is organized such that you should be able to find what you're looking for relatively easily.
 Many systems (including Ubuntu and openSUSE) break the Apache web server configurations into multiple files to help make the features more modular. Look for the Include directive lines in the main httpd.conf configuration file to see what other files contain Apache web server configuration settings. If the Include directive points to a folder, the Apache server reads all the files ending with .conf in that folder looking for directives.

Defining the web folder location
The main job of the Apache web server is to serve files to remote clients. However, you don't want just anyone retrieving just any file on your system! To limit what files the Apache server serves, you must restrict it to a specific folder area in the system.
You set the folder where the Apache web server serves files using the DocumentRoot directive: 
DocumentRoot /var/www/html
The html folder has become a common default used for the Apache web server in Linux environments, and is used in Ubuntu. For openSUSE, it uses /srv/www/htdocs.
 If you choose to move the DocumentRoot folder to another folder location on the server, make sure the user account that runs the Apache web server has access to read files from the folder.

Setting the default TCP port
The Apache web server listens for incoming connections from client browsers using two different default TCP network ports: 

TCP port 80 for HTTP requests
TCP port 443 for HTTPS requests
HTTPS requests use encryption to secure the communication between the browser and the server. This method is quickly becoming a standard for all web servers on the Internet.

USING ENCRYPTION 
To establish a secure HTTPS connection your Apache web server must have a valid encryption certificate signed by a Certificate Authority. The Certificate Authority recognizes your website as valid, and vouches for your authenticity. This enables your website visitors to trust that you are who you say you are, and that your web server is what it says it is.
Unfortunately, signed certificates must be purchased, and can be somewhat expensive. For development work you can use a self-signed certificate. The self-signed certificate is what it says — you sign your own certificate. This doesn't instill any trust in your website visitors, so don't use a self-signed certificate on a production website; only use it for development. You can create a self-signed certificate using the OpenSSL package.

You set the ports the Apache web server accepts incoming requests on using the Listen directive: 
Listen 80Listen 443
You can use multiple Listen directives in the configuration file to listen on more than one TCP port. 

Interacting with the PHP server
The Apache web server must know how to pass files that contain PHP code to the PHP server for processing. This is a two-step process.
First, the Apache web server must load the PHP server module so that it can establish the link between the Apache and PHP servers. It does that using the LoadModule directive: 
LoadModule php7_module /usr/lib/apache2/modules/libphp7.4.so
After Apache loads the PHP module, it must know what type of files to send to the PHP server. It does this using the SetHandler directive: 
<FilesMatch ".+\.ph(ar|p|tml)$">    SetHandler application/x-httpd-php</FilesMatch>
 
This directive tells the Apache web server to forward all files with the .phar, .php, or .phtml file extensions to the PHP module, which then forwards the files to the PHP server for processing.
 It may be tempting to just forward all .html files to the PHP server, because the PHP server passes any HTML code directly to the client browser. However, your static web pages then takes more time to load, causing a performance issue with your HTML pages.

Tracking errors
When working in a development environment, it's always helpful to be able to track any errors that occur in your applications. The Apache web server supports nine different levels of error messages, shown in Table 21-1.

TABLE 21-1 Apache Web Server Error Levels 
Error Level
Description
emerg
Fatal errors that halt the Apache web server
alert
Severe errors that have an adverse impact on your application and need to be resolved immediately
crit
A critical condition caused the operation to fail, such as a failure to access the network
error
An error occurred in the session, such as an invalid HTTP header
warn
A minor issue occurred in the session, but didn't prevent it from continuing
notice
Something out of the normal occurred
info
Informational message about settings that should be changed, or modules that should be loaded
traceN
Trace levels, where N is 1-8, for tracing activity through the server
debug
Low-level messages explaining each step the server takes in processing a request

You define the level of error tracking using the LogLevel directive, and the location of the error log using the ErrorLog directive: 
LogLevel warnErrorLog ${APACHE_LOG_DIR}/error.log
 
For Linux systems the APACHE_LOG_DIR is usually set for the /var/log/apache2 folder. The debug log level can be useful for troubleshooting issues, but isn't recommended for normal activity, as it generates lots of output!

Step 6: Examine the MySQL (or MariaDB) Server
The MySQL family of servers uses the /etc/mysql folder to store configuration files. The main configuration file for the MySQL server is mysql.conf.
One of the more confusing features about the MySQL server is that there are three ways to specify configuration settings: 

They can be compiled into the executable server program when built from source code.
They can be specified as command line options when the server starts.
They can be set in the MySQL configuration file.
Most MySQL server installations use a combination of compiling some basic settings into the executable server program, and creating a basic configuration file for the rest. The setting values set in the configuration file override anything compiled into the executable server program, or set on the command line.
As with the Apache web server, the MySQL database server has lots of options you can change in the configuration file to fine-tune how things work. That said, you'd only need to tweak a few items in a normal setup. The following sections walk through some of the settings you should become familiar with.

The core server settings
The core server settings define the basics of how the MySQL server operates. These settings in the Ubuntu setup look like this: 
[mysqld]port = 3306socket = /var/run/mysqld/mysqld.socktmpdir = /tmpdatadir = /var/lib/mysqllog_error = /var/log/mysql/error.log
 
The port setting defines the TCP port the MySQL server listens for incoming requests on. The socket setting defines the location of a socket file that local clients can use to communicate with the MySQL server without using the network.
The tmpdir and datadir settings define the locations on the server that MySQL uses for storing its working files. The datadir setting defines where MySQL stores the actual database files.

Working with the InnoDB storage engine
The InnoDB storage engine provides advanced database features for the MySQL server. It has its own set of configuration settings that control exactly how it operates, and how it handles the data contained in tables that use that storage engine.
You may need to tweak two main configuration settings for your specific MySQL server installation: 
innodb_data_home_dir = /var/lib/mysqlinnodb_data_file_path = ibdata1:10M:autoextend
The innodb_data_home_dir setting defines the location where MySQL places files required to support the InnoDB storage engine. This allows you to separate those files from the normal MySQL database files if needed.
The innodb_data_file_path setting defines three pieces of information for the storage engine: 

The filename MySQL uses for the main InnoDB storage file
The initial size of the storage file
What happens when the storage file fills up
To help speed up the data storage process, the InnoDB storage engine pre-allocates space on the system hard drive for the database storage file. That way for each data record that's inserted into a table, the storage engine doesn't need to ask the operating system for more disk space to add to the database file — it's already there! This greatly speeds up the database performance. The second parameter defines the initial amount of disk space that the InnoDB storage engine allocates.
The third parameter is where things get interesting. It defines what the InnoDB storage engine does when the space allocated for the storage file becomes full. By default, the InnoDB storage engine blocks new data inserts to the tables when it runs out of allocated storage space. You would have to manually extend the storage file size.
When you specify the autoextend setting, that allows the InnoDB storage engine to automatically allocate more space for the file. While that's convenient, it can also be dangerous in some environments. The InnoDB storage engine keeps allocating more storage space as needed until the server runs out of disk space!
 When you use the InnoDB storage engine for your MySQL applications, it's always a good idea to keep an eye on the storage space folder to make sure it's not taking up all server disk space.

Step 7: Customize the PHP Server
The PHP server configuration file is named php.ini, but can be located in several different areas. The locations that the PHP server checks are (in order): 
The path set in the PHPIniDir directive in the Apache web server configuration file
The path set in a system environment variable named PHPRC
The folder where the PHP server executable file is stored
The default web server's folder
The OS system folder, which for Linux is the /usr/local/lib folder
If you're ever in doubt as to which php.ini configuration file the PHP server is using, run the phpinfo() function in a small PHP program, like this: 
<?phpphpinfo();?>
Figure 21-2 shows the output from the phpinfo() function running on an Ubuntu system.
The phpinfo() function displays the system values for each of the configuration file settings, and if any were overridden by a local setting. Look for the Loaded Configuration File entry that shows the path to the active php.ini file to see where that file is located for your PHP server.
 
FIGURE 21-2: The phpinfo() function output in Ubuntu.


As you can imagine, lots of settings are available in the php.ini configuration file. You may need to tweak some of these php.ini settings on your PHP server: 

date.timezone: Defines the time zone of the PHP server. This must use a time zone value defined at https://php.net/manual/en/timezones.php.
display_errors: Defines whether PHP error messages appear on the web page. This feature is extremely handy for development work, but should be disabled for production servers.
error_reporting: Sets the level of error reporting from the PHP server. PHP uses a complicated bit pattern to set what errors to display. It uses labels to indicate the error level, and Boolean bitwise operators to combine the levels; the tilde (~) indicates the NOT operator. The error levels are: 

E_ERROR: Fatal run-time errors
E_WARNING: Run-time warnings that won't halt the script
E_PARSE: Parsing syntax errors
E_NOTICE: Script encountered something that could be an error and effect the results
E_CORE_ERROR: Fatal error that prevents PHP from starting
E_CORE_WARNING: Non-fatal errors during startup
E_COMPILE_ERROR: Fatal error while compiling the PHP code
E_COMPILE_WARNING: Non-fatal errors during compile time
E_USER_ERROR: Fatal error message generated manually by your PHP code
E_USER_WARNING: Non-fatal error message generated manually by your PHP code
E_USER_NOTICE: Notice message generated manually by your PHP code
E_STRICT: PHP detected code that doesn't follow the PHP strict rules
E_RECOVERABLE_ERROR: A fatal error that you can catch with a try-catch block
E_DEPRECATED: The PHP parser detected code that is no longer supported
E_USER_DEPRECATED: A deprecation error generated manually by your PHP code
E_ALL: All errors and warnings except E_STRICT
variables_order: The order in which PHP populates the data from the HTTP session. G = GET, P = POST, C = Cookies, and S = System variables.
short_open_tag: Determines whether you can use the <? tag to identify PHP code in your HTML documents.
max_execution_time: Sets a time limit (in seconds) for a PHP program to run before the PHP server kills it. This is useful for stopping programs stuck in a loop!
memory_limit: Sets a limit on how much memory on the physical server the PHP server can allocate. This also helps prevent runaway programs from taking down the entire web server.
Now that you have your web server development environment created, you can start thinking about coding your applications.

Step 8: Create the Database Environment
For a dynamic web application, you need data — something to display on the web pages. For this example, I create a simple employee database that lists some employees and their salaries. Follow these steps to build the sample database in MySQL or MariaDB: 
Open a command line session with Terminal or Konsole.
Start the MySQL or MariaDB console by entering the command:

sudo mysql

The console provides a command line interface to interact with the MySQL server. From here you can submit standard SQL statements, or specialized MySQL commands.
At the MySQL (or MariaDB) prompt, create the database for the application by entering the command:

create database mytest;
Create a user account for the application to use to log into the database server by entering the command:

create user 'test'@'localhost' identified by 'test';
The MySQL server uses three pieces of information to allow access — a userid, a password, and a location. This command creates a userid named test with a password of test, allowed to log in from the local computer.
Give the application user account permission to the database by entering the command:

grant all on mytest.* to 'test'@'localhost';
This command grants all privileges to all tables in the mytest database to the test user account when logged in from the local computer.
Great, now you have a database and a user account with permissions to access the database tables. Now all you need to do is put some data in the database! To do that, follow these steps: 
If not still opened, open a command line session using Terminal or Konsole.
Start the MySQL or MariaDB console:

sudo mysql
Make the mytest database the default database for this session:

use mytest;
 The semicolon at the end of SQL statements in MySQL is important — it tells MySQL that the statement has terminated. If you accidentally leave it off and press Enter, MySQL prompts you to continue the command.
Create a table named employees by entering these commands:

create table employees (-> empid int not null,-> lastname varchar(30),-> firstname varchar(30),-> salary float,-> primary key (empid));
When you press the Enter key after the first line, MySQL prompts you for more of the statement. This helps you break up long SQL statements into easy-to-read chunks. Just don't forget the semicolon at the end!
Create some data records in the employees table by entering these commands:

insert into employees values (1, 'Blum', 'Rich', 25000.00);insert into employees values (2, 'Blum', 'Barbara', 4500.00);insert into employees values (3, 'Blum', 'Katie Jane', 34500.00);insert into employees values (4, 'Blum', 'Jessica', 52340.00);
Feel free to add as many data records as you like! Just don't forget to change the empid value for each record, as it's the primary key for the table so it needs to be unique for each data record.
Test your table by entering this command:

select * from employees;
The SELECT statement retrieves data from the employees table. The output looks something like this: 


mysql> select * from employees;+-------+----------+------------+--------+| empid | lastname | firstname  | salary |+-------+----------+------------+--------+|     1 | Blum     | Rich       |  25000 ||     2 | Blum     | Barbara    |  45000 ||     3 | Blum     | Katie Jane |  34500 ||     4 | Blum     | Jessica    |  52340 |+-------+----------+------------+--------+4 rows in set (0.05 sec) mysql>
Now you have data in your table, and you're ready to start coding your web application!

Step 9: Build Your Application
The next step is to work on your web application code. To do that all you need is a text editor, but it helps to have one that recognizes HTML and PHP code. That way if you make any typos, the editor can flag them for you before you try to run the application.
To create the application file, follow these steps: 
Open your favorite text editor and create the file mytest.php in your home folder area.
In the editor window, enter this code:

<html><head><style>table, td, th { border: 1px solid black; }</style></head><body><h1>Employees</h1><table ><tr><th>EmpID</th><th>Last</th><th>First</th><th>Salary</th></tr><?php$con = mysqli_connect("localhost", "test", "test", "mytest") or die("Problem                                  connecting to database");$query = "SELECT empid, lastname, firstname, salary FROM employees";$result = mysqli_query($con, $query) or die("Problem retrieving data");while($row = mysqli_fetch_array($result)) {    $empid = $row['empid'];    $last = $row['lastname'];    $first = $row['firstname'];    $salary = number_format($row['salary'], 2);    echo "<tr><td>$empid</td><td>$last</td><td>$first</td>";    echo "<td>$salary</td></tr>";}?></table>></body></html>
The code embeds PHP code inside a standard HTML web page. The Apache web server detects the .php file extension, and passes the file to the PHP server for processing. The PHP code uses the mysqli_ functions to connect to the MySQL server, submit an SQL query, and retrieve the data.
 If you're interested in creating dynamic web applications using PHP, check out my PHP, MySQL, and JavaScript All-in-One For Dummies! It walks through how to use HTML, CSS, JavaScript, PHP, and MySQL to create large applications for the web.
Save the updated code file in the text editor.
Exit the text editor.
Now you have your servers installed, a database built, data in your database, and an application code file. Just one more step to the process!

Step 10: Deploy and Test Your Application
You're almost there! The mytest.php application file you created is in your HOME folder, but unfortunately the Apache web server doesn't have access to it there (remember the DocumentRoot setting?). You need to copy the mytest.php application file to the DocumentRoot folder for your Apache web to serve it to site visitors. To do that, follow these steps: 
If not already opened, open a command line session using Terminal or Konsole.
If you're not already there, go to your Home folder by using the cd command by itself.

cd
Copy the mytest.php file to the DocumentRoot folder for your Apache server. For Ubuntu, enter:

sudo cp mytest.php /var/www/html
 For openSUSE, enter:

sudo cp mytest.php /srv/www/htdocs
And that's it; your application is ready to go! To test things, just open your browser and enter the URL: 
http://localhost/mytest.php
You see the output from your program, as shown in Figure 21-3.
 
FIGURE 21-3: The output from the mytest.php program.


If something went wrong, you can try a few different troubleshooting techniques: 

Look for PHP errors in the Apache web server's error log, normally located in /var/log/apache2/error_log. The PHP errors can give you some clues as to what's gone wrong with your PHP code.
Run the SELECT query statement from the MySQL console. The output shows whether the employees table includes any data.
Add the mysqli_error() function to the mysqli_query() line, like this: 



$result = mysqli_query($con, $query) or die(mysqli_error($con));
The mysqli_error() function displays the detailed error message generated by the MySQL server if the submitted SQL statement fails. That often sheds light on the problem.
Congratulations! You're now officially a web developer and have your own personal web development environment! 







Chapter 22
Ten Troubleshooting Tips

Troubleshooting is like reading a mystery novel. You have some facts, symptoms, and details, but you don't know whodunit. You have to take whatever information you have, work with that data, weigh the various possibilities, and then narrow them to a single suspect. Finally, you need to test your theory and prove that your suspect is the guilty party.
Troubleshooting problems in Linux (or any operating system) can encompass many hardware and software issues. Whether the problem is the operating system, the hardware, or a service giving you fits, you can use some basic troubleshooting techniques to start your investigations: 

Document the problem. Write down any and all symptoms that the system is showing, including actions you can and can't do. Jot down any information you see in error messages.
Examine the Linux log files. You can find most of these in the /var/log directory. Look for the word "error."
Compare your problem system with a working system running the same distribution and version. Sometimes, comparing configuration files and settings may uncover the problem or narrow the possibilities.
Check connections. Check to make sure that all the hardware is connected properly and powered on. Verify that all cables and connections are attached properly. There's always someone, somewhere, accidentally kicking a cable out from a wall connection.
Remove new hardware. Remove any hardware that you have changed or added recently (before the problem started) and see whether the problem disappears. If so, you can probably conclude that the new or changed hardware (or its driver) is the culprit and start researching solutions.
Reduce the number of active programs. Stop running unnecessary services and applications that aren't related to the problem at hand. You may more easily figure out what's happening if other services and applications aren't getting in the way.
Check to see whether the problem is reproducible. Does the same sequence of events produce the same problem? Suppose that when you try to print to a color printer, nothing happens. If nothing happens every time you attempt to print, the problem is reproducible. If, instead, sometimes your information is printed and at other times it isn't, the problem pattern isn't the same and isn't reproducible — or it's caused by something more complicated than just clicking one button. Unfortunately, problems that are nonreproducible are more difficult to resolve because it seems that no set pattern of events re-creates those problems.
After you've come up with a solution, take a few moments to document the situation. Note the symptoms of the problem, its cause, and the solution you implement. The next time you encounter the same problem, you can call on your notes for a solution rather than reinvent the wheel.
 If you don't have any problems to troubleshoot (yet), document your environment before you do. Making a backup of your /etc directory and your /boot directory is a great place to start.

Tip #1: "The Linux Installer Froze"
When you're installing Linux, the installation may just freeze. If it does, wait a bit and make sure that the installation program really froze. (Sometimes, the software just takes a while to process information.) If the software looks like it has frozen, there's no harm in rebooting your computer and starting over — just as you would do with any operating system installation. Sometimes, you can reboot and never have that problem again. At other times, the problem may happen twice in a row and then be fine the third time. Be sure to try several times before giving up.
If the installation still freezes in the same spot or close to the same spot, go to the distribution's support pages (see Chapter 2). These pages may talk about some known problems and solutions that can help you and should show you how to join discussion lists to get more assistance. Otherwise, diagnosing the problem can be tricky and may seem more like voodoo than science. Here are some tips: 

If this problem happens repeatedly at exactly the same spot, you may have a bad installation ISO image or DVD burn. See the next section, "Tip #2: Checking Your Distribution Burns," and then return here if that technique doesn't solve your problem. Otherwise, try the DVD or USB stick in another machine if possible and see whether the installation fails in the same place there. If you purchased an installation DVD from someone, contact their technical support team. If you burned the ISO image onto a DVD yourself, try burning a new copy at a slower speed, or if your PC can boot from a USB device, burn it onto a USB stick.
If this problem happens repeatedly at exactly the same spot and you don't have a bad installation disk, the trouble may be with one of your machine's hardware components. If you can, try trading hardware between machines. If not, you may need to choose a different machine on which to install Linux or try another distribution.
If the problem seems to happen randomly, your particular Linux distribution may not be compatible with that particular machine. Again, you can try using another distribution and see whether it detects your hardware. If not, try trading some hardware around, installing Linux on another machine.
 If you're not sure whether your installer has frozen, try pressing various combinations of Alt+F#, where # corresponds to one of the function keys. Depending on the distribution, the installer has not completely frozen if you can see different screens when you try this technique.

Tip #2: Checking Your Distribution Burns
Some Linux distributions (such as Ubuntu and openSUSE) provide the option to check the installation medium for errors. If your installation keeps dying while the installer program is placing packages on your hard drive, follow these steps to try to fix it: 
Place the DVD into your drive.
Reboot the machine.

Wait until you reach the boot menu.
If you've changed your mind and just want to start the installation, use the Tab or arrow keys to select Skip and then press Enter.
Use the Tab or arrow keys to select the option to inspect the installation media.

Press Enter to begin the media check.
The Media Check status box opens and shows you the name assigned to the DVD and how much progress has been made. At the end of the inspection, the Media Check Result dialog box opens.

Look at the text after and the result is.
If the result is PASS, nothing is wrong with the DVD itself. Your installation woes are caused by something else. Return to the section "Tip #1: The Linux Installer Froze," earlier in this chapter.
If the result is FAIL, the DVD you just tested is flawed. If you purchased this DVD, you need to talk to the company you purchased it from to see whether you can get a replacement. On the other hand, if you burned your own DVD from an ISO file, I recommend doing one of the following: 

Burn the DVD again, at a slower speed.
Burn the DVD again on a newer drive with BurnProof technology (www.digital-sanyo.com/BURN-Proof) or something similar.

Tip #3: "I Told the Installer to Test My Graphics, and They Failed"
The installer may have guessed wrong about what hardware you have. Double-check the settings as best you can. If they look right, try choosing a lower resolution for now and testing again, and if that fails try a lower number of colors and test again. You can then try setting things back the way you want them after the machine is fully installed and updated, when it hopefully has a fix for whatever the problem might be.

Tip #4: "The Installer Tested My Graphics Fine, but My GUI Won't Start"
If your Linux installation program showed you a GUI desktop saying that you were ready to proceed with the rest of the installation, you probably expected that the GUI would start with no problem. Unfortunately, that doesn't always happen.
If you boot your machine for the first time and see error messages when you're trying to enter the GUI automatically or when you type startx to start the GUI manually, type system-config-display at a command prompt to start a program that can help you fix the problem.

Tip #5: "I Think I'm in Linux, but I Don't Know What to Do!"
Two different screens tend to cause panic to folks new to Linux. The first of these screens, shown in Figure 22-1, is in fact a sign that you installed the software and booted the machine successfully. Jump for joy! It's just that you're booting into the command-line environment rather than the GUI environment. If you reach a screen similar to the one shown in Figure 22-1, the computer is asking you to log in with the username for an account and a password that you created during the installation process.
 
FIGURE 22-1: A Linux command-line login prompt.


 If you created only the root account, you can log in there as root.
After you enter the username and password, you find yourself at the screen shown in Figure 22-2, which just happens to be the second spot where people get worried. If you see this screen, you have not only booted properly into Linux, but you're also logged in and using the machine! Give yourself a good pat on the back.
 
FIGURE 22-2: Logged in at the Linux command line.


What do you do from here? Anything you want. Surf through this book for commands you want to run. Type startx to start up the GUI. If you didn't install any GUI (which means you selected a minimal install option with no graphical interface, or you actually unselected graphics), you may want to reinstall, or you have to add all the tools by hand (which is not a quick job!).

Tip #6: "I Don't Want to Boot into This!"
Are you booting into the command-line environment when you want to use only the GUI? Or are you finding that you're already booting into the GUI and you would rather boot to that nice, clean, black-and-white command line screen? You're not stuck with either of these options. You can change them at any time.
 You can press Ctrl+Alt+F# (F# refers to function keys F2 through F6) to change out of the GUI to a command line terminal at any time and then Ctrl+Alt+F2 or Ctrl+Alt+F8 to switch back.

Tip #7: Changing Your Boot Environment "Permanently"
The word permanently is in quotes in the heading because you can, of course, go back and change this setting later, if you want. Permanently just refers to the fact that after you have made this change, every time you boot the system, it automatically goes into the preferred environment until you change it.
To make this change, you need to determine what startup method your Linux distribution uses. Currently there are two popular Linux startup methods: 

SysVinit: The original method used in Linux, copied from the Unix world. This uses a set of scripts that the OS runs at boot time. The configuration files determine which services to start, and what mode (command line or GUI) to start.
Systemd: The systemd startup method is a relatively new startup method developed specifically for Linux. Instead of startup scripts it uses configuration files.
The easiest way to determine which method your Linux distribution uses is with the following command: 
ps -p 1
If the result shows the systemd program is running as PID 1, your system uses the systemd startup method. If the result shows the init program is running as PID 1, your system uses the SysVinit startup method.
For systems that use the systemd startup method, follow these steps to change the default boot environment: 

In the GUI, open a command line terminal.
See Chapter 7 on how to do that.
Type the following:

sudo systemctl set-default multi-user.target
Reboot the system.
This sets the system to a text-based system. If you want to change back to the graphical login, just use the command: 
sudo systemctl set-default graphical.target
For distributions that use the SysVinit startup method, you need to manually edit what's called a run level. Fortunately, these distributions use the same run level settings, so the instructions are the same for all of them: 

In the GUI, open a command line terminal.
If you're not sure how to do so, see Chapter 7.
Type the following:

sudo cp /etc/inittab /etc/inittab.old
This creates a backup of the current inittab file. Now, if something happens while you're editing the inittab file, you can always restart fresh with the old version.

Open the inittab file in your preferred text editor.
Some Linux text editors are covered in Chapter 11.
Scroll down until you find a line similar to the following:

id:5:initdefault:
This line appears near the top of the file. What you're interested in here is the number. In most mainstream Linux distributions, the number 5 tells Linux to boot into the GUI, and the number 3 tells Linux to boot into the command line. In the preceding example, therefore, I boot into the GUI.

Change the number in this line.
If it's a 5, change it to 3, and vice versa. Make sure that all colons and other items are left properly in place, or else your machine will have problems booting later.

Save and exit the file.
The changes go into effect the next time you reboot the system.
 If you do end up having problems booting the system, just about any Linux LiveDVD distribution can be used as an emergency boot disk.

Changing your boot environment just for now
At any time, you can also have your Linux box switch between full command-line mode and full GUI mode.
To switch between modes in a systemd startup method, do the following: 

To change from the GUI login to the command line login, open a terminal window and type: 

sudo systemctl isolate multi-user.target
To change from the command line login to the GUI login, type: 


sudo systemctl isolate graphical.target
To switch between modes in a SysVinit startup method, do the following: 

To change from the GUI login to the command-line login, open a terminal window and type: 


sudo init 3
To change from the command line login to the GUI login, type: 



sudo init 5

Tip #8: "I Want to Change Screen Resolutions"
Do you want or need to swap between resolutions in the GUI on the fly? Suppose that you want to use 1,024 x 768, but you work on web pages and want to be able to see how they look in a browser at 800 x 600 or even 640 x 480. Your machine is very likely already set up to do this, but you just need to know how!
If your machine is set up for it, you can change resolutions by pressing Ctrl+Alt+Plus, where Plus is the big key with the plus (+) sign on your number pad — you can't use the plus (+) sign on the main keyboard for this one.
If that doesn't work in your desktop, often you can right-click an empty place in the desktop and choose Displays. This is shown in Figure 22-3 for Ubuntu.
 
FIGURE 22-3: The Displays Settings window in Ubuntu.


You can change the display resolution settings at any time, and then change them back as you need!

Tip #9: "My GUI Is Hung, and I'm Stuck!"
One quick solution to this problem is pressing Ctrl+Alt+Backspace. If this doesn't do the trick, your system is in really bad shape! Try to switch to a virtual terminal by using Ctrl+Alt+F5. If this key combination also does nothing, you need to reboot the machine.

Tip #10: "Help, My Machine Hangs During Boot!"
When configuring a Linux machine, you may encounter problems with the GRUB2 bootloader program, which is what loads the Linux kernel. This program uses a configuration file to indicate the operating system or systems to which your system can boot, and the file also contains Linux startup settings.
You can alter the GRUB2 boot settings "on the fly" as the system boots, but you have to get into the GRUB2 menu to do that. Some Linux systems (such as openSUSE) bring up the GRUB2 boot menu all the time, making it easy to make changes. Just press the E key while booting to edit the menu.
Unfortunately, many Linux distributions (such as Ubuntu) hide the GRUB2 boot menu and automatically jump into booting the system. To get to the GRUB2 menu to make changes, you need to stop the boot process midstream.
Just how you do that depends on your system: 

For older systems that use BIOS firmware, hold down a Shift key as the system first boots. If you see the distribution splash screen you're too late; try again.
For systems that use the newer UEFI firmware, hold down the ESC key as the system first boots. Again, if you see the distribution splash screen you're too late; try again.
Once you get to the GRUB2 boot menu, some Linux distributions have a special recovery mode boot option. Give that a try and see what happens. If not, press the E key to edit the GRUB2 menu settings. Look for the Linux line in the configuration, add the word single to the list of options on that line, and then press F10 to reboot using the new options. Linux starts in single-user command line mode. From here you can look at the log files in the /var/log folder to see what previous boot attempts failed.

"Aaargh! I Forgot My Root Password! What Do I Do?"
Fear not. You have a way around this problem! You need to boot into single-user mode, which you can accomplish by rebooting your machine. When you see the blue screen with the words "Press any key to enter the menu," press a key. At the GRUB boot screen, press E, which takes you to a configuration file. Use the arrow keys to go to the line starting with Linux, and press E again to edit that line. At the end of the line, add the word single, press Enter to put the change into place, and then press B to boot the machine.
Type passwd and then enter the new password twice as directed. When you finish, type exit and then boot the machine normally. 







Appendix A
Common Linux Commands

Computing novices often marvel at the keyboard dance Linux experts typically perform. Sure, these experts know about modern advances like the mouse and graphical interface, but these keyboard musicians prefer the home keys and find that they can work faster that way. It takes some time to reach this level of proficiency, but every expert was a novice at one time, and any novice can become an expert with plenty of practice.
In this appendix, you find the command line commands listed by themes, according to what they can actually do for you.
So, read on and dazzle your friends with your command line finesse. When they ask you how and where you figured out all those commands, just smile and mumble something about the voices in your head — and, of course, keep this section dog-eared and within reach of your computer.

Linux Commands by Function
Because every command serves a specific purpose, organizing these tools into groups according to their individual functions isn't difficult. If you know what you need to do but don't know which command does the job, flip through this section to start your search. From here, you can dig further by referencing man pages and other help information (online sites and reference books, for example) or by looking in this book's index for further coverage.
To access a man page, type man command at a command prompt. For example, man ls shows you the help information for the file listing command.

Getting Help
When you're digging around for help on a command, you can call on an interesting range of shell commands for assistance, as shown in Table A-1.

TABLE A-1 Shell Help Commands 
Command
Purpose
apropos
Looks for commands that contain a keyword in their man page descriptions.
info
One way of finding help information. You can find instructions for this tool at www.gnu.org/software/texinfo/manual/info-stnd/info-stnd.html, or you can use the built-in tutorial by starting the info tool and pressing the H key when inside it.
man
The primary way of getting help in Linux and UNIX.
whatis
Gets a one-line description of a command.

Locating details about the command-prompt options of a command is a never-ending pursuit. The man page system provides some helpful guides at your fingertips for rapidly finding this detailed information.

Archiving and compressing
Although disk space isn't as much of a premium as it once was, bandwidth and backup media still are. Subsequently, this group provides a potpourri of tools for compacting and organizing data for storage, as shown in Table A-2.

TABLE A-2 Archiving and Compressing Tools 
Command
Purpose
bzip2
Compresses files into .bz2 format. Used mostly for incredibly large sets of text files (which is what source code actually is).
bunzip2
Uncompresses .bz2 files.
compress
Compresses files into .Z format. Pretty old and not used much in the Linux world.
gunzip
Uncompresses .gz files and .tgz files.
gzip
Compresses files into .gz format.
tar
Packages files together in a group. The most common way of using this command is tar xvf filename, such as tar xvf download.tar.
uncompress
Uncompresses files from .Z format.
unzip
Uncompresses files from .zip format.
xz
Compress and uncompress files from .xz format.
zip
Compresses files into .zip format.



Built-in bash commands
Some commands don't even seem to exist if you try to look up their help information in the man pages, and the commands don't show up as files on your system. Remember, as you type commands at the prompt, that you're communicating with a type of program called a shell. (In my case, it's bash, the default Linux shell.) The shell has a set of commands, included in the following list, that you can use to communicate with it, as shown in Table A-3.

TABLE A-3 Shell Commands 
Command
Purpose
alias
Creates or lists command shortcuts.
env
Lists your current environment variables and their settings.
export
Whenever you're told to set an environment variable, create the variable and then use this command so that the variable will be remembered properly.
history
Lists off the last 1,000 commands you've typed.
unalias
Removes command shortcuts.

 If you try to view the man page entry for some of these commands, you find instead the help information for BASH BUILTINS loads. To search through this manual, press the forward slash (/) key to open the man search interface and then type the name of the command you want to search for. Press Enter to start the search. The interface stops in the first spot where the term is found. If you want to try again, press the N key to proceed to the next occurrence of the word.
For example, you might be reading the massive bash man page (type man bash to access this page), but perhaps you're only interested in items related to prompts, which are the bits of text that appear to the left of your cursor in a text window. An example prompt is 
rich@testbox:~$
So, you might type /prompt and press Enter to jump down to the first instance of this word. If the text around the word doesn't reflect what you're looking for, press the N key to jump to the next one, and so on.

Files and Filesystem
No matter which operating system you're using, it's hard to do anything without being able to find your way through and work with the filesystem. The following utilities help you find your way.

File organization
Boxing, packing, sorting, shipping — I'm always shuffling files around on my system. File organization commands provide tools for moving files and filesystem units around, as shown in Table A-4.

TABLE A-4 File Organization Tools 
Command
Purpose
cd
Changes directories.
cp
Copies a file.
df
Shows partitions and how much space they have.
du
Shows how much disk is being used in the current directory and below.
ln
Creates a shortcut.
ls
Lists the contents of a directory or information about a file.
mkdir
Creates a directory.
mv
Moves or renames a file.
pwd
Shows the path for the directory you're currently in.
rm
Deletes a file.
rmdir
Deletes an empty directory.



File attributes
Files are much like candy bars. The wrappers provide information about the ingredients, size, and package date — all descriptive of the tasty nugget inside. (Perhaps the wrapper is even childproof.) Files keep all this wrapper information in an inode. Along with the capability to change file inode information, these commands can return data about the content of the file, as shown in Table A-5.

TABLE A-5 File Attributes Commands 
Command
Purpose
chgrp
Changes the group associated with a file.
chmod
Changes a file's permissions.
chown
Changes who owns a file.
file
Shows what type of file you're dealing with.
stat
Shows some statistics about the file.
touch
Creates an empty file of this name.
wc
Shows how many words, lines, and so on are in this file.



File locators
Where, oh, where can my file be? These commands, shown in Table A-6, help you locate files in Linux's monster tree-structure filesystem.

TABLE A-6 File Locator Commands 
Command
Purpose
find
Hard-core filesystem search tool.
locate
Lighter-weight filesystem search tool.
which
Tells you the path for the program that would be run if you typed this command.



File viewers
Text file browsing is a favorite pastime of many a system user. These tools provide a variety of utilities for viewing the contents of readable text files of all sizes. Unlike using a full-screen editor, you cannot damage the contents of a file with these commands, shown in Table A-7, because they're just viewers, not editors.

TABLE A-7 File Viewers 
Command
Purpose
cat
Dumps the contents of the file to your screen.
head
Shows the first ten lines of a file.
less
Shows the file a screen at a time, forward and backward.
more
Shows the file a screen at a time, forward only.
tail
Shows the last ten lines of a file.



Filesystem commands
These commands, listed in Table A-8, provide information or perform actions on the entire filesystem, from creation and tuning to repair and recovery. Some of these commands return data only, whereas others also provide you with surgical instruments for serious filesystem hacking.

TABLE A-8 Filesystem Commands 
Command
Purpose
badblocks
Searches a partition for bad blocks.
e2fsck
Checks and repairs an ext2 or ext3 filesystem.
e2label
Applies a filesystem label to an ext2 or ext3 partition.
eject
Ejects a CD or DVD.
fsck
Can check and repair many types of filesystems.
mkfs
Creates a filesystem (format a partition).
mount
Loads a partition into your filesystem.
sync
Saves all information out of buffers onto disks.
tune2fs
Adjusts ext2 and ext3 filesystem parameters.
umount
Removes a partition from the filesystem.



System Control
These commands provide systemwide information and control. Normal users can run many commands to obtain system information; however, commands that actively change the configuration of the system need to run while you're logged in as root — or have utilized the su command to temporarily become the superuser.

Administration
Some administration commands, shown in Table A-9, don't fall neatly into a category.

TABLE A-9 Administration Commands 
Command
Purpose
passwd
Change a particular user's password. Any user can run this command to change their own password. Only root can use it to change someone else's.
su
Switch to another user account without logging out of this one. The best way to use this command is su — so your filesystem path and other information is loaded.



Kernel module handling
You may sometimes need to add kernel support for an additional device (software or hardware). If this need arises, you have a limited number of choices: You can either rebuild the kernel or install a loadable kernel module. Although rebuilding a kernel doesn't exactly require a PhD in nuclear science, consider it a time-consuming nuisance that's best to avoid. The commands in Table A-10 enable you to include the kernel support you need while the system is running, without having to rebuild the entire thing from scratch.

TABLE A-10 Kernel Support Commands 
Command
Purpose
depmod
Regenerates your module dependencies.
insmod
Loads a module by hand.
lsmod
Lists the modules your kernel has loaded.
modprobe
Loads a module by hand along with its dependencies and settings.
rmmod
Unloads a module by hand.




Processes
Most of your system activity requires processes. Even when your system appears idle, a dozen or so processes (programs) are running in the background. These commands, shown in Table A-11, enable you to check under the hood to make sure that everything that needs to be running is running and that you're not overheating or overtaxing resources.

TABLE A-11 Process Commands 
Command
Purpose
crontab
Sets up commands to run at regular intervals.
kill
Stops a process by its number. Often used as kill -9 for a harsh stop for something that won't die.
killall
Stops a process by name rather than number.
nice
Assigns a CPU use priority to a process.
pidof
Gets a program's ID number.
ps
Gets a lot of programs' ID numbers, usually used as ps aux.
pstree
Shows the relationships between programs.
renice
Changes a program's CPU use priority.
top
Shows resource use over time.



Network
These days most Linux systems are on some type of network, even if it's just your small home network. The graphical Network Manager tool (see Chapter 9) provides one-stop shopping for configuring your network settings. Linux also provides a series of command line commands to help you manage and even fine-tune your network settings. Table A-12 shows some of the more helpful network-related commands you have available.
TABLE A-12 Network Commands 
Command
Purpose
ethtool
Display Ethernet settings for a network interface.
ifconfig
Display or set the IP address and netmask for a network interface.
ip
Display or set the IP address, netmask, and router for a network interface.
iw
Display or set the wireless settings for a wireless network interface.
iwconfig
Display or set the SSID, IP address, and netmask for a wireless network interface.
nmcli
Open the Network Manager command line interface.
nmtui
Open the Network Manager menu-based command line tool.
route
Display or set the default router information.

 







Appendix B
Linux Distributions

The foundation of the Linux world is the Linux core distributions. These distributions usually contain just about every application available for Linux within the distribution release DVDs, or easily available for download. The core distributions are often where new packages are developed, tested, and incorporated into the Linux distribution.
While literally hundreds of Linux distributions are available, many of them are derivatives of one of these core Linux distributions (see Chapter 1). Each sub-distribution inherits the features and some of the ideals of the core distribution. Because of that, it helps to take a closer look at just what are the major Linux distributions.
The major players you run into in the core Linux distribution world are: 

Slackware
Fedora
Debian
Gentoo
This chapter provides a little background information on what makes these core distributions different from one another.
 It's impossible to list and discuss all the distributions. If you're interested in learning about others, go to www.distrowatch.com, a great up-to-date source of information on all Linux distributions!

Slackware
Founded in 1993 by Patrick Volkerding, it's one of the oldest Linux distributions still in existence. In the early days, you had to download the distribution as a series of floppy disks!
Slackware is often called the "bare bones" core distribution, mainly because of its lack of customized graphical management tools. It's certainly not for the beginning Linux user, but does offer many benefits for the advanced user.
Slackware installs applications directly from .tar.gz source files, so you know your application is being custom built as you install it. In a somewhat controversial move, Slackware only supports the KDE and Xfce graphical desktop environments, preferring to leave out the GNOME desktop environment. You can, however, install GNOME as a separate package.
While many of the Linux sub-distributions based on Slackware have faded from existence, you may recognize one in particular — the openSUSE distribution owes its start to Slackware when it started out as the S.u.S.E. package.

Fedora
The Fedora Linux distribution came about in 2003 as a derivative of the original Red Hat Linux distribution, which started in 1994. The Red Hat company decided to move Red Hat Linux into the commercial world and focus on servers, but created the Fedora Linux distribution as a free development and testing ground for proving Linux applications. Many of the features incorporated in Fedora eventually make their way to the commercial version, now called Red Hat Enterprise Linux.
Since version 30, Fedora has been released in several varieties: 

Fedora Workstation: Uses the graphical GNOME 3 desktop environment.
Fedora Server: Doesn't provide a graphical desktop, customized for data center server environments.
Fedora CoreOS: Provides only the core features with no additional applications. Intended for cloud environments.
Fedora IoT: A stripped-down version of Fedora intended for running on devices.
Fedora Silverblue: Created for developers who use container based workflows.
Besides these officially sanctioned versions, Fedora also supports what it calls spin distributions, or just spins. Spins are LiveDVDs created using the Fedora livecd-creator tool, and can be customized for any environment. This is a great way to create and distribute your own Linux environment!
Fedora uses a special software package format, called Red Hat Package Management (RPM). This is a common package format, and you see lots of Linux applications that provide customized installs in .rpm format. The beauty of RPM is that it can automatically place application files and libraries in the correct location on the system, with no manual intervention required. The Red Hat Enterprise Linux system uses these same package files.
Historically, Fedora has defaulted to the GNOME desktop environment (see Chapter 4), but provides an easy way to install KDE Plasma if you prefer.
Distributions based on the Fedora system are: 

K12LTSP: A distribution focused on K-12 school environments, incorporates the Linux Terminal Server (LTS) to share server resources on stripped-down client workstations.
CentOS: A distribution created by manually compiling the Red Hat source code files, which are derived from the Fedora packages. Popular in the server environment as a free alternative to Red Hat Enterprise Linux.
EnGarde Linux: Focuses on creating a secure server environment.
Network Security Toolkit: A LiveDVD with security and networking tools for performing security and network diagnostics and monitoring.

Debian
The Debian Linux distribution started life in 1993, created by Ian Murdock. It's supported by one of the more organized open source boards in the Linux environment — The Debian Project. The Debian Project is a complete volunteer organization of software developers that guides the distribution and development of Debian Linux. Each year members of the organization vote for the project leader, who guides the development process, but doesn't have absolute power over the development of the distribution.
The Debian project is best known for its well-organized hierarchical strategy of versions. Three versions of the Debian Linux distribution are available for download at any given time: 

Stable: The latest official release, recommended for most Linux environments.
Testing: The version slated to be the next official release. This version mostly works, but may still contain bugs. Recommended for Linux users to download and play with to help find bugs.
Unstable: The development version, where most of the experimenting happens. Recommended only for advanced Linux users, and for environments where system crashes don't matter!
If you're installing Debian Linux for a production system, you'll definitely want to make sure you grab the stable release! If you like playing with cutting-edge tools, try out an unstable version — just watch out for the sharp edges! One complaint, though, about the Debian system is that it takes a long time for distributions to float their way into the stable environment. Debian Linux is known for having long release schedules!
With three distribution levels to support, you can imagine the work it takes to coordinate things! Debian uses three separate software repositories — one for each distribution level — to support adding software and fixes.
Besides the three main distribution repositories, the Debian project also supports three additional software repositories: 

Experimental: A place to grab standard software applications that haven't been customized to run in a Debian environment yet.
Volatile Project: Software applications that are under development of themselves. If the name doesn't say it all, don't ask!
Oldstable: The repository for the previous stable release of Debian.
As you can probably guess, this can make software installation confusing for the beginner, but provides the advanced Linux user a smorgasbord of software choices!
The Debian distribution uses its own package management system (called dpkg), which creates .deb package files. It also uses the apt tool to search repositories for security updates and bug fixes for installed software.
Many distributions are based on Debian. Some of the more popular are: 

Ubuntu: Quite possibly the most popular Linux distribution in the world, along with its own derivatives — Kubuntu (using the KDE Plasma desktop), and Xubuntu (using the Xfce desktop).
Knoppix: The first Live distribution.
MX Linux: A distribution focused on the beginning Linux user, great at detecting hardware.
Linux Mint: A distribution actually based off of Ubuntu, which focuses on support for multimedia codecs.
BackBox: Another distribution based off of Ubuntu, developed to perform penetration testing and security assessments.

Gentoo
The Gentoo Linux distribution has been described as the "Linux geek's distribution." It first came about in 1999 as a project by Daniel Robbins to use only source code for all programs installed on the Linux system (including the Linux software itself).
The basic Gentoo installation process is to run a Live that contains a minimal Linux system, and then download and compile each individual application that you want installed. Because of this feature, the Gentoo installation process is somewhat cumbersome and slow (and not recommended for the faint of heart).
While not recommended for beginners, the Gentoo Linux distribution can take the experienced Linux user back to the days of old, when programmers ruled the Linux world! Hand-compiling each individual application ensures there's no software bloat on your system, and experienced Linux users can create a finely tuned Linux environment.
The downside to manually compiling applications is that there's no automated software package manager that goes out looking for software updates. Once you take control over your software, it's all yours to maintain!
Believe it or not, some distributions are based on Gentoo: 

Tin Hat Linux: A hardened Linux system for implementing high-security workstations
Sabayon Linux: A desktop Linux distribution that pre-compiles the core system for you, and then allows you to use Gentoo source code packages for additional features
SystemRescueCD: A handy Linux LiveCD distribution used for repairing computers that can no longer boot on their own
Gentoox: A port of the Gentoo distribution to the XBox environment 








Index


Numbers

3-dimensional (3D) games, 288-289



A

absolute navigation, 130
Accessibility settings, for KDE Plasma desktop, 98-99
administration commands, 439
administrivia, defined, 1
ADSL (Asymmetric Digital Subscriber Line), 154
Amarok, 260-264
analog signal, 155
Apache web server, 401, 407-410
Appearance options, 76
Apple QuickTime video format, 278
applets, 111, 116-117
application launcher, KDE Plasma desktop

Applications menu, 86-87
Computer menu, 87-88
Favorites menu, 85-86
History menu, 88
Leave menu, 88-89
overview, 84-85
application overview icon, 72-73
applications, 71-73, 299-301
Applications menu, on KDE Plasma desktop, 85, 86-87


apt-get
 command line tool, 352
Arch Linux distribution, 107
arguments, command line, 369-370
Asymmetric Digital Subscriber Line (ADSL), 154
audio, methods of listening to

CDs

burning DVDs and, 268-271
copying tracks from, 265-267
GNOME 3, 256-258
KDE Plasma, 258-259
overview, 256
Rhythmbox, 256-258
VLC, 259-260

downloading music, 260-264
Internet radio, 264-265
overview, 253-254
Audio Visual Interleave (AVI), 277



B

BackBox, 447
backups, 20
bandwidth, contracted, 157
Base, LibreOffice, 240-246


bash
 command, 309-310






.bash_history
 file, 127-129




Basic Input/Output System (BIOS), 23, 31


bc
 variables, 374
BCC (Blind Carbon Copy), 190
BIOS (Basic Input/Output System), 23, 31
Blind Carbon Copy (BCC), 190
boot disk, creating, 33-36
boot environment, changing, 427-429
boot menu, 22
bootable DVDs, 34
bootable USB stick, 34-36
booting, 32-36
bottom panel, in MATE, 108
Brasero application, 268-269
breadcrumb, defined, 145
bridge, 155-156
built-in bash, 435



C

C programming language, 9
cable modems, 154

Calc, LibreOffice, 226-230
Canonical, 49
Carbon Copy (CC), 190


case
 statement, 376-378
CDE (Common Desktop Environment), 112
CDs (compact discs)

burning, 268-271
copying tracks from, 265-267
GNOME 3, 256-258
KDE Plasma, 258-259
overview, 256
Rhythmbox, 256-258
VLC, 259-260
CentOS distribution, 445


chown
 (change owner) command, 133
Cinnamon desktop

changing settings for, 105-106
history of, 102-103
menu for, 103-104
overview, 101-102
widgets, adding, 106-107


clear
 command, 320-321
CLI (command line interface), 126-127
CMOS (Complementary Metal-Oxide Semiconductor), 31
command history, accessing, 313-314
command line arguments, 369-370
command line interface (CLI), viewing files with, 126-127
command line tools

legacy tools, 164-169
managing Linux filesystem with, 125-131
Network Manager tool, 163-164
overview, 163
command substitution, 371-372
command-line login prompt, 425-426
commands

administration commands, 439
by function, 433-435
kernel module handling, 439
multiple, running, 360
overview, 433
processes commands, 440
for shells, 312-314
system control, 439-441
types of, 130-131
comment lines, 363
Common Desktop Environment (CDE), 112
Common Unix Printing System (CUPS)

adding new printers, 334-336
modifying printer properties, 337-338
overview, 331-333
server settings for, 333-334
compact discs. See CDs
Complementary Metal-Oxide Semiconductor (CMOS), 31
compressing files, 434
computer manuals, keeping, 30
Computer menu, on KDE Plasma desktop, 85, 87-88
computers, preparing for Linux

booting, 32-36
hardware compatibility, 29-32
overview, 19-22
using Microsoft Windows and Linux together, 22-29
concatenate, defined, 203
Configure Desktop application, 87, 97-98
configuring internet connectivity

command line tools, 163-169
errors in, 169-171
Network Manager tool, 158-162
overview, 158
using modems to dial, 169
contracted bandwidth, 157
copyleft software, 12
core dump, 313
CUPS. See Common Unix Printing System
customizing

GNOME desktop, 75-80
virtual machine (VM), 387-393


C:\Windows
 directory, 121



D

dash, 67-73
data backup, 20

database environment, 415-417
database files, creating in Database Wizard, 241-242
Database pane, in LibreOffice Base, 243-244
database server, 402-403
Database Wizard, 240-243


datadir
 settings, 412
Debian (DEB) distributions, 199, 445-447
desktop toolbox, 91
desktops

alternative

Cinnamon, 101-107
MATE, 107-111
overview, 101
Xfce, 112-117

background of, 76
GNOME 3

accessibility features, 80-82
customizing, 75-80
history of, 61-62
overview, 61
parts of, 62-74

KDE Plasma

Accessibility settings for, 98-99
application launcher, 84-89
description of, 91
overview, 83-84
panel on, 89-90
system settings for, 96-97
widgets, 91-96

Xfce

applets for, 116-117
changing settings for, 115-116
history of, 112-113
overview, 112
Thunar file manager program on, 136, 146-148
Whisker menu, 113-115
device files, 127
Devices menu area, for VM, 395-396
DHCP (Dynamic Host Configuration Protocol), 157
dialup modems, 154, 155
Digital Clock widget, 90
digital signal, 155
Digital Subscriber Line (DSL), 154
Digital Video Discs (DVDs)

bootable, 34
burning, 268-271, 281-282
directories, 140, 142
Disk Manager program, 25
display settings, 76-79
distributions, 14-17, 21

Arch Linux, 107
DEB, 199, 445-447
Fedora, 29, 444-445
Gentoo, 447-448
openSUSE, 51
overview, 443
RPM, 199
Slackware, 443-444
Ubuntu, 29
DivX, 277
dock, defined, 76
documents

in LibreOffice Calc, 230
in LibreOffice Draw, 239
in LibreOffice Impress, 235
in LibreOffice Math, 249-251
in LibreOffice Writer, 225


Documents
 directory, 130
Dolphin file manager program, 145-146
downloaded files, opening, 293-294
downloading music, 260-264
Dr. Hardware tool, 31
Draw, LibreOffice, 236-239
Drawing toolbar, in LibreOffice Draw, 239
driver, defined, 30, 129
drives

installing multiple, 22-23
network, accessing, 150-151
partitioning, 23-29
DSL (Digital Subscriber Line), 154
dual-booting, 20, 150
DVDs (Digital Video Discs)

bootable, 34
burning, 268-271, 281-282
Dynamic Host Configuration Protocol (DHCP), 157
dynamic method, 157



E

Editor tab, in gedit, 209
email

with Evolution, 183-184
overview, 182-183
with Thunderbird, 195-197
EnGarde Linux distribution, 445


enp0s3
 network interface, 167, 168
environment variables, 314-315, 366-368
errors

GUI desktop, 424-425
in internet connectivity, 169-171
tracking, 410-411


essid
 parameter, 168






/etc
 directory, 124


/etc/cups
 directory, 124


/etc/NetworkManager
 directory, 124


/etc/opt
 directory, 124


/etc/X11
 directory, 124




Ethernet cable, 154, 155


ethtool
 command, 164, 165
Evolution email package, 183-184
executable permission set, 129
execute permission, 133
exit status, 370-371
Experimental software repositories, 446
expression parameter, 374
extended partitions, 23
extensions, on Firefox browser, 179
Extensions feature, 274
external modem, 156



F

fast boot, 33
Fast YouTube Video Downloader, 275-277
Favorites menu, on KDE Plasma desktop, 85-86
Fedora CoreOS, 444
Fedora distributions, 29, 444-445
Fedora IoT, 444
Fedora Server, 444
Fedora Silverblue, 444
Fedora Workstation, 445
FHS (Filesystem Hierarchy Standard), 122
file attributes, 436-437


file
 command, 129
file descriptor, 361


file Desktop
 command, 129
file listing information, 127-129
file locators, 437
file manager program, 135-136
File Systems tab, 342
File Transfer Protocol (FTP), 197-199
file types, 129
file viewers, 437-438
filenames, 122, 312-313
Files file manager program, 136-144
file-sharing applications, 201
filesystem

accessing files when dual-booting, 150
accessing network drives through, 150-151
commands for, 438
contents of, 122-125
Dolphin file manager program, 136, 145-146
Files file manager program, 136-144
managing with CLI, 125-131
managing with file manager program, 135-136
overview, 121, 135
permissions, 131-134
removable media, 149-150
searching on, 151-152
terminology for, 121-122
Thunar file manager program, 136, 146-148
Filesystem Hierarchy Standard (FHS), 122
FileZilla package, 198


find
 command, 313
Firefox browser, 175-182

home content, 178
updates, 177
firewalls, 348-349

first triplet, 132-133
Folder View widget, 91
Font & Colors tab, in gedit, 209-210


for
 loop command, 378-379
Formatting toolbar, in LibreOffice suite, 223, 227-229
Forms pane, in LibreOffice Base, 244
Formula bar, in LibreOffice Calc, 229
fractional scaling, defined, 78
freedom software, 11
frozen installations, 422-423
FSF (Free Software Foundation), 12
FTP (File Transfer Protocol), 197-199
full backup, 20
function commands, 433-435



G

gateway, defined, 169


gedit
 text editor, 206-210
general preferences section, on Firefox browser, 176-177
General Public License (GPL), GNU, 8, 9, 12
Generic DSL (XDSL), 154
Gentoo distribution, 447-448
GIMP (GNU Image Manipulation Program) scripts, 287-288
GNOME (GNU Network Object Model Environment) 3 desktop

accessibility features, 80-82
customizing, 75-80
Files file manager program on, 136-144
history of, 61-62
overview, 61
parts of, 62-74
playing audio from, 256-258
viewing videos with, 278-279
GNOME-PPP (modem configuring package), 169
GNU (GNU's Not Unix) General Public License (GPL), 8, 9, 12
GNU's Not Unix (GNU), 11-13
GParted disk management tool, 28
graphical user interface (GUI) desktop errors, 424-425
graphics, 282-289
groups, 133-134, 324-330
GRUB2 bootloader program errors, 431
GUI (graphical user interface) desktop errors, 424-425



H

hard drives, installing multiple, 22-23
hard link, 128
hardware

compatibility of, checking, 29-32
setting up for internet connectivity, 155-156
hardware-detect tool, 31
help, function commands for, 433-434
hidden files, 127


history
 command, 314
History menu, on KDE Plasma desktop, 85, 88
Home folder icon, 68
Home section, on Firefox browser, 178
Hypertext Preprocessor (PHP) server, 409-410, 413-415



I

IDEs (integrated development environments), 14


ifconfig
 command, 164, 166


if-then
 condition statement, 374-375
IM (instant messaging), 201
image files, editing, 285-287
IMAP email server address, 158
Impress, LibreOffice, 230-235
inbound POP3 server address, 158
Info Center application, 87
InnoDB storage engine, 412-413
inode, defined, 436
installation mediums, checking for errors, 423-424
installing Linux

frozen installations, 422-423
openSUSE, 51-59
overview, 37
pre-installation, 38-39
Ubuntu boot, 49-50
from Ubuntu Live, 39-49
installing VirtualBox, 382-384
installing web servers, 403-407
instant messaging (IM), 201
integrated development environments (IDEs), 14
Integrated Services Digital Network (ISDN) Digital Subscriber Line (IDSL) , 154
internal modem, 156
Internet. See also email

Firefox browser, 175-182
overview, 175
Skyping on, 199-200
tools on, 201
watching videos on, 273-277
Internet connectivity

configuring

command line tools, 163-169
errors in, 169-171
Network Manager tool, 158-162
overview, 158
using modems to dial, 169

overview, 153-155
post-connection, 171-172
selecting ISP, 156-158
setting up hardware for, 155-156
Internet Relay Chat (IRC) programs, 201
Internet Service Provider (ISP), selecting, 156-158
interoperability of Linux, 9
interpolated string, 317


ip
 command, 164, 166-168
IRC (Internet Relay Chat) programs, 201
ISDN (Integrated Services Digital Network) Digital Subscriber Line (IDSL) , 154
ISP (Internet Service Provider), 156-158


iwconfig
 command, 165, 168


iwlist
 command, 168



J

join displays mode, 78
journaling filesystem, 46



K

K Desktop Environment. See Kool Desktop Environment (KDE) Plasma desktop
K3b package, 269-271
K12LTSP distribution, 445
Kate editor, 216-218
KDE Plasma desktop

Accessibility settings for, 98-99
application launcher, 84-88
description of, 91
Dolphin file manager program on, 136, 145-146
editing in, 211-218
overview, 83-84
panel on, 89-90
playing audio from, 258-259
system settings for, 96-97
viewing videos with KDE Dragon, 279-280
widgets, 91-96
KDEPPP modem configuring package, 169
kernel, Linux, 10, 13
kernel module handling commands, 439
kernel-based Virtual Machine (KVM), 382
KNOPPIX Linux distribution, 27, 447
Kool Desktop Environment Plasma desktop. See KDE Plasma desktop
KRunner application, 87
KVM (kernel-based Virtual Machine), 382
KWrite editor, 211-216



L

laptops, 30
latency, 170
leap, 51
Leave menu, on KDE Plasma desktop, 85, 88-89
legacy tools, 164-169
libraries, defined, 123
LibreOffice Base, 240-246
LibreOffice Calc, 226-230

LibreOffice Draw, 236-239
LibreOffice Impress, 230-235
LibreOffice Math, 246-251
LibreOffice suite, 219-221
LibreOffice Writer, 221-225
lighthttpd server, 401
LimeWire, 201
Line and Filling toolbar, in LibreOffice Impress, 234
Linux

completing shell commands with, 312-313
distribution of, 14-17
installing

openSUSE, 51-59
overview, 37
pre-installation, 38-39
Ubuntu boot, 49-50
from Ubuntu Live, 39-49

kernel of, 10, 13
laptops and, 30
vs. other operating systems, 8-10
overview, 7
ownership freedom for, 7-8
parts of open source software, 11-14
tools, 27-29
using Microsoft Windows together with, 22-29

Linux All-In-One Desk Reference For Dummies (Dulaney), 1
Linux boxes, connecting with SSH, 354-355
Linux filesystem

accessing files when dual-booting, 150
accessing network drives through, 150-151
contents of, 122-125
Dolphin file manager program, 145-146
Files file manager program, 136-1344
managing with command-line tools, 125-131
managing with file manager program, 135-136
overview, 121, 135
permissions, 131-134
removable media, 149-150
searching on, 151-152
terminology for, 121-122
Thunar file manager program on, 146-148
Linux Mint, 447
Linux Newbie Administrator, 172
literal text string, 317
Live distribution, 16-17, 21
LiveDVD, 16
local loopback (lo) interface, 167
local variables, 366
logic statements, in script programs, 374-378
logical partitions, 23
Logical Volume Manager (LVM), 47
loops, 378-380


ls
 command, 126
LVM (Logical Volume Manager), 47



M

MAC (Media Access Control) address, 160
Machine menu area, for VM, 393-394
Macintosh, connecting Linux boxes from, 355


man
 (manual) page system, 320
manual partition, 45
manuals, keeping, 30
Massachusetts Institute of Technology (MIT), 11
MATE desktop

applets for, 111
changing settings for, 110-111
history of, 107-108
menu for, 109
overview, 107
Math, LibreOffice, 246-251
mathematical expressions, including in script programs, 372-374
Media Access Control (MAC) address, 160
Media Transfer Unit (MTU) size, 160
metacharacters, 362
Microsoft Windows

backing up, 20
connecting SSH in, 353-354
tools for, 24-26
using Linux together with, 22-29
minimal installation, 43
mirror mode, 79
MIT (Massachusetts Institute of Technology), 11


mkdir
 command, 130
modems, 154-156, 169
mount point locations, 47
mounting, defined, 124
mouse settings, 79-80
move (mv) command, 130
movie files, viewing, 277-281
Mozilla. See Firefox browser
MPEG4 video compression, 274
MPG (Moving Pictures Group), 277
MTU (Media Transfer Unit) size, 160
multiplatform, Linux as, 9
multiple commands, running, 360
multiple hard drives, installing, 22-23
music, downloading, 260-264


mv
 (move) command, 130
MX Linux, applets in, 113
MySQL, 411-413

Cluster Carrier Grade Edition, 402
Community Edition, 402
Enterprise Edition, 402
Standard Edition, 402



N



nano
, editing with, 204-205
natural scrolling, 80
Nautilus, 136
ndiswrapper project, 161
network commands, 440-441
network drives, accessing, 150-151
network interfaces, 167
Network Manager tool, 158-164
Network Security Toolkit distribution, 445
network weak spots, preventing, overview, 345
nginx server, 401


nmcli
 command, 162, 163


nmtui
 command, 162
notification area, 64
NU Image Manipulation Program (GIMP) scripts, 287-288



O

Ogg video compression, 274
Oldstable software repositories, 446
open source software, 11-14
openSUSE

adding applications in, 300-301
installing, 51-59, 405-407
Plasma desktop, 86
updating, 297-298
operating systems (OS)

installing an, 390-393
Linux compared with others, 8-10
upgrading, 304
options parameter, 374
outbound SMTP relay server address, 158
output redirection, 318-319, 360-361
owners (users), for Linux filesystem, 131-133
ownership freedom, 7-8



P

packages, installing, 301-303
Pager widget, 89
Panel Editor widget, 90
partitioning drives, 23-29
passwords, 343-344, 431-432
PC hardware-detect tool, 31
permissions, 127, 131-134, 143-144
PHP (Hypertext Preprocessor) server, 409-410, 413-415


phpinfo()
 function, 413


php.ini
 settings, 414-415


ping
 command, 170
ping signal, 170
pinging, defined, 170
pipes, 320-321

piping, 361-362
platforms, defined, 9
Plugins tab, in gedit, 210-211
POP3 server address, 158
port, defined, 348


port
 setting, 412
ported, defined, 9
post-connection internet connectivity, 171-172
preemptive multitasking, 9
pre-installation, 38-39
presentations, 231-232
primary partitions, 23


printenv
 command, 368
Printer Details option, 338
Printer Options dialog box, 337
printer properties, 337-338
Privacy & Security section, on Firefox browser, 178-179
processes commands, 440
Processes tab, 339-341
Program, opening files with, 140
programming languages, 9, 401-402
programs, 140, 311
PuTTY, 351-352



Q

Queries pane, in LibreOffice Base, 244
QuickTime video format, 278



R

read permission, 133
Really Simple Syndication (RSS) readers, 201
RealNetworks (RM), 278
Red Hat Package Management (RPM), 199, 404, 445
redirection, 318-319
relative navigation, 130
removable media

description of, 71-72
in filesystem, 149-150
mounting, 124
removable storage, 87
remove (rm) command, 130
Remove Printer option, 338
Reports pane, in LibreOffice Base, 244


reset
 command, 320-321
resolution, 78
Resources tab, 341-342
Rhythmbox, 256-258, 264
RM (RealNetworks), 278


rm
 (remove) command, 130






/root
 directory, 122-123






route
 command, 165, 168-169
router, wireless, 155-156
RPM (Red Hat Package Management), 199, 404, 445
RSS (Really Simple Syndication) readers, 201
Rufus program, 35
ruler, in LibreOffice suite, 223, 237-239



S

Sabayon Linux, 448
satellite modems, 155
screen resolutions, 429-430
script programs, writing

command substitution, 371-372
logic statements in, 374-378
loops in, 378-380
mathematical expressions in, 372-374
overview, 371
SDSL (Symmetric Digital Subscriber Line), 154
Search section, on Firefox browser, 178
second triplet, 132-133
Secure Shell (SSH), 349-355
security

online resources for, 356-358
passwords for, 343-344
System Log Viewer, 356-358
updating software, 344-356
services, 123, 345-348


set
 command, 368
shebang, 363

shell prompts, 307-309
shell scripting

command line arguments, 369-370
displaying messages, 365-366
exit status, 370-371
formatting, 362-364
output redirection, 360-361
overview, 359
piping, 361-362
running, 364-365
running multiple commands, 360
using variables in, 366-369
writing script programs, 371-380
shells

bash command, 309-310
commands for, 312-314
overview, 305-306
pipes, 320-321
redirection, 318-319
shell prompts, 307-309
starting bash sessions using terminal application, 306-307
starting programs with, 311
variables, 314-318
Wildcard expansion, 311-312
single mode, 79
Skype, 199-200
Slackware distribution, 443-444
SMTP relay server address, 158


socket
 setting, 412
software

adding to Linux

compressing and packaging files, 295-296
installing, 298-301
opening downloaded files, 293-294
OS, 304
overview, 293
searching for, 303-304
updating, 296-298

repositories for, 446
types of

copyleft, 12
freedom, 11
specialized, 16
virtualization, 21

updating, 344-346
Software Center application, 87
source code, 12
specialized Linux distribution, 16
specialized software, 16
spices. See widgets
spin distributions, 444
spins, 444
SSH (Secure Shell), 349-355
stable Debian (DEB) distributions, 446
Stallman, Richard, 11-12
static method, 157


stderr
 (standard error), 318


stdin
 (standard input), 318


stdout
 (standard output), 318
storage medium, 129
Straw program, 201
superuser, 133
Symmetric Digital Subscriber Line (SDSL), 154
Synaptic Package Manager, 301-302
Sync feature, on Firefox browser, 179
system administration

CUPS, 331-336
managing users and groups, 324-330
overview, 323
System Monitor tool, 338-342
system control commands, 439-441
System Log Viewer, 356-358
System Monitor tool

File Systems tab, 342
overview, 338-339
Processes tab, 339-341
Resources tab, 341-342
system settings, for KDE Plasma desktop, 96-97
system tray, in MATE, 108
System Tray widget, 89


systemctl
 command, 347-348
systemd software, 345

SystemRescueCD, 448



T

tables, in LibreOffice Base, 245-246
Tables pane, in LibreOffice Base, 244
target host, 169
Task Manager widget, 89
Tasks pane, in LibreOffice Base, 244
terminal application, starting bash sessions using, 306-307
text files

editing in KDE Plasma desktop, 211-218
editing with nano, 204-205
gedit text editor, 206-210
overview, 202-204
saving contents in, 205-206
themes, on Firefox browser, 179
third triplet, 132-133




3-dimensional (3D) games, 288-289




Thunar file manager program, 146-148
Thunderbird email application, 195-197
Tin Hat Linux, 448
Torvalds, Linus, 10
touchpad settings, 79-80
Trash folder, 68, 142
triplets, 131-133
troubleshooting

changing boot environment, 427-429
changing screen resolutions, 429-430
command-line login prompt, 425-426
double-checking settings, 424
forgotten passwords, 431-432
frozen installations, 422-423
GRUB2 bootloader program errors, 431
GUI desktop errors, 424-425
overview, 421-422
tumbleweed, 51



U

Uber-geek hangout, 172
Ubuntu, 29

adding applications in, 299-300
checking installation mediums for errors, 423-424
installing, 404-405
installing Linux from boot, 49-50
updating, 296-297
Ubuntu Live, 39-49


ufw
 firewall, 348
UID (userid), 366
Unified Extensible Firmware Interface (UEFI) information, 31
Universal Access options, 80-81
UNIX operating system, 10-12
unstable Debian (DEB) distributions, 446
USB stick, bootable, 34-36
User variables, 368-369
userid (UID), 366
users

description of, 131-133
managing

adding new users, 326-328
overview, 324
tools for, 324-325






/usr
 directory, 125



V

variables, 314-318, 366-369
VDI (VirtualBox Disk Image). See virtual machine (VM)
VideoLAN Client (VLC), 259-260, 280-281
videos

viewing DVDs, 281-282
viewing movie files, 277-281
watching on Internet, 273-277
view buttons, customizing, 139
View menu, for VM, 394-395
View tab, in gedit, 208-209
Views tab bar, in LibreOffice Impress, 234-235
virtual desktop, 74
virtual machine (VM)

creating, 384-387
customizing, 387-393
navigating, 390-396
VirtualBox, installing, 382-384

VirtualBox Disk Image (VDI), 386
virtualization software

installing VirtualBox, 382-384
overview, 381-382
VM, 384-396
VLC (VideoLAN Client), 259-260, 280-281
VM (virtual machine), 384-387
VMware Server, 382
Volatile Project software repositories, 446
volunteers, 13-14



W

web application code, 419-420
web folder location, 408
web servers

Apache, 407-410
customizing PHP, 413-415
database environment, 415-417
database server, selecting, 402-403
installing, 403-407
MySQL, 411-413
overview, 399-400
parts to assemble for, 400
programming languages, 401-402
selecting, 400-401
web application code for, 419-420
WebM video compression, 274


while
 loop command, 379-380
Whisker menu, 113-115
widgets

adding, 91-94
defined, 89
downloading extra, 95-96
overview, 91
Wildcard expansion, 311-312
Win, defined, 32
Windows. See Microsoft Windows
Windows Media Video (WMV), 277
windows overview, 73
Windows Subsystem for Linux (WSL), 22
WinModems, 156
wired network, 159-161
wireless connections, 155
wireless network, 161-162
wireless router, 155-156
WireShare, 201
WMV (Windows Media Video), 277
workspace selector, 74
WPA2 security, 156
write permission, 133
Writer, LibreOffice, 221-225
WSL (Windows Subsystem for Linux), 22



X

XDSL (Generic DSL), 154
Xfce desktop

applets for, 116-117
changing settings for, 115-116
history of, 112-113
overview, 112
Thunar file manager program on, 136, 146-148
Whisker menu, 113-115



Y

YaST2 program, 302-303











About the Author
Richard Blum has worked in the IT industry for more than 30 years as a network and systems administrator. During that time, he's had the opportunity to work with lots of different computer products, including Windows, Netware, Cisco, Avaya, different flavors of UNIX, and of course, Linux. Over the years he's also volunteered for several non-profit organizations to help support small networks that had little financial support. Rich is the author of several Linux-based books for total Linux geeks, and teaches online courses in Linux and web programming.
When he's not busy being a computer nerd, Rich enjoys playing piano and bass guitar, and spending time with his wife, Barbara, and their two daughters, Katie Jane and Jessica.

Dedication
To my daughters, Katie Jane and Jessica. Remember: It's always a good time to learn new things (even when you're not in school).
"Let the wise hear and increase in learning, and the one who understands obtain guidance." Proverbs 1:5 (ESV)

Acknowledgements
First, all praise and glory go to God, who through His Son makes all things possible, and gives us the gift of eternal life.
A special thanks to all the past authors in the Linux For Dummies series. I jumped onto this project at Edition 8; it's amazing to think of the great authors who've been involved with guiding this series from the start. I'm glad to be able to build off of that tradition, and all your hard work.
Many thanks go to the great people at John Wiley & Sons for their help and guidance in writing this. Thanks to Katie Mohr for getting this project started, and to Kelsey Baird for picking things up mid-stream and seeing it through to completion. Also thanks to Rebecca Senninger for helping keep the project focused and on track, even when it looked like the wheels were going to fall off! Special thanks to Guy Hart-Davis, the technical editor for this book. Guy's gentle corrections and suggestions helped make this a much better book — thanks Guy! Thanks also goes to Carole Jelen at Waterside Productions for arranging this gig, and keeping my book-writing career on track.
Finally, I'd like to thank my parents, Mike and Joyce Blum, for constantly stressing education over goofing off, and my wife Barbara and two daughters Katie Jane and Jessica for their love and support, especially while I was working on this project.
Publisher's Acknowledgments
Associate Publisher: Katie Mohr
Acquisition Editor: Kelsey Baird
Development Editor: Rebecca Senninger
Proofreader: Debbye Butler
Technical Editor: Guy Hart-Davis
Production Editor: Mohammed Zafar Ali
Cover Image: © Julien Tromeur/Shutterstock
































Take Dummies with you everywhere you go!

  

Go to our Website


  

Like us on Facebook


  

Follow us on Twitter


  

Watch us on YouTube


  

Join us on LinkedIn


  

Pin us on Pinterest


  

Subscribe to our newsletter


  

Create your own Dummies book cover















WILEY END USER LICENSE AGREEMENT


Go to www.wiley.com/go/eula to access Wiley's ebook EULA.





