 
 
 




Here is the flow graph:



Notice that the first loop in this program cleans out register 5, so that whatever it had as content at the beginning won't contaminate what is built up in register 5 by the second loop (which is just our addition loop, adding the content of register 4 to the 0 in register 5). This initializing step is known as zeroing out the register, and it is a very useful, standard operation. You will use it constantly to prepare registers for use.
A third simple program copies the content of one register to another register, leaving the original content unchanged. Consider the flow graph and then the program:



program 3: COPY [1,3]



STEP
INSTRUCTION
REGISTER
GO TO STEP
[BRANCH TO STEP]


1.
Deb
3
1
2


2.
Deb
4
2
3


3.
Deb
1
4
6


4.
Inc
3
5
 


5.
Inc
4
3
 


6.
Deb
4
7
8


7.
Inc
1
6
 


8.
End
 
 
 




This is certainly a roundabout way of copying, since we do it by first moving the contents of register 1 to register 3 while making a duplicate copy in register 4, and then moving that copy back into register 1. But it works. Always. No matter what the contents of registers 1, 3, and 4 are at the beginning, when the program halts, whatever was in register 1 will still be there and a copy of that content will be in register 3.
If the way this program works isn't dead obvious to you yet, get out some cups for registers (pencil a number on each cup, its address) and a pile of pennies (or beans) and "hand simulate" the whole process. Put a few pennies in each register and make a note of how many you put in register 1 and register 3. If you follow the program slavishly, when you finish, the number of pennies in register 1 will be the same as it was at first, and the same number will now be in register 3. It is very important that you internalize the basic processes of the register machine, so you don't have to think hard about them, because we're going to be exploiting this new talent in what follows. So take a few minutes to become a register machine (the way an actor can become Hamlet).
I find that some of my students lapse into a simple error: they imagine that when they decrement a register, they have to put that penny, the one they just took from register n, in some other register. No. Decremented pennies just go back in the big pile, your "infinite" supply of pennies to use in this simple adding-and-subtracting routine.
With moving, copying, and zeroing out in our kit, we are ready to go back to our addition program and improve it. Program 1 puts the right answer to our addition problem in register 2, but in the process it destroys the original contents of registers 1 and 2. We might want to have a fancier addition program that saves these values for some later use, while putting the answer somewhere else. So let's consider the task of adding the content of register 1 to the content of register 2, putting the answer in register 3 and leaving the contents of registers 1 and 2 intact.
Here is a flow graph that will accomplish that:



We can analyze the loops, to see what each does. First we zero out the answer register, register 3, and then we zero out a spare register (register 4) to use as a temporary holding tank or buffer. Then we copy the content of register 1 to both registers 3 and 4, and move that content back from the buffer to 1, restoring it (and in the process, zeroing out register 4 for use again as a buffer). Then we repeat this operation using register 2, having the effect of adding the content of register 2 to the content we'd already moved to register 3. When the program halts, buffer 4 is empty again, the answer is in register 3, and the two numbers we added are back in their original places, registers 1 and 2.
This thirteen-step RAP program puts all the information in the flow graph in the form that the processing unit can read:
program 4: Non-destructive ADD [1,2,3]



STEP
INSTRUCTION
REGISTER
GO TO STEP
[BRANCH TO STEP]


1.
Deb
3
1
2


2.
Deb
4
2
3


3.
Deb
1
4
6


4.
Inc
3
5
 


5.
Inc
4
3
 


6.
Deb
4
7
8


7.
Inc
1
6
 


8.
Deb
2
9
11


9.
Inc
3
10
 


10.
Inc
4
11
 


11.
Deb
4
12
13


12.
Inc
2
11
 


13.
End
 
 
 




I am not going to recommend that you simulate this program by hand with the cups and pennies. Life is short, and once you have internalized the basic processes in your imagination, you can now take advantage of a prosthetic device, RodRego, a register machine you can download from http://sites.tufts.edu/rodrego/.

Home screen for the original RodRego register machine, 1986

There are both PC and Mac versions of RodRego available to run on your computer. We developed this thinking tool more than twenty years ago at the Curricular Software Studio, and hundreds of students and others have used it to become fluent register machine thinkers. You can type in your RAP programs and watch them run, with either beans or numbers in the registers. There are also animated PowerPoint demonstrations of the path taken by the processing unit through the flow graph for addition, for instance, so you can see exactly how RAP instructions correspond to the circles in the flow graph.
Now let's turn to subtraction. Here is a first stab at a flow graph for subtracting the content of register 2 from the content of register 1, putting the answer in register 4. Can you see what is wrong with it?



This will work only when the content of register 1 is greater than the content of register 2. But what if this isn't so? Register 1 will "zero out" halfway through one pass in the subtraction loop, before it can finish the subtraction. What should happen then? We can't just ask the computer to end, for this leaves the wrong answer (0) in register 4. We can use this zeroing out to start a new process, which first backs up half a loop and undoes the provisional decrementing from register 2. At this point the content of register 2 (not register 1) gives the right answer if we interpret it as a negative number, so you can simply move that content to register 4 (which is already zeroed out) and put a sign somewhere indicating that the answer is a negative number. The obvious thing to do is to reserve a register for just this task—let's say, register 3. Zero it out at the beginning, along with register 4, and then have the program put a "flag" in register 3 as the sign of the answer, with 0 meaning + and 1 meaning -. Following is the flow graph, with comments explaining what each step or loop does. (You can put such comments in your RAP programs, in between # marks. They are for you and other human beings; RodRego will ignore them.)



Exercise 2

a. Write the RAP program for this flow graph. (Note that since the program branches, you can number the steps in several different ways. It doesn't matter which way you choose as long as the "go to" commands point to the right steps.)
b. What happens when the program tries to subtract 3 from 3 or 4 from 4?
c. What possible error is prevented by zeroing out register 3 before trying the subtraction at step 3 instead of after step 4?

With addition and subtraction under our belts, multiplication and division are easily devised. Multiplying n times m is just adding n to itself m times. So we can instruct the computer to do just that, using one register as a counter, counting down from m to 0 by decrementing once each time the addition loop is completed.
Exercise 3

a. Draw a flow graph (and write the RAP program) for multiplying the content of register 1 by the content of register 3, putting the answer in register 5.
b. (Optional)* By copying and moving, improve the multiplier you created in problem a: when it stops, the original contents of register 1 and register 3 are restored, so that you can easily check the inputs and outputs for correctness after a run.
c. (Optional) Draw a flow graph and write a RAP program that examines the contents of register 1 and register 3 (without destroying them!) and writes the address (1 or 3) of the larger content in register 2, and puts 2 in register 2 if the contents of registers 1 and 3 are equal. (After this program has executed, the contents of register 1 and register 3 should be unchanged, and register 2 should say if their contents are equal, and if not, which of those two registers has the larger content.)

Division, similarly, can be done by subtracting the divisor over and over again from the dividend and counting up the number of times we can do that. We can leave the remainder, if any, in a special remainder register. But here we must be careful to add one crucial safety measure: we mustn't divide by zero (must we?), so before any division starts, we should run a simple check on the divisor, by trying to decrement it. If we can decrement it, we should increment it just once (restoring it to its proper value) and then proceed with the division. If we hit zero, however, when we try to decrement it, we need to raise an alarm. We can do this by reserving a register for an ERROR flag: a 1 in register 5 can mean "TILT! I've just been asked to divide by zero!"
Here is the flow graph for dividing the content of register 1 by the content of register 2, putting the answer in register 3, the remainder in register 4, and highlighting register 5 for an "error message" (a 1 means "I was asked to divide by zero").



Walk through the flow graph, and notice how zero in the divisor aborts the operation and raises a flag. Notice, too, that register 4 is doing double duty, serving not only as a copy of the divisor, for restoring the divisor for each successive subtraction, but also as a potential remainder register. If register 1 zeros out before register 4 can dump its content back into register 2 for another subtraction, that content is the remainder, right where it belongs.

SECRET 1: Competence without Comprehension: Something—e.g., a register machine—can do perfect arithmetic without having to comprehend what it is doing.

The register machine isn't a mind; it comprehends nothing; but it sorta comprehends three simple things—Inc, Deb, and End—in the sense that it slavishly executes these three "instructions" whenever they occur. They aren't real instructions, of course; they are sorta instructions. They look like instructions to us, and the register machine executes them as if they were instructions, so it's more than handy to call them instructions.
As you can now see, Deb, Decrement-or-Branch, is the key to the power of the register machine. It is the only instruction that allows the computer to "notice" (sorta notice) anything in the world and use what it notices to guide its next step. And in fact, this conditional branching is the key to the power of all stored-program computers, a fact that Ada Lovelace recognized back in the nineteenth century when she wrote her brilliant discussion of Charles Babbage's Analytical Engine, the prototype of all computers.*
Assembling these programs out of their parts can become a rather routine exercise once we get the hang of it. In fact, once we have composed each of the arithmetic routines, we can use them again and again. Suppose we numbered them, so that ADD was operation 0 and SUBTRACT was operation 1, MULTIPLY was operation 2, and so forth. COPY could be operation 5, MOVE could be operation 6, and so on. Then we could use a register to store an instruction, by number.
Exercise 4 (Optional)

Draw a flow graph, and write a RAP program that turns a register machine into a simple pocket calculator, as follows:
a. Use register 2 for the operation:
0 = ADD
1 = SUBTRACT
2 = MULTIPLY
3 = DIVIDE
b. Put the values to be acted on in registers 1 and 3.
(Thus 3 0 6 would mean 3 + 6, and 5 1 3 would mean 5 - 3, and 4 2 5 would mean 4 × 5, and 9 3 3 would mean 9 ÷ 3). Then put the results of the operation in registers 4 through 7, using register 4 for the sign (using 0 for + and 1 for -) and register 5 for the numerical answer, register 6 for any remainder in a case of division, and register 7 as an alarm, signaling a mistake in the input (either divide-by-zero or an undefined operation in register 2).

Notice that in this example, we are using the contents of registers (in each case, a number) to stand for four very different things: a number, an arithmetical operation, the sign of a number, and an error flag.

SECRET 2: What a number in a register stands for depends on the program that we have composed.

Using the building blocks we have already created, we can construct more impressive operations. With enough patience we could draw the flow graph and write the program for SQUARING the number in register 7, or a program to FIND THE AVERAGE of the contents in registers 1 through 20, or FACTOR the content of register 6, putting a 1 in register 5 if 5 is a factor, or COMPARE the contents of register 3 and register 4 and put the larger content in register 5 unless it is exactly twice as large, in which case put a flag in register 7. And so forth.
A particularly useful routine would SEARCH through a hundred registers to see if any of them had a particular content, putting the number of that register's address in register 101. (How would it work? Put the TARGET number in register 102, and a copy of the target in register 103; zero out register 101, then, starting at register 1, subtract its contents from the contents of 103 (after incrementing register 101), looking for a zero answer. If you don't get it, go on to register 2, and so forth. If any register has the target number, halt; the address of that register will be in register 101.) Thanks to the basic "sensory" power embodied in Deb—its capacity to "notice" a zero when it tries to decrement a register—we can turn the register machine's "eyes" in on itself, so it can examine its own registers, moving contents around and switching operations depending on what it finds where.

SECRET 3: Since a number in a register can stand for anything, this means that the register machine can, in principle, be designed to "notice" anything, to "discriminate" any pattern or feature that can be associated with a number—or a number of numbers.

For instance, a black-and-white picture—any black-and-white picture, including a picture of this page—can be represented by a large bank of registers, one register for each pixel, with 0 for a white spot and 1 for a black spot. Now, write the register machine program that can search through thousands of pictures looking for a picture of a straight black horizontal line on a white background. (Don't actually try to do it. Life is short. Just imagine in some detail the difficult and hugely time-consuming process that would accomplish this.) Once you've designed—in your imagination—your horizontal-line-recognizer, and your vertical-line-recognizer, and your semi-circle-recognizer, think about how you might yoke these together with a few (dozen) other useful discriminators and make something that could discriminate a (capital) letter "A"—in hundreds of different fonts! This is one of the rather recent triumphs of computer programming, the Optical Character Recognition (OCR) software that can scan a printed page and turn it quite reliably into a computer text file (in which each alphabetic or numerical symbol is represented by a number, in ASCII code, so that text can be searched, and all the other wizardry of word-processing can be accomplished—by nothing but arithmetic). Can an OCR program read? Not really; it doesn't understand what is put before it. It sorta reads, which is a wonderfully useful competence that can be added to our bountiful kit of moving parts.

SECRET 4: Since a number can stand for anything, a number can stand for an instruction or an address.

We can use a number in a register to stand for an instruction, such as ADD or SUBTRACT or MOVE or SEARCH, and to stand for addresses (registers in the computer), so we can store a whole sequence of instructions in a series of registers. If we then have a main program (program A) that instructs the machine to go from register to register doing whatever that register instructs it to do, then we can store a second program B in those registers. When we start the machine running program A, the first thing it does is to consult the registers that tell it to run program B, which it thereupon does. This means that we could store program A once and for all in the register machine's central processing unit in a reserved set of registers (it could be "firmware" burnt into the ROM—read-only memory), and then use program A to run programs B, C, D, and so on, depending on what numbers we put in the regular registers. By installing program A in our register machine, we turn it into a stored-program computer.
Program A gives our register machine the competence to faithfully execute whatever instructions we put (by number) into its registers. Every possible program it can run consists of a series of numbers, in order, that program A will consult, in order, doing whatever each number specifies. And if we devise a system for putting these instructions in unambiguous form (for instance, requiring each instruction name to be the same length—say two digits), we can treat the whole series of numbers that compose the B program, say,

86, 92, 84, 29, 08, 50, 28, 54, 90, 28, 54, 90

as one great big long number:

869284290850285490285490

This number is both the unique "name" of the program, program B, and the program itself, which is executed, one step at a time, by program A. Another program is

28457029759028752907548927490275424850928428540423,

and another is

8908296472490284952498856743390438503882459802854544254789653985

but most interesting programs would have much, much longer names, millions of digits long. The programs you have stored on your laptop, such as a word processor and a browser, are just such long numbers, many millions of (binary) digits long. A program that is 10 megabytes in size is a string of eighty million 0s and 1s.

SECRET 5: All possible programs can be given a unique number as a name, which can then be treated as a list of instructions to be executed by a Universal machine.

Alan Turing was the brilliant theoretician and philosopher who worked this scheme out, using another simple imaginary computer, one that chugs back and forth along a paper tape divided into squares, making its behavior depend (aha!—conditional branching) on whether it reads a zero or a one on the square currently under its reading head. All the Turing machine can do is flip the bit (erasing 0, writing 1, or vice versa) or leave the bit alone, and then move left or right one tape square and go to its next instruction. I think you will agree that writing Turing machine programs to ADD and SUBTRACT and perform other functions, using just the binary numbers 0 and 1 instead of all the natural numbers (0, 1, 2, 3, 4, 5, etc.), and moving just one square at a time, is a more daunting exercise than our register machine exercises, but the point Turing made is exactly the same. A Universal Turing machine is a device with a program A (hardwired, if you like) that permits it to "read" its program B off its paper tape and then execute that program using whatever else is on the tape as data or input to program B. Hao Wang's register machine can execute any program that can be reduced to arithmetic and conditional branching, and so can Turing's Turing machine. Both machines have the wonderful power to take the number of any other program and execute it. Instead of building thousands of different computing machines, each hardwired to execute a particular complicated task, we build a single, general-purpose Universal machine (with program A installed), and then we can get it to do our bidding by feeding it programs—software—that create virtual machines.
The Universal Turing machine is a universal mimic, in other words. So is our less well-known Universal register machine. So is your laptop. There is nothing your laptop can do that the Universal register machine can't do, and vice versa. But don't hold your breath. Nobody said that all machines were equal in speed. We've already seen that our register machine is achingly slow at something as laborious as division, which it does by serial subtraction, for heaven's sake! Are there no ways to speed things up? Indeed there are. In fact, the history of computers since Turing's day is precisely the history of ever-faster ways of doing what the register machine does—and nothing else.

SECRET 6: All the improvements in computers since Turing invented his imaginary paper-tape machine are simply ways of making them faster.

For instance, John von Neumann created the architecture for the first serious working computer, and in order to speed it up, he widened the window or reading head of Turing's machine from 1-bit-at-a-time to many-bits-at-a-time. Many early computers read 8-bit "words" or 16-bit "words" or even 12-bit words. Today 32-bit words are widely used. This is still a bottleneck—the von Neumann bottleneck—but it is thirty-two times wider than the Turing machine bottleneck! Simplifying somewhat, we can say that each word is COPIED from memory one at a time, into a special register (the Instruction Register), where it is READ and executed. A word typically has two parts, the Operation Code (e.g., ADD, MULTIPLY, MOVE, COMPARE, JUMP-IF-ZERO) and an Address, which tells the computer which register to go to for the contents to be operated on. So, 10101110 11101010101 might tell the computer to perform operation 10101110 on the contents of register 1110101010101, putting the answer, always, in a special register called the Accumulator. The big difference between the register machine and a Von Neumann machine is that the register machine can operate on any register (Inc and Deb only, of course), while a Von Neumann machine does all the arithmetic work in the Accumulator, and simply COPIES and MOVES (or STORES) contents to the registers that make up the memory. It pays for all this extra moving and copying by being able to perform many different fundamental operations, each hardwired. That is, there is a special electronic circuit for ADD and another for SUBTRACT and yet another for JUMP-IF-ZERO, and so forth. The Operation Code is rather like an area code in the telephone system or a zip code in the mail: it sends whatever it is working on to the right place for execution. This is how software meets hardware.
How many primitive operations are there in real computers these days? There can be hundreds, or thousands, or in a return to the good old days, a computer can be a RISC (Reduced Instruction Set Computer), which gets by with a few-dozen primitive operations but makes up for it in the blinding speed with which they are executed. (If Inc and Deb instructions could be carried out a million times faster than a hardwired ADD operation, it would pay to compose ADD by using Inc and Deb, as we did earlier, and for all additions with less than a million steps, we'd come out ahead.)
How many registers are there in real computers these days? Millions or even billions (but they're each finite, so that really large numbers have to be spread out over large numbers of registers). A byte is 8 bits. If you have 64 megabytes of RAM (random access memory) on your computer, you have sixteen million 32-bit registers, or the equivalent. We saw that numbers in registers can stand for things other than positive integers. Real numbers (like π or √2 or ⅓) are stored using a system of "floating point" representations, which breaks the number into two parts, the base and the exponent, as in scientific notation ("1.495 × 1041"), which permits computer arithmetic to handle (approximations of) numbers other than the natural numbers. Floating-point operations are just arithmetical operations (particularly multiplications and divisions) using these floating-point numbers as values, and the fastest super-computer you could buy twenty years ago (when I wrote the first version of this chapter) could perform over 4 MEGAFLOPS: over 4 million floating point operations per second.
If that isn't fast enough for you, it helps to yoke together many such machines in parallel, so they are all working at the same time, not serially, waiting in a queue for results to work on. There is nothing that such a parallel machine can do that a purely serial machine cannot do, slower. In fact, most of the parallel machines that have been actively studied in the last twenty years have been virtual machines simulated on standard (nonparallel) Von Neumann machines. Special-purpose parallel hardware has been developed, and computer designers are busily exploring the costs and benefits of widening the von Neumann bottleneck, and speeding up the traffic through it, in all sorts of ways, with co-processors, cache memories, and various other approaches. Today, Japan's Fujitsu K-computer can operate at 10.51 PETAFLOPS—which is over ten thousand trillion floating-point operations per second.
That might be almost fast enough to simulate the computational activity of your brain in real time. Your brain is a parallel processor par excellence, with something in the neighborhood of a hundred billion neurons, each quite a complicated little agent with an agenda. The optic "nerve," carrying visual information from your eye to your brain, is, all by itself, several million channels (neurons) wide. But neurons operate much, much slower than computer circuits. A neuron can switch state and send a pulse (plausibly, its version of Inc or Deb) in a few milliseconds—thousandths, not millionths or billionths, of a second. Computers move bits around at near the speed of light, which is why making computers smaller is a key move in making them faster; it takes roughly a billionth of a second for light to travel a foot, so if you want to have two processes communicate faster than that, they have to be closer together than that.

SECRET 7: There are no more secrets!

Perhaps the most wonderful feature of computers is that because they are built up, by simple steps, out of parts (operations) that are also dead simple, there is simply no room for them to have any secrets up their sleeve. No ectoplasm, no "morphic resonances," no invisible force fields, no hitherto unknown physical laws, no wonder tissue. You know that if you succeed in getting a computer program to model some phenomenon, there are no causes at work in the model other than the causes that are composed of all the arithmetical operations.
Now what about quantum computing, which is all the rage these days? Aren't quantum computers capable of doing things that no ordinary computer can do? Yes and no. What they can do is solve many problems, compute many values simultaneously, thanks to "quantum superposition," the strange and delicate property in which an unobserved entity can be in "all possible" states at once, until observation brings about "collapse of the wave packet." (Consult your favorite popular physics book or website for more on this.) Basically, a quantum computer is just the latest—very impressive—innovation in speed, a quantum leap, one might say, in processing speed. A Turing machine chugging along on its paper tape, or a register machine running around incrementing and decrementing single registers, has a very strict limit on what it can do in practically small chunks of time—minutes or hours or days. A supercomputer like the Fujitsu K-computer can do all the same things trillions of times faster, but that is still not fast enough to solve some problems, especially in cryptography. That is where the speed bonus of quantum computers could pay off—if people can solve the ferociously difficult engineering problems encountered in trying to make a stable, practical quantum computer. It may not be possible, in which case we may have to settle for mere quadrillions of FLOPS.











25. Virtual Machines
Real machines are made of moving material parts and are typically named for the jobs they are designed to do. Lawnmowers, can-openers, and coffee grinders each come in a variety of designs, sometimes operating on different physical principles, but they have in common that the machines with the same name do the same job at some level of description. Maybe some do it better, but it all depends on what the user wants. A homeowner may prefer a slow lawnmower that is quiet; the owner of a cafe may prefer a coffee grinder that adjusts more accurately for the size of the grind at the cost of being harder to operate. Some machines are versatile: by plugging in a different attachment, you can turn a drill into a saw or a sander. Computers are like that, only instead of having a dozen different things they can be made to do, they can do kazillions of different things. And instead of having to plug in a different attachment for each task, you open a different program—a very long string of zeroes and ones—which changes all the necessary internal switches to just the right settings to accomplish the job. Each of these different systems of settings is a different machine—a different virtual machine, a machine "made of instructions," not gears and bearings, wires and pulleys. In computers, instructions can take the place of gears and pulleys because instead of processing bread dough or paper pulp or steel billets, computers process information, and information can always be translated into binary code, zero and one, the only code the computer can—or needs to—"read." Those zeroes and ones are shunted by the trillions through the circuits printed on the silicon chips, temporarily opening and closing gates, moving the streams of information to one circuit or another, thereby controlling what happens to it. The hardware's millions of tiny places that can be in either state 0 or state 1 are the only "moving parts" of the machine, and which machine a computer is at any moment depends on the settings of thousands or millions of little elements.
A virtual machine is what you get when you impose a particular pattern of instructions (more literally, dispositions) on a real machine that has lots of plasticity—interacting parts that can be in many different states. Since a virtual machine does informational work, it can do the same job as a computer whose "moving parts" are state-changes in hardware by making all those state-changes in representations of those moving parts. You can do long division with a pencil on a piece of paper, or if you are really good at long division, you can do it "in your head" by just representing—imagining—the marks on an imaginary page or blackboard. The yield is just as good either way since it's information: an answer. Imagining making a ham sandwich, in contrast, is a poor substitute for making a ham sandwich if you're hungry. So good are computers at doing informational work "in their heads" (by representing the machine that does the work) that it can be next to impossible to tell whether the machine you are using and interacting with is a "dedicated," "hard-wired," special-purpose information-processing machine or a virtual machine running on a general-purpose chip. For instance, most if not all of the tiny, cheap computer chips that are now embedded in elevators and air-conditioners, your car, your refrigerator, and the remote control for your television set are actually general-purpose computers, capable of executing versions of all the programs you run on your laptop, but doomed to spend their entire lives executing a single relatively simple program (the ignition-control program, the defrosting cycle, etc.) "burned" into a ROM that freezes all their magnificent competence into a single trick or two. This is cheaper than making special-purpose chips designed to do only these simple tasks.
The concept of a virtual machine is one of the most useful imagination-stretchers to come out of computer science, and having proved its worth in that domain, it is ripe for importing to other areas. I am using the term in a somewhat extended sense (and will explain why, in due course), so it is worth knowing what the original —and some say proper—meaning of the term is. Computer scientists Gerald Popek and Robert Goldberg (1974) introduced the term. In its original use, it meant "an efficient, isolated duplicate of a real machine"—a duplicate made out of ... instructions. A real machine, call it A, is actual hardware, made of silicon chips and wires and so forth, and a virtual machine is a computer program (running on some other, different real machine, B) that perfectly imitates the A hardware: it may run a bit slower, because it has to compose all of A's most basic operations out of the basic operations available on its own hardware, B, but it runs all the same programs. If you have a program that was written to run on the A hardware, it should run without a hitch on the B hardware as well when the B hardware is running the virtual machine imitation of A.
This is a remarkably useful trick, and not just because of the apparent thrift it suggests: Say you don't have a Mac, but have all this valuable software lying around that only runs on Macs. Well, then, write a virtual machine (VM) imitation of a Mac that runs on your PC, and then your PC can run all the Mac software whenever it runs the Mac VM. Your PC will "pretend" it's a Mac, and the software will be none the wiser! Think of someone who has broken his arm and has it in a plaster cast. The cast severely restricts the movement of his arm, and its weight and shape also call for adjustments in the rest of his bodily movements. Now think of a mime (Marcel Marceau, say) imitating someone with a plaster cast on his arm; if the mime does the trick well, his bodily motions will be restricted in exactly the same ways: he has a virtual cast on his arm—and it will be "almost visible." A PC imitating a Mac by running a Mac VM should be indistinguishable—to the software running on it, and to the outside observer—from an actual Mac.
Reality reverses my example, more or less. Although people have developed MAC VMs that run on PCs, to my knowledge these are more stunts than serious, usable software. Macs, on the other hand, do have a reliable, user-friendly VM that runs the PC operating system, Windows, allowing Mac owners to run any PC Windows software they like. Most programs these days are not written to run on particular hardware; they are written to run on particular operating systems (that in turn run on various hardwares). That's one reason for extending the concept of a virtual machine, to include virtual imitations of operating systems. An operating system is itself a sort of virtual machine, allowing slightly different hardwares to run the same programs, but an operating system is only software; it does not imitate any actual hardware but creates, by stipulation in effect, an imaginary machine that obeys certain rules, accepts certain inputs, and so forth.
Another reason for extending the concept is that one of the most popular and ubiquitous virtual machines today is the Java Virtual Machine, or JVM, which, like an operating system, is not an imitation of any actual hardware machine, but rather exists only as a software machine. Java is the invention that is most responsible for giving the Internet its versatility; it lets you download little programs—Java applets—from websites that permit you to solve crossword puzzles, play Sudoku, explore maps, enlarge photos, participate in adventure games with other players halfway around the world, and do a lot of "serious" computing too. A website designer can write programs in the Java programming language without having to know whether the computers of the users who go to that website will be Macs or PCs (or Linux machines), because a Java applet always runs on a JVM specifically designed to run on either a Mac or a PC or a Linux machine. The appropriate JVM is automatically downloaded to your computer and installed in a few seconds, and then the Java applet runs on the JVM, like magic. (You may have noticed Java updates being downloaded to your computer—or you may not have noticed! Ideally, you can forget about which JVM is installed on your computer and just expect that any website you go to either will have Java applets that already run on your JVM or will install the appropriate Java update then and there so it will run.)
In my extended sense of the term, then, almost any computer program can be considered a virtual machine, since it is software—a systematic list of instructions—that, when it runs, turns a general-purpose computer into a special-purpose machine that could have been designed and wired up as hardware. One of Alan Turing's most brilliant contributions to science—indeed to human civilization since mid-twentieth century—is the idea of a "Universal" computer (what we call today a Universal Turing machine), which can be turned into any other clearly designed computer simply by installing and running a program on it! (In case you decided to skip it, this is explained in detail in chapter 24.) You don't have to build all the different imaginable hardware computers; one hardware computer is all you ever need; software will do all the rest. Ever since Turing's time, we've had the remarkable idea that you can take some complicated hunk of stuff—hardware—with lots of plasticity—adjustable "memory" boxes or registers—and put a set of instructions in those memory boxes, which, when executed, will turn your hunk of stuff into whatever computer you can clearly imagine.
A Turing machine—or a laptop—executes one instruction at a time and moves to the next instruction, but we can generalize the idea to "parallel" computers that can execute many (millions of) instructions at one time. A register is any place in the hardware that can hold itself in one state or another (like the zero state and the one state of the bits in your computer, but not necessarily restricted to two different states) until something tells it to change its state. Any system of registers that can perform certain elementary operations on the basis of those states (such as changing a register from one state to another, or using the state of a register to determine what operation to do next) can have its registers set in such a way as to "compute a function" or "run a program." So any such hardware can run a virtual machine designed to exploit these basic steps. And a trick that can be done once can be done two or three or more times, implementing virtual machines in virtual machines in virtual machines in ... hardware.
Consider a chess-playing program written in Common Lisp (a high-level computer language) running on Windows 7 (an operating system) running on a PC. This is a PC pretending to be a Windows machine pretending to be a Lisp machine pretending to be a chess-playing machine. If we look at the details of the program at the highest level, they will be more or less comprehensible to a computer-savvy, chess-savvy observer ("Aha! This subroutine generates all the legal responses to moving the bishop and then calls the evaluation subroutine which ..."). In contrast, looking at the actual machine code of the same program, the strings of zeroes and ones that are fed into the hardware instruction register, is a good way to go crazy or blind, so we wisely focus our attention on the higher levels. At each level, we can see the woods in spite of all the trees because the lower-level details are conveniently invisible. The parallel between the cascade of virtual machines on a computer and the cascade of homunculi in homuncular functionalism about the mind is no mere coincidence. It is the spectacular success of virtual machines in helping us create and comprehend material implementations of hitherto mind-boggling tasks (making airline reservations, playing chess, predicting the weather, taking dictation, etc.) that inspires the hope that we can pull off a similar—only similar—stunt when we reverse engineer the brain.
Perhaps, then, the similarities between human brains whose owners speak French, in spite of all the anatomical differences observable, are best described at the virtual-machine level: all of the French-speakers have one version or another of the FVM, the French Virtual Machine, a system made of interlocking dispositions or microhabits stored, somehow, in the brains' billions of registers. Brains of English-speakers will be distinguished by a similar system of reliable patterns, the EVM. If you say to a French-speaker, "Donnez-moi le sel, s'il vous plait," the FVM will reliably control the same behavior you elicit from an English-speaker by feeding the EVM in her brain the input "Please pass me the salt." Now, how do we build an FVM or EVM that will run in a brain?
We don't yet know how to describe such different levels in the activities of brains of people playing chess or speaking French.* No doubt there will be nothing like the precise mappings that have enabled computer programmers to design their inventions at the highest levels with full confidence that a running program will emerge from the compiler (a program that takes the high-level instructions and translates them into code that can run on the hardware). But we do now have an important proof of concept: we know at least one way to make sense of the high-level competences of a machine with trillions of moving parts—without invoking any wonder tissue.











26. Algorithms
In Darwin's Dangerous Idea (1995a), I introduced this way of seeing what Darwin's great idea comes to:

Life on Earth has been generated over billions of years in a single branching tree—the Tree of Life—by one algorithmic process or another.

So what, exactly, is an algorithm? There are actually several competing senses of the term, and mine is perhaps the most commodious. What follows is drawn, with revisions, from my book.
Darwin discovered the power of an algorithm. An algorithm is a certain sort of formal process that can be counted on—logically—to yield a certain sort of result whenever it is "run" or instantiated. Algorithms are not new, and they were not new in Darwin's day. Many familiar arithmetic procedures, such as performing long division and balancing your checkbook, are algorithms, and so are the decision procedures for playing perfect tic-tac-toe and for putting a list of words into alphabetical order. What is relatively new—and permits us valuable hindsight on Darwin's discovery—is the theoretical reflection by mathematicians and logicians on the nature and power of algorithms in general, a twentieth-century development that led to the birth of the computer, which in turn has led to a much deeper and more lively understanding of the powers of algorithms in general.
The term algorithm descends, via Latin (algorismi) to early English (algorism and, mistakenly therefrom, algorithm), from the name of a Persian mathematician, Mûusâ al-Khowârizm, whose book on arithmetical procedures written in the ninth century was translated into Latin in the eleventh century by either Adelard of Bath or Robert of Chester. The idea that an algorithm is a foolproof and somehow "mechanical" procedure has been present for centuries, but it was the pioneering work of Alan Turing, Kurt Gödel, and Alonzo Church in the 1930s that more or less fixed our current understanding of the term. Three key features of algorithms will be important to us, and each is somewhat difficult to define.

(1) Substrate neutrality: The procedure for long division works equally well with pencil or pen, paper or parchment, neon lights or skywriting, using any symbol system you like. The power of the procedure is due to its logical structure, not the causal powers of the materials used in the instantiation, just so long as those causal powers permit the prescribed steps to be followed exactly.
(2) Underlying mindlessness: Although the overall design of the procedure may be brilliant, or yield brilliant results, each constituent step, and the transition between steps, is utterly simple. How simple? Simple enough for a dutiful idiot—or for a straightforward mechanical device—to perform. The standard textbook analogy notes that algorithms are recipes of sorts, designed to be followed by novice cooks. A recipe book written for great chefs might include the phrase "poach the fish in a suitable wine until almost done," but an algorithm for the same process might begin "choose a white wine that says 'dry' on the label; take a corkscrew and open the bottle; pour an inch of wine in the bottom of a pan; turn the burner under the pan on high; ..."—a tedious breakdown of the process into dead-simple steps, requiring no wise decisions or delicate judgments or intuitions on the part of the recipe-reader.
(3) Guaranteed results: Whatever it is that an algorithm does, it always does it, if it is executed without misstep. An algorithm is a foolproof recipe.

It is easy to see how these features made the computer possible. Every computer program is an algorithm, ultimately composed of simple steps that can be executed with stupendous reliability by one simple mechanism or another. Electronic circuits are the usual choice, but the power of computers owes nothing (save speed) to the causal peculiarities of electrons darting about on silicon chips. The very same algorithms can be performed even faster by devices shunting photons in glass fibers, or much, much slower by teams of people using paper and pencil.
What Darwin discovered was not really one algorithm, but rather a large class of related algorithms that he had no clear way to distinguish.











27. Automating the Elevator
Before leaving our interlude about computers, I want to introduce one more group of useful ideas, about source code, comments, and object code, which have an important application in our quest to understand how meaning could reside in brains. It is often wise to study a dead-simple example in some detail, to get a secure grip on our concepts before tackling a mind-buster. (In the field of artificial intelligence, these are nicely known as toy problems. First you solve the toy problem before tackling the gnarly great real-world problem.) So this is a story—made up, for simplicity's sake, but otherwise realistic—about how human elevator operators got replaced by computer chips.
In my youth there were elevator operators, people whose job was to go up and down in an elevator all day, stopping at the right floors to take on and let off passengers. In the early days they manipulated a curious handle that could be swung clockwise or counterclockwise to make the elevator go up or down, and they needed skill to stop the elevator at just the right height. People often had to step up or down an inch or two upon entering and leaving, and operators always warned people about this. They had lots of rules about what to say when, and which floors to go to first, and how to open the doors, and so forth. Their training consisted in memorizing the rules and then practicing: following the rules until it became second nature. The rules themselves had been hammered out over the years in a design process that made a host of slight revisions and improvements. Let's suppose that this process had more or less settled down, leaving an ideal rulebook as its product. It worked wonderfully. Anybody who followed the rules exactly was an excellent elevator operator.
Now imagine what happened when it became possible for a simple computer program to take over all the control tasks of the operator. (In fact, this happened gradually, with various automatic mechanical devices being introduced to take the more skilled tasks away from the operator, but we'll imagine that elevators went from human operators to completely computer-controlled systems in one leap.)
The elevator manufacturer, let's suppose, calls in a team of software engineers—programmers—and hands them the rulebook that the human elevator operators have been following: "This is a specification of the performance we want; make a computer program that follows all the rules in this book as well as the best human operators and we'll be satisfied." As the programmers go through the rulebook, they make a list of all the actions that have to be taken, and the conditions under which they are prescribed or forbidden. In the process they can clean up some of the untidiness in the rulebook. For instance, if they build in sensors to ensure that the elevator always stops at exactly the right level, they can eliminate the loop that requires the operator to say, "Please step up" or "Please step down," but they might leave intact a simple (recorded voice saying), "[N]th floor; watch your step." Then they write out a sketch of the program in what is often called pseudo-code, a sort of mongrel language that is halfway between everyday human language and the more demanding system of source code. A line of pseudo-code might look something like this: "if call-floor > currentfloor, then ASCEND until callfloor = currentfloor and STOP; OPENDOOR. WAIT. ..."
Once the plan is clear in pseudo-code, and seems to be what is wanted, the pseudo-code can be translated into source code, which is a much more rigorous and structured system of operations, including definitions of terms—variables, subroutines, and so forth. Human beings can still quite readily decipher source code—after all, they write it—and hence the rules and terms of the rulebook are still quite explicitly represented there, if you know how to look for them. This is made easier by two features: First, the names for the variables and operations are usually chosen to wear their intended meaning on their sleeves (callfloor, weightsum, TELLFLOOR, etc.). Second, as we saw in chapter 24, programmers can add comments to their source code, parenthetical explanations that tell other human readers of the source code what the programmer had in mind, and what the various parts are supposed to do. When you write a program, it is wise to add comments for yourself as you go, since you may easily forget what you thought the line of code was doing. When you go back to correct programming errors, these comments are very useful.
Source code has to be very carefully composed according to a strict syntax, with every element in the right place and all the punctuation in the right order, since it has to be fed to a compiler program, which takes the source code and translates it into the sequences of fundamental operations (in object code) that the actual machine (or virtual machine) can execute. A compiler can't be asked to guess what a programmer means by a line of source code; the source code must tell the compiler exactly what operations to perform—but the compiler program may have lots of different ways of performing those tasks and will be able to figure out an efficient way under the circumstances. Some compilers are better than others; if you feed the same program (written in source code) into two different compilers, the object code that one compiler produces may run significantly faster than the other object code, for instance. Imagine you've written a chess program, and you feed its source code to two different compilers. Then play the two compiled versions against each other on the same computer. Even though the two versions "think all the same thoughts in the same order" (they have to—they have exactly the same source code), one may always beat the other simply because it thinks those thoughts faster, using fewer basic machine cycles, and hence can look farther ahead during the time available!
Back to our elevator. Once the compiler has compiled the object code, it can be executed (it's an executable file, and usually has the suffix ".exe" in its name) by the (virtual) machine. It may need rounds of debugging (back to the source code, adjust it, then recompile, etc.), but eventually it's a "finished" product. It can be "burned" into ROM on a tiny chip that contains a Universal machine—and any number of virtual machines on top of it—and installed in the elevator. Installing it involves hooking up the inputs from transducers, such as the signals from the buttons, and from the scale in the floor that measures the combined weight of the passengers, and from other parts, and hooking up the outputs to effectors (running the motors that open and close the door, and raise and lower the car, and updating the displays or playing the recordings). Tada! A machine has replaced one actual human being—not a figurative homunculus. And the machine follows the same rules as the human operator. Does it really? Really? Ok, it doesn't. It sorta follows the same rules. This is a nice intermediate case between a human being who memorizes—and hence literally represents in her mind, and consults—the rules that dictate her behavior, and the planets, whose orbits are elegantly described by equations that the planets "obey." We human beings also often occupy an intermediate level, when we have internalized or routinized through practice a set of explicit rules that we may then discard or even forget ("i" before "e" except after "c" or when it sounds like "a" as in "neighbor" and "weigh"). And it is also possible to sorta follow rules that have still not been explicit in debugged form: the rules of English grammar, for instance, which continue to challenge linguists. Put in terms of this example, linguists today are still thrashing around trying to write the rulebook for speaking good English, while every ten-year-old native English-speaker has somehow installed and debugged a pretty good version of the object code for the EVM!*
Notice, before we leave this example, that the comments inserted in the source code to help the program designers keep track of the purposes of all the interlocking software parts have no counterpart in the design process that creates all the hardware, firmware, and software that characterize our brains. When natural selection installs various functional structures in our brains, this is like uncommented code—it's there for a reason, but the reason is not represented in the structure by any labeling or explanation, which the brain couldn't understand anyway. (This will be discussed in more detail in chapter 40.) There are also uncommented, unannounced reasons for the adjustments that occur during development and learning. We, like the linguists, are still struggling to reverse engineer all these "rules" and "procedures." This task is even harder than reverse engineering object code for the purpose of recovering source code (minus the comments), but it can be done in principle.











Summary
For hundreds of years we've had plenty of evidence that the brain is somehow the seat of the soul, but until the middle of the twentieth century it was all but unimaginable how this could possibly be true. The brain could be seen to be composed of lots of different, curiously shaped organs, in left and right pairs, given vivid names by early anatomists—the hippocampus (seahorse), the amygdala (almond), the wrinkly cortex (bark)—but what on earth did these parts do? They didn't digest food or purify the blood, did they? Was the brain just an organ for cooling the blood, a sort of radiator, as Aristotle thought? The parts were connected by nerve fibers, so perhaps they communicated with each other somehow. Descartes suggested that some nerve fibers were like bell-pull wires—when you tugged at one end, something happened at the other end, but what, exactly? A bell ringing wouldn't seem to get you any closer to understanding the brain as the mind, and nobody had any better ideas.*
Then along came Turing, building on a tradition that went back to Babbage and Pascal and Leibniz and others, with the suggestion that a brain could be composed of simple parts that were ultimately just mechanical (like a mousetrap, a ringing bell, a lock and key, a synapse), but if these parts were organized to interact together in clever ways, they might actually be able to do something intelligent on their own, without human intervention, and without any ghosts in the machine to guide them along. They might compute. Before Turing hit on his idea, "computer" was a job title; industry and government hired thousands of people to be computers, calculating tables for use in business, navigation, gunnery, and banking, for instance. Maybe, he surmised, the brain is itself like a (human) computer; maybe it processes information by slavishly following huge lists of very simple instructions (like Inc and Deb). Once the early theorists of cognitive science, Alan Turing and John von Neumann, the creator of cybernetics, Norbert Wiener, and the creator of information theory, Claude Shannon, as well as many others, articulated the idea, it could even seem obviously right—how could we not have seen it all along? Brains must take in information from the sense organs and process it, by somehow computing with it, until they have extracted the valuable ore of meaning, which, by further computing, they could then categorize and store for future use in guiding the behavior of the body, which provided the brain with its energy and protective home. The key innovation in Turing's vision was that it eliminated the awkward element that was all too evident in earlier imaginings of information-processing: junctures that required a clerk or translator or librarian, that required, in short, some kind of understander to appreciate the import of the signals. Turing saw that in one sense this was inescapable: intelligent processes would always require choosing one course or another on the basis of the discrimination of some difference in the signal. But he could reduce this understanding to the barest minimum: conditional branching, the mindless process by which a device decides (sorta decides) to go left rather than right because it senses (sorta senses) 1 rather than 0, A rather than B, x rather than y. That, and arithmetic, were all you needed. You could then build up devices of any level of discernment by piling virtual machines on top of virtual machines on top of virtual machines—to put it anachronistically. This vision has been tempting for more than fifty years, but the details, as we've already begun to see, are not falling into place easily. If brains are computers, they aren't much like the computers we use every day. We need to remind ourselves of the fundamental features of computers so that we can consider more biologically realistic alternatives to the businesslike architectures that are featured in our stereotypes.
The point of this interlude has been to clarify, and add just enough detail to, that vision so that you can use it as a thinking tool, an imagination prosthesis to help you understand the issues we are now going to address: first, a bit more on how meanings might reside in brains (and other machines), and then how such clever architectures could get designed by evolution without assistance from any Master Programmer or Intelligent Designer. You will then be in a good position to use the thinking tools you have acquired to think effectively about consciousness and free will, the two most treacherous topics I know.














V. MORE TOOLS ABOUT MEANING

 












28. A Thing About Redheads
We have already seen some problems with the otherwise tempting idea that all the information we carry around in our brains—our beliefs, perceptions, memories, policies, and so on—is broken into sentence-like pieces that are filed away and ready to be awakened. Brain-writing cannot just install a false belief, and people can share a belief (about that murder in London, for instance) without—apparently—having to share a formula in Brainish. But what else could store information in the brain? We human beings can learn things "piecemeal," so there must be some way of adding independent facts roughly one at a time.
Economists (and others) often like to point out that you cannot do just one thing. Doing "one thing" always has consequences. Similarly, the idea that you can learn just one thing is dubious. But to a first approximation you can. You earlier learned in these pages that there is a mammal called a pudu. Unless you paused to check on this, you probably can't affirm anything else about pudus, aside from the fact that they nurse their young, have backbones, and are relatively rare (since otherwise you surely would have heard of them). It's no mystery how you learned this: you read a sentence and believed it. But can animals or small children who do not yet have a language learn a single fact (like a fact expressed in a simple sentence) from some interesting bit of experience? The idea that knowledge or belief or learning has to be decomposable into sentence-sized gobbets is probably an illusion of anthropomorphism. We human beings encounter lots of declarative sentences, spoken and written, in the course of a day, and we thereby come to know all manner of facts (and believe a smattering of falsehoods). Some we store in libraries and archives, and some we store only in our brains. We seldom memorize the actual sentences, word for word, but when we salt away the gist of an encountered sentence, it must be—mustn't it?—a matter of storing a sentence-like something-or-other, a formula in Brainish. If this isn't so, what are the alternatives?
Suppose Pat says that Mike "has a thing about redheads." What Pat means, roughly, is that Mike has a stereotype of a redhead that is rather derogatory and influences Mike's expectations about, and interactions with, redheads. It's not just that Mike is prejudiced against redheads, but that he has a rather idiosyncratic and particular thing about redheads. And Pat might be right—more right than he knew! It could turn out that Mike does have a thing, not an idea or a thought or a belief or an image or any of the other traditional things that furnish our conscious experience, but a bit of sub-personal cognitive machinery in his brain, that is about redheads in the sense that it systematically comes into play whenever the topic is redheads or a redhead, and adjusts various parameters of Mike's cognitive machinery, making flattering hypotheses about redheads less likely to be entertained, or confirmed, making relatively aggressive behavior vis-à-vis redheads closer to implementation than otherwise it would be, and so on. Such a thing about redheads could be very complex in its operation or quite simple. The contribution of Mike's thing about redheads could be perfectly determinate and also undeniably meaningful, and yet no expression of this meaning as a sentence-believed-true could be more than a mnemonic label for its role. That is, it might be impossible to characterize the role of this thing as a belief, weirdly specific or weirdly vague, that all redheads are F ... (where we cash out "F" with whatever content seems to do the most justice to Mike's attitude). Mike certainly has an attitude about redheads, but it isn't any particular propositional attitude, to use the philosophical jargon. In other words, it defies categorization in the format

Mike believes that: for all x, if x is a redhead then ...,

no matter how deviously we pile on the exclusion clauses, qualifiers, probability operations, and other explicit adjusters of content. Philosophers (and other theorists) have often tried to "reduce" all cognitive states to information-bearing states—call them beliefs and desires—that can be expressed in such formulas, and while the tactic is a great way of providing a rough sketch of some person's psychology (it's the intentional stance, in effect), the idea of making it ultra-precise is hopeless. We can say, if we like, that various beliefs are implicit in the system. What this means is that the system is (currently) designed to operate "under the assumption" that the world's redheads have such-and-such features. When computer programmers put a comment on the source code, telling everyone that this system relies on a defined set of assumptions, they know enough not to devote labor trying to render the propositions precise, because they appreciate that these are mnemonic labels for us observers, not anything the computer has to sorta read and sorta understand, and even for us observers the comments are not specifications of content that can be used the way a chemist uses formulae to describe molecules. Giving an intentional-stance interpretation of some sub-personal brain structure is like putting a comment on a few lines of code; when done well, it provides an illuminating label, not a translation into English or other natural language of some formula in Brainish that the brain is using in its information-processing. By missing this trick, some philosophers have created fantasy worlds of internal sentence-manipulating machinery, where it is imagined to make all the difference whether the content of a particular brain event is expressed using a disjunctive predicate (I see a boy-OR-girl) or with a predicate lacking logical structure (I see a child), for instance.
What is the aim of this intuition pump? It is simply an attempt to suggest that the familiar refrain in support of the language of thought—"What else could it be?"—might have a good answer that would take the wind out of the sails of those who find it obvious. I wish I could provide an ambitious, alternative computational architecture that triumphantly displayed a working alternative, but I can't. Nobody can yet, but then almost nobody is trying, since the conviction is still widespread that the language of thought is "the only straw floating," as somebody put it many years ago. Bear in mind, however, that nobody in cognitive science has developed a working model of the language of thought either, or has even tried very hard. It's a very, very difficult problem.* I would like to encourage an open mind on this score.











29. The Wandering Two-Bitser, Twin Earth, and the Giant Robot
It may seem that by mentioning Mike's thing about redheads and source code in the same paragraph, I am encouraging readers to ignore a crack in the foundation, indeed a yawning chasm in the middle of my discussion of intentionality: the problem of original intentionality. John Searle (1980) coined the term, and the sharp distinction he draws between original and derived intentionality is on the face of it intuitively satisfying and even deeply compelling. The doctrine of original intentionality is the claim that whereas some of our artifacts may have a kind of intentionality derived from us—our books and movies, our computers and signposts, for instance—we have original (or intrinsic) intentionality, utterly underived. For example, the printed words on this page are about philosophy only because we readers and writers of English have thoughts and beliefs about philosophy that we contrive to convey using these trails of ink, which wouldn't be about anything at all without us word-users. Our thoughts and beliefs, in contrast, mean what they mean independently of any ulterior users; they exhibit original intentionality, and are the source ultimately of all the derived intentionality in many of our artifacts. These include not just words and sentences and books, but maps, movies, paintings, signs, symbols, diagrams and other technical representations, and, importantly, computers. Both a shopping list on a scrap of paper and a shopping list on your iPhone are about groceries only in virtue of the use you make of these symbol structures, the interpretation you bestow on them, in aid of your desire to buy groceries and your belief that the supermarket is the place to go, which are about groceries more directly and originally. Aristotle said that God is the Unmoved Mover, and this doctrine announces that we are the Unmeant Meaners.
We can all agree with Searle that nothing has intrinsic intentionality just in virtue of its physical shape or other such properties. If, by cosmic coincidence, the shape

FREE BEER

appeared in traces of different minerals in a cliff face on Mars, it would not ("in itself") be an announcement about an alcoholic beverage, no matter how eager earthling readers were to interpret it that way. The shape wouldn't be about anything, in spite of first appearances. If some complicated events and objects in the world are about other things, it must be that they derive their aboutness somehow from being in the service of representing, interpreting intentional systems whose states (beliefs, desires, brain states) already have intentionality somehow.
The question then is whether anything has original intentionality! And at first blush it might seem obvious that something has to have original intentionality, since derived intentionality has to be derived from something. And then the obvious candidates for things with original intentionality would be human minds. So not surprisingly, some very eminent philosophers who otherwise disagree sharply with Searle on many issues—for instance, Jerry Fodor and Saul Kripke—nevertheless agree with him about this. They, and the many who concur, think that human minds (or their mental states) have original intentionality and are radically unlike robot control systems in this regard.
They are all flat-out mistaken. Yes, mistaken. I mean it. Given the undeniable appeal of the distinction between original and derived intentionality, any attempt to discredit it runs the risk of being subverted by misplaced charity: "He can't seriously be saying that we're wrong about that! He must mean something else, some esoteric philosophical point he has unwisely dressed up in these preposterously provocative clothes!" Probably the best way to convince people that I really do mean it is to trot out as vivid and clear a case of derived intentionality as I can find, and then show that the beloved contrast between that case and human minds as cases of original intentionality evaporates on closer examination. It's a tall order, but here goes. I will need three linked intuition pumps to accomplish the feat.
1. The Wandering Two-Bitser. Consider a standard soft-drink vending machine, designed and built in the United States, and equipped with a transducer device for accepting and rejecting U.S. quarters. Let's call such a device a two-bitser.* Normally, when a quarter is inserted into a two-bitser, the two-bitser goes into a state, call it Q, which "means" (note the scare quotes; it sorta means) "I perceive/ accept a genuine U.S. quarter now." Such two-bitsers are quite clever and sophisticated, but hardly foolproof. They do "make mistakes." That is, unmetaphorically, sometimes they go into state Q when a slug or other foreign object is inserted into them, and sometimes they reject perfectly legal quarters—they fail to go into state Q when they are supposed to go into state Q. No doubt there are detectable patterns in these cases of "misperception." And no doubt at least some of the cases of "misidentification" could be predicted by someone with enough knowledge of the relevant laws of physics and the design parameters of the two-bitser's transducing machinery. It could follow quite directly from various applications of physical laws that not only legal U.S. quarters but also objects of some kind K trigger state Q, but objects of kind J (too heavy) or kind L (magnetic, unlike quarters) do not. Objects of kind K, then, would be good slugs—reliably "fooling" the transducer. (Look how many times I've used the sorta operator in this paragraph, so that I can use the intentional stance when giving you the specs of the two-bitser. Try to rewrite the paragraph without using the intentional stance and you will appreciate how efficient it is, and how well-nigh indispensable the sorta operator can be for such purposes.)
If objects of kind K became more common in the two-bitser's normal environment, we would expect the owners and designers of two-bitsers to develop more advanced and sensitive transducers that would reliably discriminate between genuine U.S. quarters and slugs of kind K. Of course, trickier counterfeits might then make their appearance, requiring further advances in the detecting transducers, and at some point such escalation of engineering would reach diminishing returns, for there is no such thing as a foolproof mechanism. In the meantime, the engineers and users are wise to make do with standard, rudimentary two-bitsers, since it is not cost-effective to protect oneself against negligible abuses.
The only thing that makes the device a quarter-detector rather than a slug-detector, or a quarter-or-slug-detector, is the shared intention of the device's designers, builders, owners, and users. Only in the environment or context of those users and their intentions can we single out some of the occasions of state Q as "veridical" and others as "mistaken." It is only relative to that context of intentions that we could justify calling the device a two-bitser in the first place.
I take it that so far I have Searle, Fodor, Kripke, and others nodding their heads in agreement: that's just how it is with such artifacts; this is a textbook case of derived intentionality, laid bare. And so it embarrasses no one to admit that a particular two-bitser, straight from the American factory and with "Model A Two-Bitser" stamped right on it, might be installed on a Panamanian soft-drink machine, where it proceeded to earn its keep as an accepter and rejecter of quarter-balboas, legal tender in Panama and easily distinguished (by human beings) from U.S. quarters by the design and writing stamped on them, but not by their weight, thickness, diameter, or material composition.
I'm not making this up. I have it on excellent authority—Albert Erler of the Flying Eagle Shoppe, Rare Coins—that standard vending machines cannot distinguish between U.S. quarters and Panamanian quarter-balboas minted between 1966 and 1984. Small wonder, since they were struck from U.S. quarter stock in American mints. And—to satisfy the curious, although it is strictly irrelevant to the example—the current (2011) exchange rate is one balboa equals $.98, so a quarter-balboa is, today, ever so slightly less valuable than a U.S. quarter.
Such a two-bitser, whisked off to Panama, would still normally go into a certain physical state—the state with the physical features by which we used to identify state Q—whenever a U.S. quarter or an object of kind K or a Panamanian quarter-balboa is inserted into it, but now a different set of such occasions count as the mistakes. In the new environment, U.S. quarters count as slugs, like objects of kind K, as inducers of error, misperception, misrepresentation. After all, back in the United States a Panamanian quarter-balboa is a kind of slug.
Once our two-bitser is resident in Panama, should we say that the state we used to call Q still occurs? The physical state in which the device "accepts" coins still occurs, but should we now say that we identify that physical state as "realizing" a new state, QB, instead? Well, there is considerable freedom about what we should say, since after all a two-bitser is just an artifact, and talking about its perceptions and misperceptions, its veridical and non-veridical states—its intentionality, in short—is "just metaphor." The two-bitser's internal state, call it what you like, doesn't really (originally) mean either "U.S. quarter here now" or "Panamanian quarter-balboa here now." It doesn't really mean anything—so Searle, Fodor, and Kripke (inter alia) would insist. Its internal state only sorta means something, but that will be enough to raise some problems that can also arise for us enjoyers of original intentionality. Let's look at the details.
The two-bitser was originally designed to be a detector of U.S. quarters. That was its "proper function" (Millikan, 1984), and, quite literally, its raison d'être, its reason for existing. No one would have bothered bringing it into existence had not this purpose occurred to them. And given that this historical fact about its origin licenses a certain way of speaking, such a device may be primarily or properly characterized as a two-bitser, a thing whose function is to detect quarters, so that relative to that function we can identify both its veridical states (when it gets things right) and its errors.
This would not prevent a two-bitser from being wrested from its home niche and pressed into service with a new purpose—whatever new purpose the laws of physics certify it would reliably serve—as a K-detector, a quarter-balboa-detector, a doorstop, a deadly weapon. In its new role there might be a brief period of confusion or indeterminacy. How long a track record must something accumulate before it is no longer a two-bitser, but rather a quarter-balboa-detector (a q-balber)—or a doorstop or a deadly weapon?* On its very debut as a q-balber, after ten years of faithful service as a two-bitser, is its state Q already a veridical detection of a quarter-balboa, or might there be a sort of force-of-habit error of nostalgia, a mistaken identification of a quarter-balboa as a U.S. quarter?
As described, the two-bitser differs strikingly from us in that it has no provision for memory of its past experiences—or even sorta memory of its past sorta experiences. But this could easily be provided, if it was thought to make a difference. To start with the simplest inroad into this topic, suppose the two-bitser (to refer to it by the name of its original baptism) is equipped with a counter, which after ten years of service stands at 1,435,792. Suppose it is not reset to zero during its flight to Panama, so that on its debut there the counter turns over to 1,435,793. Does this tip the support in favor of the claim that it has not yet switched to the task of correctly identifying quarter-balboas? (After all, it sorta misclassifies the event as yet another one of those q events—detections of U.S. quarters—it was designed to detect.) Would variations and complications on this theme drive your intuitions in different directions? (Turn all the knobs on the intuition pump to see what happens to your intuitions.)
We can assure ourselves that nothing intrinsic about the two-bitser considered narrowly all by itself and independently of its prior history would distinguish it from a genuine q-balber, made to order on commission from the Panamanian government. Still, given its ancestry, is there not a problem about its function, its purpose, its meaning, on this first occasion when it goes into the state we are tempted to call Q? Is this a case of going into state Q (meaning "U.S. quarter here now") or state QB (meaning "Panamanian quarter-balboa here now")? I would say (along with Millikan, 1984) that whether its Panamanian debut counts as going into state Q or state QB depends entirely on whether, in its new niche, it was selected for its capacity to detect quarter-balboas—literally selected, for example, by the holder of the Panamanian Pepsi-Cola franchise. If it was so selected, then even though its new proprietors might have forgotten to reset its counter, its first "perceptual" act would count as a correct identification by a q-balber, for that is what it would now be for. It would have acquired quarter-balboa-detection as its proper function. If, on the other hand, the two-bitser was sent to Panama by mistake, or if it arrived by sheer coincidence, its debut would mean nothing, though its utility might soon—even immediately—be recognized and esteemed by the relevant authorities (those who could press it into service in a new role), and thereupon its subsequent states would count as tokens of QB. But until it was selected for the job, no matter how good it was at detecting quarter-balboas, its acceptance state wouldn't mean (in its artifactual, derived, sorta sort of way) "Panamanian quarter-balboa here now." Presumably Searle and colleagues would be content to let me say this, since, after all, the two-bitser is just an artifact. It has no original intentionality, so there is no "deeper" fact of the matter we might try to uncover. They would say that this is just a pragmatic question of how best to talk, when talking metaphorically and anthropomorphically about the states of the device.
Now that we have a good firm grip on derived intentionality, let's see what is supposed to be different about underived, original intentionality, our intentionality. Here is where Searle, Fodor, Kripke, and many others disagree with not just me, but also philosophers Ruth Millikan, Paul and Patricia Churchland, cognitive scientists Douglas Hofstadter, Marvin Minsky, and just about everybody else in the field of artificial intelligence (AI). After more than thirty years of wrangling, feelings still run high. What, then, is at issue?
2. Twin Earth. Suppose some human being, Jones, looks out a window and thereupon thinks he sees a horse. There may or may not be a horse out there for him to see, but the fact that he is in the mental state of thinking he sees a horse is not at all a matter of interpretation (Searle and company say); it is a brute fact, an instance of original intentionality. Let's see what happens, then, when we construct a thought experiment exactly parallel to the Panama caper. (Hint: this will be a reductio ad absurdum argument.) Suppose then that the planet Twin Earth was just like Earth, save for having schmorses where we have horses.* Schmorses look like horses, and are well-nigh indistinguishable from horses by all but trained biologists equipped with DNA test kits, but schmorses aren't horses any more than dolphins are fish. Twin Earthians call a schmorse a "horse," or "cheval," or "Pferd," or some other name—remember, Twin Earth is exactly like Earth except for having schmorses.
Suppose we whisk Jones off to Twin Earth, land of the schmorses, without his realizing it. (We drug him for the trip and arrange for him to wake up in his counterpart bed on Twin Earth.) When we then confront him with a schmorse, he'll naturally say, and think, "Look! A horse." When he does this, either he really is, still, provoked into the state of believing he sees a horse (a mistaken, non-veridical belief) or he is provoked by that schmorse into believing, for the first time in his life (and veridically), that he is seeing a schmorse. Which is it, and how could we tell? Is his schmorse-provoked belief true or false? If his first thought was a mistaken belief that he'd just seen a horse, how long would it take him, living among schmorses and talking with Twin Earthians about schmorses, to adjust the meaning of the sound "horse" in his language (without realizing it!)? If he raised some children on Twin Earth, would their word "horse," learned at their father's knee, mean horse or schmorse? They've never seen a horse, remember. Only schmorses.
This is obviously a bizarre, extreme example, but it does raise a good issue: What determines what our terms mean, and how? Does history count for everything, and always, or can current use overcome or overrule history? In this case, Jones has no privileged insight to offer us; he has no idea he's no longer on Earth, so he would presumably insist that his word "horse" meant horse. His word, the word on his lips, derives its meaning from his perceptual belief, and he knows what he believes: he's looking at a horse. That's why he said, "Look! A horse." ("What could be more obvious?" he might add.) But then suppose we told him about his journey, and the subtle but important difference between horses and schmorses. What would he say then, or what should he say then, and, more fundamentally, is there a good reason to think that whatever he says is decisive? Isn't he just doing what the rest of us would be doing, theorizing about a case in which neither he nor we have privileged information? Suppose he says his word "horse" now means schmorse—when he sees a schmorse and calls it a horse, he's not making a mistake. When in Rome, and all that.
Can he just declare what his words mean, and have that settle the issue? What if he later forgot what he had declared? We sometimes do things like this: "Henceforth, by 'jubjub' I will mean table salt! Please pass the jubjub!" In the context of scientific theorizing, such stipulative definition is an important and well-established practice, but it relies on a cooperative community of communicators. If Jones has original intentionality, presumably, then there should be a fact of the matter about the meaning of his terms under any circumstances, but it appears that Jones himself isn't able to consult his own original intentionality any better than we outsiders can. Suppose, for instance, we lie to Jones about our having taken him to Twin Earth, and he believes our lies (people in philosophers' intuition pumps can be mighty gullible). If he then tells us his word "horse" now means schmorse, will he be right? Perhaps what he ought to say is that he has no idea what his word "horse" means now. But then, since for all we know we too may have been whisked off to Twin Earth, shouldn't we all admit that we have no idea what we mean by "horse" either?
Those of us who are dubious about the whole idea of original intentionality have ready answers to all these questions, but it takes a third thought experiment to make it clear enough to have a fighting chance against traditional intuition. (So caveat lector! I'm going to try to cajole you into abandoning a precious hunch.)
3. The Giant Robot. Suppose you decided that you wanted to experience life in the twenty-fifth century, and suppose that the only known way of keeping your body alive that long required it to be placed in a hibernation device of sorts, where it would rest, slowed down and comatose, for as long as you liked. You could arrange to climb into the support capsule, be put to sleep, and then be automatically awakened and released in 2401.
Designing the capsule itself is not your only engineering problem, for the capsule must be protected and supplied with the requisite energy (for refrigeration or whatever) for almost four hundred years. You will not be able to count on your children and grandchildren for this stewardship, for they will be long dead before the year 2401, and you cannot presume that your more distant descendants, if any, will take a lively interest in your well-being. So you must design a supersystem to protect your capsule and to provide the energy it needs for four hundred years.
There are two basic strategies to consider. On one, you should find the ideal location, as best you can foresee, for a fixed installation that will be well supplied with water, sunlight, and whatever else your capsule (and the supersystem itself) will need for the duration. The main drawback to such an installation, or "plant," is that it cannot be moved if harm comes its way—if, say, someone decides to build a freeway right where it is located. The second alternative is much more sophisticated, but it avoids this drawback: design a mobile facility for your capsule along with the requisite sensors and early-warning devices so that it can move out of harm's way and seek out new energy sources as it needs them. In short, build a giant robot and install the capsule (with you inside) in it.
These two basic strategies are obviously copied from nature: they correspond roughly to the division between plants and animals. A third option from nature, a hardened spore or seed that can survive indefinitely inside its armor, is not available to you, since your life-support system has high energy demands, and spores are as inert and low energy as nature can make them. Since the animal strategy fits our purposes, we shall suppose that you decide to build a robot to house your capsule. You should try to design it so that above all else it "chooses" actions that will further your best interests. Bad moves and wrong turns would tend to incapacitate it for the role of protecting you until 2401—which is its sole raison d'être. This is clearly a profoundly difficult engineering problem, calling for the highest level of expertise in designing a "vision" system to guide its locomotion, and other "sensory" systems. And since you will be comatose throughout and thus cannot guide and plan its strategies, you will have to design it to generate its own plans in response to changing circumstances. It must "know" how to "seek out" and "recognize" and then exploit energy sources, how to move to safer territory, how to "anticipate" and then "avoid" dangers. With so much to be done, and done fast, you had best rely on economies whenever you can: give your robot no more discriminatory prowess than it will probably need to distinguish what needs distinguishing in the world.
Note once again that I've put all the intentional or "mentalistic" terms, such as "sensory" and "seek out" and "anticipate" in scare quotes, to indicate that this is a specific kind of sorta intentionality, derived intentionality, intentionality that is entirely dependent on your human purposes. This is your artifact, and whatever intentionality it has, it owes to you, its author. If I had left off the scare quotes, I could be accused of sneaking in some ideology, relying on the fact that engineers and others routinely use such language—without scare quotes—to talk about the specs of an information-handling device (like the elevator-controller). I am deliberately not making that move; I am granting, for the sake of argument, that any use of intentional language to describe or prescribe artifact talents is merely metaphorical. Note as well that, like the two-bitser, the robot's machinery is subject to economic considerations: it needs to "detect" or "discriminate" many things, but its "discriminators" will not be foolproof. It can make mistakes, but what counts as a mistake depends ultimately on its author's needs and desires. If the author wanted to make a droll robotic clown that apparently blundered about the world "misidentifying" things, then some of these "mistakes" would be cases of getting it right, triumphs of clown-control.
Back to the intuition pump: Your task will be made more difficult by the fact that you cannot count on your robot being the only such robot around with such a mission. If your whim catches on, your robot may find itself competing with others (and with your human descendants) for limited supplies of energy, fresh water, lubricants, and the like. (See chapter 67 for a brief discussion of the importance of the presence of other agents.) It would no doubt be wise to design your robot with enough sophistication in its control system to permit it to calculate the benefits and risks of cooperating with other robots, or of forming alliances for mutual benefit, but again, any such calculation must be a "quick and dirty" approximation, arbitrarily truncated by time pressure.
The result of this design project would be a robot capable of exhibiting a kind of self-control, since you must cede fine-grained, real-time control to your artifact once you put yourself to sleep. As such, it will be capable of deriving its own subsidiary goals from its assessment of its current state and the import of that state for its ultimate goal (which is, still, to preserve you). These secondary goals may take it far afield on century-long projects, some of which may be ill-advised, in spite of your best efforts during the design phase. Your robot may embark on actions antithetical to your purposes, even suicidal, having been "convinced" by another robot, perhaps, to subordinate its own life mission to some other.
Note too that at this point, even though all the robot's intentional states and acts are derived from your purposes, they are beginning to become detached somewhat from your purposes. Since you designed the robot to "think for itself" to some degree, its "thinking" may escape your anticipated boundaries. For a real-world, nonfictional example of such an artifact, consider a chess-playing computer that can beat its creator at chess. It is true that the only reason we can say that the computer is currently "investigating" queen-side rook options and "deciding" not to castle is that it is an artifact designed by a human artificer to do just that sort of thing. But it is also true that given the artificer's goal of making a good chess-playing computer, many of the artificer's decisions concerning what the computer's states are (derivedly) about are forced on the artificer: given the fact that a chess player needs accurate information about the rules and the state of the game, there must be states that concern each bishop and each pawn, and states that involve an evaluation of the game if the computer's queen captured the opponent's knight on the current move, and so forth. And no amount of authorial fiat could make a state of the computer be (derivedly) about the number of pawns remaining on the board if that state wasn't appropriately linked to locating each and every pawn on the board. Once a designer's largest goal is fixed (make a chess player, make a giant robot, make a hurricane simulator), cruel nature takes over and dictates what will work and what won't, and hence which states of which system count as mistaken or inaccurate. Poets may be able to get away with a declaration that a poem that seems to be about horses is actually about professors—William Blake tells us that the "tygers of wrath are wiser than the horses of instruction"—but computer engineers cannot similarly impose their intentions on their creations.
Let's take stock. The giant robot's simulacrum of mental states would be just that—not real deciding and seeing and wondering and planning, but only as if deciding and wondering and planning. We should pause to make sure we understand what this claim encompasses. The imagined robot is certainly much more sophisticated than the humble two-bitser; we have granted it the power to "plan" new courses of action, to "learn" from past errors, to "form allegiances," and to "communicate" with its competitors. Moreover, to do all this "planning" and "learning" and "communicating," it will have to be provided with control structures that are rich in self-reflective, or self-monitoring, power. In other words, it will have a human-like access to its own internal states and be capable of "reporting," "avowing," and "commenting upon" what it "takes" to be the import of its own internal states (when it "decides" it doesn't "want" to "lie" to us). It will have "opinions" about what these states mean, and we should no doubt take those "opinions" seriously as very good evidence—probably the best evidence we can easily get—on what those states "mean" metaphorically speaking (remember: it is only an artifact and has no original intentionality; we're considering its derived intentionality, which will be no more obvious to observers than the intentionality of us "real" agents). The two-bitser was given no such capacity to sway our interpretive judgments by issuing apparently confident "avowals" to the effect that it had no idea it was now in Panama or that it was surprised to learn about quarter-balboas.
There are several ways one might respond to this intuition pump, and we will examine them shortly, but first I want to draw out the most striking implication of standing firm on our initial presumption: no artifact, no matter how much AI wizardry is designed into it, has anything but derived intentionality. If we cling to this view, the conclusion forced on us is that our own intentionality is exactly like that of the robot, for the science-fiction tale I have told is not new; it is a variation on Richard Dawkins's (1976) vision of us and all other biological species as "survival machines" designed to prolong the futures of our selfish genes. We are artifacts, designed over the eons as survival machines for genes that cannot act swiftly and informedly in their own interests. Our interests as we conceive of them and the "interests" of our genes may well diverge—even though were it not for our genes' "interests," we would not exist. Their preservation is our original raison d 'être, even if we can learn to ignore that goal and devise our own summum bonum, thanks to the intelligence, the capacity to learn, that our genes have installed in us. So our intentionality is derived from the intentionality of our "selfish" genes. They are the Unmeant Meaners, not us!
Of course our genes' intentionality is not intrinsic in any sense; the "meaning" of any gene is dependent on the whole evolved "alphabet" system of ACGT codons, protein synthesis, and development, for a start. But it is original in the sense that it is the first of many representational systems that have evolved. All the later systems have agents—intentional systems—whose representations get their intentionality from the goals they further (just like the intentionality of the giant robot).*
This vision of things, while it provides a satisfying answer to the question of whence came our own intentionality, does seem to leave us with an embarrassment, for it derives our own intentionality from entities—genes—whose intentionality is a paradigm case of mere as if intentionality. How could the literal depend on the metaphorical? Moreover, there is surely this much disanalogy between my science-fiction tale and Dawkins's story: in my tale I supposed that there was conscious, deliberate, foresighted engineering involved in the creation of the robot, whereas even if we are, as Dawkins says, the product of a design process in which our genes are the primary beneficiaries, that is a design process that utterly lacks a conscious, deliberate, foresighted engineer. But this is not a good objection, as we shall see.
The chief beauty of the theory of natural selection is that it shows us how to eliminate the intelligent artificer from our account of origins. And yet the process of natural selection is responsible for designs of great cunning. It is not the genes that are the designers; genes themselves could not be more stupid; they cannot reason or represent or figure out anything. They do not do the designing themselves; they are merely the beneficiaries of the design process—the clients, you might say. (In our story, they could be put in parallel with a very stupid, very rich client who hires the best engineers to build him a survival machine. If it weren't for him, the engineers would not have a well-funded assignment, and it is his survival that pays for the artifact they create.) Who or what does the designing? Mother Nature, of course, or more literally, the long, slow process of evolution by natural selection.
To me, the most fascinating property of the process of evolution is its uncanny capacity to mirror some properties of the human mind (the Intelligent Designer) while being bereft of others. There will be much more on this topic in part VI, on thinking about evolution, but in the meantime, I want to make clear the very strong link I am proposing between any acceptable theory of meaning and the theory of evolution. While it can never be stressed enough that natural selection operates with no foresight and no purpose, we should also not lose sight of the fact that the process of natural selection has proved itself to be exquisitely sensitive to rationales, making myriads of discriminating "choices" and "recognizing" and "appreciating" many subtle relationships. To put it even more provocatively, when natural selection selects, it can "choose" a particular design for one reason rather than another, without ever consciously—or unconsciously!—"representing" either the choice or the reasons. Hearts were "chosen" for their excellence as blood-circulating pumps, not for the captivating rhythm of their beating, though that might have been the reason some other thing was "chosen" by natural selection.
Just as the Panamanian Pepsi-Cola franchise-holder can select the two-bitser for its talent at recognizing quarter-balboas, can adopt it as a quarter-balboa-detector, so evolution can select an organ for its capacity to oxygenate blood, can establish it as a lung. And it is only relative to just such design "choices" or evolution-"endorsed" purposes—raisons d'être—that we can identify behaviors, actions, perceptions, beliefs, or any of the other categories of folk psychology.*
The idea that we are artifacts designed by natural selection is both compelling and familiar; some would go so far as to say that it is quite beyond serious controversy.† Why, then, is it resisted not just by creationists and "Intelligent Design" ideologues, but also (somewhat subliminally) by the likes of Searle, Fodor, and company? My hunch is that it has two rather unobvious implications that some find terribly unpalatable. First, if we are "just" artifacts, then what our innermost thoughts mean—and whether they mean anything at all—is something about which we, the very thinkers of those thoughts, have no special authority. The two-bitser turns into a q-balber without ever changing its inner nature; the state that used to mean one thing now means another. The same thing could in principle happen to us, if we are just artifacts, if our own intentionality is thus not original but derived. (Jones, for instance, is not authoritative about whether he is thinking about horses or schmorses.) Second, if we are such artifacts, not only have we no guaranteed privileged access to deeper facts that fix the meanings of our thoughts, but there are no such deeper facts. Sometimes functional interpretation is obvious (the heart is obviously a pump; the eye is obviously for seeing), but when it is not, when we go to read Mother Nature's mind, there is no text to be interpreted. When "the fact of the matter" about proper function is controversial—when more than one interpretation is well supported—there simply is no fact of the matter.











30. Radical Translation and a Quinian Crossword Puzzle
The claim that when two equally good functional interpretations clash there are no deeper facts that could settle the matter has been most memorably and ably defended by philosopher W. V. O. Quine (1960), in his principle of the indeterminacy of radical translation, which he defended with the help of a famous intuition pump. Imagine discovering an isolated island in the middle of the Pacific Ocean, let's say, inhabited by people from who knows where, speaking a language that nobody else speaks. With no bilingual interpreters available to help, the anthropologists or linguists must figure out this language from observation and trial-and-error interaction with the natives, a task Quine called "radical translation." In principle, Quine argued, two such investigators, given the task of deriving a translation manual for this exotic tongue, could arrive at substantially different but equally good translation manuals, which assigned different meanings to utterances made by the natives, and where there could be no fact of the matter about which translation was correct! To many philosophers, this idea has seemed too radical to take seriously—and so they simply ignore it and persist in their traditional ways. Here is a thinking tool designed to make the idea seem at least plausible, if not downright obvious. Two things need to be explained: (1) how Quine's claim could be true ("in principle"), and (2) how it could nevertheless be all but impossible to give an actual instance of it.
I regularly give this crossword puzzle to my students and ask them to solve it. In a few minutes, most of them announce success. Try it for yourself before reading on.



Across
1. Dirty stuff
5. A great human need
6. To make smooth
7. Movie actor
Down
1. Vehicle dependent on H2O
2 We usually want this
3. Just above
4. U.S. state (abbrev.)
Did you solve it? If so, which solution did you discover? The puzzle has two solutions, about equally good (they are hidden later in the book, to give you a chance to find both before they are revealed). It took me hours to devise it, small as it is, because the multiple constraints that must be satisfied interact to limit the possibilities drastically. If you are skeptical, try to compose a larger, better one! (And please, send it to me if you succeed. I will use it in place of my own.)
Anybody who asks, "What word is 1 Down really?" stands convicted of a certain sort of misplaced realism. There is no fact of the matter. I deliberately set it up so there wouldn't be a fact of the matter. For instance, I didn't compose the puzzle with one set of answers (the historically first or original answers and "hence" the real answers) and then cast about for another set. I worked out the two solutions together, drawing from a list of pairs of four-letter words with similar meanings that I had collected.
It is possible to construct such a puzzle because there are norms for definitions that admit some flexibility. Both solutions include words that just barely fit their definitions, but the conspiracy of the surrounding fit (the holism, in the jargon of philosophers) pulls the words into two quite stable configurations. What odds would you take that there isn't going to be a third solution that competes evenly with either of these two? In general, the cryptographer's maxim holds: if you can find one solution to a puzzle, you've found the only solution to the puzzle. Only special circumstances permit as many as two solutions, but such cases show us that the existence of only one single solution to a question like this is not a metaphysical necessity, but just the immensely probable result of very powerful constraints.
People are much more complicated than either crossword puzzles or computers. They have convoluted brains full of neuromodulators, and these brains are attached to bodies that are deeply entwined with the world, and they have both an evolutionary and a personal history that has embedded them in the world with much more interpenetration than the embedding of a crossword puzzle in a linguistic community. So Ruth Millikan (for instance) is right that given the nature of design constraints, it is unlikely in the extreme that there could be different ways of skinning the cat that left two radically different, globally indeterminate, tied-for-first-place interpretations. Indeterminacy of radical translation is truly negligible in practice. Still, the principle survives. The reason we don't have indeterminacy of radical translation is not because, as a matter of metaphysical fact, there are "real meanings" in there, in the head (what Quine called the "museum myth" of meaning, his chief target). The reason we don't have indeterminacy in the actual world is that with so many independent constraints to satisfy, the cryptographer's maxim assures us that it is a vanishingly small worry. When indeterminacy threatens in the real world, it is always just more "behavioral" or "dispositional" facts—more of the same—that save the day for a determinate reading, not some mysterious "causal power" or "intrinsic semanticity." Intentional interpretation almost always arrives in the limit at a single interpretation, but in the imaginable catastrophic case in which dual interpretations survived all tests, there would be no deeper facts to settle which was "right." Facts do settle interpretations, but it is always "shallow" facts that do the job.











31. Semantic Engines and Syntactic Engines
How can meaning make a difference? It doesn't seem to be the kind of physical property, like temperature or mass or chemical composition, that could cause anything to happen. What brains are for is extracting meaning from the flux of energy impinging on their sense organs, in order to improve the prospects of the bodies that house them and provide their energy. The job of a brain is to "produce future" in the form of anticipations about the things in the world that matter to guide the body in appropriate ways. Brains are energetically very expensive organs, and if they can't do this important job well, they aren't earning their keep. Brains, in other words, are supposed to be semantic engines. What brains are made of is kazillions of molecular pieces that interact according to the strict laws of chemistry and physics, responding to shapes and forces; brains, in other words, are in fact only syntactic engines.
Imagine going to the engineers and asking them to build you a genuine-dollar-bill-discriminator, or, what amounts to the same thing, a counterfeit-detector: its specs are that it should put all the genuine dollars in one pile and all the counterfeits in another. Not possible, say the engineers; whatever we build can respond only to "syntactic" properties: physical details—the thickness and chemical composition of the paper, the shapes and colors of the ink patterns, the presence or absence to other hard-to-fake physical properties. What they can build, they say, is a pretty good but not foolproof counterfeit-detector based on such "syntactic" properties. It will be expensive, but indirectly and imperfectly it will test for counterfeit-hood well enough to earn its keep.
Any configuration of brain parts is subject to the same limitations. It will be caused by physicochemical forces to do whatever it does regardless of what the input means (or only sorta means). Don't make the mistake of imagining that brains, being alive, or made of proteins instead of silicon and metal, can detect meanings directly, thanks to the wonder tissue in them. Physics will always trump meaning. A genuine semantic engine, responding directly to meanings, is like a perpetual motion machine—physically impossible. So how can brains accomplish their appointed task? By being syntactic engines that track or mimic the competence of the impossible semantic engine.* But is this even possible? Some philosophers have argued that if the micro-causal story of how a brain works is complete (without any mysterious gaps), there is simply no room for meaning to make a difference. In chapter 33, we will encounter an intuition pump that demonstrates that this is false, by showing how semantic properties—such as truth and meaning and reference—play an ineliminable role in some straightforward causal processes. But before turning to that somewhat complex intuition pump, I want to examine a simpler model, which will allow us to air some suspicions about philosophers' intuition pumps in general, and, if all goes well, allay some misgivings that may be interfering with comprehension.











32. Swampman Meets a Cow-Shark
Intuition pumps are supposed to work cleanly and efficiently, pumping the sought-for intuition and then going back into storage. But a common fate of intuition pumps is to inspire a frenzy of rebuttal, counter-rebuttal, adjustment, and extension. Donald Davidson, one of America's best twentieth-century philosophers, once told me that he regretted inventing this intuition pump, since it instigated such an excessive and only intermittently illuminating wrangle. Here is Swampman, one of philosophy's favorites—if not Davidson's (1987):

Suppose lightning strikes a dead tree in a swamp; I am standing nearby. My body is reduced to its elements, while entirely by coincidence (and out of different molecules) the tree is turned into my physical replica. My replica, The Swampman, moves exactly as I did; according to its nature it departs the swamp, encounters and seems to recognize my friends, and appears to return their greetings in English. It moves into my house and seems to write articles on radical interpretation. No one can tell the difference.
But there is a difference. My replica can't recognize my friends; it can't recognize anything, since it never cognized anything in the first place. It can't know my friends' names (though of course it seems to); it can't remember my house. It can't mean what I do by the word "house," for example, since the sound "house" it makes was not learned in a context that would give it the right meaning—or any meaning at all. Indeed, I don't see how my replica can be said to mean anything by the sounds it makes, nor to have any thoughts. [pp. 443-444]

It cannot have escaped philosophers' attention that our fellow academics in other fields—especially in the sciences—often have difficulty suppressing their incredulous amusement when such topics as Twin Earth and Swampman are posed for apparently serious consideration. Are the scientists just being philistines, betraying their tin ears for the subtleties of philosophical investigation, or have the philosophers lost their grip on reality? I'd rather (hint) not say.
These bizarre examples attempt to prove one conceptual point or another by deliberately reducing all but one underappreciated feature of some phenomenon to zero, so that what really counts can shine through. The Twin Earth example sets internal similarity to a maximum (you are whisked off to Twin Earth without being given a chance to register this huge shift) so that external context can be demonstrated to be responsible for whatever our intuitions tell us. The Swampman intuition pump keeps both future dispositions and internal states constant and reduces "history" to zero. Thus these thought experiments mimic scientific experiments in their design, attempting to isolate a crucial interaction between variables by holding other variables constant. A problem with such experiments is that the dependent variable is intuition—they are intuition pumps—and the contribution of imagination in the generation of intuitions is harder to control than philosophers have acknowledged. (Several of the boom crutches we will dismantle actually suppress the imagination of readers, distorting their intuitions and thus invalidating the "results" of the thought experiment.)
But there is also a deeper problem with such experiments. It is child's play to dream up examples to "prove" further conceptual points. Suppose a cow gave birth to something that was atom-for-atom indiscernible from a shark. Would it be a shark? If you posed that question to a biologist, the charitable reaction would be that you were making a labored attempt at a joke. Or suppose an evil demon could make water turn solid at room temperature by smiling at it; would the demon-water be ice? This is too silly a hypothesis to deserve a response. Smiling demons, cow-sharks, zombies, and Swampmen are all, some philosophers think, logically possible, even if they are not nomologically (causally) possible, and these philosophers think this is important. I do not. Presumably the motivation for casting the net of counterfactuality so wide is so that the answer we retrieve will tell us about the essence of the topic in question. But who believes in real essences of this sort nowadays? Not I.
Consider a parallel question we might ask about magnets, after we noticed that there were competing candidates for the "truth-maker"—the defining property or essence—for magnets: (a) all magnets are things that attract iron, and (b) all magnets are things that have a certain internal structure (call it M-alignment). Was the old, behavioral criterion (a) eventually superseded by the new, internal structure criterion (b), or did the latter merely reductively explain the former? To find out, we must imagine posing scientists the following Swampman-style questions. Suppose you discovered a thing that attracted iron but was not M-aligned (like standard magnets). Would you call it a magnet? Or: Suppose you discovered a thing that was M-aligned but did not attract iron. Would you call it a magnet? The physicists would reply that if they were confronted with either of these imaginary objects, they would have much more important things to worry about than what to call them. Their whole scientific picture depends on there being a deep regularity between the alignment of atomic dipoles in magnetic domains and iron attraction, and the "fact" that it is logically possible to break this regularity is of vanishing interest to them. What is of interest, however, is the real covariance of "structural" and "behavioral" factors. If they find violations of the regularities, they adjust their science accordingly, letting the terms fall where they may.
Does Swampman have thoughts and speak English, or not? Is a cow-shark a shark? It swims like a shark, and mates successfully with other sharks. Oh, but didn't I tell you? It is atom-for-atom indiscernible from a shark, except that it has cow DNA in all its cells. Impossible? Not logically impossible (say the philosophers). Just so obviously impossible as to render further discussion unenlightening. It is just as clearly physically impossible for the "traces" of, say, Davidson's memories to appear in the structure of Swampman's brain as it is for a shark to form itself of cells containing cow DNA. Swampman may not be logically impossible, if only because cosmic coincidences of the sort imagined to produce things like Swampman are by definition not logically impossible, but they never happen, so who cares what we would say if they did?
"I do," says the philosopher who is on the lookout for rhetorical questions. "I think it is important always to define your terms with utmost rigor, covering all logically possible eventualities. That's the way to get to the truth." But is it? In the real world, past history and future function are bound together by multi-stranded cables of evolution, development, and learning. It is because Davidson's body had taken the particular trajectory that it did for years on end that Davidson had all those memories and beliefs and projects, and there is no real substitute for these natural accumulation processes. Settling the verdict on imaginary cases that violate these conditions serves no purpose that I can see. In fact, such labored examples strike me as manufactured opportunities to impose an imaginary dichotomy so that you can rather with impunity. "No," says the philosopher. "It's not a false dichotomy! For the sake of argument we're suspending the laws of physics. Didn't Galileo do the same when he banished friction from his thought experiment?" Yes, but a general rule of thumb emerges from the comparison: the utility of a thought experiment is inversely proportional to the size of its departures from reality.
Twin Earth is physically impossible, but not as impossible as Swampman! (Don't think that the many-worlds interpretation of quantum mechanics, which is gaining favor in some quarters, shows that Twin Earth is physically possible after all; even if there are an infinity of universes "out there" including (infinitely?) many that have planets that are almost like Earth, we can't send an earthling to any of them for a visit.) The two-bitser's trip to Panama, in contrast, is not just possible; instances of it may well have happened. We don't have to suspend any laws of nature to imagine it in whatever detail we like.











33. Two Black Boxes



Once upon a time, there were two large black boxes, A and B, connected by a long insulated copper wire. On box A there were two buttons, marked α and β, and on box B there were three lights, red, green, and amber. Scientists studying the behavior of the boxes observed that whenever they pushed the α button on box A, the red light flashed briefly on box B, and whenever they pushed the β button on box A, the green light flashed briefly. The amber light never seemed to flash. They performed a few billion trials, under a very wide variety of conditions, and found no exceptions. They concluded that there was a causal regularity, which they conveniently summarized thus:

all α's cause reds
all β's cause greens

The causation passed through the copper wire somehow, they determined, since severing it turned off all effects in box B, and shielding the two boxes from each other without severing the wire never disrupted the regularity. So naturally they were curious to know just how the causal regularity they had discovered was passed through the wire. Perhaps, they thought, pressing button α caused a low-voltage pulse to be emitted down the wire, triggering the red light, and pressing button β caused a high-voltage pulse, which triggered the green. Or perhaps pressing α caused a single pulse, which triggered the red light, and pressing β caused a double pulse. Clearly, there had to be something that always happened in the wire when the scientists pressed button α, and something different that always happened in the wire when they pressed β. Discovering just what this was would explain the causal regularity they had discovered.
A wiretap of sorts on the wire soon revealed that things were more complicated. Whenever either button was pushed on box A, a long stream of pulses and gaps—ons and offs, or bits (10,000 bits, to be exact)—was sent swiftly down the wire to box B. But the pattern of bits was different each time!
Clearly there had to be a feature or property of the strings of bits that triggered the red light in one case and the green light in the other. What could it be? The scientists decided to open up box B and see what happened to the strings of bits when they arrived. Inside B the scientists found an ordinary digital, serial supercomputer, with a large memory, containing a huge program and a huge database, written, of course, in more bit strings. And when they traced the effects of the incoming bit strings on this computer program, they found nothing out of the ordinary: the input string would always make its way into the CPU (central processing unit) in normal fashion, where it would provoke a few billion operations to be performed in a few seconds, ending, always, with either of two output signals, a 1 (which turned on the red light) or a 0 (which turned on the green light). In every case, they found, they could explain each step of the causation at the microscopic level without any difficulty or controversy. They didn't suspect any occult causes to be operating, and, for instance, when they arranged to input the same sequence of 10,000 bits again and again, the program in box B always yielded the same output, red or green.
But this was mildly puzzling, because although box B always gave the same output, it didn't do so by going through the same intermediate steps. In fact, it almost always passed through different physical states before yielding the same output. This in itself was no mystery, because the program kept a copy of each input it received, and so, when the same input arrived a second or third or thousandth time, the state of the memory of the computer was slightly different each time. But the output was always the same; if the light turned red the first time a particular string was input, it always turned red for the same string thereafter, and the same regularity held for green strings (as the scientists began to call them). All strings, they were tempted to hypothesize, are either red strings (cause the red light to flash) or green strings (cause the green light to flash). But of course they didn't test all possible strings—only strings that had been emitted by box A.
The scientists decided to test their hypothesis by disconnecting A from B temporarily and inserting variations on A's output strings to B. To their puzzlement and dismay, they discovered that almost always, when they tampered with a string from A, the amber light flashed! It was almost as if box B had detected their intervention. There was no doubt, however, that box B would readily accept man-made versions of red strings by flashing red, and man-made versions of green strings by flashing green. It was only when a bit—or more than one bit—was changed in a red or a green string that the amber light usually—almost always—came on. "You've killed it!" somebody once blurted out, after watching a "tampered" red string turn into an amber string, and this led to a flurry of speculation that red and green strings were in some sense alive—perhaps male and female—while amber strings were dead strings. As appealing as this hypothesis was, it did not turn out to lead anywhere, although a flurry of experimentation with a few billion random variations on strings 10,000 bits long did strongly suggest to the scientists that there were really three varieties of strings—red strings, green strings, and amber strings—and amber strings outnumbered the red and green strings by many, many orders of magnitude (see chapter 35 for more on this). Almost all strings were amber strings. That made the red/green regularity they had discovered all the more exciting and puzzling.
What was it about the red strings that turned on the red light and the green strings that turned on the green light? Of course in each particular case, there was no mystery at all. The scientists could trace the causation of each particular string through the supercomputer in B and see that, with gratifying determinism, it produced its red or green or amber light, as the case might be. What they couldn't find, however, was a way of predicting which of the three effects a new string would have, just by examining it (without "hand-simulating" its effect on box B). They knew from their empirical data that the odds were very high that any new string considered would be amber unless it was a string known to have been emitted by box A, in which case the odds were better than a billion to one that it would be either red or green, but no one could tell which, without running it through box B to see how the program settled out.
Perhaps the solution to the mystery lay in box A. They opened it up and found another supercomputer, of a different make and model and running a different gigantic program, but also just a garden-variety digital computer. They soon determined that there was an internal "clock" ticking away millions of times a second, and whenever they pushed either button, the first thing the computer did was take the "time" from the clock (e.g., 101101010101010111) and break it up into strings, which it then used to determine which subroutines to call in which order, and which part of its memory to access first in the course of its preparation of a bit string to send down the wire.
The scientists were able to figure out that it was this clock-consulting (which was as good as random) that virtually guaranteed that the same bit string was never sent out twice. But in spite of this randomness, or pseudo-randomness, it remained true that whenever they pushed button α, the bit string the computer concocted turned out to be red, and whenever they pushed button β, the bit string eventually sent turned out to be green. Actually, the scientists did find a few anomalous cases: in roughly one in a billion trials, pushing the α button caused a green string to be emitted, or pushing the β button caused a red string to be emitted. This tiny blemish in perfection only whetted the scientists' appetite for an explanation of the regularity.
And then one day, along came the two AI hackers who had built the boxes, and they explained it all. (Do not read on if you want to figure out the mystery for yourself.) Al, who had built box A, had been working for years on an "expert system"—a database containing "true propositions" about everything under the sun, and an inference engine to deduce further implications from the axioms that composed the database. There were Major League Baseball statistics, meteorological records, biological taxonomies, histories of the world's nations, and hosts of trivia in the database. Bo, the Swede who had built box B, had been working during the same time on a rival "world knowledge" database for his own expert system. They had each stuffed their respective databases with as many "truths" as years of work had permitted.*
But as the years progressed, they had grown bored with expert systems, and both had decided that the practical promise of this technology was vastly overrated. The systems weren't actually very good at solving interesting problems, or "thinking," or "finding creative solutions to problems." All they were good at, thanks to their inference engines, was generating lots and lots of true sentences (in their respective languages), and testing input sentences (in their respective languages) for truth and falsity, relative to their sorta knowledge. So Al and Bo had gotten together and figured out how the fruits of their wasted effort could be put to use. They decided to make a philosophical toy. They chose a lingua franca for translating between their two representational systems (it was English, actually, sent in standard ASCII code),* and hooked the machines together with a wire. Whenever you pushed A's α button, this instructed A to choose at random (or pseudo-random) one if its "beliefs" (either a stored axiom or a generated implication of its axioms), translate it into English (in a computer, English characters would already be in ASCII), add enough random bits after the period to bring the total up to 10,000, and send the resulting string to B, which translated this input into its own language (which was Swedish Lisp), and tested it against its own "beliefs"—its database. Since both databases were composed of truths, and roughly the same truths, thanks to their inference engines, whenever A sent B something A "believed," B "believed" it too, and signaled this by flashing a red light. Whenever A sent B what A took to be a falsehood, B announced that it judged that this was indeed a falsehood by flashing a green light.
And whenever anyone tampered with the transmission, this almost always resulted in a string that was not a well-formed sentence of English, unless all the tampering occurred only in the random junk at the end. Since B had absolutely zero tolerance for typographical errors, B responded to these by flashing the amber light. Whenever anyone chose a bit string at random, the odds were Vast that it would not be a well-formed truth or falsehood in English ASCII, hence the preponderance of amber strings.
So, said Al and Bo, the mysterious causal property red was actually the property of being a true sentence in English, and green was the property of being a falsehood in English. Suddenly, the search that had eluded the scientists for years became child's play. Anyone could compose red strings ad nauseam. Just write down the ASCII code for "Houses are bigger than peanuts" or "Whales don't fly" or "Three times four is two less than two times seven," for instance. If you wanted a green string, try "Nine is less than eight" or "New York is the capital of Spain." Philosophers soon hit on some cute tricks, such as finding strings that were red the first hundred times they were given to B but green thereafter (e.g., the ASCII for "This sentence has been sent to you for evaluation less than a hundred and one times").
But, said some philosophers, the string properties red and green are not really truth in English and falsity in English. After all, there are English truths whose ASCII expression takes millions of bits, and besides, in spite of their best efforts, Al and Bo didn't always insert facts in their programs. For example, some of what had passed for common knowledge when they were working on their databases had since been disproved. There were lots of reasons why the string property—the causal property—of redness was not quite exactly the property of truth in English. So, perhaps red could be better defined as a relatively short expression in English ASCII of something sorta believed true by box B (whose sorta beliefs are almost all true). This satisfied some, but others picked nits, insisting, for various reasons, that this definition was inexact, or had counterexamples that could not be ruled out in any non-ad hoc way, and so forth. But as Al and Bo pointed out, there were no better candidate descriptions of the property to be found, and hadn't the scientists been yearning for just such an explanation? Hadn't the mystery of red and green strings now been entirely dissolved? Moreover, now that it was dissolved, couldn't one see that there wasn't any hope at all of explaining the causal regularity with which we began our tale—all α's cause reds, and all β's cause greens—without using some semantical (or mentalistic) terms?
Some philosophers argued that while the newfound description of the regularity in the activity in the wire could be used to predict box B's behavior, it was not a causal regularity after all. Truth and false-hood (and any of the adjusted stand-ins just considered) are semantic properties, and as such are entirely abstract, and hence could not cause anything. Nonsense, others retorted. Pushing button α causes the red light to go on just as certainly as turning the ignition key causes your car to start. If it had turned out that what was being sent down the wire was simply high versus low voltage, or one pulse versus two, everybody would agree that this was an exemplary causal system. The fact that this system turned out to be a Rube Goldberg machine didn't show that the reliability of the link between α and red flashes was any less causal. In fact in every single case the scientists could trace out the exact micro-causal path that explained the result.*
Convinced by this line of reasoning, other philosophers began to argue that this showed that the properties red, green, and amber weren't really semantical or mentalistic properties after all, but only imitation semantical properties, mere "as if" semantical properties. What red and green were, really, were very, very complicated syntactical properties. These philosophers declined, however, to say anything further about just what syntactical properties these were, or to explain how even young children could swiftly and reliably produce instances of them, or recognize them. These philosophers were nevertheless convinced that there had to be a purely syntactic description of the regularity, since, after all, the causal systems in question were "just" computers, and computers are "just" syntactic engines, not capable of any real "semanticity."
"We suppose," retorted Al and Bo, "that if you had found us inside our black boxes, playing a trick on you by following the same scheme, you would then relent and agree that the operative causal property was genuine truth (or believed-truth, in any event). Can you propose any good reason for drawing such a distinction?" This led some to declare that in a certain important sense Al and Bo had been in the boxes, since they were responsible for creating the respective data-bases as models of their own beliefs. It led others to denying that there really were any semantical or mentalistic properties anywhere in the world. Content, they said, had been eliminated. The debate went on for years, but the mystery with which we began was solved.
Blocking the Exits
The tale of the two black boxes ends there. Experience teaches, however, that there is no such thing as a thought experiment so clearly presented that no philosopher can misinterpret it, so in order to forestall some of the most attractive misinterpretations, I will inelegantly draw attention to a few of the critical details and explain their roles in this intuition pump.

(1) The devices in boxes A and B are nothing but automated encyclopedias, not even "walking encyclopedias" but just "boxes of truths." Nothing in the story presupposes or implies that these devices are conscious, or thinking things, or even agents, except in the same minimal sense that a thermostat is an agent. They are utterly boring intentional systems, rigidly fixed to fulfilling a single, simple goal. (The same is true of IBM'S Watson, of course.) They contain large numbers of true propositions and the inferential machinery necessary to generate more truths, and to test for "truth" by testing a candidate proposition against their existing databases.
(2) Since the two systems were created independently, they cannot plausibly be supposed to contain (actually or even virtually) exactly the same truths, but for the prank to work as well as I claim it did in the story, we must suppose a very large overlap, so that it was highly unlikely that a truth generated by A would not be recognized as such by B. Two considerations, I claim, make this plausible: (i) Al and Bo may live in different countries and have different native languages, but they inhabit the same world, and (ii) although there are kazillions of true propositions about that world (our world), the fact that both Al and Bo set out to create useful databases would guarantee a high degree of overlap between the two independently created systems. Although Al might know that on his twentieth birthday his left foot was closer to the North Pole than the South Pole, and Bo had not forgotten that his first French teacher was named Dupont, these would not be truths that either one would likely put in their respective databases. If you doubt that the mere fact that they were each intent on creating an internationally useful encyclopedia would ensure such a close correspondence between their respective databases, just add, as an inelegant detail, the convenient fact that during their years of hacking they compared notes as to topics to be covered.
(3) Why not have Al and Bob (a fellow American), or for that matter, why not simply have a duplicate of Al's system in box B? Because it is critical to my story that no simple, feasibly discoverable syntactic matching-up could explain the regularity. That is why Bo's system is in Swedish Lisp—to conceal from prying eyes the underlying semantic commonalities between the data structures consulted during A's sentence-generation task and B's sentence-translation-and-truth-testing task. Computers, as physical systems, must be, at best, syntactic engines, responding directly to physically transducible differences, not meanings. But both A and B have been designed to mirror as closely as possible the imaginary know-it-all, a semantic engine full of understood truths. When two different syntactic systems, A and B, have been designed to mirror the same semantic engine, the only way of accounting for the remarkable regularity they reveal is to ascend to the semantic-engine level, where truths are believed and assertions are intended. The idea, then, was to create two systems that exhibited the fascinating regularity of external behavior described but that were internally as different as possible, so that only the fact that their respective innards were systematic representations of a common world could explain the regularity. (Recall that this was the theme in chapter 13.)

We might pause to ask whether or not two such systems could ever be so inscrutable as to be invulnerable to reverse engineering. Or in other words, could the scientists have remained baffled for so long? Cryptography has moved into such rarefied and arcane regions that one should think thrice at least before declaring either way. I have no idea whether anybody can make a sound argument that there are unbreakable encryption schemes or that there aren't. But encryption aside, hackers will appreciate that all the convenient comments and other signposts one places in the source code when composing a program vanish when the source code is compiled, leaving behind an almost impossible-to-decipher tangle of machine instructions. "Decompiling"—reverse engineering the object code and recovering the source code—is sometimes possible in practice (is it always possible in principle?), though it won't restore the comments but just render salient the structures in the higher-level language. My assumption that the scientists' efforts at decompiling the program and deciphering the databases came to naught could be strengthened by postulating encryption, if need be.
In the story as told, we can agree that it is bizarre that the scientists never thought of checking to see if there was an ASCII translation of the bit streams running through the wire. How could they be so dense? Fair enough: you can fix this flaw in the thought experiment by sending the whole gadget (boxes A and B, and the connecting wire) to "Mars," and let the alien scientists there try to figure out the regularity. The fact that all α's cause red lights, all β's cause green lights, and random-bit strings cause amber lights will be just as visible to them as to us, but they will be clueless about ASCII. To them, this gift from outer space will exhibit an utterly mysterious regularity, totally beyond all analytic probes unless they hit on the idea that each box contains a description of a world, and that the descriptions are of the same world.* It is the fact that each box bears multifarious semantic relationships to the same things, though expressed in different "terminology" and differently axiomatized, that grounds the regularity.
When I tried this thought experiment out on Danny Hillis, the creator of the Connection Machine, a pioneering massively parallel computer built by his company, Thinking Machines, in the early 1980s, he thought immediately of a cryptographic "solution" to the puzzle, and then granted that my solution could be profitably viewed as a special case of his solution: "Al and Bo were using the world as a 'one-time pad!' "—an apt allusion to a standard technique of encryption. You can see the point by imagining a variation. You and your best friend are about to be captured by hostile forces (space pirates, let's say) who may know English but not much about your world. You both know Morse code, and hit on the following impromptu encryption scheme: for a dash, speak a true sentence; for a dot, speak a false sentence. Your captors are permitted to listen to you two speak: "Birds lay eggs, and toads fly. Chicago is a city, and my feet are not made of tin, and baseball is played in August," you say, answering "no" (dash-dot; dash-dash-dash) to whatever your friend has just asked. The next time you need to say no, you use different sentences. Even if your captors know Morse code, unless they also can determine the truth and falsity of these sentences, they cannot detect the properties that stand for dot and dash. This variation could be added to our fable, for spice, as follows: Instead of shipping the computer systems in the boxes to Mars, we put Al and Bo in the boxes and ship them to Mars. The Martians will be as puzzled by Al and Bo, if they play the Morse code prank, as by the computers, unless they draw the conclusion (obvious to us, but we're not Martians) that these things in the boxes are to be semantically interpreted.
The point of the fable is simple. There is no substitute for the intentional stance; either you adopt it, and explain the pattern by finding the semantic-level facts, or you will forever be baffled by the regularity—the causal regularity—that is manifestly there.*
At this juncture, if you are like many philosophers, you may once again be attracted by the claim that this intuition pump "works" only because boxes A and B are artifacts whose intentionality, such as it is, is entirely derived and artifactual. The data structures in their memories get their reference (if they get any at all) by indirect reliance on the sense organs, life histories, and purposes of their creators, Al and Bo. The real source of the meaning or truth or semanticity in the artifacts lies in these human artificers. Al and Bo have original intentionality, and A and B have only derived intentionality. (That was, of course, the point of the suggestion that in a certain sense Al and Bo were in their respective boxes.) I might have told the story differently: inside the boxes were two robots, Al and Bo, each of which had spent a longish "lifetime" scurrying around the world gathering facts before getting in their respective boxes. I chose a simpler route, to forestall all the questions about whether box A or box B was "really thinking," but if you want to reconsider the thought experiment with this complication, note that the intuition pump about the giant robot survival machine has already cast doubt on the otherwise compelling idea that genuine intentionality could not arise in any artifact.











Summary
Twenty-one thinking tools—a dozen intuition pumps and some useful concepts—lined up and put to work on the foundational concept of meaning. What have we made with their help? Do they all work well? Notice that there are two ways an intuition pump may prove valuable. If it's well made, then either the intuitions it pumps are reliable and convincing, in which case it nicely blocks some otherwise tempting path of error, or the intuitions still seem dubious, in which case the intuition pump may help focus attention on what is wrong with its own presuppositions. In either case, the tool is a sort of lever, like a seesaw—if one side goes up, the other side must go down—but only if the tool can't bend or break in the middle. Intuition pumps are more complicated than seesaws, so we need to turn the knobs. That's what I just did with the two black boxes, but there are no doubt other knobs to check before settling for its verdict.
And what are the verdicts of this long section on meaning? A mixture of pessimism and optimism. Meaning isn't going to turn out to be a simple property that maps easily onto brains, and we're not going to find "deeper" facts anywhere that just settle the question of what a sentence, or a thought, or a belief really means. The best we can do—and it is quite good enough—is to find and anchor (apparently) best interpretations of all the physical-stance (and design-stance) data we have. If we can find one solution to a Quinian quandary about meaning, we have almost certainly found the solution—in the sense that we may be confident that no better solution lies undiscovered. As the two-bitser's move to Panama showed, meaning is always relative to a context of function, and there need be no original intentionality beyond the intentionality of our (sorta) selfish genes, which derive their sorta intentionality from the functional context of evolution by natural selection, instead of from an Intelligent Designer playing the role of our rich client ordering a giant robot. And the intuition pump about the two black boxes shows that the intentional stance, with all its tolerance of sorta beliefs and their ilk, is not optional if you want to understand and explain many of the causal regularities in the world.
Our investigations into these issues are greatly enhanced, here in the twenty-first century, by the fact that, for the first time, we have ways of thinking rigorously and vigorously about mechanisms with trillions of moving parts—parts that work in unmysterious ways. Thanks to Turing, we can at least dimly see a path now, from brute uncomprehending matter (the physical stance) via a cascade of rearrangements (the design stance, and sorta meanings) to an appreciation of ourselves as paradigmatic believers, knowers, understanders (simplified by the intentional stance as intentional systems).
Every one of these propositions is, or has been, controversial, and there are still plenty of experts who haven't signed on to all of them. Perhaps lining up all these propositions will increase their persuasive power, and we'll get a "critical mass" phenomenon that attracts those who haven't seen the way the parts mesh so nicely. On the other hand, lining them up like this may make it easier for critics to find a common thread of mistake running through them. Either way we make progress. Or maybe we'll discover sleight of hand in many of them, obscuring the truth instead of illuminating it. To find flaws, go back and turn the knobs some more, and see what happens. At the very least, discovering such flaws amounts to a sour kind of progress: the progress of exposing tempting bad ideas, something philosophers have been doing for millennia.
I don't claim that this section gives us a theory of meaning. It gives us only a rather commodious logical space into which a proper, scientific theory of meaning must fit—if I am right.* Now that we have the content side of the mind roughly pinned in place, can we turn to that grand mystery of mysteries, consciousness? Not yet. We need to build some more foundations. Too many issues that arise in the quest to understand consciousness have implications about, or presuppositions about, evolution, as we have already seen in this section. Many of the themes we've begun developing have appealed to evolutionary considerations, so let's get them exposed and clarified before we go on. Besides, it's an endlessly fascinating topic.












VI. TOOLS FOR THINKING ABOUT EVOLUTION

 

Darwin's idea of evolution by natural selection is, in my opinion, the single best idea that anybody has ever had, because in a single bold stroke it unites meaning with matter, two aspects of reality that appear to be worlds apart. On one side, we have the world of our minds and their meanings, our goals, our hopes, and our yearnings, and that most honored—and hackneyed—of all philosophical topics, the Meaning of Life. On the other side, we have galaxies ceaselessly wheeling, planets falling pointlessly into their orbits, lifeless chemical mechanisms doing what physics ordains, all without purpose or reason. Then Darwin comes along and shows us how the former arises from the latter, creating meaning as it goes, a bubble-up vision of the birth of importance to overthrow the trickle-down vision of tradition. The idea of natural selection is not very complex, but it is so powerful that some people cannot bear to contemplate it, and they desperately avert their attention as if it were a horrible dose of foul-tasting medicine. Here are some thinking tools to help us see how this idea illuminates the dark corners of existence, turning mysteries into puzzles that we can solve and uncovering the glories of nature as never before.











34. Universal Acid
Did you ever hear of universal acid? This fantasy used to amuse me and some of my schoolboy friends. I have no idea whether we invented or inherited it, along with Spanish fly and saltpeter, as a part of an underground youth culture. Universal acid is a liquid so corrosive that it will eat through anything! But what do you keep it in? It dissolves glass bottles and stainless-steel canisters as readily as paper bags. What would happen if you somehow came upon or created a dollop of universal acid? Would the whole planet eventually be destroyed? What would it leave in its wake? After everything had been transformed by its encounter with universal acid, what would the world look like? Little did I realize that in a few years I would encounter an idea—Darwin's idea—bearing an unmistakable likeness to universal acid: it eats through just about every traditional concept, and leaves in its wake a revolutionized worldview, with most of the old landmarks still recognizable, but transformed in fundamental ways.*
Many Darwin-dreaders missed the point (deliberately?) when I introduced this image of Darwin's dangerous idea in 1995. I went to some lengths to reassure my readers that after the universal acid swept through their favorite topics—ethics, art, culture, religion, humor, and yes, even consciousness—what would be left behind would be just as wonderful, even more wonderful in many regards, but subtly transformed. Darwin's idea is a revolutionary idea, no doubt about it, but it does not destroy what we value in all these things; it puts them on better foundations, and unites them gracefully with the rest of knowledge. For centuries "the arts and humanities" have been considered not just separate from the sciences but somehow protected from the invasive examinations science engages in, but this traditional isolation is not the best way to preserve what we love. Trying to hide our treasures behind a veil of mystery prevents us from finding a proper anchoring for them in the physical world. It is a common-enough mistake, especially in philosophy.
When people sense that something they love is under threat, their first reaction is to build an "impenetrable" wall, a Maginot Line—and just to be extra safe they decide to enclose a bit more territory, a buffer zone, inside its fortifications. It seems like a good, prudent idea. It seems to protect us from the awful slippery slope, the insidious thin edge of the wedge, and as everyone knows, if you give them an inch, they'll take a mile. Dig the moat! Build the wall! And as far out as you can afford. But this policy typically burdens the defenders with a brittle, extravagant (implausible, indefensible) set of dogmas that cannot be defended rationally—and hence must be defended, in the end, with desperate clawing and shouting. In philosophy, this strategic choice often shows up as absolutism of one kind or another: the sanctity of (human) life is infinite; at the core of great art lies divine and inexplicable genius; consciousness is a problem too hard for us mere mortals to understand; and—one of my favorite targets—what I call hysterical realism: there are always deeper facts that settle the puzzle cases of meaning. These facts are real, really real, even if we are systematically unable to discover them. This is a tempting idea, in part because it appeals to our sense of proper human modesty. Who are we to say that there just aren't any facts to settle these issues? Einstein's notorious resistance to the indeterminacy of quantum physics is an august example of the appeal of this idea. "God does not play dice!" was his heartfelt but ultimately unreasonable ground for resistance. And, when you get right down to it, who are we—or who is Einstein—to say that God doesn't play dice? This is probably not the way to deal with such issues, and we'll see some opportunities for hysterical realism—and see how to resist it—below. Evolutionary thinking is a fine antidote.











35. The Library of Mendel: Vast and Vanishing
The human genome has now been sequenced by Craig Venter and others, but what does this mean? Isn't everybody's DNA different? Yes, so different, in fact, that even a rather small fragment of DNA found at a crime scene is enough to identify its owner with over 99 percent certainty. And yet human DNA is also so similar that scientists can distinguish it from the DNA of other species given only fragments of a complete genome. How is this possible? How can our personal DNA be so different and yet so similar? A good way to understand this surprising fact is by comparing DNA with the texts of books, and the Argentine writer Jorge Luis Borges (1962) has given us a little fable, "The Library of Babel," that vividly illustrates the way this difference and similarity can coexist. Borges tells of the forlorn explorations and speculations of people who find themselves living in a vast storehouse of books, structured like a honeycomb, composed of thousands (or millions or billions) of hexagonal air shafts surrounded by balconies lined with shelves. Standing at a railing and looking up or down, no one can see a top or bottom to these shafts. And nobody has ever found a shaft that isn't surrounded by six neighboring shafts. The people wonder, Is the warehouse infinite? Eventually they decide that it is not, but it might as well be, for it seems that on its shelves—in no order, alas—lie all the possible books.
Suppose that each book is five hundred pages long, and each page consists of forty lines, with fifty spaces for each line, so there are two thousand character-spaces per page. Each space either is blank or has a character printed on it, chosen from a set of one hundred characters (the uppercase and lowercase letters of English and other European languages, plus the blank and punctuation marks).* Somewhere in the Library of Babel is a volume consisting entirely of blank pages, and another volume is all question marks, but the vast majority consist of typographical gibberish; no rules of spelling or grammar, to say nothing of sense, prohibit the inclusion of a volume. Five hundred pages multiplied by two thousand characters per page gives a million character-spaces per book, so if we were to fill the books with every permutation of the characters, there would be 1001,000,000 different books in the Library of Babel. Since it is estimated† that there are only 10040 (give or take a few) particles (protons, neutrons, and electrons) in the region of the universe we can observe, the Library of Babel is not remotely a physically possible object, but thanks to the strict rules with which Borges constructed it in his imagination, we can think about it clearly.
Is this truly the set of all possible books? Obviously not, since they are restricted to being printed from "only" one hundred different characters, excluding, we may suppose, the characters of Greek, Russian, Arabic, and Chinese, thereby overlooking many of the most important actual books. Of course the Library does contain superb translations of these actual books, into English, French, German, Italian, and so on, as well as uncountable trillions of shoddy translations of each book. Books of more than five hundred pages are there, beginning in one volume and continuing without a break into other volumes.
It is amusing to think about some of the volumes that must be somewhere in the Library of Babel. One of them is the best, most accurate five-hundred-page biography of you, from the moment of your birth until the moment of your death. Locating it, however, would be all but impossible, since the Library also contains kazillions of volumes that are magnificently accurate biographies of you up until your tenth, twentieth, thirtieth, fortieth birthday, and so on, and completely false about subsequent events of your life—in a kazillion different and diverting ways. But even finding one readable volume in this huge storehouse is unlikely in the extreme.
We need some terms for the quantities involved. The Library of Babel is not infinite, so the chance of finding anything interesting in it is not literally infinitesimal.* These words exaggerate in a familiar way, but we should avoid them. Unfortunately, all the standard metaphors—astronomically large, a needle in a haystack, a drop in the ocean—fall comically short. No actual astronomical quantity (such as the number of elementary particles in the universe, or the amount of time since the Big Bang, measured in nanoseconds) is even visible against the backdrop of these huge-but-finite numbers. If a readable volume in the Library were as easy to find as a particular drop in the ocean, we'd be in business! Dropped at random into the Library, our chance of ever encountering a volume with so much as a grammatical sentence in it is so vanishingly small that we might do well to capitalize the term, Vanishingly small, and give it a mate, Vastly, short for Very-much-more-than-astronomically.†
Here is another way of getting some sense about just how ridiculously large the Library of Babel is. As just noted, only a Vanishingly small subset of the books is composed of English words. That subset is itself Vast, and a Vanishing subset within it consists of books in which the words are arranged in grammatical sentences (the Vast majority consist of volumes filled with words strings like this: "good since Paris helping easy from of which nevertheless democracy striptease tigers"). A Vast but Vanishing subset of the grammatical books is composed of sentences that make sense in sequence (the rest are composed of sentences that might be chosen at random from books in grammatical English). A Vast but Vanishing subset of those sense-making books are about somebody named John, and a Vast but Vanishing subset of those are about the assassination of John F. Kennedy, and a still Vast (but Vanishing) subset of those are true—and a Vast but Vanishing subset of those true books about the assassination of Kennedy are composed entirely of limericks! Yes, there are more possible true books in limericks about the death of JFK than there are volumes in the Library of Congress! Not a single one has been published, in all likelihood, which is just as well.

Moby-Dick is in the Library of Babel, but so are 100,000,000 mutant impostors that differ from the canonical Moby-Dick by a single typographical error. That's not yet a Vast number, but the total rises swiftly when we add the variants that differ by two or ten or a thousand typos. Even a volume with a thousand typos—two per page on average—would be unmistakably recognizable as Moby-Dick, and there are Vastly many of those volumes. It wouldn't matter which of these volumes you found, if only you could find one of them! Almost all of them would be equally wonderful reading, and all tell the same story, except for truly negligible—almost indiscriminable—differences. Not quite all of them, however. Sometimes a single typo, in a crucial position, can be fatal. Peter De Vries, another philosophically delicious writer of fiction, once published a novel* that began,

"Call me, Ishmael."

Oh, what a single comma can do! Or consider the many mutants that begin with "Ball me Ishmael."
In Borges's story, the books are not shelved in any order, but even if we found them scrupulously alphabetized, we would have insoluble problems finding the book we were looking for (for instance, the "essential" version of Moby-Dick). Imagine traveling by spaceship through the Moby-Dick galaxy of the Library of Babel. This galaxy is in itself Vastly larger than the whole physical universe, so no matter what direction you go in, for centuries on end, even if you travel at the speed of light, all you see are virtually indistinguishable copies of Moby-Dick. You will never ever reach anything that looks like anything else. David Copperfield is unimaginably distant in this space, even though we know that there is a path—the shortest path, ignoring the kazillions of others—leading from one great book to the other by single typographical changes. (If you found yourself on this path, you would find it almost impossible to tell, by local inspection, which direction to go to move toward David Copperfield, even if you had texts of both target books in hand.)
In other words, this logical space is so Vast that many of our usual ideas about location, about searching and finding and other such mundane and practical activities, have no straightforward application. Borges put the books on the shelves in random order, a nice touch from which he drew several delectable reflections, but look at the problems he would have created for himself if he'd tried to arrange them in alphabetical order. Since there are only a hundred different alphabetic characters (in our version), we can treat some specific sequence of them as alphabetical order, for example, a, A, b, B, c, C, ... z, Z, ?, ;, ,, ., !, ), (, %, ... à, â, è, ê, é, ... Then we can put all the books beginning with the same character on the same floor. Now our library is only a hundred stories high, shorter than the Sears (or Willis) Tower in Chicago. We can divide each floor into a hundred corridors, each of which we line with the books whose second character is the next character in alphabetical order. On each corridor, we can place a hundred shelves, one for each third-character slot. Thus all the books that begin with "aardvarks love Mozart"—and how many there are!—are shelved on the same shelf (the "r" shelf) in the first corridor on the first floor. But that's a mighty long shelf, so perhaps we had better stack the books in file drawers at right angles to the shelf, one drawer for each fourth-letter position. That way, each shelf can be only, say, a hundred feet long. But now the file drawers are awfully deep, and will run into the backs of the file drawers in the neighboring corridor, so ... but we've run out of dimensions in which to line up the books. We need a million-dimensional space to store all the books neatly, and all we have is three dimensions: up-down, left-right, and front-back. So we will just have to pretend we can imagine a multidimensional space, each dimension running "at right angles" to all the others. We can conceive of such hyperspaces, as they are called, even if we can't visualize them. Scientists use them all the time to organize the expression of their theories. The geometry of such spaces (whether or not they count as only imaginary) is well behaved, and well explored by mathematicians. We can confidently speak about locations, paths, trajectories, volumes (hypervolumes), distances, and directions in these logical spaces.
We are now prepared to consider a variation on Borges's theme, which I will call the Library of Mendel. This Library contains "all possible genomes"—DNA sequences. Richard Dawkins (1986) describes a similar space, which he calls Biomorph Land, in The Blind Watchmaker. His discussion is the inspiration for mine, and our two accounts are entirely compatible, but I want to stress some points he chose to pass over lightly.
If we consider the Library of Mendel to be composed of descriptions of genomes, then it is already a proper part of the Library of Babel. The standard code for describing DNA consists of only four characters, A, C, G, and T (standing for adenine, cytosine, guanine, and thymine, the four kinds of nucleotides). All the five-hundred-page permutations of these four letters, therefore, are already in the Library of Babel. Typical genomes are much longer than ordinary books, however. The human genome has approximately three billion nucleotides, so the exhaustive description of a single human genome—such as your own—would take approximately three thousand of the five-hundred-page volumes in the Library of Babel.
This comparison of a human genome with the volumes in the galaxy of Moby-Dick now gives us the explanation we need of the difference and similarity between human genomes. How can we speak of sequencing (copying down) the human genome if every human genome is different from every other in not just one, but hundreds or thousands of places (loci, in the language of genetics)? Like the proverbial snowflakes, or fingerprints, no two actual human genomes are exactly alike, including those of identical twins (the chance of typos creeping in is always present, even in the cells of a single individual). Human DNA is readily distinguishable from the DNA of any other species, even that of the chimpanzee, which is the same at over 90 percent of the loci. Every actual human genome that has ever existed is contained within a galaxy of possible human genomes that is Vastly distant from the galaxies of other species' genomes, yet within the galaxy there is plenty of room for no two human genomes to be alike. You have two versions of each of your genes, one from your mother and one from your father. They passed on to you exactly half of their own genes, randomly selected from those they received from their parents, your grandparents, but since your grandparents were also members of Homo sapiens, their genomes agree at almost all loci, so it makes no difference most of the time which grandparent provides either of your genes. But their genomes nevertheless differ at many thousands of loci, and in those slots, which genes you get is a matter of chance—a coin toss built into the machinery for forming your parents' contributions to your DNA. Moreover, mutations accumulate at the rate of about a hundred per genome per generation in mammals. "That is, your children will have one hundred differences from you and your spouse in their genes as a result of random copying errors by your enzymes or as a result of mutations in your ovaries or testicles caused by cosmic rays" (Ridley, 1993, p. 45).
The description of the genome for a horse or a cabbage or an octopus would be composed of the same letters, A, C, G, and T. Most animal genomes measured are smaller than the human genome, but some plants have genomes more than ten times larger than ours, and some single-celled amoebas have genomes even larger! Amoeba dubia is the current world record-holder, with an estimated 670 billion base-pairs, more than two hundred times larger than ours. But let us suppose, arbitrarily, that the Library of Mendel consists of all of the DNA strings described in all of the three-thousand-volume boxed sets consisting entirely of those four characters. This will capture enough of the "possible" genomes to serve any serious theoretical purpose.
I have overstated the case in describing the Library of Mendel as containing "all possible genomes." Just as the Library of Babel ignored the Russian and Chinese languages, so the Library of Mendel ignores the (apparent) possibility of alternative genetic alphabets, based on different chemical constituents, for instance. So any conclusions we come to regarding what is possible relative to this Library of Mendel may have to be reconsidered when we try to apply them to some broader notion of possibility. This is actually a strength rather than a weakness of our tactic, since we can keep close tabs on exactly what sort of modest, circumscribed possibility we are talking about.
One of the important features of DNA is that all the permutations of sequences of adenine, cytosine, guanine, and thymine are about equally stable, chemically. All could be constructed, in principle, in the gene-splicing laboratory, and once constructed they would have an indefinite shelf life, like a book in a library. But not every such sequence in the Library of Mendel corresponds to a viable organism. Most DNA sequences—the Vast majority—are gibberish, recipes for nothing living at all. All the genomes that we see, that actually exist today, are the products of billions of years of adjustment and revision, a mindless editorial process that is effective because most of the gibberish (all but a Vanishingly thin thread of meaningful, useful "text") is automatically discarded, while the rest is relentlessly reused, copied kazillions of times. You have more than a trillion copies of your genome in your own body right now, one copy in each human cell, and every day, as new skin cells and bone cells and blood cells are made, new copies of your genomes are installed in them. The text that can be copied—because it resides in a going concern, a living cell—is copied. The rest dissolves. Publish or perish.











36. Genes as Words or as Subroutines
The analogy between genes and words is useful, as we have just seen, but there is a better one that we are now equipped to understand, thanks to the interlude about computers. In his masterpiece, The Ancestor's Tale, Richard Dawkins (2004) gives credit to another brilliant writer on evolution, Matt Ridley, for pointing out the deep similarities between genes and software subroutines in his book Nature via Nurture. I would not ordinarily insert such a long quotation of somebody else's work in a book of mine, but I found that my attempts at paraphrasing this passage invariably sacrificed clarity and vividness for a smidgen of originality, so, with his permission, I am passing along the unmutated version as it appears in Dawkins's book.

Most of the genome that we sequence is not the book of instructions, or master computer program, for building a human or a mouse, although parts of it are. If it were, we might indeed expect our program to be larger than the mouse's. But most of the genome is more like the dictionary of words available for writing the book of instructions—or, we shall soon see, the set of subroutines that are called by the master program. As Ridley says, the list of words in David Copperfield is almost the same as the list of words in The Catcher in the Rye. Both draw upon the vocabulary of an educated native speaker of English. The difference between the two books is the order in which those words are strung together.
When a person is made, or when a mouse is made, both embryologies draw upon the same dictionary of genes: the normal vocabulary of mammalian embryologies. The difference between a person and a mouse comes out of the different orders with which the genes, drawn from that shared mammalian vocabulary, are deployed, the different places in the body where this happens and its timing. All this is under the control of particular genes whose business it is to turn other genes on, in complicated and exquisitely timed cascades. But such controlling genes constitute only a minority of the genes in the genome.
Don't misunderstand "order" as meaning the order in which the genes are strung out along the chromosomes. With notable exceptions, ... the order of genes along a chromosome is as arbitrary as the order in which words are listed in a vocabulary—usually alphabetical, but, especially in phrase books for foreign travel, sometimes an order of convenience: words useful in airports; words useful when visiting the doctor; words useful for shopping, and so on. The order in which genes are stored on chromosomes is unimportant. What matters is that the cellular machinery finds the right gene when it needs it, and it does this using methods that are becoming increasingly well understood. ...
In one respect the analogy with words is misleading. Words are shorter than genes, and some writers have likened each gene to a sentence. But sentences aren't a good analogy, for a different reason. Different books are not put together by permuting a fixed repertoire of sentences. Most sentences are unique. Genes, like words but unlike sentences, are used over and over again in different contexts. A better analogy for a gene than either a word or a sentence is a toolbox subroutine in a computer. ...
The Mac has a toolbox of routines stored in RoM (Read Only Memory) or in System files permanently loaded at startup time. There are thousands of these toolbox routines, each one doing a particular operation, which is likely to be needed, over and over again, in slightly different ways, in different programs. For example, the toolbox routine called ObscureCursor hides the cursor from the screen until the next time the mouse is moved. Unseen by you, the ObscureCursor "gene" is called every time you start typing and the mouse cursor vanishes. Toolbox routines lie behind the familiar features shared by all programs on the Mac (and their imitated equivalents on Windows machines): pulldown menus, scrollbars, shrinkable windows that you can drag around the screen with the mouse, and many others. [Dawkins, 2004, pp. 155-156]

All this helps us understand why it is so easy for an expert to recognize the genome of a mammal. It has the mammal toolbox, which in addition to its specialized mammal-making tools also includes tools from the reptile toolbox, and the fish toolbox, and even the worm toolbox. The oldest tools in the kit are shared by all living things, including bacteria.











37. The Tree of Life
The genomes that exist today are connected by threads of descent to the genomes of their parents and grandparents and so on, back to the beginning of life on Earth. The image facing page 241, the Tree of Life, shows how every person is relatively closely related to every other person—sharing common human ancestors within the last hundred thousand years, and sharing ancestors with every dog and whale within the last two hundred million years, and every daisy and redwood tree within the last two billion years.
There are many ways of drawing the Tree of Life. In this one, the present is represented along the outer tips of the branches. Only the lineages still alive reach this outer rim. Dinosaurs (except for the birds that descended from them) are shown to have gone extinct over 60 million years ago. All the threads are connected eventually, back at the origin of life—about which more later. If we enlarged the diagram a trillionfold, we could see the family trees of every fly, fish, and frog that ever lived, seeing which died childless (most of them, of course) and which had progeny.











38. Cranes and Skyhooks, Lifting in Design Space
Life is amazing. When you think of the billions of solar systems that are almost certainly entirely lifeless, it is amazing that there is any way of being alive at all. And it is amazing to reflect on the variety of different ways of being alive, from bacteria to fish, birds, daisies, whales, snakes, maples, and people. Perhaps most amazing of all is the tenacity of living things, the thousands of ways they have of clinging to life and reproducing, eking out a living against formidable obstacles, thanks to millions of ingenious devices and arrangements, from the convoluted cascades of protein machinery within every cell, to echo-location in bats, to the elephant's trunk, to the capacity of our brains to reflect on every topic "under the sun" and many others as well. All that magnificent adjustment of means to ends requires an explanation, since it cannot be pure chance or happenstance. There are only two known possibilities: Intelligent Design or evolution by natural selection. In either case there is a tremendous amount of design work to be done, either miraculously by an Intelligent Designer or plod-dingly, unforesightedly, stupidly—but non-miraculously—by natural selection. Call the design work R & D (the standard abbreviation in industry for research and development), and recognize that R & D is always costly. It takes time and energy. The beauty of Darwin's great idea is that he saw how, given billions of years in which to work, and a prodigious amount of "waste" motion (zillions of trials ending in errors), design improvements could non-miraculously accumulate, automatically, without intention or foresight or understanding. Robert Beverley MacKenzie, one of Darwin's most ardent critics, put it eloquently:

In the theory with which we have to deal, Absolute Ignorance is the artificer; so that we may enunciate as the fundamental principle of the whole system, that, IN ORDER TO MAKE A PERFECT AND BEAUTIFUL MACHINE, IT IS NOT REQUISITE TO KNOW HOW TO MAKE IT. This proposition will be found, on careful examination, to express, in condensed form, the essential purport of the Theory, and to express in a few words all Mr. Darwin's meaning; who, by a strange inversion of reasoning, seems to think Absolute Ignorance fully qualified to take the place of Absolute Wisdom in all the achievements of creative skill. [1868]

Exactly. And ever since Darwin proposed this amazing idea, skeptics have wondered whether there was enough time to do all that creative work the plodding way. A convenient way to imagine the design work that needs to have been done is to think of it as lifting in Design Space. What is Design Space? Like the Library of Babel and the Library of Mendel, it can best be conceived as a multidimensional space. In fact Design Space contains both of those libraries and more, because it includes not only all the (designed, authored) books and the (designed, evolved) organisms, but all other things that are well described by the design stance (see chapter 18), such as houses, mousetraps, battleaxes, computers, and spaceships. And just as most of the Library of Babel is gibberish, most of the places in Design Space are filled with junk, things that can't do anything well at all. If you are like me, you can imagine just three dimensions at a time, but the more you play around with the idea in your imagination, the easier it gets to think of the familiar three dimensions as standing in for many. (This is a thinking tool that improves with practice.)
When we imagine placing the Tree of Life in the Library of Mendel, we can see how all the living things that have ever actually existed on this planet are connected to each other by lines of descent. Those lineages transmit the basic design improvements "discovered" by natural selection, preserving the earliest R & D for use in all subsequent living things. (The "machinery" inside every cell, from bacteria to brain cells, includes thousands of brilliantly designed nano-devices that have been cranking away for over three billion years, the basic engine room of life that we share with trees and birds and yeast cells.) At the multi-cell level we find hearts, lungs, eyes, arms, legs, and wings, reusing and improving on designs that were first developed "only" two billion years ago. But in addition to the parts of organisms, there are the artifacts of organisms: spider webs and bird nests and beaver dams, for example. These also show unmistakable evidence of R & D, and the fruits of that R & D have to have been transmitted somehow along the same lineage lines—either in the genes or by offspring copying their parents. Every now and then a novelty arises—by mutation or experimentation or accident—that is an improvement, and it gets copied and copied and copied. Failed experiments go extinct. Again, publish or perish.
Then there are the human artifacts, the plows and bridges and cathedrals, the paintings, plays, poems, and printing presses, the airplanes and computers and lawnmowers, and ... the thinking tools. What about them? Do they not hang off the branches of one part of the Tree of Life—the human lineage? Each of them depends on at least one author or inventor, and most depend on uncounted thousands or millions of contributors to the R & D that lies behind them. Beethoven didn't have to invent the symphony, which was already there for him to adapt, and Shakespeare didn't have to invent the sonnet. A chainsaw is composed of dozens or hundreds of "off the shelf" elements, already invented, already optimized. Some of our human artifacts are probably copied from the artifacts of other animals. Did the weaverbird's nest inspire the invention of weaving cloth? Was the raised snow shelf on the floor of an Inuit igloo, which permits the cold air to drain out the lower entryway, copied from the similar raised floor in polar bear dens, or are these independent inventions (or did polar bears copy from the Inuit)?
The deep similarities of function between hearts and pumps, bat echolocation and sonar and radar, beaver dams and irrigation dams, eyes and cameras are no accident; similar processes of exploration—of R & D—have shaped and honed and improved them over the centuries. Put them all in a common space: Design Space, the space of all possible designs.
This move is contentious among biologists, for reasons I think I understand, and deplore. Many biologists are extremely reluctant to talk about "design" in living things, because they think it gives aid and comfort to the Intelligent Design movement, that disingenuous, pseudo-scientific, crypto-religious campaign to undermine the richly deserved authority of evolutionary biology. (Among these resisters are two of my most esteemed colleagues and friends, evolutionary biologists Richard Dawkins and Jerry Coyne.) By speaking of purpose and design in nature, we (apparently) give the Intelligent Design gang half their case; it is better, some think, to maintain a stern embargo on such themes and insist that strictly speaking nothing in the biosphere is designed unless it is designed by human artificers. Nature's way of generating complex systems (organs, behaviors) is so unlike an artificer's way, they think, that we should not use the same language to describe them. Thus Richard Dawkins speaks (on occasion—e.g., 1996, p. 4) of designoid features of organisms, and in The Ancestor's Tale (2004, p. 457), he says, "The illusion of design conjured by Darwinian natural selection is so breathtakingly powerful." I disagree with this policy of austerity, which can backfire badly. I recently overheard a conversation among some young people in a bar about the marvels of the nano-machinery discovered inside all cells. "When you see all those fantastic little robots working away, how can you possibly believe in evolution!" one exclaimed, and another nodded wisely. Somehow these folks had gotten the impression that evolutionary biologists thought that life wasn't all that complex, wasn't made of components that were all that wonderful. These evolution-doubters were not rednecks; they were Harvard Medical students! They hugely underestimated the power of natural selection because evolutionary biologists had told them, again and again, that there is no actual design in nature, only the appearance of design. This episode strongly suggested to me that "common knowledge" is beginning to incorporate the mistaken idea that evolutionary biologists are reluctant to "admit" or "acknowledge" all the obvious design in nature.
Consider in this regard Christoph Schönborn, Catholic archbishop of Vienna, the chap duped by the Intelligent Design folks. He wrote, notoriously, in a New York Times op-ed piece entitled "Finding Design in Nature,"

The Catholic Church, while leaving to science many details about the history of life on earth, proclaims that by the light of reason the human intellect can readily and clearly discern purpose and design in the natural world, including the world of living things. Evolution in the sense of common ancestry might be true, but evolution in the neo-Darwinian sense—an unguided, unplanned process of random variation and natural selection—is not. Any system of thought that denies or seeks to explain away the overwhelming evidence for design in biology is ideology, not science.

Which campaign do we evolutionists want to lead? Do we want to try to convince laypeople that they don't really see the design that is stunningly obvious at every scale in biology, or would we rather try to show that, wonderful to say, what Darwin has shown is that there can be design—real design, as real as it gets—without an Intelligent Designer? We have persuaded the world that the earth goes around the sun and that time is relative, not absolute. Why shrink from the pedagogical task of showing that there can be design without a designer? So I am defending here (once again, with new emphasis) the following claim:
The biosphere is utterly saturated with design, with purpose, with reasons. What I call the design stance predicts and explains features throughout the living world using the same assumptions that work so well when we are reverse engineering artifacts made by (somewhat) intelligent human designers. Evolution by natural selection is a set of processes that "find" and "track" reasons for things to be arranged one way rather than another. The chief difference between the reasons found by evolution and the reasons found by human designers is that the latter are typically (but not always) represented in the minds of the designers, whereas the reasons uncovered by natural selection are typically represented for the first time by the human investigators who succeed in reverse engineering nature's productions. That is to say, human designers think about the reasons for the features of their artifacts, and hence have ideas that represent the reasons. They typically notice, appreciate, formulate, refine, and then convey, discuss, criticize the reasons for their designs. Evolution doesn't do any of this; it just sifts mindlessly through the variation it generates, and the good stuff (which is good for reasons, reasons undreamed of or unrepresented by the process of natural selection) gets copied.
There could be a good use for the term designoid to mark merely apparent design, but it is not in biology. When I think of the mere appearance of design, I think of how cartoonists set the stage for cartoons about scientists by showing some bearded eggheads standing in front of a blackboard covered with (actually nonsensical) symbols, or in a chemistry lab stocked with an impressive-looking forest of tubes and beakers, or by showing us the mad inventor working on his time machine, bristling with dials and antennas and hi-tech gizmos. These things couldn't actually do any work; they only appear to be functional. But the designs of nature are truly effective. In fact, they are often demonstrably much more efficient and powerful than any human-designed counterpart yet invented.
An example of a designoid inscription:


A healthy young man can walk, carrying all the food and water he needs to survive, for about a week, stopping and resting whenever he chooses, traveling perhaps 150 miles. (Water is the key burden: carrying fifty pounds of water and sixteen pounds of food and ten pounds of gear makes a very heavy pack; if he could find water on the way, he could go for months.) For comparison, consider the brainchild of Cornell University roboticist Andy Ruina and his colleagues, who have built by far the longest walking robot, Ranger, which traveled nonstop 65.2 kilometers (40.5 miles) in a robot ultra-marathon in Japan on May 1-2, 2011. Ranger's designers take advantage of the dynamical properties of limbs to create a superbly energy-efficient walker (around and around on a flat track for hours on end, guided by a human being with a joystick). Another magnificent four-legged walker robot, Big Dog, is about fifteen times less energy-efficient, but has much more impressive capacities to accommodate difficult terrain. Humans are still considerably more efficient transport devices than Ranger by a factor of four or five, and unlike Ranger, they can respond autonomously to all manner of features in the world. (See Ruina, 2011.)
Something has to give. Either we define "design" as the product of an intelligent designer, such as a designer of poems or cars, for instance, or we acknowledge that there can be design—genuine design—without an intelligent designer. Tradition and etymology might seem to favor the former course, but consider this: atom—from the Greek a [without] + tomos, from temnein, to cut or slice. Atom originally meant "unsplittable thing," but science discovered that splitting the atom, after all, was not a contradiction in terms. Science has also discovered, I submit, that design without a designer (lacking a designer with a mind, with foresight and intention) is not only possible but all around us. Design-by-evolution is a real, well-understood process. It differs in interesting ways from design-by-engineer, but it is also deeply similar, capable of humbling "ingenuity." Time and again, biologists baffled by some apparently futile or maladroit bit of bad design in nature have eventually come to see that they have underestimated the sheer brilliance in one of Mother Nature's creations. Francis Crick mischievously baptized this trend in the name of a colleague, Leslie Orgel, speaking of what he called Orgel's Second Law: "evolution is cleverer than you are." (This apparently reckless tactic of personifying the process of natural selection as Mother Nature, this in-your-face anthropomorphizing, will be defended in due course. It is not just an entertaining metaphor; it is a thinking tool in its own right.)
Back to Design Space, the multidimensional space of all possible designs, including not just the actual organisms and automobiles and poems, but—like the books in the Library of Babel—all the never-evolved, never-constructed designs: the talking kangaroos and flying snakes, nuclear-powered popcorn poppers and underwater roller-skates. What should our alphabet of basic design elements be? Since we aren't going to try to make Design Space, but just think about it, we might as well be profligate: let's say, all possible configurations of atoms, drawn from the periodic table of elements. (This Vast space will include atom-for-atom duplicates of all the undesigned things as well, such as every pebble on every beach, and Mt. Everest, but that is as it should be since there is nothing to prevent somebody from deciding to design and build replicas of these entities.) Where will Brahms's Third Symphony be in Design Space? Well, the score (in spots of ink on paper, etc.) will be in kazillions of places, and tape recordings and vinyl stereo records will be in others, so it will be in Design Space for sure. A song that was never written down or recorded but rather preserved and transmitted in an oral tradition will be harder to tie down to families of atoms, but a suitably convoluted subsection of Design Space over time will house it well enough. Just as the Library of Babel is filled mainly with junk, unreadable books of nonsense, Design Space is filled mainly with nonsensical stuff of no interest or function or competence at all, but here and there, Vanishingly thin threads of actual and possible design shine through; things that can do things aside from just waiting around to crumble under the inexorable edict of the second law of thermodynamics.
With just this roughed-out idea of Design Space in our heads, we can now see "at a glance" how to frame a series of questions that have haunted debate about evolution ever since Darwin's time: Are there any actual designs, natural or artificial, that are not ultimately derived from that single Tree of Life, either directly or indirectly?
Here are some answers to consider:

No.
Yes, some marvels of nature are just too wonderful, too "irreducibly complex," to have been arrived at by the plodding uphill process of design-by-evolution. They must have been independently created by an Intelligent Designer.
Yes, some human artifacts, such as the plays of Shakespeare and Gödel's theorem, are too wonderful to be "mere" products of evolved human brains; they are works of miraculous genius and are inexplicable by—unreachable by—the plodding uphill process of design-by-evolution.

We can characterize answers (2) and (3) as relying heavily on the contrast between the utterly inefficient, plodding process of natural selection ("Absolute Ignorance," as MacKenzie called it), and the swift, apparently effortless brilliance of Mozart (or any other "God-like" genius you choose). (Chapter 49 explores this.) Using our analogy between lifting and R & D, we can say that they each proclaim the need for a skyhook.

skyhook, orig. Aeronaut. An imaginary contrivance for attachment to the sky; an imaginary means of suspension in the sky. [Oxford English Dictionary]

The first use noted by the Oxford English Dictionary is dated 1915: "an aeroplane pilot commanded to remain in place (aloft) for another hour, replies 'the machine is not fitted with skyhooks'." The skyhook concept is perhaps a descendant of the deus ex machina of ancient Greek dramaturgy: when second-rate playwrights found their plots leading their heroes into inescapable difficulties, they were often tempted to crank down a god onto the scene, like Superman, to save the situation supernaturally. Or skyhooks may be an entirely independent creation of convergent folkloric evolution. Skyhooks would be wonderful things to have, great for lifting unwieldy objects out of difficult circumstances, and speeding up all sorts of construction projects. Sad to say, they are impossible.*
There are cranes, however. Cranes can do the lifting work our imaginary skyhooks might do, and they do it in an honest, non-question-begging fashion. They are expensive though. They have to be designed and built, from everyday parts already on hand, and they have to be located on a firm base of existing ground. Skyhooks are miraculous lifters, unsupported and insupportable. Cranes are no less excellent as lifters, and they have the advantage of being real. Anyone who, like me, is a lifelong onlooker at construction sites will have noticed with some satisfaction that it sometimes takes a small crane to set up a big crane. And it must have occurred to many other onlookers that in principle this big crane could be used to enable or speed up the building of a still more spectacular crane. Cascading cranes is a tactic that seldom if ever gets used more than once in real-world construction projects, but in principle there is no limit to the number of cranes that could be organized in series to accomplish some mighty end.†
Now imagine all the "lifting" that has to get done in Design Space to create the magnificent organisms and other artifacts we encounter in our world. Huge distances must have been traversed since the dawn of Life with the earliest, simplest, self-replicating entities, spreading outward (diversity) and upward (excellence). Darwin has offered us an account of the crudest, most rudimentary, stupidest imaginable lifting process—the wedge or inclined plane of natural selection. By taking tiny—the tiniest possible—steps, this process can gradually, over eons, traverse these huge distances. Or so Darwin claims. At no point would anything miraculous—from on high—be needed. Each step has been accomplished by brute, mechanical, algorithmic climbing, from the base already built by the efforts of earlier climbing.
It does seem incredible. Could it really have happened? Or did the process need a "leg up" now and then (perhaps only at the very beginning) from one sort of skyhook or another? For over a century, skeptics have been trying to find proof that Darwin's idea just can't work, at least not all the way. They have been hoping and hunting for skyhooks, as exceptions to what they see as the bleak vision of Darwin's algorithm churning away. And time and again, they have come up with truly interesting challenges—leaps and gaps and other marvels that do seem, at first, to need skyhooks. But then along have come the cranes, discovered in many cases by the very skeptics who were hoping to find a skyhook.
It is time for some more careful definitions. Let us understand that a skyhook is a "mind-first" force or power or process, an exception to the principle that all design, and apparent design, is ultimately the result of mindless, motiveless mechanicity. A crane, in contrast, is a subprocess, or a special feature of a design process that can be demonstrated to permit the local speeding up of the basic, slow process of natural selection, and that can be demonstrated to be itself the predictable (or retrospectively explicable) product of the basic process. Some cranes are obvious and uncontroversial; others are still being argued about, very fruitfully. Just to give a general sense of the breadth and application of the concept, let me point to three very different examples.
Symbiosis is a crane. One of my favorite examples is the symbiotic origin of the eukaryotic cell. If you look at the Tree of Life (facing p. 241), you will notice that the glorious fan-out of multicellular life, including all plants and animals, occurs after the evolution of eukaryotes. For about a billion years on this planet, the only living things were single-celled organisms, bacteria and archaea, together known as prokaryotes. Then one lucky day, one prokaryote happened to bump into another (it no doubt happened very often then, as it still does today), and instead of one of them engulfing and dismantling the other (eating it), or repelling it, the two joined forces, forming a brand new kind of living thing, with (roughly) twice as many working parts and a greater variety of working parts. Two R & D lineages that had been chugging along separately for millions of years, each honing its own peculiar talents, came together and the result was—happened to be—an overnight success. ("Technology transfer" does not always or even often yield good results, but when it does, it can be spectacular.) Neither lineage had to go to the plodding trouble of reinventing all the tricks and systems of the other, and since the combination of their talents happened to be a net gain (synergy is the buzzword for this), this eu-karyote ("good" + "cell") was fitter than either by itself, so the lineage of eukaryotes prospered. The claim that the origin of eukaryotes was such an event of symbiosis used to be controversial, but so many lines of evidence support it that it is now solidly in the textbooks. (It would be gratifying to report that the origin of the bacterial flagellum, long the flagship example of "irreducible complexity" among the Intelligent Design crowd, has also proved to be due to the helping crane of symbiosis, and although Lynn Margulis, the late biologist and champion of the symbiotic origin of the eukaryotes, vigorously defended this claim, the evidence currently favors alternative evolutionary accounts of the source of the flagellum. Given this embarrassment of riches, the claim that flagella need a skyhook is looking particularly forlorn now.)
As we can see at a glance in the Tree of Life, eukaryotes set the stage for all of multicellular life. All the multicolored lineages to the right of the bacteria and archaea are eukaryotes. To a first approximation, every living thing that can be seen by the naked eye is a eukaryote. The eukaryotic revolution opened up huge regions of Design Space, but it did not happen in order to make all these designs accessible. Cranes must be "paid for" locally, in terms of the immediate benefits they convey to those that have the design innovations. But once established they can have profound further effects. (Similarly, computers were not invented in order to make word-processing and the Internet possible, but once the space of possible computer applications was rendered accessible, design processes went into overdrive creating all the "species" we now rely on every day.)
Evolutionary theorists now generally agree that sex is a crane. Species that reproduce sexually can move through Design Space at a greater speed than species that reproduce asexually. Moreover, they can "discern" design improvements along the way that are all but "invisible" to asexually reproducing species (Holland, 1975). This cannot be the raison d'être of sex, however. Evolution cannot see way down the road, so anything it builds must have an immediate payoff to counterbalance the cost. As recent theorists have insisted, the "choice" of reproducing sexually carries a huge immediate cost: organisms send along only 50 percent of their genes in any one transaction (to say nothing of the effort and risk involved in securing a transaction in the first place). So the long-term payoff of heightened efficiency, acuity, and speed of the redesign process—the features that make sex a magnificent crane—is as nothing to the myopic, local competitions that must determine which organisms get favored in the very next generation. Some other, short-term benefit must have maintained the positive selection pressure required to make sexual reproduction an offer few species could refuse. There are a variety of compelling—and competing—hypotheses that might solve this puzzle, which was first forcefully posed for biologists by John Maynard Smith (1978). For a lucid introduction to this important topic in evolutionary biology, see Matt Ridley's book The Red Queen: Sex and the Education of Human Nature (1993).
Sex reveals that a crane of great power may exist that was not created in order to exploit that power; it was created for other reasons, although its power as a crane may help explain why it has been maintained ever since. A crane that was obviously created to be a crane is genetic engineering. Genetic engineers can now unquestionably take huge leaps through Design Space, creating organisms that would never have evolved by "ordinary" means. This is no miracle provided that genetic engineers (and the artifacts they use in their trade) are themselves wholly the products of earlier, slower evolutionary processes. If the creationists were right that mankind is a species unto itself, divine and inaccessible via brute Darwinian paths, then genetic engineering would not be a crane after all, having been created with the help of a major skyhook. I don't imagine that any genetic engineers think of themselves this way, but it is a logically available perch, however precarious. Less obviously silly is this idea: if the bodies of genetic engineers are products of evolution, but their minds can do creative things that are irreducibly non-algorithmic or inaccessible by all algorithmic paths, then the leaps of genetic engineering might involve a skyhook. We will briefly explore this prospect later.











39. Competence without Comprehension
MacKenzie described Darwin's idea of Absolute Ignorance being the source of "all the achievements of creative skill" as a "strange inversion of reasoning," since it turns upside down one of the most "obvious" ideas we have: comprehension is the source of competence. Why do we send our children to school, and why do we emphasize "concepts" over "rote learning"? Because we think that the best route to competence, in any sphere of activity, is comprehension. Don't settle for being a mindless drudge! Understand the principles of whatever we're doing so we can do it better! This is surely excellent advice in most arenas of human activity. We recognize extreme exceptions, such as gifted musicians who "play by ear" and can't read a note of music, or natural athletes who always seem to do the best thing but can't explain how or why they do it, and hence can't coach others. Then there are "idiot savants" with bizarre combinations of incompetence in most regards and superhuman prowess in some limited domain. But in general, the rule of thumb is hard to deny: comprehension is usually the key to (human) competence.
And Darwin really does invert that reasoning, showing, as MacKenzie so vividly put it, that Absolute Ignorance is the artificer. The process of natural selection is breathtakingly competent—think of Orgel's Second Law—but utterly mindless. Moreover, the organisms it designs get the benefits of all their exquisite equipment without needing to understand why or how they are so gifted. My favorite example is the cuckoo. Cuckoos are brood parasites that don't make their own nests. Instead, the female cuckoo surreptitiously lays her egg in the nest of a host pair of some other species of birds, where it awaits the attentions of its unwittingly adoptive parents. Often, the female cuckoo will roll one of the host eggs out of the nest—just in case the host parents can count! And as soon as the cuckoo chick is hatched (and it tends to incubate more quickly than the host eggs), the fledgling cuckoo goes to great efforts to roll any remaining eggs out of the nest! Why? To maximize the attention it will get from its adoptive parents.











40. Free-Floating Rationales
Natural selection is an automatic reason-finder; it "discovers" and "endorses" and "focuses" reasons over many generations. The scare quotes are to remind us that natural selection doesn't have a mind, doesn't itself have reasons, but it is nevertheless competent to perform this "task" of design refinement. This is itself an instance of competence without comprehension. Let's just be sure we know how to cash out the scare quotes. Consider a population with lots of variation in it. Some members of the population do well (at multiplying); most do not. In each case we can ask why. Why did this one have surviving offspring while these others did not? In many cases, most cases, there is no reason at all; it's just dumb luck, good or bad. But if there is a subset, perhaps a very small one, of cases in which there is an answer, a difference that happens to make a difference, then what those cases have in common provides the germ of a reason. This permits functionality to accumulate by a process that blindly tracks reasons, creating things that have purposes but don't need to know them. The Need to Know principle reigns in the biosphere, and natural selection itself doesn't need to know what it's doing.
So there were reasons before there were reason-representers. The reasons tracked by evolution I have called "free-floating rationales," a term that has apparently jangled the nerves of more than a few thinkers, who suspect I am conjuring up ghosts of some sort, strange immaterial ideas that have no business appearing in a sober materialist's account of reality. Not at all. Free-floating rationales are no more ghostly or problematic than numbers or centers of gravity. There were nine planets before people invented ways of articulating arithmetic, and asteroids had centers of gravity before there were physicists to dream up the idea and calculate with it. It is a mistake to confuse numbers with the numerals (Arabic or Roman or whatever) that we use as their names. Numerals are human inventions; numbers are not. Reasons, in the sense I am using the term, are like numbers, not numerals. We should all be happy to speak of the reasons uncovered by evolution before they were ever expressed or represented by human investigators or any other minds. Consider the strikingly similar constructions in the figures facing page 240.
The termite castle and Antoni Gaudí's La Sagrada Familia are very similar in shape but utterly different in genesis and construction. There are reasons for the structures and shapes of the termite castle, but they are not represented by any of the termites. There is no Architect Termite who planned the structure, nor do any individual termites have the slightest clue about why they build the way they do. Competence without comprehension. There are also reasons for the structures and shapes of Gaudí's masterpiece, but they are (in the main) Gaudí's reasons. Gaudí had reasons for the shapes he ordered created; there are reasons for the shapes created by the termites, but the termites don't have those reasons. There are reasons why trees spread their branches, but they are not in any strong sense the trees' reasons. Sponges do things for reasons; bacteria do things for reasons; even viruses do things for reasons. But they don't have the reasons; they don't need to have the reasons.
There are reasons aplenty for these behaviors, but in general, organisms need not understand them. They are endowed with behaviors that are well designed by evolution, and they are the beneficiaries of these designs without needing to know about it. This feature is everywhere to be seen in nature, but it tends to be masked by our tendency, adopting the intentional stance, to interpret behavior as more mindful and rational than it really is. How clever the termites are to air-condition their castles with well-placed ventilation shafts! How sagacious the squirrel is to store away food for the winter! How wily the pickerel is to hover motionless as its prey approaches! These are indeed excellent strategies for success in the unrelentingly competitive world of nature, but their beneficiaries need not appreciate what we do when we figure them out. We are the first minds to represent the reasons that account for the success of these arrangements.











41. Do Locusts Understand Prime Numbers?
Just to drive home the point about the independence of numbers and numerals, free-floating rationales and represented reasoning, consider the case of the seventeen-year locusts. In 1977, Stephen Jay Gould wrote an insightful and admiring chapter about the curious fact that cicadas (such as the "seventeen-year locust") have reproductive cycles with lengths, in years, equal to prime numbers—thirteen years, or seventeen, but never fifteen or sixteen, for instance. "As evolutionists," Gould (p. 99) says, "we seek answers to the question, why. Why, in particular, should such striking synchronicity evolve, and why should the period between episodes of sexual reproduction be so long?" The answer—which makes beautiful sense, in retrospect—is that by having a large prime number of years between appearances, the cicadas minimize the likelihood of being discovered and later tracked as a predictable feast by predators who themselves show up every two years, or three years, or five years. If the cicadas had a periodicity of, say, sixteen years, then they would be a rare treat for predators who showed up every year, but a more reliable source of food for predators who showed up every two or four years, and an even-money gamble for predators who got in phase with them on an eight-year schedule. If the length of their reproductive period is not a multiple of any lower number, however, they are not worth "trying" to track for any species that isn't lucky enough to have exactly the same periodicity (or some multiple of it—the mythical Thirty-Four-Year Locust-Muncher would be in fat city).
It should be clear that the soundness of this explanation (which may not yet be established) does not depend on any hypothesis suggesting that locusts understand arithmetic, let alone prime numbers. Nor does it depend on the process of natural selection understanding prime numbers. The mindless, uncomprehending process of natural selection can exploit this important property of some numbers without having to understand it at all. For another example: neither bees nor Mother Nature need to understand the geometry that declares the hexagon the ideal shape for cells in a honeycomb. Many more examples of evolution's mathematical competence-without-comprehension could be cited.











42. How to Explain Stotting
Remember the baffling regularity revealed in the intuition pump about the two black boxes? You didn't have to have a semantic or intentional interpretation of the boxes to see it: α caused red, and β caused green—an obvious pattern in need of explanation. In each instance of button-pressing, the scientists understood exactly how each step in the computing and transmitting process worked, but they couldn't explain the generalization. You do need a semantic interpretation to explain why the regularity exists. In other words, the "macro-causal" level at which the explanation is expressed does not "reduce" to the "micro-causal" level.
Here is another instance of this very general phenomenon. You have probably seen video of gazelles being chased across the plain by a predator, and noticed that some of the gazelles are leaping high into the air during their attempts to escape their pursuer. This is called stotting. Why do gazelles stot? It is clearly beneficial, because gazelles that stot seldom get caught and eaten. This is a causal regularity that has been carefully observed, just like the regularity between buttons and lights. And it too can baffle. No account of the actions of all the proteins in all the cells of all the gazelles and the predators chasing them could reveal why this regularity exists. For that we need the branch of evolutionary theory known as costly signaling theory (Zahavi, 1987; FitzGibbon and Fanshawe, 1988). The strongest and fastest of the gazelles stot to advertise their fitness to the pursuer, signaling in effect, "Don't bother chasing me; I'm too hard to catch; concentrate on one of my cousins who isn't able to stot—a much easier meal!" and the pursuer takes this to be an honest, hard-to-fake signal and ignores the stotter. This is the free-floating rationale, and it need not be appreciated by either gazelle or predator. That is, the gazelle may be entirely oblivious to why it is a good idea to stot if it can, and the predator, say, a lion, may not understand why it finds stotting gazelles relatively unattractive prey, but if the signaling wasn't honest, costly signaling, it couldn't persist in the evolutionary arms race between predator and prey. (If evolution tried using a "cheap" signal, like tail-flicking, which every gazelle, no matter how strong or weak, could send, it wouldn't be worth it for lions to pay attention to it, so they wouldn't.) These explanations in terms of free-floating rationales are not reducible to explanations at lower levels, such as the molecular level, but it is important to recognize that even though the explanation of why and how stotting works is from the intentional stance (in terms of what it would be rational for a lion to conclude from the stotting of the gazelle), the individual lion or gazelle need not understand the meaning of stotting for it to work; they need only sorta understand it.











43. Beware of the Prime Mammal
You may think you're a mammal, and that dogs and cows and whales are mammals, but really there aren't any mammals at all. There couldn't be! Here's a philosophical argument to prove it (drawn with alterations from Sanford, 1975):

Every mammal has a mammal for a mother.
If there have been any mammals at all, there have been only a finite number of mammals.
But if there has been even one mammal, then by (1), there have been an infinity of mammals, which contradicts (2), so there can't have been any mammals. It's a contradiction in terms.

Since we know perfectly well that there are mammals, we take this argument seriously only as a challenge to discover what fallacy is lurking within it. It's a straightforward reductio ad absurdum, so something has to give. And we know, in a general way, what has to give: if you go back far enough in the family tree of any mammal, you will eventually get to the therapsids, strange, extinct bridge species between the reptiles and the mammals. A gradual transition occurred from clear reptiles to clear mammals, with a lot of hard-to-classify intermediaries filling in the gaps. What should we do about drawing the lines across this spectrum of gradual change? Can we identify a mammal, the Prime Mammal, that didn't have a mammal for a mother, thus negating premise (1)? On what grounds? Whatever the grounds are, they will compete with the grounds we could use to support the verdict that that animal was not a mammal—after all, its mother was a therapsid. What could be a better test of therapsid-hood than that? Suppose we list ten major differences used to distinguish therapsids from mammals, and declare that having five or more of the mammal marks makes an animal a mammal. Aside from being arbitrary—why ten differences instead of six or twenty, and shouldn't they be ordered in importance?—any such dividing line will generate lots of unwanted verdicts, since during the long, long period of transition between obvious therapsids and obvious mammals there will be plenty of instances in which mammals (by our five-plus rule) mated with therapsids (less than five mammal marks) and had offspring that were therapsids born of mammals, mammals born of therapsids born of mammals, and so forth! Of course we would need a time machine to see all these anomalies, since the details are undetectable after all those millions of years. It's just as well, since the details don't really matter in the long run. What should we do? We should quell our desire to draw lines. We don't need to draw lines. We can live with the quite unshocking and unmysterious fact that all these gradual changes accumulated over many millions of years and eventually produced undeniable mammals. Similarly the differences between lakes, ponds, and wetlands or marshes do not need to be calibrated, even by limnologists (those who study inland waters).
Philosophers, however, tend to be tidy, fussy users of words. Ever since Socrates persisted in demanding to be told precisely what marked the defining features of virtue, knowledge, courage, and the like, philosophers have been tempted by the idea of stopping a threatened infinite regress like this one by identifying something that is—must be—the regress-stopper: the Prime Mammal, in this case. It often lands them in doctrines that wallow in mystery, or at least puzzlement, and it commits them to essentialism. The Prime Mammal must be whichever mammal in the set of mammals was the first to have all the essential mammalian features. If there is no definable essence of mammal—and evolutionary biology shows us that there are no such essences—these philosophers are in trouble. So, as a general rule, consider ignoring the philosophers' demand for an essence, a defining feature, a "truth-maker." It typically—not always—starts a wild goose chase that may be diverting but is only moderately illuminating at best.
Abandoning this demand is a really bitter pill for many philosophers to swallow. The rational methods for doing philosophy that have been handed down since Socrates almost always call for "defining your terms" in such a way as to commit everybody in the discussion to a doctrine of essentialism, even if only for the sake of argument, as we say. If we have to abandon essentialism, some of our favorite argument forms are rendered almost useless. Consider, for instance, the structure of arguments that start with an apparently trivially true disjunction:

Either A or not-A (how can you argue with that?)
If you choose path A, then blahblahblah, so you arrive at conclusion C;
and if you start with not-A, then blahblahblah, you also arrive at C!
Therefore C is established.

But what if there are apparently lots of intermediate cases about which it isn't clear whether they are A or not-A (mammals or not mammals, alive or not alive, conscious or not conscious, a belief or not a belief, moral or not moral, etc.)? In order to brush aside this worry, you must "draw a line" distinguishing the A from the not-A and banishing all sorta talk. Without that sharp boundary, marking the essence of whatever is at stake, the argument simply can't be constructed. Such arguments work brilliantly in mathematics, where you really can draw the lines. Every integer really is odd or even, and every number really is rational or not rational, and every polygon really is a (three-sided) triangle or not. Outside of such abstract domains, these arguments fare less well.
The insistence that there must be a Prime Mammal, even if we can never know when and where it existed, is an example of hysterical realism. It invites us to reflect that if we just knew enough, we'd see—we'd have to see—that there is a special property of mammal-hood that defines mammals once and for all. To deny this, philosophers sometimes say, is to confuse metaphysics with epistemology: the study of what there (really) is with the study of what we can know about what there is. I reply that there may be occasions when thinkers do go off the rails by confusing a metaphysical question with a (merely) epistemological question, but this must be shown, not just asserted.











44. When Does Speciation Occur?
A curious feature of evolution by natural selection is that it depends crucially on events that "almost never" happen. For instance, speciation, the process in which a new species is generated by wandering away from its parent species, is an exceedingly rare event, but each of the millions of species that have existed on this planet got its start with an event of speciation. Every birth in every lineage is a potential speciation event, but speciation almost never happens, not once in a million births. Mutation in DNA almost never happens—not once in a trillion copyings—but evolution depends on it. Moreover, the vast majority of mutations are either deleterious or neutral; a fortuitously "good" mutation almost never happens. But evolution depends on those almost rarest of rare events.
Consider an intuition pump about a remarkable possibility: At this time, so far as we know, there is just one species of hominid on the planet, Homo sapiens. But suppose that fifty years from now, all but a lucky handful of our descendants are wiped out by a virus that leaves only two groups of survivors: a thousand Inuit living on remote Cornwallis Island off Greenland, and a thousand Andamanese living in splendid isolation on islands in the middle of the Indian Ocean. These two populations have been isolated from each other for thousands of years and have developed distinct physiological differences in response to their very different environments, but we have no good reason to question the standard assumption that they are members of our species. Suppose these populations remain both geographically and reproductively isolated for another ten thousand years, eventually repopulating the globe with two species—as they learn when they finally encounter each other and discover they have no interest in mating with each other, and besides, their few inadvertent attempts at mating are fruitless, a standard mark of allopatric speciation, reproductive isolation produced over time by geographical isolation. They might wonder, When precisely did the speciation occur? It is probably the case that their last common ancestor lived more than thirty thousand years ago, but speciation didn't occur then and there (and so far as we know, it hasn't occurred yet), but it still might emerge in a few thousand years that speciation had occurred at some time before the two populations were reunited. Did speciation occur before the dawn of agriculture or after the creation of the Internet? There is no nonarbitrary answer we could comfortably defend. There must have been a last common ancestor, or concestor to use Dawkins's (2004) term, living maybe thirty thousand years ago, and the offspring of this individual could eventually turn out in the fullness of time to have been the founders of two different species, but it still isn't settled today, one way or the other, whether a speciation event started then.
Here we would have an event, a birth that could turn out to have played a pivotal role in human (and post-human) history, one that occurred in a precise time and place but didn't acquire its special status until millennia of sequelae had fixed that role, which was never a foregone conclusion. All it would take to prevent that birth from ever having been a speciation event would be a single boatload (or planeload) of islanders making a journey that led to the "premature" reuniting of the branches. One can imagine that speciation actually occurred at some precise but unknowable moment in the interval between initial isolation of the lineages and the eventual demonstration of their status as two species, but how could such a tipping point be defined? Presumably as the earliest time at which, thanks to the accumulation of chromosomal divergence between the two lineages, if any cross-lineage matings had been attempted, they would have proved infertile. But surmises about such counterfactuals are of scant significance.
The building of the transcontinental railroad split the herds of American bison into reproductively isolated populations, but Buffalo Bill Cody and his colleagues nipped that potential speciation event in the bud in no time by pretty much wiping out all but one of the populations. Populations of conspecifics often get divided by environmental events into two (or more) isolated groups, which stay reproductively isolated from each other for a few generations, and almost always either these groups reunite again or one group goes extinct. So although such first steps to speciation must happen fairly often, they almost never lead to speciation, and when they do, it is an outcome that takes many hundreds of generations to establish. Absolutely nothing about the circumstances of the initial separation could tell you whether they were the beginnings of a speciation event, even if you had perfect physical knowledge of every molecule in the world at the time. The very concept of a species is a sorta concept. Domestic dogs, coyotes, and wolves are named as species, and yet coydogs and dog-wolf offspring are quite common, so "officially" maybe we should consider these as three mere varieties, not even subspecies, of Canidae. Generalizations about the possibility of hybridizing—creating offspring from parents of different species—are hard to establish, which is not surprising when you reflect that every individual of every species exhibits subtle differences from every other individual of that species. This does not particularly worry biologists; they have learned not to fret over definitions or essences, since the processes that create all the intermediate cases are well understood.











45. Widowmakers, Mitochondrial Eve, and Retrospective Coronations
A woman in New York City may suddenly acquire the property of being a widow by virtue of the effects that a bullet has just had on some man's brain in Dodge City, over a thousand miles away. (In the days of the Wild West, there was a revolver nicknamed the Widowmaker. Whether a particular revolver lived up to its nickname on a particular occasion might not be settled by even the most exhaustive examination of the scene of the crime.) The example gets its curious capacity to leap through space and time from the conventional nature of the relationship of marriage, in which a past historical event, a wedding, is deemed to create a permanent relation—a formal relation, not a causal relation—of interest in spite of subsequent wanderings and concrete misfortunes (the accidental loss of a ring, or the destruction of the marriage certificate, for instance).
The system of genetic reproduction is natural, not conventional, but it works like clockwork, and that very systematicity permits us to think formally about causal chains extending over millions of years, causal chains that would otherwise be virtually impossible to designate or refer to or track. This permits us to become interested in, and reason rigorously about, even more distant and locally invisible relationships than the formal relationship of marriage. Speciation, like marriage, is a concept anchored within a tight, formally definable system of thought, but unlike marriage it has no conventional saliencies—weddings, rings, certificates—by which it can be observed. As we just saw, speciation is also a curiously "long-distance" phenomenon, in both space and time. Species are fuzzy-edged collections over time, and we could only retrospectively (and arbitrarily) identify some individual organism in such a crowd as the Prime Mammal (so don't bother). We can see this feature of speciation in a better light by looking first at another instance of retrospective crowning, the conferring of the title of Mitochondrial Eve, which is not arbitrary.
Individual organisms have rather crisper bounders and hence clearer identities than species, but even with them there are plenty of fence-sitters. Let's take the most striking instance: of the ten trillion or so cells that are crowded together inside your clothes, nine out of ten are not human! Yes, symbiont visitors in thousands of species outnumber your host cells—the cells that descended from the zygote formed by your parents' union. There are not only bacteria but also eukaryotes, both single-celled microbes and multicellular organisms: fungi, mites in your eyelashes and elsewhere, worms microscopic and bigger, and who knows what else. You are a walking ecosystem, and while some of the visitors are unwanted (the fungi that cause athlete's foot, or the bacteria that lead to bad breath or crowd around any infection), others are so essential that if you succeeded in evicting all the trespassers, you would die. Since these symbiont cells are generally much smaller than your human cells, by weight you are mostly human, but their combined weight is not negligible either—probably several pounds, and maybe as much as ten. Then there are the viruses, in even greater numbers.
Still, in spite of your porous boundaries, you—like other individual organisms—are readily distinguished from the others, and sometimes we can single out a specific individual organism for a specific role in evolutionary history. Mitochondrial Eve is one of the most famous. Mitochondrial Eve is the woman who is the most recent direct ancestor, in the female line, of every human being alive today. We all have mitochondria in our cells, and they are passed to us through the maternal line alone, so all the mitochondria in all the cells in all the people alive today are direct descendants of the mitochondria in the cells of a particular woman, named Mitochondrial Eve by Rebecca Cann, Mark Stoneking, and Allan Wilson (1987).
Mitochondria are tiny organelles in our cells that play a central role in metabolism, capturing energy from food to use in all the body's projects, and mitochondria have their own DNA, a telling trace of their symbiotic origin several billion years ago. By analyzing the patterns in the mitochondrial DNA of the different people alive today, scientists have been able to deduce roughly how recently Mitochondrial Eve lived, and even where she lived. Early calculations suggested that Mitochondrial Eve lived in Africa about three hundred thousand years ago, but that number has been refined more recently: she lived (in Africa, almost certainly) only two hundred thousand years ago. Deducing where and when is a far trickier task than deducing that there was a Mitochondrial Eve, something no biologist doubts. Consider a few of the things we already know about Mitochondrial Eve, setting aside the controversies. We know that she had at least two daughters who had surviving daughters. (If she had just one daughter, her daughter would wear the crown of Mitochondrial Eve.) To distinguish her title from her proper name, let's call her Amy. Amy bears the title of Mitochondrial Eve; that is, she just happens to have been the maternal founder of today's line of people. It is important to remind ourselves that in all other regards, there was probably nothing remarkable or special about Mitochondrial Eve; she was certainly not the First Woman, nor the founder of the species Homo sapiens. Many earlier women were unquestionably of our species, but none of them, as it happens, was the most recent source of all the mitochondria in all the people living today. It is also true that although Mitochondrial Eve had daughters and granddaughters, she was probably not noticeably stronger, faster, more beautiful, or more fecund than the other women of her day.
To bring out just how un-special Mitochondrial Eve—that is, Amy—probably was, suppose that tomorrow, thousands of generations later, a virulent new disease were to spread around the earth, wiping out 99 percent of the human race in a few years. The survivors, fortunate to have some innate resistance to the disease virus, would probably be quite closely related. Their closest common direct female ancestor—call her Betty—would be some woman who lived hundreds or thousands of generations later than Amy, and the crown of Mitochondrial Eve would pass to her, retroactively. She may have been the source of the mutation that centuries later became a species-saver, but it probably didn't do her any good, since the virus against which it triumphs probably didn't exist in its virulent form then. The point is that Mitochondrial Eve can only be retrospectively crowned. This historically pivotal role is determined not just by the accidents of Amy's own time, but by the accidents of later times as well. Talk about massive contingency! If Amy's uncle hadn't saved her from drowning when she was three, none of us (with our particular mitochondrial DNA, thanks ultimately to Amy) would ever have existed! If all of Amy's granddaughters had starved to death in infancy—as so many infants did in those days—the same oblivion would be ours.
The same logical argument establishes that there is—must be—an Adam as well: the closest direct male ancestor of every man and boy alive today. We can call him Y-chromosome Adam, since all our Y-chromosomes pass down through the paternal line just the way our mitochondria pass through the maternal line.* Was Y-chromosome Adam the husband or lover of Mitochondrial Eve? Not a chance. Paternity being a much less time- and energy-consuming business than maternity, what is logically possible is that Y-chromosome Adam lived very recently, and was very, very busy in the bedroom—leaving Errol Flynn in his, um, dust. If the oldest living man today is, say, 110 years old, it is logically possible that Y-chromosome Adam was his father, an early-twentieth-century Don Juan who is also the father or grandfather or great-grandfather, and so on, of all the younger living males. We males make billions of sperm, after all, hundreds of millions in each ejaculation, so it wouldn't take Y-chromosome Adam more than a week to make enough sperm to father the whole human race (in principle)! But by counting all the genetic differences in men's Y-chromosomes around the world, and calculating how long it would take for that much mutation to accumulate, we can estimate the actual date for Y-chromosome Adam as somewhat less than one hundred thousand years ago. And again, if a plague struck down half, say, the male population, in all likelihood the crown of Y-chromosome Adam would pass to a much more recent progenitor.*
A curious fact about every individual organism—you, or me, or your dog, or your geranium, for instance—is that it is a potential founder of a new species, the first of a long line of whatchamacallits, but it will be hundreds or thousands of generations before whatchamacallits stand out from the crowd enough to be recognized as a species, so the coronation would have to occur long after you, or I, or your dog, or your geranium had returned to dust. Your parents could thus turn out to be the most recent common ancestors of all the members of two humanoid species, but don't hold your breath. Chihuahuas and Great Danes are members of the same species, Canis familiaris, but if civilization collapses and their respective offspring go feral, they could more readily achieve the breakaway of speciation than, say, beagles and Basset Hounds, since without human help, fertilization of Chihuahuas by Great Danes, or vice versa, is unlikely. In all likelihood, however, both lineages would go extinct, as have most lineages over the eons, before that happened.
It is estimated that well over 99 percent of all the organisms that have ever lived have died without having had offspring. And yet here you are: of all your billions of ancestors over the years, from single cells to worms to fish to reptiles to mammals to primates, not a single one of them died childless. How lucky you are! Of course every blade of grass has an equally long and proud heritage, and every mosquito, and every elephant and every daisy.











46. Cycles
Everybody knows about the familiar large-scale cycles of nature: day follows night follows day; summer-fall-winter-spring-summer-fall-winter-spring; the water cycle of evaporation and precipitation that refills our lakes, scours our rivers, and restores the water supply of every living thing on the planet. But not everybody appreciates how cycles—at every spatial and temporal scale from the atomic to the astronomic—are quite literally the hidden spinning motors that power all the wonderful phenomena of nature. Nikolaus Otto built and sold the first internal-combustion gasoline engine in 1861, and Rudolf Diesel built his engine in 1897, two brilliant inventions that changed the world. Each exploits a cycle, the four-stroke Otto cycle and the two-stroke Diesel cycle, that accomplishes some work and then restores the system to the original position so that it is ready to accomplish more work. The details of these cycles are ingenious, and they have been discovered and optimized by an R & D cycle of invention that is several centuries old. An even more elegant, micro-miniaturized engine is the Krebs cycle, which was discovered in 1937 by Hans Krebs, but invented over millions of years of evolution at the dawn of life. It is the eight-stroke chemical reaction that turns fuel—food—into energy in the process of metabolism that is essential to all life, from bacteria to redwood trees.
Biochemical cycles like the Krebs cycle are responsible for all the motion, growth, self-repair, and reproduction in the living world, wheels within wheels within wheels, a clockwork with trillions of moving parts, and each clock needing to be rewound, restored to step one so that it can do its duty again. All of these cycles have been optimized by the grand Darwinian cycle of reproduction, generation after generation, picking up fortuitous improvements over the eons.
At a completely different scale, our ancestors discovered the efficacy of cycles in one of the great advances of human prehistory: the role of repetition in manufacture. Take a stick and rub it with a stone and almost nothing happens—a few scratches are the only visible sign of change. Bring the stick back to the starting point and do it again. Still you have almost nothing to show for your efforts. Rub it a hundred times and there is still hardly anything to see. But rub it just so, for a few thousand times, and you can turn it into an uncannily straight arrow shaft. By the accumulation of imperceptible increments, the cyclical process creates something altogether new. The combination of foresight and self-control required for such projects was itself a novelty, a vast improvement over the repetitive but largely instinctual and mindless building and shaping processes of other animals. And that novelty was itself a product of the Darwinian cycle, enhanced eventually by the swifter cycle of cultural evolution, in which the reproduction of the technique wasn't passed on to offspring through the genes but transmitted among non-kin who picked up the trick of imitation.
The first ancestor who polished a stone into a handsomely symmetrical hand axe must have looked pretty stupid in the process. There he sat, rubbing away for hours on end, to no apparent effect. But hidden in the interstices of all the mindless repetition was a process of gradual refinement that was well-nigh invisible to a naked eye designed by evolution to detect changes occurring at a much faster tempo.* The same appearance of futility has occasionally misled sophisticated biologists. In his elegant book Wetware, the molecular and cell biologist Dennis Bray (2009) describes cycles in the nervous system:

In a typical signaling pathway, proteins are continually being modified and demodified. Kinases and phosphates work ceaselessly like ants in a nest, adding phosphate groups to proteins and removing them again. It seems a pointless exercise, especially when you consider that each cycle of addition and removal costs the cell one molecule of ATP—one unit of precious energy. Indeed, cyclic reactions of this kind were initially labeled "futile." but the adjective is misleading. The addition of phosphate groups to proteins is the single most common reaction in cells and underpins a large proportion of the computations they perform. Far from being futile, this cyclic reaction provides the cell with an essential resource: a flexible and rapidly tunable device. [p. 75]

The word "computations" is aptly chosen. Computer programmers have been exploring the space of possible computations for less than a century, but their harvest of invention and discovery so far includes millions of loops within loops within loops. It turns out that all the "magic" of cognition depends, just as life itself does, on cycles within cycles of recurrent, "re-entrant," reflexive information-transformation processes ranging from the nano-scale biochemical cycles within each neuron, through the generate-and-test cycles of predictive coding in the perceptual systems (see Clark, 2013, for a brilliant survey), to the whole brain sleep cycle, large-scale waves of cerebral activity and recovery that are revealed by EEG recordings. The secret ingredient of improvement everywhere in life is always the same: practice, practice, practice.
It is useful to remember that Darwinian evolution is just one kind of accumulative, refining cycle. There are plenty of others. The problem of the origin of life can be made to look insoluble ("irreducibly complex"—Behe, 1996) if one argues, as Intelligent Design advocates have done, that since evolution by natural selection depends on reproduction, there cannot be a Darwinian solution to the problem of how the first living, reproducing thing came to exist. It was surely breathtakingly complicated, beautifully designed—it must have been a miracle. If we lapse into thinking of the pre-biotic, pre-reproductive world as a sort of featureless chaos of chemicals (like the scattered parts of the notorious jetliner assembled by a windstorm that creationists invite us to imagine), the problem does look daunting and worse, but if we remind ourselves that the key process in evolution is cyclical repetition (of which genetic replication is just one highly refined and optimized instance), we can begin to see our way to turning the mystery into a puzzle: How did all those seasonal cycles, water cycles, geological cycles, and chemical cycles, spinning for millions of years, gradually accumulate the preconditions for inaugurating the biological cycles? Probably the first thousand "tries" were futile, near misses. But as the wonderfully sensual song by George Gershwin and Buddy DeSylva reminds us, see what happens if you "do it again" (and again, and again).*
A good rule of thumb, then, when confronting the apparent magic of the world of life and mind is to look for the cycles that are doing all the hard work.











47. What Does the Frog's Eye Tell the Frog's Brain?
One of the early classics of cognitive science is the famous paper "What the Frog's Eye Tells the Frog's Brain," by J. Y. Lettvin and colleagues (1959). It showed that the frog's visual system is sensitive to small moving dark spots on the retina, tiny shadows cast in almost all natural circumstances by flies flying in the vicinity. This "fly-detector" mechanism is appropriately wired to the hair trigger in the frog's tongue, which handily explains how frogs feed themselves in a cruel world and thereby help propagate their kind. Now what does the frog's eye tell the frog's brain? That there is a fly out there, or that there is a fly-or-a-"slug" (a fake fly of one sort or another), or a thing of kind K (whatever kind of thing reliably triggers this visual gadget—recall the two-bitser)? Darwinian meaning theorists (such as Ruth Millikan, David Israel, and I) have discussed this very case, and the arch-critic of evolutionary theory, Jerry Fodor, has pounced on it to show what is wrong, by his lights, with any evolutionary account of such meanings: They are too indeterminate. They fail to distinguish, as they ought, between such frog-eye reports as "fly here now" and "fly or small dark projectile here now" and so forth. But this is false. We can use the frog's environment of selection (to the extent that we can determine what it has been) to distinguish between the various candidates. To do this, we use exactly the same considerations we used to settle the questions about the meaning of the state in the two-bitser. And to the extent that there is nothing in the selective environment that uniquely singles out a particular class of occasions, there is also no fact of the matter about what the frog's-eye-report really means. This can be brought home vividly by sending the frog to Panama—or more precisely, sending the frog to a novel selective environment.
Suppose scientists gather up a small population of frogs from some fly-grabbing species on the brink of extinction, and put them under protective custody in a new environment—a special frog zoo in which there are no flies, but rather zookeepers who periodically arrange to launch little food pellets past the frogs in their care. To the keepers' delight, the system works; the frogs thrive by zapping their tongues for these pellets, and after a while there is a crowd of descendant frogs who have never seen a fly, only pellets. What do their eyes tell their brains? If you insist on saying the meaning hasn't changed, you are in a bind. The case of the frogs is simply an artificially clear instance of what happens in natural selection all the time: exaptation—the reuse of an existing structure for a new function. As Darwin was careful to remind us, the reuse of machinery for new purposes is one of the secrets of Mother Nature's success. We can drive home the point, to anyone who wishes some further persuasion, by supposing that not all the captive frogs do equally well. Variation in pellet-detecting prowess in their visual systems causes some to eat less heartily than others, and then to leave less progeny as a result. In short order there will have been undeniable selection for pellet detection—though it would be a mistake to ask exactly when enough of this has occurred for it to "count." Don't listen for a bell to ring indicating that what the frog's eye is saying has just now been revised. There was no Prime Mammal and there is no Prime Pellet Detection.
Unless there were "meaningless" or "indeterminate" variation in the triggering conditions of the various frogs' eyes, there could be no raw material (blind variation) for selection for a new purpose to act upon. The indeterminacy that Fodor (and others) see as a flaw in Darwinian accounts of the evolution of meaning is actually a precondition for any such evolution. The idea that there must be something determinate that the frog's eye really means—some possibly unknowable proposition in froggish that expresses exactly what the frog's eye is telling the frog's brain—is just essentialism applied to meaning (or function). Meaning, like function, on which it so directly depends, is not something determinate at its birth. It arises not by saltation—huge leaps in Design Space—or special creation, but by a (typically gradual) shift of circumstances.











48. Leaping Through Space in the Library of Babel
In 1988, Otto Neugebauer, the great historian of astronomy, was sent a photograph of a fragment of Greek papyrus that had a few numbers written in a column on it. The sender, a classicist, had no clue about the meaning of this bit of papyrus and wondered if Neugebauer had any ideas. The eighty-nine-year-old scholar recomputed the line-to-line differences of the numbers, found their maximum and minimum limits, and determined that this papyrus had to be a translation of part of "Column G" of a Babylonian cuneiform tablet on which was written a Babylonian "System B" lunar ephemeris! (An ephemeris is a tabular system for computing the location of a heavenly body for every time in a particular period.) How could Neugebauer make this Sherlock Holmesian deduction? Elementary: he recognized that what was written in Greek (a sequence of sexagesimal—not decimal—numbers) was part—column G!—of a highly accurate calculation of the moon's location that had been worked out by the Babylonians. There are lots of different ways of calculating an ephemeris, and Neugebauer knew that anyone working out their own ephemeris independently, using their own system, would not have come up with exactly the same numbers, though they might have been close. The Babylonian system B was excellent, so the design had been gratefully conserved, in translation, with all its fine-grained particularities (Neugebauer, 1989).
Neugebauer was a great scholar, but you can probably execute a parallel feat of deduction, following in his footsteps. Suppose you were sent a photocopy of the text below, and asked the same question: What does it mean? Where might this be from?



Before reading on, try it. You can probably figure it out even if you don't know how to read the old German fraktur typeface—and even if you don't know German! Look again, closely. Try to pronounce the words with great emphasis and sonority and don't worry about mispronunciation. Did you get it? Impressive stunt! Neugebauer may have his Babylonian column G, but you quickly determined, didn't you, that this fragment must be part of a German translation of lines from an Elizabethan tragedy (act III, scene 2, lines 79-80 to be exact). Once you think about it, you realize that it could hardly be anything else! The odds against this particular sequence of German letters getting strung together under any other circumstances are Vast.*
The R & D that went into creating that sequence is too specific to be duplicated by chance. Why? What is the particularity that marks such a string of symbols? Nicholas Humphrey (1987) makes the question vivid by posing a more drastic version: if you were forced to "consign to oblivion" one of the following masterpieces, which would you choose: Newton's Principia, Chaucer's Canterbury Tales, Mozart's Don Giovanni, or Eiffel's tower? "If the choice were forced," Humphrey answers,

I have little doubt which it should be: the Principia would have to go. How so? Because, of all those works, Newton's was the only one that was not irreplaceable. Quite simply: if Newton had not written it, then someone else would—probably within the space of a few years. ... The Principia was a glorious monument to human intellect, the Eiffel Tower was a relatively minor feat of romantic engineering; yet the fact is that while Eiffel did it his way, Newton merely did it God's way.












49. Who Is the Author of Spamlet?
Suppose Dr. Frankenstein designs and constructs a monster, Spakesheare, which thereupon sits up and writes out a play, Spamlet.
Who is the author of Spamlet?
First, let's take note of what I claim to be irrelevant in this intuition pump. I haven't said whether Spakesheare is a robot, constructed out of metal and silicon chips, or, like the original Frankenstein's monster, constructed out of human tissues—or nano-engineered out of cells, or proteins, or amino acids, or carbon atoms. As long as Dr. Frankenstein carried out the design work and the construction, it makes no difference to the example what the materials are. It might well turn out that the only way to build a robot small enough and fast enough and energy-efficient enough to sit on a stool and type out a play is to construct it from artificial cells filled with beautifully crafted motor proteins and other carbon-based nano-robots. That is an interesting technical and scientific issue, but not of concern here. For exactly the same reason, if Spakesheare is a metal-and-silicon robot, it may be larger than a galaxy if that's what it takes to get the requisite complication into its program—and we may have to repeal the speed limit for light so that we can imagine it taking place in a human length of time. These technical constraints are commonly declared to be off-limits in such intuition pumps, and this time we may go along with the gag, since nothing will hinge on it. (Turn the knobs and see if this is so.) If Dr. Frankenstein chooses to make his artificial intelligence (AI) robot out of proteins and the like, that's his business. If his robot is cross-fertile with normal human beings and hence capable of creating what is arguably a new species by giving birth to a child, that is fascinating, but what we will be concerned with is Spakesheare's purported brainchild, Spamlet. Back to our question: Who is the author of Spamlet?
In order to get a grip on this question, we have to look inside and see what happens in Spakesheare. At one extreme, we find inside a file (if Spakesheare is a robot with a computer memory) or a basically memorized version of Spamlet, all loaded and ready to run. In such an extreme case, Dr. Frankenstein is surely the author of Spamlet, using his intermediate creation, Spakesheare, as a mere storage-and-delivery device, a particularly fancy word processor. All the R & D work was done earlier and copied to Spakesheare by one means or another.
We can visualize this more clearly by imagining Spamlet and its galaxy of near neighbors in the Library of Babel. How did Spamlet get there? What was the trajectory of R & D that created it? If we find that the whole journey was already completed by the time Spakesheare's memory was constructed and filled with information, we know that Spakesheare played no role at all in the search. Working backward, if we find that Spakesheare's only role was running the stored text through a spell-checker before using it to guide its typing motions, we will be unimpressed by claims of Spakeshearian authorship. This is a measurable, but Vanishing, part of the total R & D. There is a sizable galaxy of near-twin texts of Spamlet—roughly a hundred million different minor mutants have but a single uncorrected typo in them, and if we expand our horizon to include one typo per page, we have begun to enter the land of Vast numbers of variations on the theme. Working back a little further, once we graduate from typos to thinkos,* those arguably mistaken, or suboptimally chosen, words, we have begun to enter the land of serious authorship, as contrasted with mere copy-editing. The relative triviality of copy-editing, and yet its unignorable importance in shaping the final product, get well represented in Design Space, where every little bit of lifting counts for something, and sometimes a little bit of lifting moves you onto a whole new trajectory. As usual, we may quote Ludwig Mies van der Rohe at this juncture: "God is in the details."
Now let's turn the knobs on our intuition pump and look at the other extreme, in which Dr. Frankenstein leaves most of the work to Spakesheare. The most realistic scenario would surely be that Dr. Frankenstein equipped Spakesheare with a virtual past, a lifetime stock of pseudo-memories of experiences on which to draw while responding to its Frankenstein-installed obsessive desire to write a play. Among those pseudo-memories, we may suppose, are many evenings at the theater, or reading books, but also some unrequited loves, some shockingly close calls, some shameful betrayals, and the like. Now what happens? Perhaps some scrap of a "human interest" story on the network news will be the catalyst that spurs Spakesheare into a frenzy of generate-and-test, ransacking its memory for useful tidbits and themes, transforming what it finds, jiggling the pieces into temporary, hopeful structures that compete for completion, most of them dismantled by the corrosive processes of criticism that nevertheless expose useful bits now and then, and so forth. All of this multileveled search would be somewhat guided by multilevel, internally generated evaluations, including evaluation of the evaluation of the evaluation functions as a response to evaluation of (evaluation of) the products of the ongoing searches (cycles within cycles within cycles).
Now if the amazing Dr. Frankenstein had actually anticipated all this activity down to its finest grain at the most turbulent and chaotic level, and had hand-designed Spakesheare's virtual past, and all its search machinery, to yield just this product, Spamlet, then Dr. Frankenstein would be, once again, the author of Spamlet, but also, in a word, God. Such Vast foreknowledge would be simply miraculous. Restoring a smidgen of realism to our fantasy, we can set the knobs at a less extreme position and assume that Dr. Frankenstein was unable to foresee all this in detail, but rather delegated to Spakesheare most of the hard work of completing the trajectory in Design Space to one literary work or another, something to be determined by later R & D occurring within Spakesheare itself. We have now arrived, by this simple turn of the knob, in the neighborhood of reality itself, for we already have actual examples of impressive artificial authors that Vastly outstrip the foresight of their own creators. Nobody has yet created an artificial playwright worth serious attention, but both an artificial chess player—IBM's Deep Blue—and an artificial composer—David Cope's EMI—have achieved results that are, in some respects, equal to the best that human creative genius can produce.
Who beat Garry Kasparov, the reigning World Chess Champion? Not Murray Campbell or any members of his IBM team. Deep Blue beat Kasparov. Deep Blue designs better chess games than any of them can design. None of them can author a winning game against Kasparov. Deep Blue can. Yes, but. Yes, but. You may be tempted to insist at this point that when Deep Blue beats Kasparov at chess, its brute-force search methods are entirely unlike the exploratory processes that Kasparov uses when he conjures up his chess moves. But that is simply not so—or at least it is not so in the only way that could make a difference to the context of this discussion of the Darwinian perspective on creativity. Kasparov's brain is made of organic materials and has an architecture importantly unlike that of Deep Blue, but it is still, so far as we know, a massively parallel search engine that has built up, over time, an outstanding array of heuristic pruning techniques that keep it from wasting time on unlikely branches. There is no doubt that the investment in R & D has a different profile in the two cases; Kasparov has methods of extracting good design principles from past games, so that he can recognize, and know enough to ignore, huge portions of the game space that Deep Blue must still patiently canvass seriatim. Kasparov's "insight" dramatically changes the shape of the search he engages in, but it does not constitute "an entirely different" means of creation. Whenever Deep Blue's exhaustive searches close off a type of avenue that it has some algorithmic way of identifying as probably negligible (a difficult, but not impossible task), it can reuse that R & D whenever it is appropriate, just as Kasparov does. Deep Blue's designers have done much of this analytical work and given it as an innate endowment to Deep Blue, but Kasparov has likewise benefitted from the fruits of hundreds of thousands of person-years of chess exploration transmitted to him by players, coaches, and books and subsequently installed in the habits of his brain.
It is interesting in this regard to contemplate a suggestion Bobby Fischer once made. He proposed to restore the game of chess to its intended rational purity by requiring that the major white pieces be randomly placed in the back row and the major black pieces be arranged in the same random order (mirror image) in the opposite back row at the start of each game (but always ensuring that each side has a white-square and black-square bishop, and the king was between the rooks). This would instantly render the mountain of memorized openings almost entirely obsolete, for humans and machines alike, since only rarely would any of this lore come into play. One would be thrown back onto a reliance on fundamental principles; one would have to do more of the hard design work in real time, with the clock running. It is far from clear whether this change in rules would benefit human beings more than computers. It all depends on which type of chess player is relying most heavily on what is, in effect, rote memory—reliance with minimal comprehension on the R & D of earlier explorers.
The fact is that the search space for chess is too big for even Deep Blue to explore exhaustively in real time, so like Kasparov, it prunes its search trees by taking calculated risks, and like Kasparov, it often gets these risks precalculated. Both presumably do massive amounts of "brute-force" computation on their very different architectures. After all, what do neurons know about chess? Any work they do must be brute-force work of one sort or another.
It may seem that I am begging the question in favor of a computational, AI approach by describing the work done by Kasparov's brain in this way, but the work has to be done somehow, and no other way of getting the work done has ever been articulated. It won't do to say that Kasparov uses "insight" or "intuition," since that just means that Kasparov himself has no privileged access, no insight, into how the good results come to him. So, since nobody—least of all Kasparov—knows how Kasparov's brain does it, there is not yet any evidence to support the claim that Kasparov's means are "entirely unlike" the means exploited by Deep Blue. One should remember this when tempted to insist that "of course" Kasparov's methods are hugely different. What on earth could provoke one to go out on a limb like that? Wishful thinking? Fear?
But that's just chess, you say, not art. Chess is trivial compared to art (now that the World Chess Champion is a computer). This is where composer and computer hacker David Cope's Experiments in Musical Intelligence, or EMI for short (2000, 2001), come into play. Cope set out to create a mere efficiency-enhancer, a composer's aid to help him over the blockades of composition any creator confronts, a high-tech extension of the traditional search vehicles (the piano, staff paper, the tape recorder, etc.). As EMI grew in competence, it promoted itself into a whole composer, incorporating more and more of the generate-and-test process. When EMI is fed music by Bach, it responds by generating musical compositions in the style of Bach. When given Mozart, or Schubert, or Puccini, or Scott Joplin, it readily analyzes their styles and then composes new music in those styles, better pastiches than Cope himself—or almost any human composer—can write. When fed music by two composers, EMI can promptly compose pieces that eerily unite their styles, and when fed, all at once (with no clearing of the palate, you might say) all these styles, it proceeds to write music based on the totality of its musical "experience." The compositions that result can then also be fed back into it, over and over, along with whatever other music comes along in MIDI format,* and the result is EMI's own "personal" musical style, a style that candidly reveals its debts to the masters while being an unquestionably idiosyncratic integration of all this "experience." EMI can now compose not just two-part inventions and art songs but whole symphonies—and has composed over a thousand, when last I heard. They are good enough to fool experts (composers and professors of music), and I can personally attest to the fact that an EMI-Puccini aria brought a lump to my throat. David Cope can no more claim to be the composer of EMI's symphonies and motets and art songs than Murray Campbell can claim to have beaten Kasparov in chess.
To a Darwinian, this new element in the cascade of cranes is simply the latest in a long history, and we should recognize that the boundary between authors and their artifacts should be just as penetrable as all the other boundaries in the cascade. When Richard Dawkins (1982) notes that the beaver's dam is as much a part of the beaver phenotype—its extended phenotype—as its teeth and its fur, he sets the stage for the further observation that the boundaries of a human author are exactly as amenable to extension. In fact, we have known this for centuries and have carpentered various semi-stable conventions for dealing with the products of Rubens, of Rubens's studio, of Rubens's various students. Wherever there can be a helping hand, we can raise the question of just who is helping whom, what is creator and what is creation.











50. Noise in the Virtual Hotel
Consider the difference between virtual worlds and real worlds. If you want to make a real hotel, you have to put a lot of time, energy, and materials into arranging matters so that the people in adjacent rooms can't overhear each other. When you go to make a virtual hotel, you get that insulation for free. In a virtual hotel, if you want the people in adjacent rooms to be able to overhear each other, you have to add that capacity. You have to add non-insulation. You also have to add shadows, aromas, vibration, dirt, footprints, and wear-and-tear. All these nonfunctional features come for free in the real, concrete world. The generic term for what must be added to virtual worlds to make them more realistic is collision detection. If you have ever tried to make a computer video game, you probably soon realized that putting shapes in motion on the screen is not enough. The shapes pass right through each other without any effect unless you build collision detection into the update loop (a cycle in your program that incessantly intervenes in whatever the program object is doing and asks, Am I colliding with anything?).
In his book Le Ton Beau de Marot, Doug Hofstadter (1997) draws attention to the role of what he calls spontaneous intrusions into a creative process. In the real world, almost everything that happens leaves a wake, makes shadows, has an aroma, makes noise, and this provides a bounty of opportunities for spontaneous intrusions. It is also precisely what is in short supply in a virtual world. Indeed one of the chief beauties of virtual worlds, from the point of view of computer modelers, is that quietness: nothing happens except what you provide for, one way or another. This permits you to start with a clean slate and add features to your model one at a time, seeing what the minimal model is that will produce the sought-for effects.
This absence of noise makes computer simulations of evolution extremely limited, since evolution by natural selection feeds on noise, turning fortuitously encountered noise into signal, junk into tools, bugs into features. An early computer simulation of evolution that is still one of the most impressive is Karl Sims's Evolved Virtual Creatures (1994), which can be seen at http://www.karlsims.com/evolved-virtual-creatures.html.
Sims started with random assemblies of virtual jointed blocks with virtual muscles to move the joints, and then let them evolve in their virtual world with its virtual physics. The program automatically selected the assemblages that moved the farthest on their trials for virtual mating, and then repeated the cycle with the resulting off-spring. Better and better swimmers, walkers, and jumpers evolved, untouched by any intelligent designer's hand. The far-from-random designs that resulted demonstrated how efficiently (virtual) evolution could sorta discover good design principles and sorta reinvent a striking variety of features found in nature.
It is a spectacular example of getting a lot from a relatively simple model, but it also shows the narrow limits of virtual world evolution. Sims designed the simple "developmental" system that takes whole genomes as inputs and yields novel organisms as outputs, but that process is all backstage, not part of the virtual world being simulated. As a result an accidental bump or shock or collision with a bit of (virtual) debris cannot shorten or lengthen a genome, or change the rules of gene expression. All of that machinery is simply not in the virtual world with its virtual stuff, and hence is immutable. There is no way, for instance, for a Sims creature to evolve a new chromosome. Its whole genetic system is outside the model, not facing natural selection itself but merely conveying genetic information by fiat between generations. (For another example of this phenomenon, see chapter 51.)
In a computer model of creativity there should be junk lying around that your creative processes can bump into, noises that your creative processes can't help overhearing. The spontaneous intrusion of that little noise from the next room may tweak what those processes are doing in a way that is serendipitous, or in a way that is destructive, but either way this opens up new possibilities. The exploitation of accidents is the key to creativity, whether what is being made is a new genome, a new behavior, or a new melody.
Let me clarify what I'm not saying. The problem with Sims's evolved creatures is not that they are not made of carbon, or that they contain no protein or hemoglobin. The problem is that they are virtual. And by being virtual, they live in a world many orders of magnitude simpler than the world of biological evolution. The same thing is true of Cope's EMI. Wonderful as it is, EMI is orders of magnitude simpler than the world of human musical composition. What's delightful about both cases is the discovery of just how much you can get from something so clean, so noise-free, so abstract.
We can imagine improving Cope's EMI, or Sims's work, or any other such project in artificial life or artificial creativity, by adding more and more and more junk, more and more opportunities for collisions, into the world. This would provide more virtual stuff for their sims to cope with, and you never can tell when serendipity will strike, if given an opportunity. But consider how counterintuitive such advice would appear:

No matter what you're modeling, make sure that every phenomenon, every subroutine, everything that happens in that world broadcasts a variety of nonfunctional effects through the world: makes extraneous noises, leaves a wake, sheds dust, causes vibrations, and so forth.

Why? What is all this noise for? It's not for anything; it's just there so that every other process has that noise as a potential source of signal, as something that it might turn, by the alchemy of the creative algorithm, into function, into art, into meaning. Every increment of design in the universe begins with a moment of serendipity, the undesigned intersection of two trajectories yielding something that turns out, retrospectively, to be more than a mere collision. But to the extent that computer modelers follow this advice, they squander the efficiency that makes computers such great tools. So there is a sort of homeostasis here. We can see that, not for any mysterious reason, computer modeling of creativity confronts diminishing returns. In order to get closer and closer to the creativity of a human composer, the model has to become ever-more concrete; it has to model more and more of the incidental collisions that impinge on an embodied composer.








