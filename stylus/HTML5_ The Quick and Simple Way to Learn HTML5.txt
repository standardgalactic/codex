




 
 
 
HTML5:
 
The Quick and Simple Way to Learn HTML5












Table of Contents
Introduction
How to Use This Book
What is HTML5?
Why Use HTML5?
Reasons to Choose HTML5
Reasons to Avoid HTML5
New Features of HTML5
Getting Started with HTML5
Do You Need a Degree?
Creating Some HTML5
What You Will Need
HTML5 Markup Basics
Tags
How to Make a Form
Blog Creation
Changing Typography
Setting Up Your Website
Choosing a Web Host
Picking the Best Domain
Tips for Choosing a Great Domain Name
Conclusion













HTML5
 
FREE Books and Relevant Information Brought to you by C Tech Publishing
CLICK BELOW

Published By:
C Tech Publishing
Manufactured in Canada
Copyright 2015 © All Rights Reserved











Introduction
How to Use This Book
 
If you are interested in learning how to create websites, beginning to use coding like HTML5 is a wonderful way to do so. This ebook will take you through the steps of creating a basic website, and tell you everything that you will need to know. However, there are practically limitless things that you can do with HTML5. It would be impossible to include everything in any single guide, and many of those things would be quite complex to learn. This guide is directed at beginners, and even some intermediate users. Now that you know this is the right guide for you, please move along to the next section.
 
As you might already know, HTML knowledge will allow you to create websites, from the ground up. However, there are already countless tutorials and lessons for using HTML. This book is about HTML5, and all of the brilliant, new things that this latest version of HTML is capable of. For that reason, some of the basics of putting a simple HTML website together are only glossed over here.











What is HTML5?
 
In the past, websites were made using "front-ends", like CSS, Javascript, and of course HTML. They are thought of as being at the front, because they basically control what a website looks like, when a user views it. While they started out being relatively primitive, if comparing them with today's standards, they have certainly flourished into very modern technologies. There has been a drastically refreshing boost in the types of features that can be used today, with things like HTML5, which would have never been thought possible without using a complex "back-end", such as Perl, Ruby On Rails, or PHP.
 
What is the biggest refreshment in front-end technology? You might have guessed that it is HTML5. This comprehensive guide for beginners will teach you more about what HTML5 is, what is can do, and then teach you the basics of how to use it. However, you do not need to have existing experience with creating websites to use this book, although it would be helpful to have.
 









Why Use HTML5?
 
Being able to create stylish, elegant webpages is a great way to share information with others. If you really want to send a message out to the rest of the world, whether it is personal or for business — it pays to have a well made website. Many different developers and companies have started to adopt this latest version of HTML, and they have been taking to it very well.
 
Various user-friendly website platforms, like Drupal, WordPress, and Joomla are extremely popular. That is because they make the creation of websites easy. However, there are plenty of reasons to avoid using these types of systems.











Reasons to Choose HTML5
 
●    Flexibility. This is probably one of the biggest reasons that website creators choose to use coding, like HTML5, instead of content management systems. As HTML needs to be created from nothing, using proper coding, there are endless possibilities. All you need to do is learn how to create something, or figure it out yourself, and you can make a website in any way imaginable. Websites made using HTML5 can work on a range of different browsers, without any troubles. They also allow support for a range of different screen sizes, and the updates that HTML5 has brought along don't stop there.
●    Efficiency. Unlike many CMS platforms, HTML5 does not need to use communication between servers and clients. This means that websites with HTML5 are extremely light, and tend to have much shorter loading times for users. The speed at which the websites can adapt for screen sizes is also improved. Websites that are fast to load are easier to use, and that means that users are more likely to keep looking at your content.
●    Security. The problem with using a content management system (CMS), like WordPress, is that they often are not very secure. There are plenty of people who have had their WordPress sites hacked. The only thing keeping the hackers away from your content is the passwords that you choose. HTML doesn't use passwords for access to its databases, so there is a much lower chance that someone will be able to access your system without permission.
●    SEO. If you are not familiar with SEO (Search Engine Optimization), it is all about trying to place webpages on the first search page of search engines, such as Google. Unfortunately, search engines change their algorithms quite often, so something that worked well in the past, might not work at all in the future. With HTML5, you can easily make changes to suit these alterations. Being able to adapt is crucial for successful SEO, as any expert will tell you. Sure, CMS platforms like WordPress do have SEO plugins, but using HTML5 allows you to embed your SEO techniques deeply into every desired part of a website. This can give much much power over search engine rankings, and make websites much more successful.









Reasons to Avoid HTML5             
 
Keep in mind that HTML5 is not going to be ideal for everyone. Some people might not want to learn any coding, or simply do not have the time to learn how to make a website properly by themselves. In these circumstances, it is better to use a simpler platform.
 
It is certainly worth learning how to use HTML5, especially if you wish to become a professional website creator. As you can see, it will give you the power, and the flexibility, to create websites your way. However, it is definitely not easy to learn, especially for people who have no existing computer skills. The effort is well worth it in the end, because you will have a valuable skill.
 









New Features of HTML5
 
HTML has been around for a long time, but HTML5 has brought a range of new features onboard. If you are not familiar with coding HTML at all, these might not mean a whole lot to you. After all, just about everything is going to seem new and exciting. However, for people who have already been creating websites with HTML for some time — the benefits and features of HTML5 are a real game-changer.
 
Here are the new features that have been added with HTML5:
 
●                Improved Forms: The way that webforms work, with different methods for using "<input>" attributes, have been added.
●                Added semantics: Semantics are used to create your code. There are new ones added, including "<section>", "<footer>", and "<header>".
●                Canvas: This feature involves a Javascript-enabled drawing area, that can operate in two dimensions.
●                Geolocation: This lets visitors to your webpages share their location in the world.
●                Websocket: This is a new type of bidrectional technology for communicating in web apps.
●                Local storage persistence: This can now be done without using plugins from third-parties.
●                Server-Sent Events (SSE): A new type of event has been brought in with HTML5, allowing flow from browsers to servers.
●                Audio/Video: Audio and Video can now be embedded in webpages using HTML5, without needing to use plugins from third-parties.
●                Drag and drop: This feature lets items on a webpage be moved around easily, with a drag and drop method.
●                Microdata: This brilliant feature allows new semantics to be created, making extra vocabularies that are not included with HTML5.











Getting Started with HTML5
Do You Need a Degree?
 
When many people start to think about learning HTML and website design, they often wonder if they need to go to college. Yes, you can learn an awful lot if you attend university. There is absolutely nothing wrong with seeking out higher education, and getting yourself some proper certification. However, you can still become a great web designer without it.
 
Keep in mind that many employers will look to see if applicants do have college certification. After all, that is one of the few ways for them to know if you have actually learned everything that you need to know. Unless you can somehow show them everything that you can do, and all of the knowledge that is floating around inside your brain — you might find it tough to get yourself a good job in this field. You might think it's "stupid" to need a "piece of paper", but that's life.
 
If you would rather create your own path, and do things at a pace that suits you, the Internet is the best place to learn more about HTML5 and web design. You have already taken the first important step, by reading this guide. Next, you should seek out more knowledge, and go through every tutorial that you can get your hands on. The best way to learn (if you choose not to go to college) is to do for yourself, and absorb information as you go.











Creating Some HTML5
 
One of the best ways to learn how to use HTML5 is to dive in, and start to create something. Throughout the rest of this book, you will be shown some of the new features of HTML5, and its ability to display a range of content types. You will create code that contains an area for posting blogs, as well as a place for people to join up with an email list. Don't start to panic, because these things really are not as hard to do as they might sound.
 
It should not take you more than an half an hour to go through the following lessons. If you need more time, that is perfectly fine, because there is no need to rush.
 









What You Will Need
 
If you are reading this, you probably already have a computer. However, if you are using a mobile device or tablet, these lessons will not be as easy. Sure, you can probably do some of the basics with a mobile app, but a PC is ideal. In addition, you are going to need the Internet at some point. However, one of the great parts of using a front-end like HTML5, is that you do not need to be constantly online as you add and edit to your website.
 
Your Text Editor
 
You have probably used a word processor before, such as Microsoft Word. Before that, you might have used Notepad to do some writing. While this program is great for regular word processing, it is actually what is known as a text editor. It is extremely basic, but suitable for writing code. Of course, you might want to try something with some more bells-and-whistles, as that will make learning a lot easier.












Word processors might be wonderful for writing essays and letters, but they are completely inappropriate for coding. They include a lot of extra formatting, and generally make files that Internet browsers do not get along well with. You will be creating your HTML5 code in the file format of "plain text".
 
In order to make plain text, and edit it, a text editor is required. There are lots of different programs to choose from, and many of them are free to download and use. A very popular, free, text editor for Windows is Notepad++. If you are using a Mac, you might like to try TextMate. For those of you running Linux, your OS might have come with Gedit installed already, or you can download it yourself.
 
This tutorial will be using Sublime Text 2, since it can be installed on Windows, OSX, and Linux. While it is not free, the trial period has no cut-off date, so you are free to keep using it for as long as you like. Download it and then complete the appropriate installation process.
 
Lots of Patience
 
This is something that many guides fail to tell you about. Learning how to code websites, from scratch, using nothing but a text editor — is not for everyone. It requires patience, and the will to keep on trying. You are not going to understand everything right away, and some concepts might continue to allude you for some time. Just remember that everyone has to start from the beginning at some point; the best thing to do is keep your cool, and stay patient.











HTML5 Markup Basics
Put away those permanent markers, because markup has nothing to do with drawing all over your wall. You might have been wondering what HTML actually stands for. It means Hypertext Markup Language, which is basically all of the code that is used to create the structural parts of webpages. HTML does not actually create the styles, which is a whole different topic.
 
For now, you are going to learn how to create a basic webpage, without worrying about how it will actually look. That can be done at a later time. For now, focus on the fundamental elements.
 
Make a new folder on your computer, and label it with the title of your website. Since it will only be used as part of this guide, you can just make up any old name for now.
 
The next thing you need to do is open Sublime Text 2 (or another text editor, if you have decided to use something else). Make a new file, save it in the folder that you just made, and name it "form1.html".
 
Next, you are going to write some actual code. You will notice that Sublime Text 2 changes various parts of your text into different colors, and also suggests different tags for you. Don't worry about that just yet, but it will become extremely helpful as you start to do more coding. You will also notice numbers along the left side of your text area. This is simply an easy way to keep track of things, and has some other uses.












Type the following into the new file that you just made:
 
1 <!doctype html>
2 <html lang="en">
3 <head>
4               <meta charset="UTF-8">
5               <title>Document</title>
6 </head>
7 <body>
8
9 </body>
10 </html>
 
This is a basic "boilerplate" sort of text, and is present on just about any website that you look at. Many people would have created theirs manually, while others allowed a management system to do the behind-the-scenes coding for them.
 
After you have saved an HTML file, you can open it with your regular web browser. It will still be offline, on your system, and not online yet. However, you will be presented with your HTML, as it would look online (if you were to upload it somewhere).











Tags
 
You can see that there are lots of pieces of text with "<" and ">" surrounding them. These are used to declare something as a tag. For example, If you place "<html>" on either side of some text, you are using code to tell your computer what it is.
 
You probably want to know more about what all of those tags actually do. Here is a brief list of explanations for some of the HTML tags that you just entered:
 
<head>
 
This is the part of coding where you can put the title of a webpage, as well as thing like the meta tags, or other types of coding.
 
<body>
 
Oddly enough, this is the body of your content. Just about everything else goes here, and much of the focus on these lessons will also be placed here.
 
This type of markup is called semantic markup, since the bits of coding actually have names that tend to denote their purposes.
 
To get an idea of the different uses that tags can have in HTML5, take a look at some different websites. Many of them feature similar items on the pages. This includes areas of writing, titles (headers), footers, various boxes, and often sidebars on the left or right. However, many of these things are not actually necessary for the main content that viewers want to see. They do make it much easier to navigate around the website, and to utilize other valuable functions.












There are plenty of different tags in HTML that have been specially made for many of the things that you see on websites. This is not some obscure code that people just happened to find useful for making websites. HTML is all about website creation, which is another reason that it is such a powerful tool to learn for this use.
 
HTML5 actually makes it much simpler to use these types of codes, so that more can be done, with less effort or problems. As discussed in the first chapter, it also brings a bunch of new, more powerful, features along.












More Tags Explained
 
There are plenty of different tags to use, and lots of different ways to implement them into your webpages. However, for now it is best to stick to just a handful of the key tags. Here are some more common tags, and explanations for their uses:
 
<Section>
 
These tags are placed around the primary page content. You might like to think of sections as book chapters, containing all of the content, no matter what format it is in.
 
<Header>
 
This might contain some meta tags and the title of your website, but it often contains a website's logo as well.
 
<Footer>
 
This works like a footer in a Word document, and is generally used to place copyright details, information about how to contact the author, and maybe links to other parts of the website.
 
<Aside>
 
This particularly helpful tag is used for placing content that related to the body article. However, aside content should be removable, without ruining the flow of the article.
 
<Article>
 
This is the main text of a webpage, and is the same as an article in a newspaper. Inside this tag you should place your story or post for each page. Since this is the primary text of a page, it should make perfect sense, even if it is looked at with nothing else visible.









How to Make a Form
 
You should now be developing an understanding of how HTML5 works, and the ways that it can be used to create the webpages that you are used to seeing. Now, it is time to learn how to create a commonly used type of feature for websites — a form. The way that forms are created has been updated in HTML5, so you will learn how it works. To be more specific, this will be a sign-up form. These are often used on websites, so that visitors can join email lists, or even to apply for memberships or competitions. There are plenty of uses for a form, but they really aren't hard to create.
 
Please take note that a back-end really is required for many functions of a form. However, HTML5 is a front-end technology, so that is all that will be discussed in this guide. For now, focus on creating your front-end, and worry about the other aspects later.
 
You will not be using any sort of article, like a blog post for example. That means you will use the "section" tag that was discussed previously. Inside this tag, the code for the form will be created. What kind of information would someone want to record for a form?
 
For this example, you will create a simple sign-up sheet for a small business's email list. It will require users to give their email, as well as their age. There will be third field for people to leave a message, if they would like to do so.
 
A form is made up of three different elements, including buttons, labels, and inputs. These are all denoted by use tags. Remember the file you created earlier, with Sublime Text 2? Open that up again, because you will be adding to it.
 
Note the bold text, because that is what you will need to add into the body of your text. This is just the "section" that will contain the form.












1 <!doctype html>
2 <html lang="en">
3 <head>
4    <meta charset="UTF-8">
5    <title>Document</title>
6 </head>
7 <body>
8    <section>
9       <form action="">
10
11       </form>
12    </section>             
13 </body>
14 </html>
 
Next, an area where an email address can be input is required. This simply uses the "<input>" tag. It doesn't need to be closed with a second "<input>" tag just yet. In addition, this input will have "email" in front of it, since that's what it's for.
 
The "email" preface used in this step makes it so an an email address has to be entered. So that you can get an idea of how helpful HTML5 is, consider what this step would have required in the past. Earlier forms of HTML would have accepted whatever someone entered, and you would have needed some extra code, just to make sure that you were receiving real email addresses. Isn't it much simpler to just use the "email" preface that comes with HTML5?
 
1 <!doctype html>
2 <html lang="en">
3 <head>
4    <meta charset="UTF-8">
5    <title>Document</title>
6 </head>
7 <body>
8    <section>
9       <form action="">
10          Email <input type="">
11       </form>
12    </section>             
13 </body>
14 </html>
 
Since you definitely want people to give an email, make the field a requirement, using "required". If someone tries to complete a form without entering a valid email address, they will receive an message asking them to enter one. This field will can also be given a name, in case you decide to use a back-end later. This is where the "name" attribute, and the "email" value, are used. Your code should now look like this:
 
1 <!doctype html>
2 <html lang="en">
3 <head>
4    <meta charset="UTF-8">
5    <title>Document</title>
6 </head>
7 <body>
8    <section>
9       <form action="">
10          Email <input type="email" name="email" required>
11       </form>
12    </section>             
13 </body>
14 </html>
 
Next, there will be space for people to enter their age. There might be plenty of reasons for this, but often it is required for websites that don't want to send information out to youths. Pretend that the email list is intended for people who are over the age of 13. Since you want to ask for an age from every person who fills out the form, this will also be "required".












To ask for an age, a "number" will be requested, like so:
 
1 <!doctype html>
2 <html lang="en">
3 <head>
4    <meta charset="UTF-8">
5    <title>Document</title>
6 </head>
7 <body>
8    <section>
9       <form action="">
10          Email <input type="email" name="email" required>
11          Age <input type="number" name="number" required>
12       </form>
13    </section>             
14 </body>
14 </html>
 
While this would not be considered the neatest coding in the world, it will work just fine. You can always come back to make things look pretty at a later point, once you have finished learning the basics.











Blog Creation
 
Another important part of HTML5 is the ability to easily create a blog, and make posts for it. This is a relatively easy thing to do, so it will not take long. After all, if it was difficult to create a blog post, people might not prefer to use HTML5 to do so.
 
The first thing that you will need to do is start a new file in Sublime Text 2, and save it as "Index.html". Next, the same boilerplate that you used to create the form will need to be added.
 
It will probably be difficult to remember, but that boilerplate looks like this:
 
1 <!doctype html>
2 <html lang="en">
3 <head>
4               <meta charset="UTF-8">
5               <title>Document</title>
6 </head>
7 <body>
8
9 </body>
10 </html>
 
Next, you will need to use the tag for an "article", which will denote that the content within is for a blog post or main article on the page (a blog post in this case, but they form the same function). If you know any HTML, you will be aware of the "<p>" tag. If not, that's perfectly fine. "<p>" is used in front of a new paragraph of text.












Instead of typing out your an actual blog post right now, just enter something random, like "Hello world! How are you today!?"
 
1 <!doctype html>
2 <html lang="en">
3 <head>
4               <meta charset="UTF-8">
5               <title>Document</title>
6 </head>
7 <body>
8    <section>
         <article>
            <p> Hello world! How are you today!? </p>
            <p> Hello world! How are you today!? </p>
            <p> Hello world! How are you today!? </p>
         </article>
      </section>
9 </body>
10 </html>
 
What you have just coded will create a basic page that contains the phrase "Hello world! How are you today!?" repeated three times, with paragraph breaks in between each. Notice how the "</p>" tag is closed with "</p>" to declare that you have finished with that paragraph of text. Without properly closing tags, your code will not work as desired at all.
 
This looks pretty boring, but you will learn how to choose a different font in the next topic.











Changing Typography
 
While this word sounds pretty "old school", it is simply the field of using different styles of letters, and arranging them in pleasing ways. Basically every printed thing that you have ever read, online and offline, has incorporated typography in its creation.
 
You might think that the way letters and words are put down isn't really important, or that it's easy to do. It's true that writing out some text and publishing it is pretty easy. However, there is a huge amount of time, skill, and effort that goes into creating the perfect typography for publications, like websites. Choosing something that looks great, is formatted appropriately to complement the rest of the content on a page — and possibly most importantly, is easy to read — is an art all of its own.
 
There are heaps of different fonts that are freely available online, and your different applications will come with their own as well, as with Word. For this part of the guide, you will be using a pretty basic, and popular, font that is called Droid Sans, from the Google Fonts archive.
 
Remember how the "<head>" tags can be used to contain a range of different information? To change the font on the form and blog post that you have created, you simply need to insert a little bit of code in the "<head>" tags of your HTML files:
 
< link href='http://fonts.googleapis.com/css?family=Droid+Sans' rel='stylesheet' type='text/css' >
 
Once you have done this, you have actually used what is likely your first bit of CSS. This is a type of coding that is used to improve the look of webpages. In this case, you have used CSS to choose a better font.
 
Once you have added this line of code in between your "<head>" tags, you will notice that the font has changed, when you open the file with a web browser.









Setting Up Your Website
If you are going to create a webpage, learning how to create HTML5 files is only one aspect. While it is an incredibly big part of making websites, you will also need to give people access to what you make. In order to do that, your files are going to need to be online.
 
Many people have trouble after they have learned how to create some basic webpages, simply because they don't know what to do next. It is easy to throw around terms like "web host" and "server" and "domain name". However, if you are just starting out as an HTML coder, these things might not mean a whole lot to you.
 
This chapter will not deal directly with HTML5, but it is integral to getting your webpages online, and ensuring that people can actually view them.











Choosing a Web Host
 
Before you can put your creations out there on the Internet, you will need a place to put them. This is what a web host can provide: an online server for your files to live on, at all times of night and day, where people can visit them.
 
You might have seen advertisements for web hosting, while looking for information about creating HTML5. There are certainly plenty to choose from. If money is a serious issue, it might be best to choose one of the cheaper options. However, you often do get what you pay for, and a lousy web host can bring a whole bunch of problems for your website.
 
If you are creating a site as a hobby, and you are not too concerned about the reliability of your web host, this step might not be too important. However, if you are making a website with HTML5 for business, or something important — it is best to shop around and find a reliable web host company.
Consider the following things when you are selecting a web host for your website:
 
●    Space. How many megabytes, or gigabytes, do you get with your plan? Many hosts offer unlimited space, so don't get yourself trapped into a limited plan.
●    Contracts? Generally, if you agree to a longer contract, you will need to pay less for each month. This can work out well for people who are able to pay a large sum up-front. However, it might be a better idea to try out a web host for a month, before you commit to a longer term.
●    FTP. This is what many people use to upload their HTML files, and other files, to their web host's servers. It is a kind of file browser, you could say. If you are going to create your websites with HTML5, you will need a way to upload your own files. Some web hosts only allow people to use certain site building tools to create pages, and don't allow any user files to be uploaded. Make sure that you choose a host with FTP, or some other way to upload all the files that you will want to use.
●    Limitations on files. Some free, or cheap, web hosts might only allow small files to be uploaded. If you are going to create a nice page, you will want to have freedom to upload whatever files you like.
●    Back-end. If you are going to get right into the world of coding websites with HTML5, you will want to be able to use Perl or PHP, at least.
●    Reliability. This is one of the most important parts of any web host. If you want lots of visitors to go to your website, you had better make sure that they can access the pages quickly, and at any time. If you choose a cheap web host, you might experience a lot of down time, or find that your pages just load slowly.
●    Customer support. This is very important for people who are operating a business, or a professional website. Find a web host with great technical support. That way, if something does go wrong with your website, they will be able to quickly help you. There is nothing worse than having your website crash, only to be given a week-long runaround by support. 
●    Control panel. Different web hosts will have their own names for this. However, they all basically allow you to change things about your website, as with a control panel on a computer. You want a control panel that lets you use your email, add files, delete files, move them around, and change your account passwords. If you don't have access to all of the important things through a web host's control panel, you might be stuck asking their technical team to change things for you all the time.
●    Email services. Many paid web hosts offer emails with their plans. This will give you the option of having emails with your own domain as the suffix. For example, you could have "bob@bobsstore.com". This looks much better than using a Gmail or Hotmail email address, especially for a business.












Ask for Advice
 
If you have been looking around for the best web host for some time, and you still cannot decide, try asking others. You might not actually know anyone who is an authority on the subject. However, you can find reviews about different web hosts online. Just make sure that you get advice from someone who genuinely knows what they are talking about, and is trying to help. Don't just go to a phony "review" site that is trying to get kick-backs by convincing people to sign up with different companies.
 









Picking the Best Domain
 
While this is a lot less technical than most other aspects of creating a website, it is one of the most important steps. Put simply, the domain name is what you type in, or link to, when you go to a website.
 
For example, it might be "www.mydomain.com".
 
Have you ever wondered how all these different website were given their domains in the first place? In order to create your website, you will need to register a domain. You can do with with your web host company, as part of your plan, or register separately with another company. It shouldn't make much of a difference to someone who is starting out, as long as you can trust the company that you register with.
 
Once a domain is registered, it is made unavailable to anyone else in the world. If you were to register the "www.mydomain.com" from the example above, it would be yours, for as long as you continued to pay ongoing registration fees.











Tips for Choosing a Great Domain Name
 
You might have guessed that finding a great domain name plays a big part in how popular your website will be. If you want to create a website that is about trading cards, it would make sense to try and include something about trading cards in your domain. There would be no point choosing the domain "www.thebestsiteever.com" because people would have absolutely no idea that they could find information about trading cards there. In addition, it's kind of a silly name, don't you think?
 
Here are some more tips for coming up with the perfect domain name for your website:
 
●    Length. Keep is short and simple. No one wants to try and remember a domain name that goes on for half a line of text. In fact, they probably won't bother, so keep it short.
●    Clarity. Don't use something that is hard to spell or type, because people might visit the wrong site by accident, or just forget the name of your site. If your business or website has a tricky name, try to come up with a domain that still tells people about your site, but is easier to type.
●    Meaning. As discussed above, your domain name should mean something, in regards to your website. The best domains should actually tell people what a site is about, before they even pay it a visit.
●    SEO. You might not know anything about ranking on search engine searches, but it's important. Your domain name is considered for Search Engine Optimization (SEO). Choose a domain name that is related to your content, contains proper words, and also words that you use often on your website.











Conclusion
It is easy to see why there are so many vastly different guides to HTML5 around. It's hard to know where to start, and many people become lost before they have even taken the first step. Luckily, you now have a basic understanding of HTML5, and you know the great things that it can do.
 
What's the next step? Creating your own webpage, and learning how to properly upload it to a web host, is probably the best thing to do. If you should ever get stuck, remember that there is a huge community of people who are great at using HTML5. There will always be someone who is happy to share their knowledge with you, and perhaps take give a little time to steer you in the right direction.
 
Good luck experiences all there is to know about the world of HTML5!












HTML5
 
FREE Books and Relevant Information Brought to you by C Tech Publishing
CLICK BELOW

Published By:
C Tech Publishing
Manufactured in Canada
Copyright 2015 © All Rights Reserved
 
















