
















HTML
Programming Guide
Learn in a Day!
 
 
 
 
 
By Os Swift
 
 
© Copyright 2015 - All rights reserved.
In no way is it legal to reproduce, duplicate, or transmit any part of this document in either electronic means or in printed format. Recording of this publication is strictly prohibited and any storage of this document is not allowed unless with written permission from the publisher. All rights reserved. 
 
The information provided herein is stated to be truthful and consistent, in that any liability, in terms of inattention or otherwise, by any usage or abuse of any policies, processes, or directions contained within is the solitary and utter responsibility of the recipient reader. Under no circumstances will any legal responsibility or blame be held against the publisher for any reparation, damages, or monetary loss due to the information herein, either directly or indirectly. 
Respective authors own all copyrights not held by the publisher. 
 
Legal Notice:
This book is copyright protected. This is only for personal use. You cannot amend, distribute, sell, use, quote or paraphrase any part or the content within this book without the consent of the author or copyright owner. Legal action will be pursued if this is breached. 
 
Disclaimer Notice:
Please note the information contained within this document is for educational and entertainment purposes only. Every attempt has been made to provide accurate, up to date and reliable complete information. No warranties of any kind are expressed or implied. Readers acknowledge that the author is not engaging in the rendering of legal, financial, medical or professional advice.
 By reading this document, the reader agrees that under no circumstances are we responsible for any losses, direct or indirect, which are incurred as a result of the use of information contained within this document, including, but not limited to, —errors, omissions, or inaccuracies.
Table of Contents
 
Table of Contents
Introduction
Chapter 1: The Beginning
Chapter 2: Tags, Elements, and Attributes. Oh My!
Chapter 3: Titles
Chapter 4: Paragraphs
Chapter 5: Headings
Chapter 6: Making Lists
Chapter 7: Filling Out Forms
Chapter 8: Imagine That
Chapter 9: The HT
Conclusion
 
Introduction
 
HTML is the road to making the perfect webpage that everyone needs to walk down in order to make his or her first webpage. Honestly, there's nothing out there that can be more terrifying than developing your own webpage and putting it to use. There are a lot of people out there that are as computer illiterate as I was the first time I sat down at a computer. But that's okay! There's no need for you to be expected to understand and manipulate the computer from the moment you sit down and decide to build an online presence for yourself.
 
Don't fret or worry about having or understanding what it is you're doing on the internet. Seriously, you don't actually need to comprehend everything that's happening. There's a difference between programming and coding. You're going to be programming all the coded algorithms and science-y stuff that you and I have been avoiding for most of our lives. Don't be afraid of that. The more you explore, the more you'll understand. Hey, you might even decide to give coding a try, but that's another book for another time. Right now, all you need to know is that you're in very good hands and that you're going to be designing your own webpage and you'll be flying through what probably scared you about programming once upon a time. 
 
So sit back and prepare to have your brain loaded with all of the smarts and basics for you to really begin experimenting and doing some really cool things with your computer. What I have provided in the coming pages is the foundations and explanations about what it is I'm going to show you and you'll be able to test these out with your own computer while we work. If you don't have a computer, then welcome to the twenty first century and where have you been?
 
Now, let's get started with all of this.
Chapter 1: The Beginning
 
HTML is all about making a webpage. There are a lot of programs to do different things on your computer, but HTML is specifically about putting content onto you webpage and that's it. It's not about dressing it up nice or making it spicy, it's just about what you want to convey to your audience.
 
With that, you need to know where to access locations to work with HTML and that's in a little program called Notepad. If you're a Mac user out there, then you're going to want to use a program called TextEdit. Open these programs and you're going to be ready to go with what I'm about to tell you in the coming chapters. When you open a new document, you'll want to make sure that you save it as an HTML file. So, what that means is that when you hit save as, you need to make sure that your file has .html at the end of it. For example, if your file is titled: BestPageEver, then you want it to look like this: BestPageEver.html rather than .txt or .doc. Once you've saved it, you've told your computer that this is going to be a webpage and it will act accordingly.
 
So when you open a new page and you save it as an HTML file, you're going to all face the same thing. A blank document. But, form a blank document, you're going to be able to build a page based on everything that you feel you need to tell your audience. Hey, open up your browser after you've saved it and type in the file name in the address bar. Type in c:\html\BestPageEver.html and you're going to pull it up immediately. Right there, you're going to be able to look at what it is you've accomplished.
 
That's what you're going to do to monitor your progress. By pulling it up on your browser, you're going to have an intimate look at what it is you've accomplished thus far. Consider this your compass and your North Star when you're working on this project. No matter what you do, you'll see the results right here and have a clear picture as to exactly what it is you've done, even when you think you've made a mistake. It's a great tool and it's going to be your closest friend in this process.
Chapter 2: Tags, Elements, and Attributes. Oh My!
 
Now, it's time to start doing stuff. The first thing you're going to have an experience with is something called tags. I want you to type this into your Notepad or TextEdit, or just look at it. This is what your basic HTML document is going to look like:
 
<!DOCTYPE html>
<html>
<body>
              Tralalala Tweedledee Tweedledum
</body>
</html>
 
This is the foundation of all that is to come. Now, a Tag is the first thing that I'm going to define for you. A Tag is like a fence that surrounds content and tells the computer what that content is specifically. For example, in this document, we're telling this document what the body of the webpage is going to be "Tralalala Tweedledee Tweedledum" and the Tag, telling the computer what to do with that information is <body> and we end this tag with </body>. That's it. A tag is like two fence posts marking the end of a certain amount of content. An opening tag is the first and the closing tag is the one with the distinct /. You'll understand this better as we push onward.
 
Next up is elements. Elements are essentially the content that is marked between the opening and closing tags. That means that <body>TralalalaTweedledeeTweedledum</body> is an element that you'll begin to work with. You don't see a lot of addressing of elements until the more complex stuff comes up. Right now, where you're just building something, it's good to just know that elements are basically the grouping of content within tags.
 
Finally, we have attributes. When it comes to attributes, I think the best way to describe them is with examples. So, for the example of attributes, I give you a little hint at what it requires for pictures to be put on your webpage. When you put a picture up, you have to specify the width and height of the picture so it knows exactly what to format the picture as when the page loads. When you specify the width it'll look like this width="120" well, the width is known as an attribute. Attributes are always followed by values that you place in quotations marks. 
 
Got it? No. Well, you're going to pick it up as we keep going. The only way to really get this is to start practicing it. In a matter of no time, you're going to pick it up in no time. That little amount of practice, you're going to be a master at these basics. In fact, the more you look at HTML documents, the easier it'll be for you to pick out tags, elements, and attributes. Just keep your eyes open and observe it. It'll all start to make sense.
Chapter 3: Titles
 
Titles are really nothing incredible or excitingly new. In fact, you're going to make this and you'll wonder about how easy it is to really make some differences that are openly visible. There's some easy work here that's going to show you exactly what it is you've done without even having to look at the page. Let me explain it a little clearer to you.
 
When you pull up a page on the internet, have you ever noticed the tabs above your address bar that tell you what the website is or what you're expecting to find there. Well, that is what a title is and I'm going to show you how you put that into your own website that you're designing here at home and it's going to be a lot simpler than you're probably thinking.
 
So, first thing you're going to need to do is implement new tags between your html and body tag. You're going to put in an opening tag labeled head and then insert your closing tag labeled head as well. Between those two heads, you're going to insert a title tag, then type in the title you want to appear on the tab of your webpage and then insert the closing title tag on the same line. It should look like this:
 
<html>
<head>
              <title>Random Words</title>
</head>
<body>
 
That is how simple it is for you to add a title to your webpage and if you think that this is a little basic to put into an entire chapter, well, you're wrong. Every webpage needs a title because it's going to be very obvious to anyone who is looking for the slightest sign of a professional look who gets to your website and finds that it has no title. Now, notice how there's also icons in a lot of the tabs that you pull up on webpages. Those are elements that you'll be able to add the more intermediate you get when it comes to HTML and we'll save that for another guide. Just know that right now, that's the location where you'd insert the element.
 
Other than that, you've officially made your first webpage and given it the appropriate look for tabs when your audience opens the page you've created. See how with little steps everything comes together and that it doesn't have to be such a scary process. Now, it's time to take up the next step to putting content on your actual webpage and giving it the information you need to convey to your visitors.
Chapter 4: Paragraphs
 
Okay, so what's the point of having a webpage to begin with? If you're a businessperson, then you're probably looking to have something professional that you can get customers, clients, or interest generated in what it is you're doing. Other people have a message that they want to spread or they have an idea that they'd like to infect the internet for. But then again, some of us just want to talk about cats online and that's about it. Regardless of your motivations for building a webpage, there's one thing that all of these reasons have in common and that's actually getting information and content to the people who are visiting your webpage. That's why we all visit the interne, right? So how are you getting to the people who stop and stare?
 
Well, if you're a truly intellectual person reading this book, you might have surmised that content probably goes between the body tags and you'd be right. But, go ahead and type a sentence there and see what happens. If you type a sentence or a paragraph between the body tags, you're going to see a continuous stream of writing across your webpage. Go ahead and test it and see just what I mean. Write whatever you want between the body tags and pull it up online. It's going to show up just as you'd expect, but what happens when you need to type another paragraph? You don't want everything running together, right? You want to abide by some basic laws of grammar, 
 
So, to make a paragraph, you need to tag content that you want to group into paragraphs and insert the paragraph tag, which is nothing more than a solitary P. It'll look like this when you're typing in your program:
 
<body>
              <p>This is my first paragraph.</p>
</body>
 
Remember that paragraphs are about content, so your need a closing tag. But let's take this a step further, say what you're typing is not a paragraph, but you do want a separate line for it. Then you're going to want to use a line break tag. However, since breaking up sentences isn't' about content, remember that you won't be using a closing tag with breaks. This will look something like this:
 
<body>
              This is my first paragraph<br>
              Or whatever
</body>
 
This is great for titles or subtitles that you're interested in breaking up without actually separating content. But, remember that if your content is a paragraph, then use the paragraph tags. This will be important later on when you continue on to intermediate projects in the future. Don't hamstring yourself before you even get to running.
Chapter 5: Headings
 
Okay, when you look at a webpage, there's a lot going on. You're going to notice that there are lists, bold print, paragraphs, and tons of other written content on there that is a lot more complicated than you probably noticed until this point. Seriously, pull something up and just have a look at the written content all over your current page of your choice. There's a lot, huh? Well, let's figure out how to make headings: the big, bold writing that draws attention over the paragraphs.
 
Before I get to actually typing in headings, it's important for you know how to make things stand out. If you want to make something in bold print in your paragraphs or headings, then that's what we call "strong" in the HTML business. If you want to italicize something, we call that an "emphasis" on the word. Since you want to italicize or embolden content, that means that you're going to have to do what? Tag it! That's correct. To italicize, you will use the tag <em> and </em> and to embolden, you will use the tag <strong> and </strong>
 
Now, to list headings, you are going to use the tags <h1> and make sure that you have a closing. Once you've listed a heading, you can then start another line beneath it with the paragraph tag and list information that you want to deliver to your viewers. That's the extent of it, but you'll notice that there are multiple headings on many websites, which means that you're going to have a need for multiple headings as well on your site. So, to make another heading, utilize the tag <h2> and <h3> and so on for as many headings that you're going to need on your website. It's an easy way to remember how many headings you have and to establish the information that you want to.
 
Headings might not seem overly important until you start to figure out what you have to do to make your information look like that. Seriously, by now, you should be looking at each and ever webpage through a different lenses and understanding what it takes to make them. As you begin to study what it means to make a webpage, you'll study everything that you visit a little more closely, which is a great thing to do.
Chapter 6: Making Lists
 
Again, as you've noticed, things that we've taken for granted up until this point are actually starting to look like something that requires work. As you've noticed as well, computers are kind of like aimless teenagers needing a nudge and instructions to actually accomplish anything. So, how exactly do you make a list when you're designing your webpage? Well, one might think that you use the break tab or just make tiny, small paragraphs, but both of those would be absolutely wrong! When it comes to making an actual list, there's an entirely different command that's required to give the appearance of a list.
 
There are three kinds of lists that we're going to discuss here, two of which are pretty easy to get a familiar grip with and another that is a little different from the others. So, we'll start with the Definitions list.
 
As it sounds, the definition lists is about presenting a topic and then defining it underneath the word, term, or statement. To establish a definition list, you'll use the tag <dl> and conclude with </dl>. Within them, you're going to have a definition term element which will be distinguished with <dt> and </dt>. This is going to be what it is you're defining or the term. Beneath that, you're going to have the definition description, which will be defined as <dd> and </dd>. So here's an example.
 
<h1> My life in a nutshell </h1>
<dl>
              <dt> Eating </dt>
              <dd> Consuming nutrients that taste nummy </dd>
 
              <dt> Sleeping </dt>
              <dd> Closing my eyes and losing time. </dd>
</dl>
 
Ta da! A definitions list. Now, let's talk about ordered lists and unordered lists. The difference, ordered lists are numbered and unordered lists are simply providing evidence to the listed statement. They are described with ul and ol. So, when you command an unordered or ordered list, you will list the items out with the tag li. Remember, when you list things, they are all content, so everything needs to have a closing tag. So here's another example for you:
 
<h1> The Dangers of Sharks </h1>
<ol>
              <li> Their teeth </li>
              <li> Evolution </li>
              <li> Their telekinetic powers </li>
 
<h1> How to Combat Sharks </h1>
<ul>
              <li> Uppercuts</li>
              <li> Shark Repellent </li>
              <li> Nuclear Weapons </li>
 
When you pull up your page online, you're going to see that the ordered list is going to be numbered and the unordered list is going to simply be information listed out. Now, say you want to get inception on me and list a list inside of a list. Well, you just keep putting ordered or unordered tags to mark the difference and keep making the lists. It's that easy and you'll be a master of it in no time. So get on your page and start experimenting. See what you can do!
Chapter 7: Filling Out Forms
 
Okay, let's get a little deeper. Ready to get out of the kiddy pool and start to wade into the three-foot area of the pool? Well, that's where we're headed and this is coming up in the form of forms. So conveying information isn't the only use that we have for an online presence. While most of use like to get information out to those in the world, we're also looking to receive information or to make things exclusive to those looking to access our content. If you want people to get information to you in the form of a contact us option, then I'm going to show you how it's done. After all, maybe you just want a bit of information on the people looking at your site.
 
First things first, a form is denoted by a form tag and since it's content, it'll require a closing tag, right? Right! Now, when you fill out a form you're going to need to tell what the action, or purpose of the form, is by stating action="contactus.php" and the form of receiving it is a post. So the method that it will be is a post, since this will be sent to you via your contact us. So, the first line of your form will look like this:
 
<form action="contactus.php" method="post"
 
Notice that the values of the attribute are held in quotes. Good eye!
 
Now, everything that follows is going to be instigated as paragraph tags. But, before we continue any farther, let's think about what forms have. Forms have questions that need answers and in order to put the answers to their questions, there has to be some sort of input, right? There are textboxes to write in answers, there are passwords to type in, there are boxes to check, sometimes individual or multiple, and there are buttons to hit submit. Some even have dropdown bars that allow you to select from multiple pre-stated options.  So how do you incorporate all of that? Well, we need to know the names first, so let me give them to you.
 
To input text, you'll simply us: <input type="text"> Notice the value in quotes? That means that inside the text area the word "text" will be visible. Whatever you put in that value place will be visible in the text box. A text option requires a textbox or text area. This is configured by stating the text area so the computer knows how large to make it. This comes in the form of rows and columns that are best understood through experimentation on your part. For example:
 
<p> Your Name: <p>
<p><textarea name="Name" rows="1" cols="10">Name</textarea></p>
 
See! Not so scary is it? Now, to mask the information being input with stars, like a password, then simply change the text value to "password" and it's as easy as that. Play around with that for a second and get a look at it. Now, what about checking boxes? Or dropdown options? Well, it's just a matter of changing the input type. For a checkbox, change the value of the type to "checkbox" or if you want them to only be able to select a single option, like for gender, then that's called a radio. So change the value to "radio" and see the difference. As for dropdown options, it's called selecting. Select comes in the form of option tags with each having a value to describe what is being selected. Finally, there's a submit option which means that the input type value is "submit" to officially send that stuff off to you. Now, let me give you an example of all of this:
 
<form action="contactus.php" method="post">
 
              <p> Your Name: </p>
              <p><textarea name="Name" rows="1" cols="10">Name</textarea></p>
 
              <p><select name="Select Your Gender:"></p>
                            <option> Male </option>
                            <option> Female </option>
                            <option> Unknown </option>
                            <option> Prefer Not To Say </option>
 
              <p> Occupation: </p>
              <p><input type="radio" name="occupation" value="vigilante"> Vigilante</p>
              <p><input type="radio" name="occupation" value="pirate"> Pirate</p>
              <p><input type="radio" name="occupation" value="viking"> Viking</p>
              <p><input type="radio" name="occupation" value="clown"> Clown</p>
 
              <p><input type="submit"></p>
 
</form>
 
Holy Cow, that's it! That's an example of how to make a form for all of your guests and friends to fill out when they're visiting your website. Now, since you can get information from those that are visiting your website, let's give them a little something extra for dropping by, shall we?Chapter 8: Imagine That
 
So if you want a picture perfect webpage, then you're probably going to need a picture or two to get people to keep coming back to what you've got for them. In order to do this, then you need to have images that you can share. So, how exactly does one get a picture from your image gallery to the page? 
 
The answer is: by telling the computer to do it. In order to post an image, you're going to use the "img" tag. Since the img tag isn't actually putting content on the page and is working with something that is more aesthetic, you won't have a closing tag. Notice the difference? 
 
Once you have placed the img tag, you're going to need to provide a source for the image. Now, let's say that you really want to share pictures from your cat Schmooples' first birthday party and have the perfect picture in your images for it. The file name is going to look like this: images/schmoopleseatscake.jpg. Now, that's what you're going to need to tag with the attribute "src" for source. Once you have the source of the image that you're posting on your page, you need to tell the computer how to format the image or what size it's going to be. These attributes are "width" and "height" respectively. In order to master this, I would suggest playing around with it in your spare time to get the ratios you like right. So let's give an example of Schmooples' picture.
 
<body>
 
              <p> Check Out My Precious </p>
              <img src="images/schmoopleseatscake.jpg" width="260" height="340">
 
</body>
 
Viola, you've just posted your first image to your website and now people will be in awe and wonder of Schmooples eating her cake. In a matter of no time, you're going to be mastering this webpage stuff.
Chapter 9: The HT
 
When it comes to HTML, the first two letters are Hypertext, which is what you might remember from your processor as hyperlinking places together. Think of the internet as a giant web—a world wide web, if you will! If you're typing up a treatise on Schmooples the cat and would like to send a link to your hated enemy Rufus the Dog's webpage to rain down hatred with your supporters, then how do you place a link to that webpage into your own? The answer is actually simpler than you'd think.
 
It requires an anchor and a hypertext reference, both of which are going to be easy recognize. An anchor is an <a> tag and a hypertext reference is a <href> attribute. You'll also need to have a label that it is referencing in your actual content. Now, let's have a look at what it'll be like in your document:
 
<body>
 
              <h1> Death to Rufus the Dog! </h1>
              <p> Join the Legion of Schmooples! </p>
              <p> Bring down Rufus! </p>
              <p><a href="http://www.rufusthedog.com">Rufus the Dog</a></p>
 
</body>
 
That's as simple as it is. Remember, take these tags and attributes to having a purpose and a reason for being there. Everything here is super minimalist and there for a reason, there's no fluff. If there's something there that you don't' quite understand, just look it up. It has to be there for a reason.
Conclusion
 
Creating a webpage is something that has been wreathed in mysticism and cyber mumbo jumbo for years, but I hope that I've shown you that it's not as scary as you might think. In fact, HTML is actually fairly straight forward. IF you're looking for a hobby that can really accomplish something and is easy to explain, then you've come to the right place. These are the foundations upon which you can build your webpage and push on to greater things like CSS, Java, JavaScript, C++, and the list goes on and on. Remember, that you can never really get in over your head if you master and truly understand what it is that you're working on in the moment. 
 
If something doesn't make sense to you or is confusing, my best suggestion to you is to open up your TextEdit or Notepad and start working on it. Pull it up in your browser and have a look at what it does for your page. Taking everything step by step will inevitably lead you to the path of success. There is never a reason to jump ahead without fully understanding what it is that you've done.
 
If you ever find yourself having a need to get back to the basics or you just don't remember how to do something simple, come back to this book and have a look at the fundamentals. With everything that I have presented to you in this book, you should be able to get the grasp on the beginnings of a webpage and if you can get the beginning, it's just a matter of taking the next step piece by piece. So good luck and get out there and make an amazing webpage. 
 
 
 
You May Enjoy My Other Books!
 
PYTHON: Programming Guide For Beginners: LEARN IN A DAY!
hyperurl.co/python
 
C ++ Programming : Programming Language For Beginners: LEARN IN A DAY!
 
 
 
JAVA: Java Programming, JavaScript, Coding: Programming Guide: LEARN IN A DAY!
hyperurl.co/javaos
 
 
SQL: Programming Guide: Javascript and Coding: LEARN IN A DAY!
hyperurl.co/sql
 









Guide

Cover



Table of contents

© Copyright 2015 - All rights reserved.
Table of Contents
Introduction
Chapter 1: The Beginning
Chapter 2: Tags, Elements, and Attributes. Oh My!
Chapter 3: Titles
Chapter 4: Paragraphs
Chapter 5: Headings
Chapter 6: Making Lists
Chapter 7: Filling Out Forms
Chapter 8: Imagine That
Chapter 9: The HT
Conclusion





