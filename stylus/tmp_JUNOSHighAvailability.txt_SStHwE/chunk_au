              0100. 0000 0110. 0000 0000




192.168.7.0/24


1100 0000. 1010
              0100. 0000 0111. 0000 0000






Notice that all the italicized bits in the "Binary breakout"
      column match, and that once you go toward the low-order bits beyond
      them, the pattern changes among subnets. The italicized portion is used
      to derive the less specific route to represent reachability to these
      subnets. In each row, 21 bits are italicized. Therefore, our subnet mask
      is a /21. The italicized bits also
      determine the subnet itself. In this case, it is 192.168.0/21, which
      effectively replaces the need to advertise eight subnets by advertising
      a single, less specific subnet.




Practical aggregation for a large domain



While it is important to understand the hows and whys of route aggregation
        (actually calculating aggregate routes for a large service provider or
        large enterprise network should not be seen as a manual task), the
        example shown in Table 12-2 is
        intentionally simple, to illustrate how bit patterns are used as part
        of the calculation. Running the same calculation for several thousand
        or even just a few hundred routes could take weeks and would likely be
        prone to human error.
Numerous tools exist that calculate the minimum number of
        aggregates required for a list of subnets. Some of the better tools we have worked with
        are the Subnet/Supernet Calculator, which you can find at http://www.subnet-calculator.com/cidr.php, and Advanced
        IP Address Calculator v1.1, which you can find at http://advanced-ip-address-calculator.download-99-28194.programsbase.com/.
        Both are free downloads.





Is there a risk?



On occasion, we have heard colleagues describe risks associated with route
        aggregation, the most common being the use of a static default route
        in conjunction with a calculated aggregate that results in a routing
        loop when some of the subnets of the aggregate are not reachable. Figure 12-4 illustrates this unfounded
        phobia.









Figure 12-4. Route aggregation example


In this (perhaps oversimplified) example, r2 and r4
        are in OSPF Area 0. Router r2 has
        connectivity to the outside world through interface ge-1/0/0. Router r4 has a connection to r2 through ge-1/3/0, and also four connections to
        departmental LANs in a small company. The LANs' subnets are allocated
        in a way that permits them to be rolled up into a single aggregated
        advertisement. Output from a show interfaces
        command reveals the IP addressing scheme:

[edit]
lab@r4# show interfaces
fe-0/2/0 {
    unit 0 {
        description "Parts Dept LAN";
        family inet {
            address 172.16.0.1/24;
        }
    }
}
fe-0/2/1 {
    unit 0 {
        description "Service Dept. LAN";
        family inet {
            address 172.16.1.1/24;
        }
    }
}
fe-0/2/2 {
    unit 0 {
        description "Accounting Dept. LAN"
        family inet {
            address 172.16.2.1/24;
        }
    }
}
fe-0/2/3 {
    unit 0 {
        description "Management and HR LAN"
        family inet {
            address 172.16.3.1/24;
        }
    }
}

[edit]
lab@r4# show routing-options
aggregate {
    route 172.16.0.0/22;
}

Note
Notice that the administrator of this network followed the
          recommended practice of assigning a description to each logical
          connection. This practice may seem like a trivial step, but in the
          heat of a troubleshooting battle it can reduce downtime. Anything
          that reduces downtime is a friend of high availability!

Let's assume the administrator responsible for the network in
        Figure 12-3 has
        created a policy called AGG that is
        used to redistribute the aggregate route into OSPF:

[edit]
lab@r4# show policy-options policy-statement AGG
term 1 {
    from protocol aggregate;
    then accept;
}

[edit]
lab@r4# show protocols
ospf {
    export AGG;
    area 0.0.0.0 {
        interface ge-1/3/0.0;
        interface lo0.0 {
            passive;
        }
    }
}

Note
Seasoned JUNOS engineers often use all-capital letters for
          user-defined variables. This technique makes the variables easy to
          spot among the screens full of command-line interface (CLI) syntax
          and can save time when troubleshooting.

So, r2 and r4 are OSPF Area 0 neighbors, and r2 has
        a static default route it is redistributing into OSPF to allow both
        routers to forward traffic into the cloud. If that is the case,
        the show routing-options
        command reveals the following:

[edit]
lab@r2# show routing-options
static {
    route 0.0.0.0/0 next-hop 10.0.1.18;
}

[edit]
lab@r2# show policy-options policy-statement STAT
term 1 {
    from protocol static;
    then accept;
}

[edit]
lab@r2# show protocols
ospf {
    export STAT;
    area 0.0.0.0 {
        interface ge-1/1/0.0;
        interface lo0.0 {
            passive;
        }
    }
}
The unfounded phobia is based on a hypothesis that goes like so:
        in the event that one of the aggregated subnets on r4 becomes unavailable, traffic bound for
        the subnet would arrive at r4, find
        the subnet unavailable, and be forwarded back to r2 because of the existence of the default
        route. Upon arrival at r2, the
        traffic would be forwarded back to r4 due to the advertisement of the
        aggregate. The theory is that r4
        would then forward it back to r2
        because of the default route causing some sort of evil loop.
This will not happen. Functional attributes
        of route aggregation make it safe for use in this scenario and prevent
        the behavior attributed to evil looping, because an aggregate route is
        active only when one or more active contributing routes exist. More
        importantly, the default forwarding action of an
        aggregate route is to discard traffic that recognizes the aggregate
        itself as the longest prefix match. Therefore, if the aggregate is
        active because of an active contributing route, but other contributing
        routes are inactive, traffic bound for the inactive contributing
        routes is discarded.

Note
Truth be told, we have seen one corner case specific to
          large-scale ISP routing in which an aggregate route does cause
          problems. In some topologies that include one or more External
          Border Gateway Protocol (EBGP)-speaking routers in an OSPF
          not-so-stubby area (NSSA) with redundant area border routers (ABRs),
          the presence of an aggregated route that encompasses the links in
          the NSSA causes undesirable consequences for BGP and OSPF. Harry
          Reynolds does a good job of describing details of this corner
          case, as well as a few effective workarounds, in his
          Juniper Networks Certified Internet Professional (JNCIP)
          Study Guide, currently available free of charge from
          Juniper networks at http://www.juniper.net/training/certification/books.html.







Use of the Private Address Space



RFC 1918 defines several ranges of IP addresses that are reserved
      for private useâ€”they are never to be allocated for addition to the
      regular Internet routing table. These addresses are commonly used in lab
      environments, classrooms, and anyplace else that does not require native
      reachability across the regular Internet. Table 12-3 lists the RFC 1918 addresses.


Table 12-3. The private address space









IP address
              range


Number of IP
              addresses






10.0.0.0-10.255.255.255


16,777,216




172.16.0.0-172.31.255.255


1,048,576




192.168.0.0-192.168.255.255


65,536










Private addressing and internal services



Use of the private address space has a few implications for services
        provisioned internally for users located within the corporate domain.
        An interesting fact is that these address ranges are commonly blocked
        by service providers at their domain boundaries when handling regular
        Internet traffic. This limitation gives use of this space an added
        benefit of security in some situations.





Private addressing and customer services



Because the addresses are not routable destinations across the
        regular Internet, use of the private address space has several
        important implications for companies that use their corporate network
        to provide a service to customers outside the corporate domain. In
        most cases, companies stand up a Bastion Server LAN or, for smaller networks, use a mapped IP address
        (MIP) in conjunction with Network Address Translation (NAT) at the Internet
        boundary. In some cases both are used.
A Bastion Server LAN is a subnet with a
        publicly routable IP addressing scheme. The Bastion Server LAN is
        commonly protected from malicious attack by multiple collections of filters and policies
        facing the regular Internet as well as the intranet. This type of LAN
        is useful when several servers or discrete services need to be
        accessed both from within and outside the domain.





Private addressing, NAT, and MIP



NAT and Port Address Translation (PAT) are methods of mapping IP addresses and TCP ports across a defined boundary. Sometimes NAT and
        PAT are used as a security mechanism to obscure host IPs, though the
        effectiveness of this method is questionable at best. For a good
        explanation as to why NAT and PAT are ineffective security mechanisms, take a look at
        Security Power
        Tools, by Bryan Burns, et al. (O'Reilly).
Today, NAT is commonly used at the boundary between a network
        using the private IP range and the regular Internet. This design
        allows the private network to grow and be addressed as needs arise,
        while still supporting the ability to access resources across the
        regular Internet. NAT and PAT also allow a number of users to share a
        smaller number of public IP addresses for Internet
        connectivity.
Because manual configuration is required, a MIP is appropriate when only one or perhaps just a few
        servers will be accessed from outside a NAT boundary. A MIP is used to
        map a single external IP address or port number to a single IP address
        within the NATed domain. This addressing scheme makes the internal
        service reachable externally without exposing any infrastructure
        details.
MIP address allocation and boundary considerations are covered
        in detail in ScreenOS
        Cookbook, by Stefan Brunner, et al. (O'Reilly).






Use of Public Address Space



All the examples in this chapter so far have used the private address space
      for infrastructure links. Although this is common practice, there is no
      written or implied rule that says public IP addresses cannot be used.
      Allocating public IP addresses for infrastructure links may be
      appropriate in some circumstances, such as when web services are hosted
      from a high percentage of the routers in the network. Figure 12-5 shows a service provider
      network hosting web services from nearly all its routers.
In Figure 12-5, public
      IP addressing for the four defined infrastructure links may be desirable
      from a support perspective, although there are some very important
      implications to consider:









Figure 12-5. Business case for using public IPs





Public IP addresses cost money and require documentation
          showing a business justification, while private IP address use is
          free of charge.


Public IP addresses are a finite resource. Additional space
          may be needed as a business grows. Private IP address space, on the
          other hand, can be consumed and reallocated as needed.


If purchased and used for infrastructure links, public IP
          addresses are not available for use in host LANs, where there is a
          much stronger business case for placement.



Most importantly, however, these links host neither service nor
      content, so from a security perspective, no valid reason exists for them
      to be reachable destinations across the Internet. Allowing them to be
      advertised as such opens them to potential attack. Also, if BGP is used within this domain, the infrastructure routes
      could be obscured without impacting the ability to reach the public IP
      destinations.





Static Routes



Static routes are easily configured in JUNOS software, a fact that is
      rather unfortunate because it often leads to overuse. By their very
      nature, static routes lack administrative visibility, are subject to
      human error, and cannot take link or node failures into consideration when forwarding traffic.
      Generally speaking, these characteristics make them a rather strong
      enemy of high availability.




When to configure static routes



If used judiciously, static routes can serve a purpose in a production
        network, such as when a static default route is used in an enterprise
        network to internally advertise reachability to all external
        destinations without using a full BGP table. In Figure 12-6, a static
        default route is being redistributed by r3 into OSPF to advertise to r1 and r2
        the default gateway to the Internet.









Figure 12-6. Static routing for low-bandwidth applications


Static routing is also used in Figure 12-6 because the
        chatty nature of a link-state protocol consumes a significant amount
        of the available link bandwidth between r1 and r3, and also between r2 and r3. In this situation, the dynamic benefits
        of OSPF or Intermediate System to Intermediate System
        (IS-IS) are surrendered in favor of increasing the available
        bandwidth. The configuration file for r3, a Juniper router, would include the
        static routes needed to advertise the default as mentioned earlier and
        to reach the Field 1 and Field 2 subnets that are behind r1 and r2, respectively:

[edit routing-options]
lab@r3# show
static {
    route 0.0.0.0/0 next-hop 192.167.1.17;
    route 172.16.1.0/24 next-hop 10.0.1.2;
    route 172.16.2.0/24 next-hop 10.0.1.6;
}
The static default on r3
        provides external connectivity. Routers r1 and r2, both Cisco routers, would likewise have
        static default routes pointing toward r3. This setup would allow users on the
        Field 1 and Field 2 subnets to reach destinations off the local LAN,
        all without running a bandwidth-consuming routing protocol:

r1#show run
Building configuration...

Current configuration:
!
...
interface Ethernet0
 ip address 172.16.1.1 255.255.255.0
!
interface Serial0
 ip address 10.0.1.2 255.255.255.252
 clockrate 56000
!
...
ip route 0.0.0.0 0.0.0.0 10.0.1.1
!
...

r2#show run
Building configuration...

Current configuration:
!
...
interface Ethernet0
 ip address 172.16.2.1 255.255.255.0
!
interface Serial0
 ip address 10.0.1.6 255.255.255.252
 clockrate 56000
!
...
ip route 0.0.0.0 0.0.0.0 10.0.1.5
!
...
Use of static routes in this case makes sense because the
        topology is not blessed with diversity. There is only one way in and
        out of r1 and r2. Furthermore, the low bandwidth available
        on the links from r3 to r1 and r2
        makes routing efficiency a top priority. In this case, static routing
        is without a doubt the best approach.






Using Protocol Tweaks to Control Routing Table Size



Interior Gateway Protocols (IGPs) come in several flavorsâ€”link-state, distance vector, and
      hybridsâ€”and can serve different functions in a network based on network
      size and purpose. For example, in an enterprise network, the IGP's
      primary function is to share route reachability information among the
      routers. In a service provider network, the IGP's primary function is to
      enable establishment of BGP neighbors. Because the strengths and
      weaknesses of the protocol flavors are covered extensively in other
      chapters, it is sufficient here to say that any network of considerable
      size runs one of the two dominant link-state protocols, IS-IS or OSPF.
      Both support features that, when properly used, help to control the size
      of the intradomain routing table.




IS-IS areas and levels



IS-IS supports use of a two-level hierarchical scheme to control routing
        table and link-state database size within the IS-IS domain. The two
        level types are conveniently called Level 1 areas and Level 2 areas.
        IS-IS is, by default, a friend of routing table control because of the
        default functionality of its levels. While routers within a Level 2
        area each by default maintain a complete collection of routes for the
        IS-IS domain, routers in a Level 1 area retain routes specific to
        their area and generate a default route to any immediately attached
        Level 2 router.
Beyond the described functionality of the Level 1 and Level 2
        areas, the IS-IS protocol has no mechanism for summarizing routing
        information across area boundaries. This fact does not make the
        protocol any less appropriate for route control or high availability
        applications; it simply means that an additional tool is required to
        summarize the routes.
Route aggregation in conjunction with policy statements for
        redistribution, both described earlier in this chapter, are commonly
        used to control intra-area advertisements. Chapter 17 provides a detailed look
        at how routing policy is used to summarize routes across area
        boundaries.





OSPF areas



OSPF also uses a hierarchical area scheme to control route advertisement
        within the AS. Unlike IS-IS area types, which rely on manual
        summarization, aggregation, and policy for control of routing
        advertisements, OSPF area types have been heavily modified over
        several decades to enable route control from within the
        protocol.


OSPF Versus IS-IS
We have chosen not to endorse one link-state IGP over another. Both
          protocols have characteristic strengths related to controlling
          routing table size that should be taken into consideration.
With OSPF, the route summarization mechanisms are incorporated
          in the protocol itself, making external tools such as aggregation
          and policy-based route filtering less prevalent. However, this
          design adds to the complexity of the protocol itself.
With IS-IS, the protocol mechanics are kept quite simple. Any
          desired route summarization is achieved by manually configuring
          aggregates. This effectively moves complex configuration elements to
          the JUNOS policy engine.
At the end of the day, the protocol that most effectively
          supports high availability may be determined by the skill set of the
          O&M staff. Which protocol are they most comfortable
          supporting?

Historically, OSPF area types such as stubby, totally stubby,
        and not so stubby were used in larger networks to reduce the size of
        routing tables and of the link-state database without impairing
        reachability. These area types all provide varying degrees of
        summarization of routing information advertised from other areas
        within the domain.
For our purpose of controlling the size of the routing table,
        let's see what the OSPF table looks like for the Figure 12-1 network when all
        devices are in Area 0. For the sake of brevity, the output of the
        run show route protocol ospf
command is shortened using |
        match /. This generates just a raw list of routes being
        advertised by OSPF:

[edit]
lab@r5# run show route protocol ospf | match /
7.6.5.0/24         *[OSPF/10] 00:02:05, metric 3
8.7.6.0/24         *[OSPF/10] 00:02:05, metric 3
10.0.0.1/32        *[OSPF/10] 00:02:05, metric 2
10.0.0.2/32        *[OSPF/10] 00:02:05, metric 2
10.0.0.3/32        *[OSPF/10] 00:02:05, metric 1
10.0.0.4/32        *[OSPF/10] 00:02:05, metric 1
10.0.0.6/32        *[OSPF/10] 00:02:05, metric 1
10.0.1.16/30       *[OSPF/10] 00:02:05, metric 2
10.0.1.20/30       *[OSPF/10] 00:02:05, metric 2
10.0.1.24/30       *[OSPF/10] 00:02:05, metric 3
10.0.1.28/30       *[OSPF/10] 00:02:05, metric 2
172.16.1.0/24      *[OSPF/10] 00:02:05, metric 2
172.16.2.0/24      *[OSPF/10] 00:02:05, metric 2
172.16.3.0/24      *[OSPF/10] 00:02:05, metric 2
172.16.4.0/24      *[OSPF/10] 00:02:05, metric 2
172.16.5.0/24      *[OSPF/10] 00:02:05, metric 2
172.16.6.0/24      *[OSPF/10] 00:02:05, metric 2
172.16.7.0/24      *[OSPF/10] 00:02:05, metric 2
172.17.0.0/30      *[OSPF/10] 00:02:05, metric 3
172.17.0.4/30      *[OSPF/10] 00:02:05, metric 3
224.0.0.5/32       *[OSPF/10] 00:03:04, metric 1
Now, move r5 and r6 into a separate OSPF area, Area 1, by
        changing the protocols ospf area
        configuration statements on r3,
        r4, r5, and r6. Figure 12-7 shows the protocol area
        assignment we want to achieve with our configuration changes.









Figure 12-7. Multiarea OSPF topology


Routers r3 and r4 now become ABRs and you'll need to move the ge-0/0/0 interface into Area 1. Change
        r3 first:

[edit protocols ospf]
lab@r3# delete area 0 interface ge-0/0/0

[edit protocols ospf]
lab@r3# set area 1 interface ge-0/0/0

[edit protocols ospf]
lab@r3# show
area 0.0.0.0 {
    interface ge-0/0/1.301{
        passive;
    }
    interface ge-0/0/1.302 {
        passive;
    }
    interface ge-0/1/0.0;
    interface ge-0/1/1.0 {
    interface ge-0/2/0.0{
        passive;
    }
    interface lo0.0 {
        passive;
    }
}
area 0.0.0.1 {
    interface ge-0/0/0.0;
}
Now make comparable changes to the OSPF area configuration on
        r4:

[edit protocols ospf]
lab@r4# delete area 0 interface ge-0/0/0

[edit protocols ospf]
lab@r4# set area 1 interface ge-0/0/0

[edit protocols ospf]
lab@r4# show
area 0.0.0.0 {
    interface ge-0/0/1.401{
        passive;
    }
    interface ge-0/0/1.402 {
        passive;
    }
    interface ge-0/1/0.0;
    interface ge-0/1/1.0;
    interface ge-0/2/0.0 {
        passive;
    }
    interface lo0.0 {
        passive;
    }
}
area 0.0.0.1 {
    interface ge-0/0/0.0;
}
Once ABR configuration is complete, change the configuration on
        r5 and r6 to place them into OSPF Area 1. Since the
        interface in use does not change, use the JUNOS rename command on
        both r5 and r6 to expedite the changes, first on
        r5:

[edit protocols ospf]
lab@r5# show
area 0.0.0.0 {
    interface lo0.0 {
        passive;
    }
    interface ge-0/0/0.0;
    interface ge-0/0/1.0;
    interface se-0/0/2.0;
    interface se-0/0/3.0;
}

[edit protocols ospf]
lab@r5# rename area 0 to area 1

[edit protocols ospf]
lab@r5-main# show
area 0.0.0.1 {
    interface lo0.0 {
        passive;
    }
    interface ge-0/0/0.0;
    interface ge-0/0/1.0;
    interface se-0/0/2.0;
    interface se-0/0/3.0;
}
Then make a similar change on r6:

[edit protocols ospf]
lab@r6# show
area 0.0.0.0 {
    interface fe-0/0/0.0 {
        passive;
    }
    interface fe-0/0/1.0 {
        passive;
    }
    interface se-0/0/2.0;
    interface se-0/0/3.0;
    interface lo0.0 {
        passive;
    }
}

[edit protocols ospf]
lab@r6# rename area 0 to area 1

[edit protocols ospf]
lab@r6# show
area 0.0.0.1 {
    interface fe-0/0/0.0 {
        passive;
    }
    interface fe-0/0/1.0 {
        passive;
    }
    interface se-0/0/2.0;
    interface se-0/0/3.0;
    interface lo0.0 {
        passive;
    }
}
Now take another look at the routing table from the perspective of r5:

[edit]
lab@r5# run show route protocol ospf | match /
7.6.5.0/24         *[OSPF/10] 00:00:57, metric 3
8.7.6.0/24         *[OSPF/10] 00:00:57, metric 3
10.0.0.1/32        *[OSPF/10] 00:01:07, metric 2
10.0.0.2/32        *[OSPF/10] 00:00:57, metric 2
10.0.0.3/32        *[OSPF/10] 00:01:07, metric 1
10.0.0.4/32        *[OSPF/10] 00:00:57, metric 1
10.0.0.6/32        *[OSPF/10] 00:00:57, metric 1
10.0.1.16/30       *[OSPF/10] 00:00:57, metric 2
10.0.1.20/30       *[OSPF/10] 00:01:07, metric 2
10.0.1.24/30       *[OSPF/10] 00:00:57, metric 3
10.0.1.28/30       *[OSPF/10] 00:00:57, metric 2
172.16.1.0/24      *[OSPF/10] 00:00:57, metric 2
172.16.2.0/24      *[OSPF/10] 00:00:57, metric 2
172.16.3.0/24      *[OSPF/10] 00:01:07, metric 2
172.16.4.0/24      *[OSPF/10] 00:00:57, metric 2
172.16.5.0/24      *[OSPF/10] 00:01:07, metric 2
172.16.6.0/24      *[OSPF/10] 00:00:57, metric 2
172.16.7.0/24      *[OSPF/10] 00:00:57, metric 2
172.17.0.0/30      *[OSPF/10] 00:00:57, metric 3
172.17.0.4/30      *[OSPF/10] 00:01:07, metric 3
224.0.0.5/32       *[OSPF/10] 00:49:05, metric 1
As expected, there is very little change. To reduce the size of
        the routing table in Area 1, you need to change Area 1's area type and
        control the advertisement of summarized routes into the area. To
        accomplish this, change the area type on r3 and r4
        to stub and eliminate summaries
        using the no-summaries
        command:

[edit]
lab@r3# set protocols ospf area 1 stub no-summaries default-metric 5

[edit]
lab@r3# commit
commit complete

[edit]
lab@r4# set protocols ospf area 1 stub no-summaries default-metric 10

[edit]
lab@r4# commit
commit complete
The astute reader will notice a default-metric # statement on the r3 and r4
        OSPF configurations. This command is used with the redundant ABRs,
        r3 and r4, to assign primary ownership of the
        default route that is being generated and injected into Area 1.
        Because of the lower metric of 5,
        r3 is responsible for injecting the default. If
        r3 fails, then r4, with a metric of 10, would be responsible for injecting the
        default route into Area 1.

Note
The OSPF tweaks in this chapter demonstrate how protocol
          configuration can support high availability by dramatically reducing
          the size of the intradomain routing table. A more thorough
          collection of high availability OSPF configuration elements is
          available in Chapter 14.

You also need to change the area-type on r5 and r6
        to match what is configured on the ABRs. The routers within an area
        must be configured to match the area-type defined by the ABRs:

[edit]
lab@r5# set protocols ospf area 1 stub

[edit]
lab@r5# commit
commit complete

[edit]
lab@r6# set protocols ospf area 1 stub

[edit]
lab@r6# commit
commit complete
Now take a look at the routing table on r5 to see the impact of the changes:

[edit]
lab@r5-main# run show route protocol ospf | match /
0.0.0.0/0          *[OSPF/10] 00:01:36, metric 6
10.0.0.6/32        *[OSPF/10] 00:02:21, metric 1
172.16.1.0/24      *[OSPF/10] 00:02:21, metric 2
172.16.2.0/24      *[OSPF/10] 00:02:21, metric 2
224.0.0.5/32       *[OSPF/10] 01:02:17, metric 1
Success! The size of the routing table has been effectively
        reduced within the domain by modifying the OSPF area topology and by
        eliminating route summarization across the ABRs. The result is a more
        manageable routing table that is easier to support and more likely to
        be highly available.















Chapter 13. Managing an Interdomain Routing
  Table



Chapter 12 focused on
  mechanisms available to control the information that routers and host
  systems in the local network add to the local routing table. Emphasis was on
  keeping the table as small as possible through intelligent address
  allocation, aggregation schemes, and effective use of Interior Gateway
  Protocol (IGP) scalability tools.
This chapter looks at the current global routing table, which
  comprises about 230,000 aggregated routes, as a potential addition to the
  local table. In this chapter, we look at what we can do to control and
  organize this massive number of potential route additions to the local
  table. Clearly, the local administrator lacks the authority to control all
  routes that are added to the global routing table, so measures must be taken
  on the devices you do control to make sure external factors do not
  negatively impact internal stability. Controlling how the local Autonomous
  System (AS) handles the Internet routing table is a fundamental high
  availability priority for all networks.
When addressing route table content, we must strive for route table
  stability. Stability has direct implications for high availability, because
  an unstable routing table results in an unstable network.
With attention to high availability through strong redundancy schemes,
  this chapter discusses address mechanisms to control
  ingestion and advertisement of interdomain
  destinations. These methods include configuration of both confederated and
  route reflected topologies. This chapter also includes related best
  practices for several network types, but focuses primarily on large
  enterprise and carrier networksâ€”those that ingest the most routing table
  content from external sources.













Enterprise Size and Effective Management



Depending on the size of the network, you must adopt different strategies to obtain the
    most effective management of content.




Small to Medium-Size Enterprise Perspective



We started out mentioning the need to manage the content of the
      complete aggregated Internet routing table and hinted at some of the
      tools that can be used to control that content, but does a network have
      to run Border Gateway Protocol (BGP) to communicate with the rest of the
      world? Is it absolutely necessary to retain a copy of that BIG table for
      a business to function? The answer, actually, is no. The reality is that
      small networks and most medium-size networks typically do not run BGP at
      all.

Note
Unnecessary routing protocols just add complexity and are an
        enemy of high availability. Keep it simple!

Networks that do not run BGP rely on a few fairly simple
      configuration elements to communicate with external destinations. These
      elements include a default route on the local AS gateway router and a
      passive route or possibly some redistribution by the service provider.
      In Figure 13-1, a small
      enterprise network composed of r1,
      r2, and r3 uses a
      default route on r3, the gateway
      router, to reach all destinations outside the local network. The ISP in
      Figure 13-1 has
      configured a static route on r4 and redistributed it into BGP to advertise
      a return route to the small enterprise.









Figure 13-1. Route control for small enterprise networks


The configuration on r3 has
      r1, r2, and r3 in Open Shortest Path First (OSPF) Area 0
      and has a static default pointing to r4 that is redistributed into OSPF:

[edit]
lab@r3# show protocols ospf
export STATIC;
area 0.0.0.0 {
    interface se-0/0/0.0;
    interface se-1/3/0.0;
    interface lo0.0 {
        passive;
    }
}

