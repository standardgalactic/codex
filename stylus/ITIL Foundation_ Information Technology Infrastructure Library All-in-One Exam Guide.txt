























Copyright Â© 2016 by McGraw-Hill Education. All rights reserved. Except as permitted under the United States Copyright Act of 1976, no part of this publication may be reproduced or distributed in any form or by any means, or stored in a database or retrieval system, without the prior written permission of the publisher.
ISBN: 978-0-071-84213-6MHID:      0-07-184213-6
The material in this eBook also appears in the print version of this title: ISBN: 978-0-071-84160-3,MHID: 0-071-84160-1.
eBook conversion by codeMantraVersion 1.0
All trademarks are trademarks of their respective owners. Rather than put a trademark symbol after every occurrence of a trademarked name, we use names in an editorial fashion only, and to the benefit of the trademark owner, with no intention of infringement of the trademark. Where such designations appear in this book, they have been printed with initial caps.
McGraw-Hill Education books are available at special quantity discounts to use as premiums and sales promotions or for use in corporate training programs. To contact a representative, please visit the Contact Us pages at www.mhprofessional.com.
Information has been obtained by McGraw-Hill Education from sources believed to be reliable. However, because of the possibility of human or mechanical error by our sources, McGraw-Hill Education, or others, McGraw-Hill Education does not guarantee the accuracy, adequacy, or completeness of any information and is not responsible for any errors or omissions or the results obtained from the use of such information.
TERMS OF USE
This is a copyrighted work and McGraw-Hill Education and its licensors reserve all rights in and to the work. Use of this work is subject to these terms. Except as permitted under the Copyright Act of 1976 and the right to store and retrieve one copy of the work, you may not decompile, disassemble, reverse engineer, reproduce, modify, create derivative works based upon, transmit, distribute, disseminate, sell, publish or sublicense the work or any part of it without McGraw-Hill Education's prior consent. You may use the work for your own noncommercial and personal use; any other use of the work is strictly prohibited. Your right to use the work may be terminated if you fail to comply with these terms.
THE WORK IS PROVIDED "AS IS." McGRAW-HILL EDUCATION AND ITS LICENSORS MAKE NO GUARANTEES OR WARRANTIES AS TO THE ACCURACY, ADEQUACY OR COMPLETENESS OF OR RESULTS TO BE OBTAINED FROM USING THE WORK, INCLUDING ANY INFORMATION THAT CAN BE ACCESSED THROUGH THE WORK VIA HYPERLINK OR OTHERWISE, AND EXPRESSLY DISCLAIM ANY WARRANTY, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. McGraw-Hill Education and its licensors do not warrant or guarantee that the functions contained in the work will meet your requirements or that its operation will be uninterrupted or error free. Neither McGraw-Hill Education nor its licensors shall be liable to you or anyone else for any inaccuracy, error or omission, regardless of cause, in the work or for any damages resulting therefrom. McGraw-Hill Education has no responsibility for the content of any information accessed through the work. Under no circumstances shall McGraw-Hill Education and/or its licensors be liable for any indirect, incidental, special, punitive, consequential or similar damages that result from the use of or inability to use the work, even if any of them has been advised of the possibility of such damages. This limitation of liability shall apply to any claim or cause whatsoever whether such claim or cause arises in contract, tort or otherwise.







For Lin, a frequent "ITIL widow" for 35 years.








   ABOUT THE AUTHORS

Jim Davies (Stone, Staffordshire, UK) is an ITIL Expert; an ISO/IEC 20000 Consultant; a member of the British Computer Society, itSMF UK, and the Institute of Management (UK); and the director of ServiceSense LTD, an ITSM consulting business. He is an ITIL-certified trainer with more than 40 years' experience in the management and development of computer systems and their supporting services covering military, government, and commercial areas. Awarded itSMF UK 2013 Trainer of the Year, Jim Davies has helped more than 1,200 candidates toward achieving their ITIL Foundation certification with a 98 percent pass rate. He served as an IT-specialist logistics officer in the Royal Air Force for more than 27 years, reaching the rank of Squadron Leader.
About the Technical Editor
David Backham is the CEO and founder of Soliloquy Ltd and works as a service management consultant. He holds certificates in ITIL, PRINCE2, ISO 20000, CoBIT, and LEAN Six Sigma. David has been an active member of the ITSM community in the United Kingdom since 2000 as member, regional chairman, and board member of itSMF UK, as well as committee member for the Service Management Specialist Group of the British Computer Society (BCS). He is currently busy creating a global community sharing ITSM best practice at MasteringITSM.com. David is married with grown-up children, lives in Peterborough, and enjoys hobbies that you can do sitting down like playing computer games, reading novels, watching films, and watching football. His favorite team is Norwich City FC.








CONTENTS AT A GLANCE

Chapter 1      ITIL Fundamentals
Chapter 2      The Service Lifecycle
Chapter 3      Service Strategy
Chapter 4      Service Design
Chapter 5      Service Transition
Chapter 6      Service Operation
Chapter 7      Continual Service Improvement
Chapter 8      IT Service Management in the Real World
Appendix A  Implementation
Appendix B  ITSM Qualifications Structure
Appendix C  Instant ITIL Expertise
Appendix D  About the Download
Glossary
Index








CONTENTS

Preface
Acknowledgments
Introduction
Chapter 1     ITIL Fundamentals
ITSM or ITIL?
Heritage of ITIL
Version 1
Version 2
Version 3
Beyond a Superficial Understanding of ITIL
Common Misapprehensions and Misconceptions About ITIL
What ITIL Is
My Ten Commandments (What Is Compulsory in ITIL)
The Three Axioms
Complementary Frameworks
"Best" Sounds Good, But What Does It Mean?
Crucial Definitions in ITIL
Business
Ownership
Service
Exercise 1-1: What Do You Understand by Service?
Answers to Exercise 1-1
More Crucial Definitions in ITIL
Outcome
Service Management
IT Service Management (ITSM)
Service Providers
Stakeholders
Process
Function
Roles
Getting Organized the ITIL Way
Maintaining Control Through Governance
Risk
Tools
Chapter Review
Quick Review
Questions
Answers
Chapter 2     The Service Lifecycle
What Is the Service Lifecycle?
The Five Lifecycle Stages
Service Strategy
Service Design
Service Transition
Service Operation
Continual Service Improvement
Lifecycle Stages in Action
Processes and Functions
Exercise 2-1: Processes and Functions in the Service Lifecycle
Chapter Review
Questions
Answers
Chapter 3     Service Strategy
The Purpose of Service Strategy
Service Providers and Service Categories
Value Creation
Assets
Resources
Capabilities
Service Strategy Processes
Strategy Management
Service Portfolio Management
Business Relationship Management
Financial Management for IT Services
Demand Management
Roles in Service Strategy
Tools in Service Strategy
Chapter Review
Quick Review
Further Reading
Questions
Answers
Chapter 4     Service Design
The Purpose of Service Design
Holistic Service Design
Service Solutions
Management Information Systems and Tools
Technology Architectures and Management Architectures
Processes
Measurement Methods and Metrics
The Principles of Service Design
The Service Design Package
Service Design Processes
Design Coordination Process
Service Catalog Management Process
Service Level Management (SLM) Process
Exercise 4-1: Service Level Agreement Contents
Capacity Management
Availability Management
IT Service Continuity Management
Information Security Management Process
Supplier Management Process
Roles in Service Design
Tools in Service Design
Chapter Review
Quick Review
Answer to Exercise 4-1
Questions
Answers
Chapter 5     Service Transition
The Purpose of Service Transition
Outsourcing
Service Transition Processes
Transition Planning and Support
Knowledge Management
Service Asset and Configuration Management
Change Management
Exercise 5-1: Why Changes Fail and How Effective Change Management Can Improve Matters
Release and Deployment Management
Service Validation and Testing
Change Evaluation
Roles in Service Transition
Tools in Service Transition
Chapter Review
Quick Review
Answer to Exercise 5-1 (Part 2)
Questions
Answers
Chapter 6     Service Operation
The Purpose of Service Operation
The Scope of Service Operation
Principles of Service Operation
Balance
Communication
Service Operation Processes
Event Management
Incident Management
Problem Management
Request Fulfillment
Access Management
Service Operation Functions
Service Desk
IT Operations Management
Technical Management
Applications Management
Roles in Service Operation
Tools in Service Operation
Chapter Review
Quick Review
Questions
Answers
Chapter 7     Continual Service Improvement
The Purpose of Continual Service Improvement
The Principles of Continual Service Improvement
The Deming Cycle (Plan-Do-Check-Act)
Continual Service Improvement Register
Continual vs. Continuous
Continual Service Improvement Is Not a Project
Continual Service Improvement Process
Seven-Step Service Improvement Process
The Continual Service Improvement Approach
Measurement and Metrics
Baselines
Metrics, KPIs, and CSFs
A Cautionary Thought
Implementing Continual Service Improvement
Next Actions
Further Actions
Kotter's Eight Steps
Roles in Continual Service Improvement
CSI Manager
Other CSI Roles
Tools in Continual Service Improvement
Chapter Review
Quick Review
Questions
Answers
Chapter 8     IT Service Management in the Real World
Real-World Stories
Fun with Finance
Beware Apollo, the Project Manager
Outsourcing Occasions
Configuration Conundrums
It Was a Quiet Day in the Office When . . .
Have We Got a Problem?
Common Challenges
"IT Is Just More Overhead"
Does the IT Director Have to Make Business Decisions?
I Need to Get Started NowâToday!
Is Your Change Manager Considered Omnipotent?
How Many Hours Is This Going to Take?
Listen, This Is a Major DisruptionâI Want a "Sev 1"
Service Management Improvement
Tool Selection
The Continual Service Improvement Register
The International Standard: ISO/IEC 20000
Chapter Review
Questions
Answers
Appendix A  Implementation
Appendix B  ITSM Qualifications Structure
Appendix C  Instant ITIL Expertise
ITIL Buzz-Phrase Generator
Instructions for Use
Appendix D  About the Download
System Requirements
Installing and Running Total Tester
About Total Tester
McGraw-Hill Professional Media Center Download
Technical Support
Glossary
Index








PREFACE

I've been involved in IT since it was called automatic data processing (because in those days it wasn't necessarily electronic!), and I've seen many methods and methodologies come and go. Often these were linked with a particular technology of the time or were a passing management fashion. But when I came across the IT Infrastructure Library (ITIL), I quickly recognized that it was something different.
I wasn't alone, of course. Many managers in the world of IT saw not only that it was the technology itself that had to be managed but also that they had to manage what came out of the technology, namely, IT services. That is what IT service management (ITSM) is about, and ITIL is the framework we use to do ITSM.
Since the initial publication of ITIL, a structure of officially recognized qualifications has developed, complemented by formal training courses and associated publications. These publications (comprising handbooks, manuals, dictionaries, guides, journals, and so on) have all been suitably serious and undoubtedly worthy, but I don't think many readers would describe them as "gripping." Nevertheless, for the more in-depth studies of this topic, the subject matter has to be treated in studious and conventional manner.
However, for those who are meeting ITSM for the first time, a lighter approach is more appropriate in order to engage their interest and to freshen up a subject that can easily become dry and indigestible. At the back of the book, I offer you a bit of whimsy with my ITIL buzz-phrase generator. If it gives you a smile, that's great; if you consider it an outrageous calumny on the purity of ITSM, are you taking life a bit too seriously?
I hope you enjoy reading this book as much as I enjoyed writing it and, equally important, that you gain from it both a practical level of understanding of ITSM and ITIL and success in the ITIL Foundation exam.








   ACKNOWLEDGMENTS

I've been blessed with many rich experiences in life, but I must avoid sounding like an Academy Award winner thanking everyone, starting with their infant school teacher! Instead, I'll give thanks where thanks are due. I'll begin with the two people who were the early, major influences in my discovery of IT service management: Tony Brough, who many years ago introduced me to the IT Infrastructure Library (ITIL), and Dr. Don Page, one of the gurus of ITSM, whose remorseless logic and clarity of view I've always tried to emulate. Also, thank you, Rosemary Gurney, who was the first to show faith in me as a trainer, and thanks to all those hundreds of "victims" who've attended the training courses I've delivered over the yearsâyou may be surprised by how much I have learned from you.
I'm particularly indebted to Gary Bedford and Peter Saul of the Smatra Group not only for their friendship, support, and hospitality but also for allowing me free use of their excellent ITIL Foundation training material.
Finally, particular thanks are due to all in McGraw-Hill Education, both for their invitation to write this ITIL Foundation All-in-One Exam Guide and for their efforts to keep my wayward mind focused on the essentials of style and the deadlines for the delivery of scripts. And a big thank-you must go to my eagle-eyed technical editor, David Backham, whose keen observations and sage advice have on one hand ensured a level of quality readers have a right to enjoy and on the other made up for my occasional shortcomings in current management theory and concepts!








   INTRODUCTION

Thank you for buying (or borrowing!) this book, and I hope you're keen to get on with reading it. Good. I'm sure you'll find the journey ahead interesting, informative, and useful. But, before we start, are you clear in your own mind about what you want to achieve?
I guess that many readers will have the clear and simple aim of passing their ITIL Foundation examâgetting the qualification on their CV (or rÃ©sumÃ©). That's fine. When I've been interviewing people who want to join my staff, I have been particularly interested in those with this qualification because I knew they came with some understanding of what we were trying to do and why we were going about it the way we were.
Of course, you may well have a longer-term career aim. The ITIL Foundation certification is just that, a foundation on which to build. If you want to take your formal understanding of IT service management further, you'll have to get this qualification before you can take the next-level exams. More importantly, if you want to improve your effectiveness as a manager, gain that promotion, and open up more job opportunities, you'll find an ever-deeper understanding of ITIL crucial to achieving that aim.
Or you may be seeking just to find out what all this "ITIL stuff" is. Perhaps you're a technical wizard who wants to put a context around the great work you do. Maybe you're a highly experienced IT manager, even an IT director, who's heard about ITIL and wants to understand it better. If so, you've made the right choice. This book is not "ITIL for Dummies" nor is it a bluffer's guide. My aim is to take you through the ITIL framework at a comfortable pace to demystify it and to ensure that you'll gain a sound appreciation of what ITIL is about and why it is so valuable.
I'll be especially delighted if you're from outside the world of IT. A big welcome! By reading and understanding this book you're going to have a huge advantage over your colleagues because you will come to realize how IT service management (which is what ITIL is about) is a strategic business asset, essential to the success of practically all enterprises. If you're not already the executive vice president, your journey to achieving such eminence could well start here!
The point I want to make is that this book is for everyone. It almost goes without saying that service desk analysts and IT service managers will find it extremely valuable as will everyone involved in IT because the reason they've got a job is, ultimately, to provide a serviceâa service that enables a customer (which is the "business," however we define it) to do its job.
This book is for more than just those good people in IT. Everyone who uses a computer of some sort (pretty much about everyone in the world these days) depends on it for their employment, their entertainment, their human interactions, and so on. We all fall into this latter category. Appreciating how the service you're receiving should be delivered will help you communicate more effectively with your service provider, which should not only help them do their job better but also increase the value you get for your money. Likewise, on a broader scale, business executives and managers need to understand what ITSM is so that they can work in effective partnership with their IT people to maximize the value of the business investment in IT.
Let's Keep It Simple
In its fullness ITIL encompasses much complexity and contains a number of subtle interpretations. Happily, here we are focusing on its foundations so we can take a more comfortable, straightforward, and unsophisticated approach. However, the formal ITIL Foundation syllabus omits some important elements of ITIL, so to ensure you get a comprehensive picture, I've put these elements back in. A list of this additional content is at the end of this front matter.
Nevertheless, although we are going to keep things simple, I appreciate that the readers of this book will be intelligent, experienced, and perceptive people with incisive, analytical brains. That being the case, you may question some of the statements I make because you may envisage some circumstances where this basic ITIL guidance may not give a full answer. When I'm delivering an instructor-led course, we could discuss these matters freely. However, in a book such as this, that is impractical. Please bear that in mind. Occasionally, and to help, I'll refer to "classic" ITIL, an expression I use to mean ITIL in its straightforward and uncomplicated conception.
Using This Book
This book is laid out in the same logical order that an instructor-led course would take, and I recommend you start at the beginning and work through Chapters 1 to 7 sequentially. However, you can dip into Chapter 8 whenever you like. Electronic practice exams are also provided for you to tackle (see Appendix D). After you've completed the book, you can take a practice exam in simulated exam conditions, mark your work, and, depending on your level of success, revisit any parts of the book you need to and then tackle another simulated exam.
I've written the contents and the sample exams in alignment with the official syllabus (see the ITIL Foundation Level page at www.axelos.com for more exam information and the ITIL syllabus). Table 1 is a topic map, aligning the exam domains and additional material with the contents in this book.

Table 1    Map of Exam Domains and Additional Material
Additional Material
The following list indicates, by section headings, the material that is in the book but is outside the syllabus for the ITIL Foundation exam.
Chapter 3:
Strategy Management
Demand Management
Chapter 4:
Component Failure Impact Analysis (CFIA)
Fault-Tree Analysis (FTA)
Measuring Availability
Roles in Service Design
Chapter 5:
Getting Started with SACM
Raise RFC
Service Validation & Testing
Change Evaluation
Roles in Service Transition
Chapter 6:
Balance
Incident Matching (Incident Management)
Incident Matching (Problem Management)
Roles in Service Operation
Chapter 7:
Implementing Continual Service Improvement (CSI)
Kotter's Eight Steps
Roles in Continual Service Improvement
Chapter 8:
In toto








CHAPTER 1
ITIL Fundamentals
In this chapter, you will
â¢  Discover what IT service management (ITSM) and IT Infrastructure Library (ITIL) are about
â¢  Learn the fundamental concepts and definitions of ITIL

ITSM or ITIL?
What is the difference between ITSM and ITIL? Is there any significant difference? What term should you use? Does it matter?
It matters because you need to know what it is you are talking about; otherwise, you can quickly get confused (I certainly can). Look at it this way: without it being specifically defined, we've been doing IT service management for as long as computers have been with us. Then, some 25 years ago, along came the IT Infrastructure Library, a documented framework to help us "do ITSM." It's also worth mentioning that there's more than just ITIL in this ITSM picture. There are also "complementary frameworks" such as Control Objectives for Information and Related Technology (COBIT) or ISO/IEC 20000. I don't want to scare you, so I'll leave those for later.
While considering these weighty matters, I'm often asked whether ITIL should be pronounced "eye-till" or "it-ill." There is no international standard way to pronounce ITIL, so the choice is yours.
Heritage of ITIL
I think heritage is a good word. It's less threatening than history and implies something valuable. It's helpful to your understanding of ITSM and ITIL to appreciate your inheritance.
Let's start by chopping off the letters IT from ITSM and talk about service management. Service management (SM) has been going on for centuries. The medieval blacksmith was providing a service. His customers went to him (not many female blacksmiths then I think) because those customers didn't have the skills, equipment, or time to make their own iron objects. They needed to achieve somethingâget their cart fixed perhapsâand they used the blacksmith's services to do that. A successful medieval blacksmith would have had to make sure he was available when needed, had the right skills and equipment, and charged an acceptable rate for his work. If he was polite and dependable, that would be even better. Aren't these principles still the same today?
Putting the letters IT back on brings us to the latter half of the 20th century when computers started appearing outside the science of ballistics and the murky world of code breaking; these were the early days of IBM computers and of Lyons' Electronic Office (LEO).
Those were great times. To do IT we put on white coats and inhabited special air-conditioned rooms where strange machines whirred and clicked while lights blinked and line printers rattled. Computer people created a mystique about their profession, and lesser mortals were made to keep their distance.
That was all very well, but the idea of "service" never really entered people's heads. Early computerization was mainly about automating previously manual tasks, such as accountancy and stock control, and achieving benefits in huge staff savings and through greater accuracy.
Then came the 1980s, with client-server architecture and PCs. Suddenly people who were not specially trained experts found themselves sitting at workstations interacting directly with the technology. Things were on the move. Mobile phones ceased to be the size and weight of a brick and could fit into people's pockets. Home computing became unexceptional, and the World Wide Web transformed information management around the globe.
It was in this context that forward-thinking IT managers came together in the late 1980s to share their experiences of this changing world and to discuss the best ways of managing the new and rapidly changing infrastructure. The IT Infrastructure Library was born.
Version 1
Version 1 was the distillation of the wisdom of those hard-bitten, battered, and bruised IT managers. It was published as a series of actual, hard-copy books and covered ten specific processes. It was immediately a success because it provided a commonsense approach based on real-life experience. I well remember attending a presentation on the subject and undergoing a sense of deep revelation when the incident process was describedâsad, but true!
Version 2
Valuable experience had been gained with version 1, so, around the year 2000, an update of ITIL was published. The concepts in the original 10 processes had proved their worth and were retained, and the Service Desk was introduced as a separate discipline. These 11 areas were grouped into 2 volumes: Service Support and Service Delivery. Additional volumes such as Planning to Implement Service Management and Applications Management were also published.
Despite its success, version 2 had its deficiencies.
â¢  It did not really help ITSM people to clearly articulate the great benefits of professional service management toward achieving business success.
â¢  Its relationships with program and project management were not clear.
â¢  It appeared to still have its emphasis on live operations.
Version 3
A major rewrite of ITIL led to version 3 being rolled out in 2007. Now there was the concept of the lifecycle. Extra processes were defined. The academics had their input. The result was ITIL very much as it is today. Some additional clarification was introduced in the 2011 version. This 2011 version is the one I'll be talking about.
You might want to argue with me that all this background is unnecessary and that you could pass the exam without all this heritage stuff. Well, that's absolutely true, but if you want to understand fully why ITIL is here and what it is for, you really need to know its provenance.
Beyond a Superficial Understanding of ITIL
To understand a subject fully, it's going to take more than just some background information. I believe that if you have a clear grasp of a subject's philosophy and principles, you'll get a deeper understanding, a quicker understanding, and a better chance of success in the relevant exams.
Let's clear up some common misunderstandings and get some clarity of what ITIL is really about.
Common Misapprehensions and Misconceptions About ITIL
A great number of people (even those who've had some ITIL training!) have some odd ideas. Let's knock such ideas on the head at once. Here's a list of what ITIL is not, despite common misconceptions to the contrary:
â¢  It is not a standard. There is no such thing as an ITIL standard. There is, however, a formal, international standard for ITSM. That standard is ISO/IEC 20000. By the way, ISO doesn't mean International Standards Organization but International Organization for Standardization, and IEC means International Electro-technical Commission, so now you know.
â¢  It is not a method and not a methodology. Let's not get caught up in the difference in meaning between method and methodology; suffice to say that ITIL is neither one nor the other.
â¢  It is not a list of compulsory actions. ITIL is not a cookbook with recipes for you to follow.
â¢  It is not a product you can implement. You can't go out and buy ITIL. Of course, you can buy the books. You could even read them (not a bad idea!). You could buy a service management tool of some sort, and that may not be a bad idea either. But implementing the tool isn't "implementing ITIL," as you'll be finding out later.
â¢  It is not a substitute for leadership. This should be obvious, but it's worth making it clear.
â¢  It is not a substitute for management. There is always the risk that some people think you "do ITIL." No you don't. You "do" IT service management, and you can do it better by applying the ITIL best-practice framework.
â¢  It is not a substitute for proper supervision. It would be great if you read the ITIL books, understand them, and define and publish documented services and processes. But you'll achieve nothing unless you not only have some people in appropriate roles to do the work but also can make sure that they are following those services and processes that you have defined. I'll be mentioning this topic later in this chapter in the section "Maintaining Control Through Governance."
â¢  It is not a magic solution to your service management challenges. I suspect you've probably got this point by now.
What ITIL Is
So, I hear you say, if ITIL is not any of those things, what is it? The answers to that question are as follows:
â¢  It is guidance. It is extremely valuable guidance of proven worth.
â¢  It is flexible. It is not a rigid set of compulsory actions.
â¢  It is a comprehensive framework. You can overlay it onto your service management arrangements. Doing that will help you identify what you're doing well and what you're not doing well.
â¢  It is a compendium of best practices. It was taken from a wide range of sources (I'll be coming back to that later, too).
â¢  It is vendor-neutral. It is not a proprietary product owned by a Google or the Microsofts of this world. The copyright is owned by HM Queen Elizabeth II (not personally, but as Crown copyright). Everyone is at perfect liberty to adopt the ITIL framework and adapt it for their own use.
â¢  It is supported by a huge variety of software solutions and tools. I'll be giving you some guidance on tool selection in Chapter 8.
The maxim you should never forget is "adopt and adapt."
My Ten Commandments (What Is Compulsory in ITIL)
Earlier I was clearing up some common misapprehensions. While I was doing that, you may have been asking yourself how ITIL could be useful given that it's not a specific list of detailed actions. That's a good question. The answer is that while ITIL is not like a "cookbook" giving detailed instructions, it does require you to meet some challenging, compulsory managerial objectives. Please give me your full attention for my Ten Commandments.
I'm now putting on my most impressive patriarch's voice (Morgan Freeman, beware!) and intoning, thou shalt have . . .
1. Clearly defined, agreed on, and documented roles and responsibilities
2. Clearly defined, agreed on, and documented services
3. Clearly defined, agreed on, and documented processes
4. Clear ownership of services and processes, as well as all other components of the infrastructure
5. Meaningful process and service metrics
6. Measurement of performance at the point of service delivery
7. Regular reviews of the performance of services and processes
8. Publication of reports on performance
9. A service improvement program
10. Clear communication between IT and users to establish and nurture trust between IT and the business
I'd ask you to note particularly that the word documented appears in the first three commandments. In the world of ITIL, we like documentation. Too many organizations have undocumented or poorly documented roles and responsibilities, as well as services and processes, and then they wonder why things aren't working well.
Moreover, I'd like to believe that having all these ten good things is obviously sensible. Who wouldn't want clearly defined, agreed on, and documented services? (So why haven't you got them, then?) However, if all those things are so good, why do so many organizations fail to achieve them? That, of course, is a rhetorical question for which you can think of your own answers. This book will help you on the path to achieving them in your own area of responsibility.
The Three Axioms
Version 2 of ITIL presented three clear and simple objectives of service management. I find that these are three useful axioms to bear in mind when considering what ITIL is about.
â¢  Integration   To integrate IT and the business that it supports
â¢  Effectiveness   To drive up the quality of IT services
â¢  Efficiency   To drive down the cost of IT services
I was sorry that version 3 appears to have jettisoned them because I contend that they are as equally valid now as in the past.


EXAM TIP    It isn't difficult to remember these three axioms; they can be useful to bear in mind when trying to identify the correct answer to many ITIL exam questions.

Complementary Frameworks
Earlier I mentioned that there are complementary frameworks and promised to return to them later. I hope you're glad that I keep my promises!
ITIL is not "precious about itself" in the way that some other frameworks and methods sometimes appear to be. Do Six Sigma black belts actually argue that adopting Six Sigma would remove hunger from the world and help England win the next World Cup? It sometimes feels to me that some of them do! ITIL is at the other end of that spectrum. It is a framework of "easy virtue"; it's happy to become intimate with any other frameworks and methods where there is synergy.
Here is a selection of such frameworks and methods:
â¢  Agile
â¢  Balanced Scorecard
â¢  Business Information Services Library (BiSL)
â¢  Capability Maturity Model Integration (CMMI)
â¢  Control Objectives for IT (COBIT)
â¢  European Foundation for Quality Management (EFQM)
â¢  Frameworx
â¢  Quality Management Systems (ISO 9001)
â¢  Environmental Management Standards (ISO 14000)
â¢  Software Process Improvement and Capability Determination
â¢  ISO/IEC15504 (SPICE)
â¢  Information TechnologyâSecurity (ISO 27000 series)
â¢  Management of Risk (ISO 31000)
â¢  Corporate Governance of IT (ISO 38500)
â¢  Service Management System (ISO 20000)
â¢  Lean
â¢  Managing Successful Programmes (MSP)
â¢  Outsourcing Professional Body of Knowledge (OPBOK)
â¢  Project Management Body of Knowledge (PMBOK)
â¢  Project Management (PRINCE2)
â¢  Defect Reduction and Elimination (Six Sigma)
â¢  Enterprise Architecture (TOGAF)


EXAM TIP    Remember that ITIL sees itself as a vital part of a bigger picture of best practice.

"Best" Sounds Good, But What Does It Mean?
Having mentioned best practice a few times, it would be sensible to examine the term a bit more closely.
When ITIL version 3 first appeared, there was an argument that we shouldn't use the term best practice because that implied it could never be improved. Proponents of that argument preferred the term good practice. I never subscribed to that point of view. I felt that such arguments were unhelpful and that most people knew perfectly well what best practice meant and that we should leave it at that. I'm glad that most of the world now takes the same view!
Unencumbered by these academic tussles, I hope we can agree that best practice means proven activities or processes that have been successfully used by multiple organizations.
The perceptive among you will see that I've sneaked in a formal definition here and there are many more definitions to come!
Best practice is derived from a fusion of sources and enablers, as shown in Figure 1-1.

Figure 1-1   Generating best practice
Sources of Best Practice
Figure 1-1 lists five sources:
â¢  Standards   The highest-quality sources and the most valuable are found in recognized standards, such as ISO/IEC 20000. International standards are published only after a rigorous process of drafting, examination, and peer review. You can't do much better than an ISO standard as a source of best practice. Other "standards" may be useful, but you'll need to check their quality carefully.
â¢  Industry practices   These are another potentially valuable source, but you'll have to decide whether a particular industry's practice is relevant to you. If your business is a finance institution, would you find the practices of the steel industry to be entirely appropriate? You should also examine the practices critically, perhaps doing some "compare and contrast" to determine whether what you're seeing is actually the "best."
â¢  Academic research   This can be a good source too; ITIL version 3 contains much useful stuff from the latest business research and management theory. However, you should bear in mind that most people are "doing ITIL" for practical purposes. You should be careful not to get diverted down an academic side road; remember that you may not be engaged in producing a master's thesis. (However, if you are so engaged, don't forget to take full account of ITIL.)
â¢  Training and education   This is what you're doing now, and it can be a source because good ideas can come from classroom discussion, from course designers, and even from the authors of books!
â¢  Internal experience   Be careful here. While this is a potentially valuable source, internal experience may be misinformed, subjective, and based on misapprehensions. Check it out carefully. If it's good stuff, make use of it; if it's flawed, you've got something to put in your continual service improvement program!
Enablers of Best Practice
It's all very well acquiring a heap of best practice, having it documented, and then having it assessed for quality and usefulness. But actually you've got to do something with it; you need to identify your enablers.
â¢  Employees   Ah, yes. These are the good people who turn up every day and actually do the job. Organizations may have a lot of automation, but somebody has got to run it.
â¢  Customers   These are the people for whose benefit you do all this ITSM using the ITIL framework. They are the ultimate enabler of best practice.
â¢  Suppliers   Your third-party contractors will probably have a crucial role as enablers, particularly if you've outsourced many of the components of your services.
â¢  Advisors   If you don't already have the experience, skills, and training to adopt and adapt ITIL, it may be sensible to seek advice. Perhaps that means informally from user groups or forums, or you may invest in consultancy (those people who borrow your watch to tell you the time and forget to give you your watch back; again, they could also be the authors of booksâbeware!).
â¢  Technology   Today the market offers a veritable cornucopia of software solutions and tools to help you. But you need to take care over which ones you select. Will the "solution" that the salesperson is proposing actually be appropriate to your "problem"? Tools can be helpful, but if your services and processes are not clearly defined, agreed on, and documented (where have I heard that before?), a tool is not going to be of much use other than to highlight the poor state of your processes and services. I'll be covering tool selection in Chapter 8.
Crucial Definitions in ITIL
Before you're tempted to skip this bit because it looks like it could be boring, let me give you fair warning you that you'll need to have all these definitions clear in your mind if you're to understand fully the rest of this book and to pass your exam.
Since ITIL version 1 first appeared, one of its most valuable features has been the clear, unambiguous definitions it provides. Having such clarity means any argument you may have will be conducted on a sound basis ("What do we mean by incident as opposed to problem"?). You want to avoid the situation observed by Rev. Sydney Smith, who was strolling along a narrow street around 1800 with a colleague, when they heard two women leaning out of their opposite windows and screaming insults at each other. "These two ladies will never agree," Smith said, as the debate raged over his head, "for they are arguing from different premises." (That's a story for the intellectual readership!)
Let's get our premises defined.
Business
I've mentioned the word business many times already, and it's vital to understand because in ITSM and ITIL it means more than just a commercial operation of some sort. Business is where the needs of the ultimate customer are being met (we hope). That ultimate customer could indeed be a commercial customer (someone receiving a social media service, for example), or they could equally be the customer of a government service (paying their taxes online, for example). Business covers both private- and public-sector enterprises.
Ownership
Ownership is crucial. Any application, service, piece of hardware, and so on, that's not clearly owned by a nominated individual or group is nobody's child and will be severely neglected, abused, and forgotten. Ownership can be defined as the act, state, or right of possessing something. My definition of an owner in ITIL terms is a nominated individual or group empowered to exercise accountability for a specific configuration item (CI). (I'll define accountability and CI laterâif you can wait that long. Please contain your excitement.)
Service
This is the most crucial of all crucial definitions. Take a deep breath, clear your brain, and read on.
There are numerous definitions of service. The official ITIL version 3 definition is that a service is a means of delivering value to customers by facilitating the outcomes customers want to achieve without the ownership of specific costs and risks.
When I first came across this definition, I confess I wasn't too impressed; it seemed to be a lot of "management speak." But I have warmed to it over the years as I have unpicked it to get at the underlying logic.
First, it's about delivering value, delivering value to customers, and giving customers something that is worthwhile. You do that by "facilitating the outcomes customers want to achieve," in other words, helping them do something they want.
So far so good, but what's all this specific costs and risks bit? The crucial point here is in the word specific, which I interpret as meaning detailed. You accept that there has to be some level of cost and a risk when you receive a service, but as the recipient of that service, you don't want to be concerned about all the specific detail behind it. Exercise 1-1 illustrates this point.

Exercise 1-1: What Do You Understand by Service?
Let's imagine you've decided to buy a new car. The most important question to be asked is "Why?" The answer, presumably, would be something like, "So I can travel around conveniently, reliably, and safely for business, pleasure, and so on." In other words, you have an "outcome" you want "facilitated."
It is rather unlikely that you're going to design and build a car yourself. You'll probably go to a dealer and buy one. To do that you'll need to have an idea of what you want, and then you'll negotiate with the dealer to agree what car to buy, with what features, and at what price. As the customer you'll have to take responsibility for the total purchase and ongoing maintenance costs and for making a judgment on the risk of buying that particular car from that particular dealer and having it maintained there. Those are your costs and risks.
In contrast, the dealer, of course, will have numerous detailed, specific costs and risks.
For this exercise, you already have your main outcome defined, but I'd now like you to write down your answers to these questions:
1. How would you like to be treated?
2. What are the various elements that would make you a satisfied customer?
3. What are the detailed elements the car dealer has to manage in order to meet your expectations?
My suggested answers are in the next section.
Answers to Exercise 1-1
The following are my suggested answers to Exercise 1-1.
How would you like to be treated? With respect and courtesy. I would like the dealer to listen to my requirements, not jump to conclusions, and work with me to come to a mutually acceptable solution and price, including ongoing support arrangements.
What are the various elements that would make you a satisfied customer? Being treated as outlined earlier; prompt delivery (the car being delivered to the agreed-on place on the due date and time); cost (as agreed); training (familiarization with the car's features and ongoing maintenance requirements); subsequent reliability and performance of the car against expectations; timeliness, convenience, and quality of subsequent regular servicing; timeliness, convenience, and quality of any subsequent break/fix work.
What are the detailed elements the car dealer has to manage in order to meet your expectations? Physical premises, equipment, tools, power, spare parts, staff (skilled and experienced managers, supervisors, mechanics, administrators, sales, and so on), processes, costs, financial systems, IT systems, compliance (workshop regulations, control of substances hazardous to health, employment law, and so on), management of subcontractors, and so on. The list is almost endless.
I hope you've realized that there are many parallels not only with the medieval blacksmith I referred to earlier but also, and more importantly, to today's provider of IT services.



EXAM TIP    Examiners invariably ask a question about the definition service because it is so fundamental. You don't have to memorize the definition word by word, but you need to be able to differentiate it from any imperfect definitions that might appear alongside it in an exam question.

The famous business guru Peter Drucker says, "Quality in a product or service is not what the supplier puts in. It is what the customer gets out and is willing to pay for. A product [or service] is not quality because it is hard to make and costs a lot of money, as manufacturers typically believe. This is incompetence. Customers pay only for what is of use to them and gives them value. Nothing else constitutes quality."
More Crucial Definitions in ITIL
No, I haven't finished the list yet; here are some more.
Outcome
In the definition of service the term outcome is used, which is the result of carrying out an activity, following a process, or delivering an IT service. The term is used to refer to intended results, as well as to actual results.
Again, you don't have to memorize this definition word for word, but make sure you can recognize the correct definition when you see it.
Service Management
Now we're getting down to it! The definition of service management is as follows: a set of specialized organizational capabilities for providing value to customers in the form of services.
You can follow this rapidly with the following.
IT Service Management (ITSM)
ITIL defines IT service management as the implementation and management of quality IT services that meet the needs of the business. IT service management is performed by IT service providers through an appropriate mix of people, process, and information technology.
You have now reached a milestone in this book. I've defined IT service management. Please make sure you have these concepts and definitions firmly embedded in your mind before going further.
Service Providers
The previous definitions mentioned service providers. These are, surprisingly, people or organizations that provide services ("Is that really true?" I hear you ask me. Yes, it is!). Basically, IT service providers provide IT services to internal or external customers.
This couldn't be much clearer. But note how customers can be internal or external. An internal IT department provides its services to internal customers; they are the business of which it is a part. On the other hand, an outsourced service provider's customers will be external to it.
In fact, ITIL defines three types of service provider.
â¢  Type I   An internal service provider that is embedded within the business unit it serves. There may be several Type I service providers in a single, large organization.
â¢  Type II   An internal service provider whose services are shared among more than one business unit. A Type II service provider is also known as a Shared Service Unit.
â¢  Type III   Provides services to external customers.
I worked for six years for a company called Tradeteam, the United Kingdom's largest drinks logistics company. The internal IT department was a Type I service provider for Tradeteam's various depots and its head office. But Tradeteam was a joint venture between, at the time, Bass Brewers and Exel Logistics. Exel IT provided Tradeteam with its Internet and e-mail services; Exel IT was, thus, a Type II service provider to Tradeteam. Meanwhile, Tradeteam had a number of contractual relationships for services from the likes of BT and Computacenter; BT and Computacenter were, therefore, Type III service providers as far as Tradeteam was concerned.
Stakeholders
This is a book on management, so you may well have been wondering how long it would take before stakeholders got a mention. That time is now. In ITIL there are three generic types of stakeholder.
â¢  Customers These are the people or organizations that commission and, perhaps, pay for the service being provided. Customers are typically management-level people with whom service providers will have regular, formal review meetings.
â¢  Users (or end users) These are people who are having their business activities facilitated at that very moment by the IT services. These people will actually have their hands on a keyboard or grasping a radio data terminal that they are using. These could be accounts clerks or storekeepers, for example (or even the chief executive officer when sending a text message).
â¢  Suppliers This is nice and simple. A supplier is a third-party service provider (a Type III service provider). It is someone with whom you have a contractual relationship.
You mustn't forget, of course, that everyone working within every type of service provider is also a stakeholder of some sort.
Process
You have now reached another significant moment. This is a definition as important as that of service. Please make absolutely sure you appreciate the difference between service and process. The ITIL defines a process as a set of coordinated activities combining resources and capabilities to produce an outcome that creates value for the customer.
The ingredients of a process can best be illustrated by the generic process model shown in Figure 1-2.

Figure 1-2   Generic process model
In the center of Figure 1-2 is the process itself, comprising a set of coordinated activities as mentioned in the formal definition, along with the procedures that tell the process practitioners what they actually need to do to perform the activity concerned.
When considering process, I find it useful to have in mind an example of a typical process, such as Incident Management. In Incident Management the set of coordinated activities include detection, reporting, logging, categorizing, prioritizing, investigating, diagnosing, fixing, and closing. There will be procedures for each of those activities, perhaps with detailed work instructions on, say, how to log an incident using the Service Desk tool.
You'll need to specify who does what activity (this is where roles come in, which I'll talk about later in the chapter) and to decide what you are going to measure so you can monitor the process, assess its efficiency and effectiveness, and make measureable improvements to it.
That's all good stuff, but you need the wherewithal to make these activities happen. You must have process enablers. These fall under two headings: resources and capabilities. I'll be discussing those in more detail in Chapter 3.
So far so good. You've got your process activities, and you've got your enablers. But whether anything actually happens at all, or happens in other than a chaotic way, is another matter. I hope you'll agree that you need something to control what's going on.
Let's have a nominated owner to exercise authority and accountability. Let's have some process documentation to show everyone who the owner is and to specify what the policy and objectives of the process are. Let's receive feedback on how the process is performing.


Watch Generic Process Model for a discussion of the process ingredients and how they fit together. (See Appendix D for access to this and other videos.)



EXAM TIP    Examiners love to ask questions about the generic process model, so please make sure you become familiar with it.

ITIL also helps you to recognize a process when you see one by offering you four characteristics that every process has.
1. It responds to a specific event. Something happened that sets it off; there is a defined trigger.
2. It is measurable. Metrics should include such elements as performance, cost, quality, duration, and productivity.
3. It produces a specific result. The true value of the process is found here, and the result must be identifiable.
4. It delivers its result to a defined customer (or user) in a way that meets their expectations.


EXAM TIP    Examiners are keen to ask questions about the four characteristics of a process, so please ensure you've got them engraved on your heart.

In ITIL version 3 you'll be looking at 27 processes. However, you may be a little reassured to know that only 22 are in the ITIL Foundation exam syllabus.
Function
Just as you're thinking you've got service and process clear in your mind, I now introduce the word functionâit's never-ending, isn't it? The ITIL defines a function as a unit of organization specialized to perform certain types of work and responsible for specific outcomes.
Functions are the major building blocks of an organization. Functions are where the activities of processes are actually performed. One function can be involved in as many different processes as may be required.
As with process, when considering function, I find it useful to have in mind an example of one, such as the Service Desk. Most people can picture a Service Desk and many will have worked in one and will know that the Service Desk performs a lot of the activities specified in the Incident Management process and the Request Fulfillment process. However, these processes are not the exclusive preserve of the Service Desk; other functions get involved too.


EXAM TIP    Examiners will test you on your ability to differentiate among service, process, and function. Please make sure you can!

Roles
Within functions there are people who have roles. I guess we've all had our own job descriptions/role profiles and so on. The ITIL defines a role as a position, responsibility, or duty within a process or function.
Taking the example of the service desk, typical roles are First Line Analyst, Team Supervisor, and Service Desk Manager. Most don't find the concept of roles difficult, and I'm sure you won't either.
This is a good moment to introduce you to four generic roles that are fundamental to ITIL: Service Owner, Process Owner, Process Manager, and Process Practitioner.
Service Owner
In ITSM this is, unsurprisingly, an important role, and one person can own more than one service. Picture yourself as a Service Owner (a senior manager, of course) with the following accountabilities and responsibilities, and you can feel a justified sense of importance!
â¢  Initiation, transition, and ongoing maintenance of the service
â¢  Prime customer contact for service-related issues
â¢  Ensuring service delivery meets customer requirements
â¢  Identifying service improvements and raising RFCs (these are requests for change; you'll examine them further in Chapter 5).
â¢  Liaising with Process Owners throughout the service management lifecycle (this is a crucial relationship; Service Owners look to Process Owners to ensure their services are properly supported)
â¢  Effective reporting and monitoring
â¢  Accountable for the delivery of the service
Process Owner
Process Owner is another vital role (I'll let Service Owners and Process Owners slug it out among themselves to decide which one's more important). Again, one person can own more than one process. The role covers the following:
â¢  Initiation, transition, and ongoing maintenance of the process
â¢  Defining process strategy, policy, and standards
â¢  Assisting with process design (not necessarily actually designing it; you'll have experts in process design who do it during the Design lifecycle stageâthere's a surprise!)
â¢  Ensuring process documentation is available and current
â¢  Auditing the process for efficiency, effectiveness, and compliance (as a Process Owner this makes sure you don't get nasty surprises when the formal auditors appear)
â¢  Communicating information to ensure awareness (it's no good moaning that people aren't following the process if they don't know it exists)
â¢  Provisioning resources and training (or telling the powers that be that resources and training are essential or process benefits won't happen)
â¢  Providing input to service improvement programs


EXAM TIP    Don't get confused between Service Owner and Process Owner. An exam question might ask, "Which of the following is the Process Owner responsible for?" You should check carefully before you choose an answer with the word service in it!

Process Manager
Come again? Isn't this role the same as Process Owner? Well, in a small organization it may be, but there can be advantages in having separate roles. For example, some organizations make the Service Desk Manager the owner of the Incident Management Process. That may not be such a good idea because functions other than the Service Desk get involved in Incident Management and the Service Desk Manager may not be sufficiently empowered to act as the owner of the whole process. Specialist teams may view the Service Desk Manager as being less important than they are, and they may be reluctant to give incident investigation and diagnosis the priority it demands. However, if someone on the IT executive team is the owner of the process, that is less likely to occur. The Service Desk Manager could then be effective as the Process Manager, reporting to the Process Owner, and would have the clout necessary for the role. As manager of the Incident Process, the Service Desk Manager could then happily do the following:
â¢  Help to plan and coordinate activities (processes are a set of coordinated activities, aren't they?)
â¢  Ensure all activities are carried out as required
â¢  Appoint people to the required roles
â¢  Manage resources assigned to the process (it's the Process Owner's responsibility to get the resources)
â¢  Help ensure the smooth running of services (yes, processes underpin services)
â¢  Monitor and report on process performance
â¢  Identify improvement opportunities
â¢  Help prioritize improvements in the CSI register (the CSI register is essentially a huge "to-do" list)
â¢  Make improvements to the process implementation (in other words, providing guidance and training to practitioners within the process in order to create new capabilities by achieving heightened conformance to the process, including accurate and complete documentation and the effective use of tools)
Process Practitioner
At last you've come to those who actually do the work in the process. Their good work covers the following:
â¢  Carrying out one or more activities of the process
â¢  Working with other stakeholders to ensure that all contributions to the process are effective
â¢  Ensuring that inputs, outputs, and interfaces for their activities are correct
â¢  Creating or updating records to show that activities have been carried out correctly
Getting Organized the ITIL Way
There is no model, ITIL-style organization. ITIL does not say what your organization should look like, but it does provide some useful guidance. Each Chapter 6 in the five main ITIL books is titled Organizing for..., and therein you'll find a number of roles, each with a detailed list of responsibilities. Now, this doesn't mean you need to have one person, and one person only, for each role. Roles can be combined within one position. But it can be useful to go through each of the responsibilities listed and ask yourself, "Whose responsibility is that in my organization?" If it's not clear, get it clarified. If it's covered by two or more people, you may already be having a turf war or you're risking one, or each may think the other is doing it, so things are falling through the gap between them. Of course, if it's not covered, you've got a black hole into which things will probably be disappearing.
A good way to get these risks under control is to create a RACI matrix (some pronounce this "rakki," and others say "ray-see"; I prefer the latter as I've always thought of myself as a racy type). RACI stands for Responsible, Accountable, Consulted, and Informed, and you can create RACI matrices at various organizational levels as best suited to your needs. In fact, you could have a whole set of hierarchical RACI matrices. But for these purposes, let's keep it simple for the time being.
Figure 1-3 gives an example of a simplified RACI matrix. This is for my favorite process, the Incident Management Process.

Figure 1-3   Example RACI matrix
Across the top you see some roles listed and down the left are some activities in the process. In the appropriate cells the letters R, A, C, and I appear either singly or in combination. Cells can be blank if appropriate. So, let's look at the activity Detect. It is the responsibility of the End User to detect failure and to inform the Service Desk. The Support Manager (whoever that may be in this example) is accountable for this activity taking place properly.
Turning to the next activity, Log, that is the responsibility of the Service Desk Analyst, who should consult the End User when doing so (all pretty reasonable?). The Service Desk Manager is accountable for this activity taking place properly.
The next activity is Categorize, which is a bit more complicated. The Service Desk Analyst retains responsibility for doing this and must continue to consult the End User, but now the Service Desk Manager and the Support Technician need to be told what's going on.
And so it continues. The most important point to remember (in addition to what the letters RACI mean) is that for any one activity many can have responsibilities, many can be consulted, and many can be informed, but only one person can be accountable. For example, a football team has 11 players, each with their specific responsibilities, but it is the team coach or manager whose head is on the line. If the team doesn't perform, they're the one who has to go!
The other point to remember about RACI is that it provides the linkage between the roles, the levels of responsibility, and the authority assigned to each role that is involved in carrying out the activities of a process.
Maintaining Control Through Governance
ITIL is not a substitute for leadership, management, and proper supervision. I hope you remember that from the list of common misapprehensions I gave earlier this chapter. The point is that no matter how splendidly your services and processes have been negotiated, agreed on, and documented, if nobody pays the slightest attention to them, it will have been a waste of time and effort. Equally, in the world of management, we have to deal with human beings with all their quirks and foibles. Do resources tend to go only to whoever shouts the loudest? Do you have a "queen bee" who demands priority over everything and everybody else?
The antidote to this distortion is governance. Good governance is about ensuring fairness and transparency, ensuring that it is the business need that determines who gets what, how much, and when they get it. Governance ensures that we focus on conformance and compliance, especially compliance to legislative requirements (Sarbanes-Oxley, Freedom of Information, Data Protection, and so on) and to business performance imperatives. The aims must be to meet audit requirements and to use your resources to maximize the creation of value to the business.
Risk
The management of risk is mentioned several times throughout ITIL, and risk management is a whole area of study for you to pursue if you want. However, for the immediate purposes, I can keep things simple.
Risk can be defined as "uncertainty of outcome." Things might turn out better than you expected; equally they could turn out worse. In essence, there are three activities in risk management.
â¢  Identify   Before you can start any clever risk management stuff, you have to identify as clearly as you can any areas of risk. This is the essential work to do at the outset.
â¢  Analyze   Now you ask some pertinent questions. What is this risk about? Define it. How vulnerable are you to this defined, perceived risk? What would the impact be if the risk materialized, and how likely are those circumstances to occur?
â¢  Manage   Once you've identified and analyzed a risk, you can then decide what to do about it. There are four basic approaches you can take.
â¢  Accept   If there is little or nothing you can do about it or if the likelihood of the risk becoming real is remote and the impact minor, you can decide to accept the risk. For example, there is a risk of an asteroid hitting the earth and destroying all life. However, the likelihood is remote and, outside of science-fiction movies, there's little you can do about it other than accept it. Accept, however, is not a permissible approach just because you can't be bothered or would prefer to ignore the risk (politicians: take note).
â¢  Avoid   If you don't have to take the risk, don't. Take an alternative course of action. You may decide to stick with a conventional solution rather than go for a cutting-edge high-risk option.
â¢  Mitigate   You may not be able to eliminate risk entirely, but you may be able to take action to reduce risk to an acceptable level. You do this when you build in resilience by duplicating data circuits, for example. Moreover, you could develop a contingency plan that would help reduce the impact if the risk still came to pass.
â¢  Transfer   This may be an attractive option. Let's outsource the data center and make it someone else's problem. However, you may end up replacing one risk with another. When you outsource your data center, you may be putting it into the hands of people for whom it is their core business, but you will be relinquishing some management control over it. You'll need to be careful of what is and what is not covered by the contract. Your service provider will know what's in the contract and what's not!
Tools
Tools are sometimes touted by smooth-talking sales reps as the answer to everything: "Buy my new shiny gizmo; feel its fabulous functionality!" Also, be careful if your chief executive officer has been let loose alone at an exhibition where the latest toys are on sale!
If you haven't got the fundamentals right, the best you can hope to get from a tool is the ability to do the wrong things faster; that may not be a huge advantage.
However, having use of an appropriate, integrated ITSM tool will substantially enhance the value of your carefully negotiated, agreed on, and documented services and processes. As a general rule, ITIL sees tools as being extremely useful. Tools help achieve consistency, accuracy, efficiency, and the ability to capture valuable evidence to support service improvement initiatives. In due course you'll look specifically at how tools can help in every lifecycle stage, but don't forget: "A fool with a tool is still a fool."
Chapter Review
You discovered that the IT Infrastructure Library is a well-proven compendium of best practices based on real-world experience backed up by academic research and peer review. You now appreciate that ITIL is neither an international standard nor a strict methodology but instead is a valuable approach to managing IT services. ITIL works well in conjunction with other complementary frameworks such as ISO/IEC 20000, Six Sigma, COBIT, and so on.
Effective service managers use ITIL to guide them in their job. Everything they do is based on the ITIL philosophy of integration with the business, driving up quality and driving down cost while delivering value to customers. Their success is dependent on understanding ITIL fully, adopting the ITIL guidance, and adapting it to suit the needs of the business they are part of.
A full understanding of ITIL is founded on the acceptance of some crucial definitions for the words service, service management, process, function, and role. You must have a clear view of what I mean by words such as business, ownership, service provider, stakeholder, governance, and risk.
Service providers should organize themselves based on the concept of good governance and the services and processes they have designed, using RACI matrices to show roles and responsibilities and their interdependencies.
Service managers should be alert to the need to manage risk and to ensure they make the fullest possible use of service management tools. Ideally all organizations should have use of an up-to-date integrated IT service management tool offering rich functionality and ease of use alongside excellent vendor support and future flexibility.
Quick Review
Here are the key concepts and terms you encountered in this chapter. Read through this list; if anything seems unfamiliar or you can't readily define it, go back and read the relevant section again.
â¢  Best practice: sources and enablers
â¢  ITIL
â¢  Complementary frameworks
â¢  Service, process, function, roles
â¢  RACI
â¢  Service Owner role
â¢  Process Owner, Process Manager, Process Practitioner roles
â¢  Service provider types
â¢  Customers, users (end users), suppliers
â¢  Governance
â¢  Risk
Questions
The following seven questions are typical examples of what you'll encounter in the ITIL Foundation exam. At this stage questions come from a comparatively limited range of concepts. The questions that come later in this book will be chosen from an increasingly broader source.
There is only one correct answer to each question. You'll also notice that some questions are simple multiple choice, while others are more complex, offering you four permutations. Enjoy!
1.  What is the purpose of the RACI model?
A.  To define the requirements for a new service
B.  To analyze the impact of a new process
C.  To indicate the main areas of risk
D.  To document the roles and responsibilities of relevant stakeholders in an activity
2.  Which role should ensure that process documentation is kept up-to-date?
A.  The Customer's Representative
B.  The Service Desk Manager
C.  The Service Owner
D.  The Process Owner
3.  Which of the following are characteristics of every process?
i.  It is measurable.
ii.  It has a defined trigger.
iii.  It delivers a specific result.
iv.  It delivers its result to a specific user/customer.
A.  i and iii only
B.  i and ii only
C.  ii and iii only
D.  All of the above
4.  Which of the following statements is most correct?
A.  The best service should be given to the customer who pays the most money.
B.  Internal customers should receive the best service because they are part of the same business unit as the service provider.
C.  Internal and external customers should receive the level of customer service that has been agreed on.
D.  External customers should receive better customer service because they are always paying for it.
5.  Which of the following are characteristics that contribute to ITIL's success?
i.  It is nonprescriptive.
ii.  It is best practice.
iii.  It is nonproprietary.
iv.  It is a standard.
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  All of the above
6.  Which of the following statements is correct for all processes?
A.  They define functions.
B.  They are performed by an external service provider.
C.  They help customers avoid specific costs and risks.
D.  They deliver specific results to specified stakeholders.
7.  Which of the following could be identified as stakeholders when considering IT service management?
i.  Functions
ii.  Customers
iii.  Service owners
iv.  End users
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  All of the above
Answers
1.  D. This is a simple question with an obvious answer. I hope you got it right!
2.  D. The word process appears both in the question and in the correct answer and is one of the listed responsibilities of a Process Owner.
3.  D. These are the four characteristics of a process; it is rare for an exam to omit a question on this topic.
4.  C. You usually can't go too far wrong in choosing an answer that includes phrases such as "agreed on with the customer." You may have thought that some other answers had some merit, but the question emphasizes the word most to guide you.
5.  B. Please remember that ITIL is not a standard. If you hear people talking about "ITIL standards," ask them what they mean; they're probably talking about aligning their service management arrangements with ITIL best practice (I hope!). The formal, international standard for IT service management is, of course, ISO/IEC 20000.
6.  D. The question again helps you by emphasizing the word all. If you can conceive a credible exception to the statement given in an answer, then all can't apply, and you can reject that particular answer. Here the options A, B, and C fail the all test.
7.  D. The range of stakeholders in IT service management is wide.








CHAPTER 2
The Service Lifecycle
In this chapter, you will
â¢  Learn the five stages of the service lifecycle
â¢  Understand how new or changed services flow through the lifecycle stages
â¢  Discover how the concept of continual service improvement underpins the effectiveness of the service lifecycle by ensuring valuable feedback from stage to stage
â¢  Recognize the essence of each of the 26 ITIL processes and learn to which lifecycle stage each belongs

Lifecycles appear in a lot of management books, and I haven't always been convinced by every example. The IT Infrastructure Library (ITIL), of course, is not just theory. The concept of the service management lifecycle is very relevant. In fact, I'll go further. The concept of the service management lifecycle is of fundamental importance. Please don't move on from this chapter until your understanding of it is clear and complete. There's going to be a particularly important exercise for you to do later.
What Is the Service Lifecycle?
Let's start by looking at Figure 2-1; it shows the "classic" ITIL version 3 service lifecycle, which looks like a sort of Wankel engine rotating around the axle of Service Strategy, driven by continual service improvement and comprising the sequential stages of Service Design, Service Transition, and Service Operation. That's all good stuff, but if, like me, you're more of a linear thinker, you may find my approach easier to understand; many of my students do. Figure 2-2 shows my concept, which clearly shows the important feedback loops. Figure 2-2 is the picture of the service lifecycle I'd like you to keep in mind throughout this book.

Figure 2-1   The service lifecycle

Figure 2-2   Lifecycle with feedback loops
The Five Lifecycle Stages
Let's take a closer look at these five lifecycle stages.
Service Strategy
In Service Strategy, you seek answers to fundamental questions. What exactly is the business you're involved in? Is it a straightforward drinks logistics business like Tradeteam? Is it a huge and complex government department? Is it a provider of outsourced services? The possibilities are practically endless. Whatever the business may be, the first thing a service provider has to do is to understand what the business is about. What are the aims of the business, who are the customers of the business, where does the business see itself going in the future, and so on? You must have a clear understanding of the strategy of the business. That begs another question. Does the business itself have a clear, coherent understanding of what its strategy is? Perhaps you can begin demonstrating the value of what you as a service provider bring by asking such pertinent questions to which you should, reasonably, expect to get clear answers!
Once you have the business strategy clear, you can align your IT strategy to it. You can then consider what services you can provide from your IT resources to support the business processes that are delivering the business strategy. This is a good point at which to remember the definition of service: "a means of providing value to customers by facilitating the outcomes they want to achieve without the ownership of specific costs and risks."
At this top level, you need to define your services, link them to the business processes they facilitate, and have as good an idea as you can of the costs and risks involved. Typically you would document each of your services in an agreed-on business case. From the business case, you can then produce an outline service specification to pass on to Service Design.
Service Design
In Service Design, you carry out the detailed planning. This is where you put flesh on the bare bones of your original specifications. At the end of this stage you should have produced a detailed blueprint of exactly what will be the components of your new service, how it's going to be tested, how it's going to be supported, and how future development will take place. At the same time, you may uncover some shortcomings in the preceding strategy stage; those shortcomings should be referred back to the strategy stage for remedial action. Once you're happy that your design is comprehensive, effective, and agreed on, you pass the blueprint you have created to Service Transition.
Service Transition
The Service Transition stage is where you actually build things. You acquire hardware and software. You plug it all together and make sure it works as specified. You bring the customers, users, and support organization into the picture to make sure that the new service can be successfully launched and operated in the real, live world. To that end, you test not only the programs but also every relevant aspect, including all the support arrangements, to ensure the service as a whole will be successful. You take particular care to control what is a constantly changing picture and to ensure the quality of what you roll out. Again, you may uncover some shortcomings in the two preceding stages: Service Strategy and Service Design; those shortcomings should once more be referred back for remedial action. You now have to make a crucial decision. Is everything ready? You must aim to achieve a seamless handover to Service Operation.
Service Operation
Now you reach the moment of truth. Here is where you should be showing that you are truly "facilitating the outcomes your customers want to achieve." Urgent operational difficulties should be fixed whenever possible, and any inherited shortcomings identified at this stage should be referred back to the preceding Service Strategy, Service Design, or Service Transition stage for remedial action.
So far so good. If you have everything right in strategy, design, and transition, everything should now be working beautifully in operation. But the world is rarely like that, is it? This is where continual service improvement comes in.
You could argue that, with your new appreciation of the benefits of ITIL best practice, you should reengineer everything. Go back to strategy with a clean sheet of paper and start again, working your way through strategy, design, and transition properly this time. Unfortunately, not only would this be quite expensive, but it would also take quite some time to do. Moreover, while you're doing all that reengineering, how would you manage the live, operational world, and what about the unavoidable changes that would still have to take place during this reengineering effort? You would probably end up with services that are still out of date after having spent a lot of time and money.
Continual Service Improvement
Continual service improvement (CSI) is relevant to all stages of the service lifecycle (including itself!). However, I usually find it most valuable to start formal CSI in Service Operation. Here is where the customer and the service provider are likely to be feeling the greatest pain. Here is where you have the opportunity to capture evidence to support your improvement initiatives. First, you should make sure you're operating your services as well as you can. How's your "firefighting"? Are you logging incidents when things go wrong, managing them through to resolution, and keeping a record of what you've done? If you're not even doing that, you'd better get started! If you have an incident process, is it documented and up to date? If not, you should get it documented and check it is working properly. A crucial consideration now is to ascertain that in your incident records you are capturing evidence of shortcomings earlier in the service lifecycle. Was testing inadequate? Were capacity considerations not properly addressed? Was there a fundamental misconception when the service was originally conceived? CSI guides you to capture relevant evidence and then take appropriate action. You apply the CSI approach to each stage, not just to Service Operation; indeed, you even do CSI on CSI to make sure you're doing that well.
Lifecycle Stages in Action
The following sections summarize the five stages of the lifecycle.
Service Strategy   You decide which services to provide and what resources are needed by those services. You record how those services meet the business requirements, and you seek to maintain the closest possible relationship with your business customers.
Service Design   You take from Service Strategy the agreed-on service specifications and produce the detailed plans for each service. Service Design ensures that you document how resources are to be combined to meet the specification and to be shared with all the other services you are running. It shows how the new service is to be tested, rolled out, and operated in the live environment. However, nothing is actually created yet other than the detailed blueprint. If the design needs to be changed, this is the time to do it.
Service Transition   Service Transition handles the physical creation and implementation of the services. Infrastructure is acquired and installed, applications are developed or bought, everything is thoroughly tested against the criteria specified in Service Design, training and documentation are completed, and all this exciting stuff is rolled out into the live environment. All these changes and deployments are carefully controlled, and your configuration information is updated.
Service Operation   Here you actually provide your users and customers with the services that have been agreed on with themâthe services that will be "facilitating their outcomes." You need to ensure that only authorized people can use those services, that any faults are identified and corrected quickly, and that you capture valuable evidence to support improvement programs. For CSI you need to know how well the services are being delivered, so you provide performance reports from the Service Operation stage.
Continual Service Improvement   CSI underpins everything you do. It makes sure that the aim of providing agreed-on services to your customers is never forgotten. It works with every lifecycle stage to help ensure that all the activities in every stage work as well as possible, that interprocess links are effective, and that any evidence of shortcomings in other lifecycle stages is captured and passed to the appropriate manager.
The Lifecycle as Drama
The lifecycle may make more sense if I present a well-known example. How about taking a quick look at the lifecycle of the RMS Titanic?
Back in the early years of the 20th century, the White Star Line was one of the leading transatlantic shipping companies. Its business strategy was to make more money by carrying increasing numbers of passengers between the United Kingdom and the United States; its two customer segments were opulent millionaires and large numbers of cheap-fare immigrants. The service solution for which an approved business case would have been produced was the RMS Titanic. The costs would have been assessed, an outline of the size and features of the ship would have been agreed on, an expected return on investment would have been calculated, and a specification would have been given to the shipbuilders Harland and Wolff. That was the Strategy stage completed.
Harland and Wolff's naval architect, Thomas Andrews, would have produced a detailed design of the new ship. This would have covered a wide range of elements ranging from the type and size of the engines to the number and size of cabins, crew accommodation, and even the number and capacity of the lifeboats, always ensuring that regulatory requirements were met. Andrews and his team would have produced a set of detailed blueprints. Thus, the Design stage was ended.
Now the actual work started. The structure of the ship was built, the engines were ordered and installed, and full details were documented of what was being created. All aspects were tested to make sure they worked properly, culminating in a full-scale sea trial. Only once satisfactory results were obtained was the Titanic released for her maiden voyage. The Transition stage was over.
Captain Edwin Smith took charge for the maiden voyage, and the Titanic left Southampton bound for New York. No doubt there were one or two "wrinkles" in the ship's systems and processes that needed resolution, but most things went well until the Titanic bumped into that infamous iceberg and sank. Thus, the Operation stage came to an unfortunate, premature conclusion.
Now it's the turn of continual service improvement. No doubt much was working well on board, until the voyage came to an abrupt end. However, it is now clear to us that some operational aspects were unsatisfactory (steaming at full speed through icy seas when the lookouts had no binoculars), and the contingency plan was bedeviled through inadequate investment in lifeboats and procedural problems when deploying them. These lessons were learned and incorporated into the Titanic's larger sister ship, the Britannic. The fact that the Britannic hit a mine and sank on November 21, 1916, during the Gallipoli campaign is not of direct relevance.
Maybe the service lifecycle can sometimes be more exciting than we might think!
Processes and Functions
With a clear outline of the five stages of the service lifecycle, you can now fill in some essential details. You can't go too far in this book without considering processes, and now you need to see which processes fit into which lifecycle stage. You're also going to consider functions. It may be worth your while to remind yourself of the definitions of service and function provided in Chapter 1 before you go any further.
Let's now do an exercise that will require you to handle the names of all the processes and all the functions and become familiar with them.

Exercise 2-1: Processes and Functions in the Service Lifecycle
It is vital to an understanding of ITIL that you are clear where each process and each function fits in the lifecycle. Table 2-1 lists the 26 ITIL processes and 4 ITIL functions. Your task is to allocate each one to the lifecycle stage to which you think it best belongs. You'll have to guess a bit, but the point of the exercise is to get you thinking about the names of each process and where each might fit. You'll do it step by step with me at your shoulder to help!

Table 2-1   Processes and Functions
To give you a clue, the number of processes/functions per lifecycle stage is as follows:
â¢  Service Strategyâ5
â¢  Service Designâ8
â¢  Service Transitionâ7
â¢  Service Operationâ9
â¢  Continual Service Improvementâ1
Take a look at Table 2-1 to familiarize yourself with their names, but don't start the exercise yet.
Step 1
Let's do the easy ones first. Did you notice that some process names relate directly to the lifecycle stage they belong to? These include Strategy Management, Design Coordination, Transition Planning and Support, and Seven-Step Service Improvement? So, there are four to start with.
Let's move on to those processes that seem to be related to day-by-day operational activities; these are processes that execute the rules made elsewhere. Again, it's not too difficult I hope. Which ones do you think these five processes are?
Incident Management is a pretty obvious choice, isn't it? Incidents are often triggered by events (hence Event Management), and we investigate the underlying causes of incidents in Problem Management. So, we now have three processes that fit together. You may also have guessed that Request Fulfillment sounds like a Service Operation process, and it is! The fifth process is Access Management, which manages granting and removing user access rights to applications, systems, and services (users here include IT staff and management).
Did you also notice IT Operations Management? This also belongs to the Service Operation lifecycle stage, but it is a function. Can you recall the definition of a function? A function is "a unit of organization specialized to perform certain types of work and responsible for specific outcomes." Can you identify another function that belongs here? Yes, the Service Desk. These two functions are pretty obviously Service Operation functions. The two other functions have a wider relevance in the lifecycle but, for the sake of clarity and neatness, are also placed in Service Operation. Those other two functions are Applications Management and Technical Management.
Table 2-2 shows what you've achieved so far.

Table 2-2   Processes and Functions in the Service LifecycleâStep 1
Step 2
Let's go to the start of the service lifecycle. What processes seem to have a hint of the strategic about them? Financial Management is clearly of crucial importance, as would be a list of services. But would such a list be the Service Portfolio or the Service Catalog; which one is more strategic? It's the Service Portfolio that's strategic. This includes all servicesâlive services, services in development, and retired services, so we should choose the Service Portfolio Management process. You may also have judged that Business Relationship Management sounds strategic, certainly more so than, say, Service Level Management. That leaves just one process to add. That process is Demand Management, which is about understanding the resources needed to meet the demand for services. As you examine these processes more closely in Chapter 3, I hope the link between them will become clear. Moreover, as you move through the lifecycle, you'll also appreciate that, while these processes sit in Service Strategy, they are relevant to all the lifecycle stages. (See Table 2-3.)

Table 2-3   Processes and Functions in the Service LifecycleâStep 2
Step 3
Now you can have a go at the Service Design processes. Remember that this stage is where you do the detailed planning.
You decided in step 2 that Service Portfolio Management belongs in Service Strategy, which therefore implies that Service Catalog Management belongs in Service Design; that is trueâthe Service Catalog is a detailed component of the Service Portfolio. Having thus cataloged your services, you are then in a position to produce service level agreements (SLAs); SLAs logically come under the Service Level Management process. Now, to negotiate SLAs, you need to have detailed technical information and relevant organizational policies and procedures because you need to specify how the service is to be delivered and supported. There are four processes involved: Availability Management, Capacity Management, IT Service Continuity Management (ITSCM), and Information Security Management (ITSyM). The final process in Service Design is Supplier Management, which complements particularly the Service Level Management process and the four processes just listed.
Step 4
You're now left with six processes that you can put alongside Transition Planning and Support in the Service Transition lifecycle stage. Knowledge Management is a process that is applicable across all lifecycle stages but is found in Service Transition because this is the stage where useful, new knowledge is acquired. Service Asset and Configuration Management (SACM) can be considered as "Knowledge Management in practice" and is also relevant to every lifecycle stage. To manage your configuration effectively, you need to exercise control, which is achieved through the Change Management process, a process that is all about transition, as its name implies. Changes are implemented through the Release and Deployment Management process. Finally, the Service Validation and Testing process and the Change Evaluation process can be slotted logically and neatly into place.
You now have the full picture, as shown in Table 2-4. I suggest you bookmark this table for future reference.

Table 2-4   Processes and Functions in the Service LifecycleâFinal
Recap
I'll think you'll find it worthwhile to work through the lifecycle stages to make sure you have a clear picture of what goes where.
Service Strategy   Clearly, Strategy Management fits here as does Financial Management. The Service Portfolio is the synoptic view of all services (potential, live, and retired) and forms a strategic big picture. Business Relationship Management (BRM) is concerned with the relations at a high management level between service provider and customer; BRM covers those who commission and pay for services. Finally, Demand Management is concerned with how much resource is going to be needed to meet the pattern of demand for services coming from the business; it links with Financial Management to make crucial inputs to business cases.
Service Design   Design Coordination does what it says. The Service Catalog is derived from the Service Portfolio and covers all services that are live or are being prepared to go live. Once you have your services defined and cataloged, you can then start to negotiate SLAs and so on, which is done in the Service Level Management process. SLA targets are often dependent on Availability and Capacity Management aspects; SLAs can also usefully include IT Service Continuity and Information Security considerations. Supplier Management deals with the contracts that underpin SLAs and that may also have availability, capacity, service continuity, and information security considerations.
Service Transition   Transition Planning and Support coordinates and controls what happens in this stage. Knowledge Management gives you the disciplines to ensure you capture and maintain knowledge; the Service Asset and Configuration Management (SACM) process can be considered as Knowledge Management in action. It is inadvisable to do SACM without having Change Management in place, and Release and Deployment Management can be considered in a number of ways as being a close-companion, enabling process for Change Management. The purpose of Service Validation and Testing is self-evident, while Change Evaluation is concerned with ensuring that, notwithstanding all the test criteria being met, the new service will still actually perform in the live environment as originally conceived.
Service Operation: Processes   Event Management is where you keep your finger on the pulse in the live environment, detecting what's happening and triggering any necessary action in response to what's been detected. When service is interrupted, you use Incident Management to restore normal service as quickly as possible, while Problem Management is where you investigate the causes of incidents and put permanent fixes in place. Some events and incidents can trigger the Request Fulfillment process (which often uses change models created by Change Management). Some service requests are fulfilled by invoking the Access Management process, which executes the activities previously designed in Information Security Management.
Service Operation: Functions   The Service Desk performs a lot of Incident Management activities (although it must be remembered that Incident Management is not the exclusive preserve of the Service Desk). The Service Desk is particularly responsible for assisting end users to obtain maximum value from the IT services they're using. IT Operations Management looks after the second-by-second, minute-by-minute, hour-by-hour functioning of the technology; here is where you'll find the operations bridge or network operations center, for example (I guess you'll have seen a number of control rooms that look like that on the Starship Enterprise). The other two functions, Technical Management and Applications Management, get involved in lifecycle stages other than just Operations but for clarity and convenience are placed alongside Service Desk and IT Operations in the Service Operation stage.
Continual Service Improvement   Every process and function has a link to CSI because every process and function is subject to continual service improvement, as you will discover later.



EXAM TIP    Four of the processes are not currently in the ITIL Foundation Examination syllabus: Strategy Management, Demand Management, Service Validation and Testing, and Change Evaluation. You will not get specific questions on these four processes, but you will find that an awareness of them helps you have clearer definition of the lifecycle processes that are examinable.

Chapter Review
At the beginning of this chapter, I listed the following learning objectives:
â¢  Learn the five stages of the service lifecycle
â¢  Understand how new or changed services flow through the lifecycle stages
â¢  Discover how the concept of continual service improvement (CSI) underpins the effectiveness of the service lifecycle by ensuring valuable feedback from stage to stage
â¢  Recognize the essence of each of the 26 ITIL processes and learn to which lifecycle stage each belongs
These four points are drawn together in diagrammatic form at Figure 2-3. Please make sure you are familiar with both the content and the purpose of each lifecycle stage. Refer to this chapter if necessary.

Figure 2-3   Lifecycle stages with processes and functions


Watch Lifecycle Stages with Processes and Functions for a discussion of the processes and functions, where they belong, how they interact, and how CSI reinforces that interaction. (See Appendix D for access to this and other videos.)

Questions
1.  Which one of the following is not a process?
A.  Service Desk
B.  Change Management
C.  Demand Management
D.  Request Fulfillment
2.  Which one of the following is the correct list of functions?
A.  Event Management, Incident Management, Problem Management, Access Management
B.  Technical Management, Applications Management, Knowledge Management, Change Evaluation
C.  Service Desk, Technical Management, Applications Management, IT Operations Management
D.  Supplier Management, IT Security Management, Technical Management, Applications Management
3.  Which of the following are Service Design processes?
i.  Service Level Management
ii.  Problem Management
iii.  Service Portfolio Management
iv.  Service Catalog Management
A.  i, iii, and iv only
B.  i and ii only
C.  i and iv only
D.  All of the above
4.  Which one of the following is not a Service Strategy process?
A.  Demand Management
B.  Business Relationship Management
C.  Financial Management
D.  IT Security Management
5.  Which of the following are Service Transition processes?
i.  Change Management
ii.  Release and Deployment Management
iii.  Knowledge Management
iv.  Service Asset and Configuration Management
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  All of the above
Answers
1.  A. This is a simple question with an obvious answer I hope! The Service Desk is, of course, a function.
2.  C. If you got this wrong, review step 1 in Exercise 2-1.
3.  C. Problem Management is a Service Operation process; Service Portfolio Management is a Service Strategy process.
4.  D. IT Security Management is a Service Design process.
5.  D. The other Service Transition processes are Transition Planning and Support, Service Validation and Testing, and Change Evaluation.








CHAPTER 3
Service Strategy
In this chapter, you will
â¢  Understand the purpose of the Service Strategy lifecycle stage
â¢  Recognize the two crucial elements in value creation: utility and warranty
â¢  Appreciate the concept of how you exploit assets to best effect
â¢  Examine in more detail the five processes that sit in Service Strategy

You are now starting your journey through the five stages of the IT Infrastructure Library (ITIL) lifecycle. Chapter 1 should, I hope, have laid a base of clear definitions and concepts from which you can confidently begin your travels with me. From Chapter 2 you should now have a road map to help you navigate the trip ahead.
The Purpose of Service Strategy
The ITIL books refer freely to purpose, objectives, and goals when it comes to lifecycle stages and processes. I wondered about the significant difference between these three words, so I checked my Concise Oxford Dictionary. It seems that another word for objectives is goals and that the purpose of something can be considered as its objectives! In management theory, I don't doubt that these terms have subtly different meanings, but here I want to keep things simple.
Here are those purposes as far as the Service Strategy lifecycle stage is concerned:
â¢  To run the strategy processes   This means making sure that the processes are managed properly and that resources are used to best effect.
â¢  To define what the strategy is   If you haven't defined the strategy, how can you possibly know what it is you're trying to support?
â¢  To define the services and their customers   This is fundamental, isn't it? Remember the definition of service: ". . . facilitating the outcomes your customers want to achieve."
â¢  To define how value is created and delivered   Be clear what is meant by value and be clear about its ingredients.
â¢  To define the capability required to deliver the strategy   You'll be looking at the composition of the service assets you're managing.
â¢  To identify opportunities to provide services   You need to have a "marketing mind-set." This means working closely with customers, understanding their needs, and proactively suggesting new and improved services.
Service Providers and Service Categories
Defining services and customers is a fundamental purpose of Service Strategy, and in Chapter 1 you were introduced not only to the crucial definition of service but also to the three defined types of service provider: Type I, an internal service provider that is embedded within the business unit it serves; Type II, an internal service provider whose services are shared among more than one business unit (also known as a shared service unit); and Type III, which provides services to external customers.
Services themselves are categorized as follows:
â¢  Core Services   These deliver the basic outcomes required by one or more customers. An example would be the spreadsheet functionality provided as part of office automation. The phrase "a means of facilitating the outcomes a customer wishes to achieve" (which I hope you'll remember from the definition of service in Chapter 1) alludes to these core services.
â¢  Enabling Services   These are necessary for the core service to be delivered. An example could be the downloading and installation of updates regarding the communication, system, and application software supporting office automation. The phrase "without the ownership of specific costs and risks" (which follows the first part of the definition of service given in Chapter 1) alludes to these enabling services. Users and customers may be unaware of these enabling services.
â¢  Enhancing Services   These are supplements to core services to make them more attractive to customers. An example could be a service that enables the data in spreadsheets to be uploaded and reformatted into a relational database.
Value Creation
The creation of maximum value within the resource available comes from a perfect balance between utility and warranty, as shown in Figure 3-1.

Figure 3-1   Creation of service value
Utility can be viewed as the functionality of a serviceâthe promise of all the good things the service is designed to provide. ITIL also describes utility as being fit for purpose, enabling a particular job either to be done better or even to be done at all.
However, that promise cannot be met and cannot be delivered unless there is matching warranty. Warranty is a mix of availability, capacity, continuity, and security. Where have you come across these processes recently? You met them in Exercise 2-1 where I grouped them together. Moreover, these are four of the processes you'll encounter in Service Design.
ITIL describes warranty as being fit for use, and you'll remember that ITIL describes utility as being fit for purpose (that's helpful, isn't it?). Make a note: utility is fit for purpose, and warranty is fit for use, not the other way round.


EXAM TIP    It is almost guaranteed that you'll get a question on the exam about utility and warranty. Make sure you know what they mean and the difference between them.

For a service to provide maximum value, there must be a perfect balance between utility and warranty; neither is more important than the other. For example, you could have a website that is rich in functionality, but if it keeps crashing or the capacity of your broadband connection is limited or there's an occasional risk of power outages or every time you enter your password it is compromised, that limits its value; as a customer, you won't be getting your "outcomes facilitated" as effectively as they could be. Such a service would be high in utility but low in warranty.
On the other hand, you could have a website that is always available, without any noticeable capacity constraints, resilient to all contingencies, and extremely secure, but if the functionality is of little or no use, the service would be valuelessâhigh in warranty but low in utility.
In Service Strategy, you should be trying to understand as clearly as you can the utility and warranty aspects of any new or changed service. The utility aspect is often what you use to "sell" a new service; it's the promise of good things. However, you must make adequate provision for the warranty aspects too; otherwise, you won't be able to deliver on your promise. The challenge here is that warranty comprises a lot of cost, and, in business cases, there may be a temptation to play up utility and play down warranty. Don't do that. You'll get found out later in the lifecycle because at every lifecycle stage ITIL wants you to revisit utility and warranty to ensure that the service is still on course to deliver the expected value in the live world.
Assets
It's all very well having great plans, theories, and management concepts, but if you're going to achieve something worthwhile for your business and its customers, you need to have the wherewithal to do so. You must have the appropriate assets.
If you think of yourself as the service provider, you have your own assets. Your customers have their own assets too, of course. If what you deliver using your assets enhances your customer's assets and you can demonstrate how that happens, your customer's view of your importance to them will change. Your services to them will become of strategic importance; therefore, your IT service management practice becomes a strategic asset. It's back to "facilitating your customer's outcomes" again, isn't it?
ITIL considers assets as falling under two broad headings, as covered in the following sections.
Resources
Resources are the sort of things that tend to be tangible, that are direct inputs for production, and that you can go out and acquire. The following are typical resources:
â¢  Financial capital   In other words, this means money. You might have a hoard of gold in an old oak chest, or you might have an obliging bank manager; I suppose you could even go out and rob a bank (although ITIL doesn't recommend that!).
â¢  Infrastructure   This includes hardware, buildings, server rooms, uninterruptible power supplies, and so on. You can actually touch infrastructure; it's very much tangible. You can go out and buy it.
â¢  Applications   Most applications these days are acquired from some external source. You purchase Microsoft Office from a licensed reseller, you have an enterprise resource planning (ERP) system from one of the usual suspects, or your own business-specific applications may be written and maintained for you by an external contractor.
â¢  Information   We live in the Information Age. The challenge is to sift out the information that is relevant from the mass of data that surrounds you. You don't have to work hard to acquire information; the harder work is to handle what you get.
â¢  People   In terms of resources, I mean people as just "pairs of hands." You can contact your local, friendly recruitment agency and get lots of people without too much difficulty.
Capabilities
In contrast to resources, capabilities are things you have to grow and develop. They are difficult if not impossible to go out and acquire off the shelf. Capabilities include such elements as the following:
â¢  Management   What does management look like? You can't really see it, can you? You can see managers and supervisors behind their desks or walking around and you can identify and measure the outcomes of management, but you can't go out and buy management as you would a bag of sugar. There's no management shop you can visit and ask for "some medium-sized management, please, preferably in a relaxing green color." Management is very much a fusion of the other capabilities.
â¢  Organization   This is like management; you can't actually see it happening (although you can usually see the results of poor organization). Indeed, while you can have elegant organization charts and you can create RACI matrices, you still have to decide what sort of organization best suits your particular business. ITIL does not provide you with some sort of ideal organizational model that you can copy and use; however, it does provide valuable guidance.
â¢  Processes   Again, similar to the situation regarding organization, you have to design processes that suit your specific case. You should beware of just procuring an IT service management tool and applying it "out of the box." The way that particular tool supports the ITIL processes may or may not be suitable to your particular requirement. It's far better to design your processes first and then select the tool that best suits your needs.
â¢  Knowledge   This is information that you have analyzed; it is information that has been processed to meet your needs. Knowledge, of course, is power. You'll be looking at the Knowledge Management process when you come to the Service Transition stage of the lifecycle.
â¢  People   But here, unlike people as a resource, I'm talking about trained, experienced, and motivated people. Yes, you can bring in interim managers and consultants to meet experience and skills gaps, but that should be a temporary expedient. There is no real substitute for having your own people in place to lead, manage, and perform your long-term activities.
I hope you agree that resources are more tangible in nature and usually much easier to acquire than capabilities, which are more abstract in nature and require specific development.
Service Strategy Processes
Of the five processes described next, Strategy Management is focused largely on the Service Strategy stage of the lifecycle. Regarding the others, Demand Management reappears in Service Design as an element of Capacity Management, while Service Portfolio Management, Financial Management, and Business Relationship Management are relevant throughout the lifecycle. Of course, all five processes are relevant to Continual Service Improvement.
Strategy Management
In essence, the purpose of the Strategy Management process (or the Strategy Management for IT Services processâits full title) is to ensure that a service strategy is defined, maintained, and managed. For convenience I'll be referring to this process as just Strategy Management.
Key activities include the following:
â¢  Examining current external and internal environments; identifying strengths, weaknesses, opportunities, and threats; and looking for likely future developments
â¢  Developing and maintaining the "marketing mind-set" and defining market spaces and identifying opportunities for developing and offering services
â¢  Defining how the service provider can be differentiated from other service providers
â¢  Developing and maintaining a strategic plan
â¢  Running the Service Strategy stage of the service lifecycle
It should be noted that, for a service provider, what may be considered as the IT service management strategy is a subset of the service strategy which is itself a subset of the IT strategy.
The Strategy Management process is not part of the syllabus for the ITIL Foundation examination, but an awareness of its existence and its features is essential to a full and balanced understanding.
Service Portfolio Management
The Service Portfolio is one of the most useful of the service management tools. It provides a single, overall view of all services and is particularly valuable to the IT director (or whoever is considered to be "top management" in this context). It helps the service provider ensure that there is the correct mix of services in order to balance investment in IT with supporting the businessâ"facilitating the customer's outcomes" again!
The Service Portfolio helps answer the following questions:
â¢  Which services should be provided and to whom?
â¢  How do those services help achieve the strategic objectives?
â¢  What value do those services give to the service provider?
â¢  What conditions should be applied to the provision of those services?
â¢  What is the level of investment in those services?
â¢  What changes are taking place in that investment?
â¢  How does a new service compare to the old service?
â¢  Which services should be retired from the live environment?
Figure 3-2 shows Service Portfolio Management diagrammatically.

Figure 3-2   Service Portfolio Management
Service Portfolio Management comprises two overlapping sections: Service Pipeline and Service Catalog. The Service Pipeline provides information on all services from the earliest conceptual point up to the moment when rollout to the live environment has been successfully accomplished. In contrast, the Service Catalog contains information on all services that are in the live environment plus those that are being prepared to be rolled out; those are the services that have been "chartered," in other words, those for which resources have been allocated for building and testing.
The Service Catalog is visible to a wide readership (I'll be covering it in greater detail in the "Service Design" section), whereas the Service Pipeline will have a more limited accessibility. The reason for this is that you want customers and users to be aware of the services that are live or will be going live so that they may make fullest use of them (have their outcomes facilitated). However, you don't want all customers and users to see what's earlier in the pipeline because those services may not be rolled out for some time, if at all, and when they are, they may then be different from the original concept.
I'm afraid ITIL is a little ambiguous when it comes to retired services. These services are certainly in the Service Portfolio because knowledge of them could be useful for reference purposes or the service could be resurrected at some point. However, the official diagram implies that retired services are to be found in the Service Catalog, whereas the Service Catalog stage described in Service Design excludes them (see Chapter 4). I suggest you work on the assumption that services are removed from the Service Catalog when they are retired.
In the next version of this figure, Figure 3-3, you see that services move from left to right as they proceed through their life from concept to retirement. To illustrate this, for example, imagine that v4.2 of a service might be the most recently retired version of a particular service, and it now sits with v4.1, v4.0, v3.0, and so on, in the retired part of the Service Portfolio. The current live version is v5.0 (which is in Service Operation), and the next upgrade is v5.1, which is in transition; both these version are visible in the Service Catalog. Further back up this channel is v5.2, which is the next major upgrade and is at the Service Design stage, while v6.0 is little more than a glimmer in someone's eye and sits within conceptual services. These two developing versions are visible only in the Service Pipeline.

Figure 3-3   Service Portfolio Management showing illustrative service versions
Note also that Continual Service Improvement (CSI) sits in the Service Portfolio; CSI is never far away in ITIL!
In Figures 3-2 and 3-3, the number and size of the document shapes are meant to indicate approximately the relative amount of resources being used by each of the lifecycle stages. Those resources come from the IT director's reservoir of resources. Specific resources are taken up and released as individual services move through their lives. Every resource that the IT director has is covered here, even research resources, because all resources should be linked in some way to a service even if that service may be little more than a vague concept.
Since the Service Portfolio covers all services, it is used throughout the service lifecycle, not just in Service Strategy. You will encounter it again.
Business Relationship Management
Business Relationship Management (BRM) is a comparatively new process in ITIL; it used to be mixed in with Service Level Management, but the management level at which BRM operates is more strategic in nature. The two processes are still closely related, as you will see in Service Design, but BRM is distinctively different.
The main purposes of BRM are twofold.
â¢  To establish and maintain a business relationship between the service provider and the customer
â¢  To identify customer needs and ensure that the service provider is able to meet those needs
To meet those purposes, BRM should do the following:
â¢  Understand, inform, and meet the customer's perceived needs and communicate those needs within the service provider's organization.
â¢  Identify technology trends that could impact the services to particular customers.
â¢  Identify changes in customers' environments.
â¢  Mediate when there are conflicting requirements from different customers.
â¢  Establish formal complaints procedures (including escalation) for each customer. I always include a procedure for compliments too; you may be pleasantly surprised that you'll get some!
That is the essence of BRM. However, there is a difference between BRM for internal service providers (Type I and Type II) and BRM for external providers (Type III). BRM for internal service providers involves senior managers within IT and their equivalents in the customer business units. For external service providers, BRM may be more specifically organized, with account managers being appointed to manage the relationship with their customers on a truly commercial basis.
You saw the definitions of service provider types in Chapter 1 and at the beginning of this chapter. If you can't recall them, please take a quick look to refresh your memory; it's useful to appreciate the difference between them.
Financial Management for IT Services
Unsurprisingly, the Financial Management for IT Services process is about money. Equally unsurprisingly, the subject of money is important throughout the service lifecycle, so this process is one that remains relevant at every stage, not just in Service Strategy. For convenience, I'll be referring to this process as just "Financial Management."
The purpose of Financial Management is to do the following:
â¢  To secure the funding necessary to design, develop, and deliver the IT services that are needed to support the business processes (in other words to support the Service Strategy)
â¢  To ensure that the service provider avoids promising services that cannot be afforded
â¢  To maintain a balance between cost and quality and between supply and demand
The three fundamental aspects of financial management have always been and, I suspect, always will be the following:
â¢  Budgeting   It is always risky to make predictions (especially about the future!), but when you are involved in budgeting, that is what you are trying to do. You need to have as clear a view as possible of what the next financial year's requirements will be for your ongoing and prospective services. The budget arguments will, of course, be hugely strengthened because you will be able to link your requirements clearly to the agreed-on business processes you will be supporting. You will be exploring this further in the "Demand Management" section later in this chapter and in "Capacity Management" in Chapter 4.
â¢  Accounting   When the budget round is completed, the finance director has usually agreed to a number of "pots of gold," otherwise called cost centers, which have their own unique codes and sums of money in them. As payments are authorized, they should quote the code of the appropriate cost center so that expenditure can be recorded against the budgetary provision. In simple terms, that is what accounting is about. If you are a service owner, for example, you would be interested in what is happening to your share of the money in the relevant cost centers.
â¢  Charging   The first point to make regarding charging is that it is not compulsory. Budgeting and accounting are compulsory, but many service providers, particularly Type I service providers (do you remember them from Chapter 1?), do not charge directly for their services to the rest of the business unit of which they are part. Of course, Type III service providers invariably charge for their services because they are commercial businesses. You may find yourself working in a Type I or Type II service provider where it has been decided that full charging is a good idea to inculcate cost consciousness and control expenditure. That would be a top management decision; ITIL (wisely) offers no guidance on what can be a vexing matter!
It should also always be remembered that all service providers have to abide by the financial policies and processes of the organization of which they are a part.
Let's imagine that you have a superb service strategy and your Service Portfolio Management process is showing with excellent clarity how your services are facilitating the outcomes that the business processes require for the business strategy to be achieved. This won't have happened by chance. With your marketing mind-set, your dedication to continual service improvement, and your first-class business relationship management, you will have been proposing a series of new, innovative services and service improvements. (Of course, you willâyou're in a utopian ITIL world!). Nevertheless, every significant new or changed service will have required a formal business case to be produced, considered, and approved.
A business case argues the merits and costs of a particular new or changed service and, as such, must cover the financial implications, particularly the expected return on investment (ROI). Hence, production of business cases is a crucial output from the Financial Management process. In simple terms, a business case is a decision support and planning tool that explains the purpose of a proposed initiative and its business impacts. A business case typically comprises five sections.
â¢  Introduction   The introduction explains what the drivers are for this change. Relevant background information should be provided. There should be a clear statement of the business objectives.
â¢  Methods and assumptions   The business may have mandated a particular approach to producing business cases, and it would be here that conformance to that mandate would be confirmed. If particular techniques, such as mathematical modeling, have been used, that should be recorded. Of crucial importance are the assumptions. These assumptions may cover such topics as expected future growth of the business, new technologies, the socioeconomic climate, and so on.
â¢  Business impacts   This is the heart of the business case and covers the expected ROI and the value of investment (VOI); ROI is the expected financial return, and VOI is the expected nonfinancial return, such as enhanced reputation. ROI may not always be positive; sometimes a change to a new service may be necessary for regulatory conformance, and then the VOI becomes overriding. The concept of utility and warranty underpins this business impact statement.
â¢  Risks and contingencies   This section addresses uncertainties that should have been identified during the analysis related to the previous methods and assumptions section. For each assessed risk, there should be consideration of the possible countermeasures.
â¢  Recommendations   The recommendations should be a set of conclusions derived from the logic of the case that has been presented. There should be clear proposals for future action, with these proposals in the form of a set of costed alternative options.
Demand Management
A critical part of effective Service Strategy is covered in Financial Management when you seek to ensure adequate funding for your services, maintaining a balance between cost and quality and avoiding making promises you can't afford. A significant part of those costs arises from providing the necessary capacity in terms both of technical infrastructure and of support resources. The required capacity needs to be assessed during the Service Strategy lifecycle stage in order to calculate a realistic ROI. This of course brings you back to utility and warrantyâcapacity limitations may restrict your ability to deliver the promise you have made. The capacity you need to provide will, of course, depend on the demand for your services, which is why there is the need to address Demand Management during Service Strategy.
However, you won't forget Demand Management as you move on through the lifecycle. In Service Design, you'll revisit Capacity Management as a broader process in which Demand Management plays a vital role. In Service Transition, you will be testing and evaluating what it is you are creating to ensure that there are no unexpected capacity constraints, and in Service Operation, you will be gathering valuable management information to see how far the live operation actually matches your plans as well as detecting future trends.
In particular, Demand Management helps you understand two key aspects.
â¢  Identifying and analyzing patterns of business activity (PBAs)
â¢  Analyzing the usage made of services by different types of users and identifying and documenting user profiles
Many businesses have busy periods and quieter periods. For example, in drinks logistics there's a lot more trucking going on during the run-up to Christmas and the New Year than during January. Other businesses show different patterns, perhaps on a weekly or monthly basis. Often there is a combination of patterns. Service Strategy requires you to ensure that the service provided is appropriate for the business it is supporting and that it includes these PBAs and, indeed, the different profiles of users who are involved. The service provider can then work with the customer to agree on the optimum balance to match the resources that can be afforded with the demand for the services that will use them.
The Demand Management process is not part of the syllabus for the ITIL Foundation examination, but an awareness of its existence and its features is essential to a full and balanced understanding of ITIL.
Roles in Service Strategy
When considering assets earlier in this chapter, I made the point that ITIL does not tell us how to organize ourselves specifically, but it does give valuable guidance. For each lifecycle stage, ITIL provides a set of roles with associated responsibilities that can serve as a useful checklist. Obviously we don't have one separate person for each role (except, perhaps, in a huge organization), but it's useful to go through those responsibilities and identify who has each one of them. You may then find some responsibilities that no one has been given specifically. As a result you may have a "black hole" down which things are disappearing. Alternatively, you might have two or more people with the same or very similar responsibilities. Are those people tending to work at cross-purposes or indulging in some sort of turf war? You may recall that I mentioned this in Chapter 1 in the section "Getting Organized the ITIL Way."
There is a number of specific roles in Service Strategy, which I've shown in an organization chart in Figure 3-4. I've done that for illustrative purposes; this is not an organizational model for you to follow blindly!

Figure 3-4   Roles in Service Strategy
The generic responsibilities of Service Owner, Process Owner, and Process Manager are set out in Chapter 1. For the specific responsibilities of each of the roles shown in Figure 3-4, you will need to refer to the ITIL publications themselves.
Tools in Service Strategy
There is a tendency to think of technology in the context of IT service management as being mainly concerned with Service Desk. That aspect is, of course, important, but you should be aiming to have an integrated IT service management tool that covers the whole service lifecycle and that can interface easily with other, specialized tools.
Regarding Service Strategy, there are two particular areas where technology can be useful.
â¢  Service automation and analytics   This is relevant throughout the service lifecycle and enables greater consistency and higher throughput. It also enables the capture of accurate data for management purposes, much of which can be fed back to Service Strategy for better-informed strategic decisions. It would be a sensible IT policy to aim to maximize service automation as a powerful means for the better delivery of services that support the strategy.
â¢  Simulation   These tools enable possible service solutions to be modeled and the results analyzed, with the results forming part of a business case.
Chapter Review
Service Strategy is where the lifecycle of each service begins and is concerned with stating a clear mission, setting values, defining goals, and designating the approaches to be followed throughout the service lifecycle. If the strategy is wrong, it is highly likely that the service, when it eventually gets rolled out into the live environment, will not deliver the value it should and will probably be poor economically in performance. Worse, the effort put in during the Service Design and Service Transition lifecycle stages will have been largely wasted. You can end up delivering a service to the customer that, while it may perform to its specification, does not actually "facilitate the outcomes your customer wants to achieve."
Quoting that extract from the definition of service reminds me that you must keep the principles and concepts of service management clear in your mind when you start exercising your management and planning skills. If you have only a fuzzy idea of what you mean by service, process, function, and so on, it is likely that your decisions affecting those aspects will also be fuzzy. Your decisions will be difficult for others to understand and to put into effect. Service Strategy adds to those clear definitions and concepts by introducing the idea of achieving value creation by establishing a balance between utility and warranty. It goes on to consider service assets and customer assets, how those assets are a combination of resources and capabilities, and that making the best use of (and even optimizing) your service assets will increase the value of your customers' assets. All this serves to transform your business's view of IT service management from it being an inescapable bureaucracy, outside of the core business (and often a candidate for injudicious outsourcing), to it being appreciated as a strategic asset.
In this lifecycle stage, the Strategy Management process works to ensure clarity, particularly regarding the definition of your services, and seeks to ensure the whole lifecycle stage is run effectively. Service Portfolio provides a complete picture of all servicesâfrom concept through live operation to retirementâand in so doing is relevant throughout the lifecycle. Service Portfolio Management shows "top management" the link between resources and the services and hence the value of those resources. Business Relationship Management ensures that there is the best possible communication between service provider and customer, building trust and mutual understanding. Meanwhile, Financial Management ensures the best possible stewardship of your assets and investments, with Demand Management helping the achievement of balance between supply and demand.
Finally, the justification for new or changed services is argued in the business case that, once agreed on, becomes the basis for the service specification that is passed from Service Strategy to Service Design.
Quick Review
Here are the key concepts and terms you've encountered in this chapter. Read through this list, and if anything seems unfamiliar or you can't readily describe it, go back and read the relevant section again.
â¢  Purposes of Service Strategy
â¢  Value creation: utility and warranty
â¢  Assets: customer assets and service assets, including resources and capabilities
â¢  Process: Strategy Management
â¢  Process: Service Portfolio Management
â¢  Process: Business Relationship Management
â¢  Process: Financial Management
â¢  Process: Demand Management
â¢  Tools: automation and simulation
Further Reading
The ITIL Foundation course takes a simplified view of the complex area of Service Strategy but without losing its essence. For those who want to pursue this stage of the lifecycle in greater depth, I strongly recommend attending a Service Strategy ITIL lifecycle course or the Service Offerings and Agreements ITIL capability course. Moreover, those who have a master's degree in business administration, or who are studying for that qualification, or indeed are involved in the development of business studies as an academic discipline, should find rewarding a thorough engagement with the main ITIL Service Strategy publication.
Questions
Here are seven further questions that are typical examples of what you'll encounter in the foundation exam. This time all seven are simple multiple choice; that won't be the same for the remaining question sets!
1.  Which one of the following is not a stage in the service lifecycle?
A.  Service Transition
B.  Service Strategy
C.  Service Optimization
D.  Service Design
2.  When considering value creation through services, which of the following statements is correct?
A.  The value of a service should be measured only in financial terms.
B.  The customer's perception of value is an important factor.
C.  The preferences of the service provider are crucial to value perception.
D.  Facilitating the outcomes of the service provider determines value.
3.  Which one of the following should be delivered to customers by IT services?
A.  Resources
B.  Capabilities
C.  Value
D.  Knowledge
4.  What is the meaning of warranty in the context of services?
A.  The service is fit for purpose.
B.  The service performance is guaranteed by the service provider.
C.  Any service failures are fixed without charge for an agreed-on period.
D.  The service is fit for use.
5.  Which one of the following should always be found in the service catalog?
A.  The complete Service Pipeline stage
B.  The details of all live services
C.  A list of all the resources and capabilities of the service provider
D.  Management and organizational information
6.  Which one of the following is a main purpose of Business Relationship Management?
A.  Ensuring all contractual service targets are met
B.  Liaising with suppliers
C.  Understanding the needs of the service provider's customers
D.  Defining service warranty
7.  Which one of the following stakeholders is the most appropriate to define the value of a service?
A.  The IT steering group
B.  The finance department
C.  The owner of the strategy management process
D.  The customer
Answers
1.  C. If you didn't choose this answer, which one did you choose and why? Here's a supplementary question: what lifecycle stages are not mentioned in the question? The answer is Continual Service Improvement and Service Operation, of course.
2.  B. It's not up to the service provider to define value here, and while financial aspects are important, value also can be expressed in nonfinancial terms (for example, in reputational terms).
3.  C. A major constant theme in ITIL is that services create value.
4.  D. Option A is the meaning of utility, of course. Options B and C are nothing to do with utility and warranty in service management.
5.  B. Only the last element of the Service Pipeline (services being prepared to go live) appears in the Service Catalog.
6.  C. I trust that choosing this answer wasn't difficult.
7.  D. Yes, it's the customer's perception that's important. I'm sure you won't forget that.








CHAPTER 4
Service Design
In this chapter, you will
â¢  Understand the purpose of the Service Design lifecycle stage
â¢  Recognize the five ingredients of holistic service design and the four principles of Service Design
â¢  Appreciate the importance of the service design package (SDP)
â¢  Examine in more detail the eight processes that sit in Service Design

You left Chapter 3 and the Service Strategy stage of the lifecycle with a specification for a new or changed service together with an approved business case. By now you should have a clear idea of how value is intended to be created for your customer, particularly regarding the balance between utility and warranty, in other words, between the promise that's been made and what is needed to ensure that promise can be kept. In addition, the Service Pipeline of the Service Portfolio will now show this new or changed service moving into Service Design, releasing the resources that were specifically required in Service Strategy and now taking up different resources as required for the Service Design stage.
In this chapter, you will consider the features of the Service Design stage, examine the eight processes that are included in it, review the roles and responsibilities specific to this stage, and look at how tools can help you. You will pay particular attention to the major deliverable that is produced at the end of this lifecycle stage: the service design package (SDP) that is handed on to Service Transition.
It is important to appreciate that in this stage and in Service Transition there is an almost complete integration between IT Infrastructure Library (ITIL) and what is happening in projects and programs. The principles of ITIL should be followed by projects, and your organization's methods and management systems should ensure that project and nonproject work does not exist in parallel but unconnected worlds. Of course, project and program managers have specific responsibilities for driving their work to completion, but the prescription they are given should make it clear that conforming to the organization's service management policy is mandatory.
The Purpose of Service Design
This stage of the lifecycle provides guidance on the design and development not only of services but also of service management practices. Those services are to meet both the current and the future needs of the business. Specific purposes (objectives, if you prefer) can be considered under the following headings:
â¢  Coordinate Design Activities   To ensure that the resources required in this stage are used as efficiently and effectively as possible.
â¢  Policies and Standards   To produce a number of Service Design policies subordinate to those in Service Strategy; those earlier policies should be developed in this lifecycle stage alongside local standards and applied in all areas of service design and planning.
â¢  Process Quality   To assess the effectiveness and efficiency of the eight design processes.
â¢  Forward-Compatible Design   To ensure that new or changed services can be developed and enhanced in the future as easily as possible within appropriate timescales.
â¢  Plans   To produce and maintain plans, processes, policies, architectures, frameworks, and documents for the design of high-quality IT services.
â¢  Costs   To control the long-term costs of service provision, reducing, minimizing, or constraining them as necessary.
â¢  Service Management System   To design a system that is efficient and effective.
â¢  Security and Resilience   To design IT infrastructures that are both secure and resilient.
â¢  Efficiency of Effort   To reduce the need for reworking or for urgent, interim enhancement of services.
â¢  Skills and Capabilities   To develop the skills and capabilities of the individuals and the functions of the service provider.
Holistic Service Design
There are five major aspects of Service Design, all of which must be addressed when designing new or changed services: solutions; management information systems and tools; technology architectures and management architectures; processes; and measurement methods and metrics. They are described in the following sections.
Service Solutions
This should be obvious. These are the actual new or changed services themselves, to be designed using a structured and formal approach and incorporating adequate flexibility for easy future evolution.
Management Information Systems and Tools
These include the service portfolio (with which you are already familiar) and systems you will meet later such as the service knowledge management system (SKMS) and the configuration management system (CMS). In many cases, these systems and tools are used throughout the service lifecycle, but they are designed in Service Design (unsurprisingly!) using the same structured and formal approach that is used in the design of service solutions.
Technology Architectures and Management Architectures
On one hand, you have the technical aspect of the IT infrastructure, its constituent components, and their relationship to each other. On the other hand, you need to align the management architecture with the business, not with the technology. That should ensure that the needs of the business have the greatest weight.
Processes
The 26 processes don't just happen by accident. They have to be designed, and that is done in Service Design (there's a remorseless logic about that, isn't there?).
Measurement Methods and Metrics
There appears to have been a long tradition in IT that people think about measurement only once a new application is running reasonably well in the live environment. However, you are a professional service manager, so you should start thinking in detail about this aspect now. Provision should have been made in the business case for the necessary resources, and you will be seeing how the Continual Service Improvement stage of the lifecycle (Chapter 7) provides invaluable guidance and assistance.


EXAM TIP    These five aspects of holistic service design are a gift for exam question setters. You would be wise to remember these five aspects; put them in your list of top revision topics.

The Principles of Service Design
ITIL seems to love having enumerated lists; you've just had the five aspects of holistic service design, and you'll coming across others later. However, you're now going to consider the four P's of Service Design, which are the four all-important areas that need to be considered in successful Service Design (so ITIL says). The four Ps are as follows:
â¢  People   This is perhaps the most challenging P. People (IT staff, customers, users, board executives, and so on) have to be managed, persuaded, motivated, supervised, trained, paid, and so on.
â¢  Processes   This is ITIL, so it's no surprise to see processes here.
â¢  Products   This P covers services, technology, and tools (I think it's a bit contrived to link these three under the P word products, but there you are!).
â¢  Partners   This means suppliers, manufacturers, and vendors with whom things work better if you view them as "partners" in your quest for service management excellence.
Keeping these four Ps in mind helps you prepare better and manage better toward achieving the successful delivery of IT services.


EXAM TIP    These four Ps are as equally attractive to question setters as the five aspects of holistic service design. Please add the four Ps and their significance to your list of top revision topics.

The Service Design Package
It is fundamental to an understanding of ITIL that you see the service lifecycle as a set of interconnected and interreliant stages. As you progress from one lifecycle stage to the next, there is a formal handover/acceptance and, in the reverse direction, continual service improvement ensures that the necessary feedback takes place (go back and look again at Figure 2-2 if needed). From Service Strategy into Service Design, you see the specification of new or changed services (you may come across the concept of "service packages" in this context); then, when you get to the end of Service Transition, you will see how Release and Deployment Management covers the crucial move into the live environment. But now, covering the move from Service Design into Service Transition, you have the service design package (SDP). But there's more to it than that. The SDP is not just a blueprint to guide Service Transition but provides detailed requirements and plans for operating the new or changed service in the live environment, for continual service improvement and for the ongoing development of the service concerned.
You also use an SDP for the retirement of a service. You shouldn't just switch off a service like you would turn off a light. You need to ensure that there are no remaining interdependencies from other services on the service you are retiring, you should be equally careful to ensure that any infrastructure components you plan to remove or redeploy are not being used by some other system or service, and you must not forget to update all relevant documentation.
Whether you are moving a new or changed service into transition or perhaps requiring Service Transition to retire a service, I'm sure you can appreciate that not only must the Service Portfolio and the Service Catalog be updated but so must your configuration information (but let's not rush on too fast; you'll be looking specifically at Configuration Management in Chapter 5).
I think you're now ready to examine the sort of things that go into your SDP.
Business Requirements   These should have been clearly documented in Service Strategy and developed in Service Design. Any changes made to the business requirements during Service Design should have been controlled by Change Management (see Chapter 5).
Functional Requirements   When you think of functionality, you should automatically think of utility, shouldn't you? This is the promise of all the good things the new or changed service is going to give you. Functional requirements should logically be derived from the business requirements; any changes to functionality should also be equally controlled.
Operational Requirements   Ah, yes! Projects (formal or informal) are sometimes tempted to downplay this aspect. Inescapable elements such as capacity and security aspects are normally addressed seriously, but there can be a temptation for other considerations, such as those that come under the headings of availability, service continuity, service desk support, and so on, to be glossed over. You'll doubtless remember that in Chapter 3, when I discussed warranty, I made the point that you must make as much provision for the warranty as you do for utility; otherwise, you won't be able to deliver on your promise.
Service Level Requirements   Service level requirements (SLRs) record the desired level of warranty. They are a vital input to the negotiation of service level agreements (SLAs), which should specify service and quality targets. You keep a record of the SLRs in the SDP in order to have a reference to what the customer originally wanted.
Design Topology   Topology is a splendid word for ITIL to use, isn't it? (The Concise Oxford Dictionary defines topology as the "study of geometrical properties and spatial relationships unaffected by continuous change of shape or size of figures," so there you have it!). Whatever may be the dictionary definition of topology, this part of the SDP covers the following:
â¢  The definition of the service
â¢  Hardware, software, applications, tools, networks, and so on (essentially the components of the serviceâconfiguration management again)
â¢  All relevant documentation (including user, business, support, and so on)
â¢  Processes, measurements and metrics, and reports
â¢  Supporting products and services
In your studies you could at this point usefully revisit the five aspects of holistic service design and the four Ps of Service Design that you encountered earlier in this chapter. They're still relevant, aren't they?
Organizational Readiness Assessment   This leads on from your business, functional, and operational requirements as covered earlier. If you haven't defined and documented those, you'll find it difficult to undertake an organizational readiness assessment. The readiness assessment should cover such areas as finance, technology, resources, service provider skills and competencies, and the capabilities of potential suppliers.
Service Transition Plan   You may argue that this is up to Service Transition. Not so, I'm afraid. Those involved in Service Transition cannot have anything like the same knowledge and understanding of the new or changed service as those who are developing it. Therefore, the SDP tells Service Transition in detail how the new or changed service is to be built, tested, and deployed. Of course, Service Design's instructions must conform to the agreed-on Service Transition policies, but it may be necessary to introduce some new transition techniques and resources; those aspects would be covered here too.
Acceptance Criteria   Transition staff can be expected to be the experts in testing, but they shouldn't be expected to set the criteria for deeming tests to be successful for each specific new or changed service. Those criteria must already have been documented by Service Design in the SDP.
Service Program   This covers all stages of the service lifecycle for the new or changed service in question. It should include any phasing and the timescales for Transition, Operation, and subsequent Continual Service Improvement. In doing so, it draws together all the aspects covered in the SDP.
No new or changed service should be accepted for work in Service Transition until an SDP for it has been formally agreed on and documented between Service Design and Service Transition.
If you want to see a detailed specification for an SDP, please look at Appendix A of the main ITIL Service Design volume.
Service Design Processes
The eight processes described next were briefly outlined in Chapter 2. You will now examine them in detail, but before you get caught up in that, it will be useful to consider how they are connected to each other.


EXAM TIP    You must have a clear idea of which processes fit into which lifecycle stage. If you can remember the eight processes that belong to Service Design, it will help you place the other 18 in their rightful places.

Design Coordination is largely focused on the Service Design stage of the service lifecycle, and its name gives a clue to the lifecycle stage it belongs to. The next process you should think about is Service Catalog Management, and, as I'm sure you'll remember, the service catalog is in some respects a more detailed subset of the service portfolio you encountered in Service Strategy. In the same way that Service Design adds detail to the concepts of Service Strategy, the Service Catalog amplifies part of the Service Portfolio.
Having got your services cataloged, you can then do Service Level Management (SLM). SLM is about negotiating SLAs, negotiating operational level agreements (OLAs), working closely with Supplier Management regarding underpinning contracts (UCs), carrying out review meetings, and running a continual service improvement program. Clearly, you can't carry out those service-related activities until you've first defined what your services are. That hasn't stopped many from attempting to do it the wrong way around!
When you are negotiating SLAs, many of the targets you set are dependent on inputs from the Availability Management and Capacity Management processes. It is also a good idea to include IT Service Continuity and Information Security aspects in SLAs. Thus, you have four processes that fit together: Availability, Capacity, Continuity, and Security. Where have you seen these four listed together previously? Yes, they comprise warranty, don't they? These are the aspects you must address if you are to be able to deliver on the promise you made under utility.
Now let's get down to looking at each process individually.
Design Coordination Process
Design Coordination works within Service Design in a somewhat similar way to how Strategy Management does in Service Strategy. Its purpose is to ensure that the objectives of the Service Design stage are met by providing and maintaining a single point of coordination and control for all activities and processes that fall within this stage of the service lifecycle. That, of course, includes the relevant activities of programs and projects.
To meet that purpose, Design Coordination should do the following:
â¢  Monitor Service Design activities to ensure consistency.
â¢  Ensure the production of SDPs that conform to the agreed-on template and that are acceptable to Service Transition.
â¢  Manage the handover of new or changed services from Service Strategy to Service Transition. This also includes services that are being retired.
â¢  Ensure that Service Design conforms to strategic, architectural, and governance needs.
â¢  Seek to improve the Service Design processes themselves in conjunction with the process owners.
â¢  Review, measure, and improve the performance of all Service Design activities and processes.
â¢  Create and maintain a common framework of Service Design practices.
â¢  Support and guide each project or change through all the Service Design activities and processes.
â¢  Maintain policies, guidelines, standards, budgets, models, resources, and capabilities for Service Design activities and processes.
â¢  Plan, forecast, coordinate, prioritize, and schedule all resources used in Service Design.
â¢  Ensure that utility and warranty requirements are addressed in service designs along with all other requirements.
Effective Design Coordination will resolve conflicting demands for shared Service Design resources, will ensure that SDPs are accurate and consistent, and will help to produce new or changed services that will meet the expectations of the service provider's customers.
Service Catalog Management Process
Service Catalogs complement the Service Portfolio you encountered in Service Strategy and can appear in many shapes and sizes depending on the complexity of the service provider, the type of service provider (Type I, Type II, or Type III; see Chapter 1), and the maturity of their IT service management arrangements. The crucial point is that unless you have some sort of a list and a definition of your services, how can you begin to "do service management"? What you haven't defined you can't manage. Well, you can manage it only by inspiration and guesswork, which does not guarantee consistent and effective results!
An outsourced service provider (a Type III service provider) will almost invariably have some sort of a service catalog, although it may be just a glossy brochure of their offerings to potential customers. This will of course be a product of the "marketing mind-set" mentioned in Chapter 3. However, there's more to a service catalog than a tempting brochure, so, ask yourself, is it a good idea for your service catalog to be owned and published exclusively by the sales and marketing team? You'll find out more later in this chapter. Furthermore, the situation I've often come across regarding Type I and Type II service providers is even more disparate (or even "desperate," shall I say!).
What I found when I created and published the first service catalog for Tradeteam was that it was certainly useful for users to see the services available to them together with important information about those services. But, more than that, it was equally useful not only for all in the IS department (a Type I service provider) but also for those in Exel who were providing shared services acting as a Type II service provider and for Computacenter who provided service desk and server management and administration services as a Type III service provider. The service catalog enabled all stakeholders to have a clear view of what was being provided to support Tradeteam's business. It gave a clear picture of how the outcomes of the customer (Tradeteam is a drinks logistics business) were being facilitated by the services provided by the IS department and how the specific costs and risks behind those services were managed by the IS department, thereby leaving Tradeteam's core logistics business to get on trucking the drinks. We're back with your old friend the definition of service again, aren't we?
Definition of a Service Catalog
ITIL defines a Service Catalog as "a database or structured document with information about all live services including those available for deployment."


EXAM TIP    This definition is a gift for examiners writing questions. Remember this definition and you won't be looking a gift horse in the mouth!

Purpose of a Service Catalog
The purpose of the service catalog can be summarized as "providing a single source of consistent information on all live services and those being prepared to go live and to ensure that it is widely available to those who are approved to access it."
To meet that purpose, the Service Catalog Management process has to do the following:
â¢  Manage the structure and contents of the catalog, ensuring that it is complete, accurate, and up-to-date. This includes the checking and authorization of all proposed changes.
â¢  Work with Availability Management and Security Management to ensure that those who need access to the catalog can actually see what they need while excluding those without a need to see specific elements. However, in general the service catalog should be widely accessible unless there is a justification to restrict access to certain defined areas.
These are other factors that need to be considered:
â¢  Developing and maintaining service descriptions. It can be a useful mental discipline for the author to have to encapsulate in no more than, say, 200 words exactly what each particular service is about. But take care to ensure that the customer-facing services are defined as such; customers don't need to be concerned with specific application or technical components (application modules and particular servers, for example). Customers want e-mail; they don't want applications and servers.
â¢  Using language that is appropriate for the readers of the catalog. Don't forget, this is an important element of communication with the user community. You want users to consult the catalog to understand how the services help them do their job, how to obtain support when they need it, and how to get the best out of the technology they've been given.
â¢  The technical platform on which the catalog will be established. For example, it may be published in an intranet or be a document within a document management system such as SharePoint. In such cases the owner of the catalog needs to have some form of SLA or OLA with the provider of that resource to ensure that the catalog can be managed efficiently and effectively.
â¢  There is a close relationship between the Service Catalog and the configuration management system (CMS); see Chapter 5. The Service Catalog gives the important features of the services it contains and the relationships between those services, while the CMS is at a more detailed level and contains information on the actual components of each service and the relationships between those components. It is possible to conceive of a Service Catalog as being a report derived from the CMS.
In the following sections you'll consider various types of Service Catalogs, but you must remain aware that your service catalog will evolve over time. New services will be added, old ones retired, and the maturity and usefulness of your catalog should growâit's all continual service improvement (CSI)! So, let's look at some options.
The Simple Service Catalog
If you're starting with a blank piece of paper, I suggest that rather than plunging into detail and, perhaps, acquiring a sophisticated tool, you keep it simple to begin with. A straightforward matrix as shown in the example in Figure 4-1 provides simple but valuable information and will provide a solid foundation to develop your catalog further. It enables you to achieve quickly a single source of comprehensive and accurate information on all live services and services being prepared to go live. You can then add more detail as necessary and as available resources permit.

Figure 4-1   Example of a simple service catalog
Business or Customer Service Catalog
It won't be long before you've built a catalog that is useful to the business you support and the customers whose outcomes your services are facilitating (see Figure 4-2). Here you are not only showing which customers are using which services but also enabling your customers to see what other services are available and which they may want to use too. Moreover, the information provided compared to the simple catalog mentioned earlier will cover such useful areas as support hours, escalation paths, and so on; these are areas you'll have extracted from the relevant service level agreement. There's usually no need to publish the whole SLA because it will contain a lot of detail, which can be unhelpful and misleading outside of the particular audience for which the SLA has been produced.

Figure 4-2   Business or customer service catalog
Technical or Supporting Service Catalog
As I've mentioned several times, you must bear in mind your definition of service. The business/customer catalog shows the services that facilitate the customer's outcomes (such as e-mail). So, where do you show all those specific costs and risks that the service provider has to manage? They're in the technical/supporting service catalog, as in the diagram at Figure 4-3. This catalog covers not only the technical infrastructure but also such items as applications and outsourced services.

Figure 4-3   Technical or supporting service catalog
Alternative Views of the Service Catalog
The model you have been considering so far is known in ITIL as the two-view service catalog, as shown in Figure 4-4.

Figure 4-4   Two-view service catalog
However, you may want to provide a selection of different views of the service catalog depending on the audiences to be addressed and the use to which the catalog will be put. ITIL gives the example of a three-view service catalog (Figure 4-5) where the service provider want to differentiate between the set of services provided to (in this example) a wholesale operation and a retail operation while identifying which services are used by both operations.

Figure 4-5   Three-view service catalog


EXAM TIP    The two-view and three-view service catalogs are deemed by examiners to be permissible views of the service catalog along with the business or customer service catalog and technical or supporting service catalog.

To summarize, the Service Catalog Management process does the following:
â¢  Enables the service provider to identify those services that can be bundled together to provide a solution to a particular customer's set of requirements
â¢  Informs customers of the services that are available and that they might want to avail themselves of
â¢  Enables the service provider's staff and contractors to see where and how their activities underpin the services being provided to customers
â¢  Helps manage the expectations and preparedness of both the customer and the service provider regarding those services that will be rolled out in the near future
â¢  Defines the communication paths between the service provider and the customer and users, including escalation, the handling of service requests, and so on
â¢  Publishes appropriate service-level commitments and targets
â¢  Addresses the first of the five aspects of holistic service design: service solutions
It can also cover other useful areas such as pricing or costs, service continuity arrangements, and information security considerations.
Service Level Management (SLM) Process
I hope you're now familiar with the definition of service. I've also covered how all services are included in the Service Portfolio and that the services that are live or being prepared to go live are in the Service Catalog part of the Service Portfolio. Furthermore, the Service Catalog provides customers, users, and IT staff with a good deal of useful information. Having confirmed that, you're now in a position to look at the formal, detailed ingredients of your services; this is where SLM comes in.
ITIL says the purpose of SLM is to ensure that all current and planned IT services (in other words, those in the Service Catalog) are delivered to agreed-on, achievable targets. Let's look a bit closer at that last phrase.
â¢  "IT services . . . are delivered . . ."   SLM is looking forward to live operation where you are actually going to deliver value to your customers and collect the evidence to show that you are.
â¢  ". . . to agreed-on . . ."   You are going to negotiate with your customers not only to agree on the functionality of the service (the utility, of course) but also the warranty aspects (availability, capacity, continuity, and security).
â¢  ". . . achievable . . ."   The targets you agree on must be achievable. You may think that this is obvious. Well, you'd be surprised how many targets agreed on in SLAs are not just unachievable at the time they were agreed on but could never be achieved with the resources available. Furthermore, I've seen some agreed-on targets that are actually unmeasurable!
â¢  ". . . targets."   Do the chosen targets make sense, and are they relevant? Are you selecting certain metrics as targets purely because you can measure them regardless of whether they are relevant? This where the fifth aspect of the five aspects of holistic service design should be considered: measurement systems and metrics. You'll return to this point in Chapter 7.
This purpose is achieved through a constant cycle of negotiation, agreement, monitoring, reporting, and review of service targets and achievements supported by Continual Service Improvement (CSI). Do you remember my ten commandments from Chapter 1?
Thou shalt have . . .
1. Clearly defined, agreed-on, and documented roles and responsibilities
2. Clearly defined, agreed-on, and documented services
3. Clearly defined, agreed-on, and documented processes
4. Clear ownership of services and processes, as well as all other components of the infrastructure
5. Meaningful process and service metrics
6. Measurement of performance at the point of service delivery
7. Review of performance of services and processes
8. Publication of reports on performance
9. A service improvement program
10. Clear communication between IT and users to establish and nurture trust between IT and the business
I hope you agree that all ten are relevant to SLM, which shows just how important a process this is.
In achieving that purpose, you need to do the following:
â¢  Ensure that the Service Level Management and Business Relationship Management processes are aligned and coordinated.   The owners of the two processes must maintain a close liaison (of course, in some organizations, they may be the same person, which should help).
â¢  Negotiate.   The owner and the manager of the process should be good negotiators. Negotiations start with the service level requirements, which record the customers' wishes regarding the level of warranty and which are an important element of the SDP. Constructive negotiations then take place with the stakeholders to formalize the SLAs (and the underpinning OLAs) and contracts. You'll look at these in more detail later.
â¢  Monitor, report, and review.   Having produced your SLAs, you shouldn't lock them away in a four-drawer filing cabinet never to see the light of day again. These are living documents the contents of which the stakeholders should be able to change as necessary. Monitoring and reporting performance against the SLA targets enables you to identify where improvements need to be made, where targets are too ambitious, or where resources may be over-generous and could be better deployed elsewhere. These reviews not only help manage customer expectations and improve communication but also enable potential improvements to be identified and action instigated.
Figure 4-6 shows the process diagrammatically.

Figure 4-6   Service Level Management process
You need to examine these three documents (SLA, OLA, and UC) in greater detail.
Service Level Agreement (SLA)
First, let's clear away some common misapprehensions. In ITIL an SLA itself is not a contract (although contracts will commonly have SLAs in them). The ITIL definition is as follows (emphasis mine): "An SLA is a written agreement between IT service provider and customer defining the key service targets and the responsibilities of both parties."
An SLA is a formal document that should be signed at an appropriately high management level. It should never be a stick with which the two parties can beat each other! It should be clearly understandable and written in language appropriate to the customer. Moreover, it should be a document that reflects an emotionally mature, partnership relationship, not the equivalent of a Nelsonian Articles of War!
Operational Level Agreement (OLA)
OLAs are similar to SLAs in being formal documents that should be signed at an appropriate management level. The ITIL definition is as follows (again, emphasis mine): "An OLA is an underpinning written agreement between two elements of the service provider organization regarding the key service targets and responsibilities of both parties relating to the services being supported."
Again, it should never be a stick with which the two parties can beat each other up, and it should be clearly understandable, written in language (probably technical) appropriate to the service provider.
Underpinning Contract (UC)
Underpinning contracts are looked after by Supplier Management, and unlike SLAs and OLAs, underpinning contracts are legally binding agreements that will have to conform to contract law and the contract policy of the organization concerned. Again, they should be clearly understandable, but, being contracts, they will probably be written in legal language and may be clear only to a trained lawyer!


EXAM TIP    SLAs and OLAs are negotiated by SLM; all contracts are negotiated by Supplier Management. Examiners like to establish whether you have this concept clear in your mind.

It is a major challenge to SLM to keep all SLAs, OLAs, and UCs in alignment. Some organizations, therefore, take an unhelpful view that these SLAs, OLAs, and UCs should not be changed once agreed on. That flies against the principles of service management, which requires reporting, reviewing, and subsequent change to be a fundamental element of best practice. Stay flexible!
Let's now look at how they fit together in Figure 4-7.

Figure 4-7   Service Level Management, single-level overview
You may like to compare this to the service catalog in Figure 4-4 and see how the SLAs ("classic" SLAs as I call them) align with the business/customer service catalog, while the OLAs and UCs align with the technical/supporting service catalog.
However, I find that diagram is a little over-simplistic and that in reality relationships are more complex; Figure 4-8 is a better reflection of the real world.

Figure 4-8   Service Level Management, multiple-level overview
Here, if you take the example of Tradeteam, the ultimate customer, it is the logistics business of Tradeteam that is having its outcomes facilitated by the services being delivered by Tradeteam IS out of the IT infrastructure as documented in SLAs with its underpinning OLAs and UCs. In turn, those UCs are themselves services being provided to Tradeteam by a third-party service provider (Type III service provider), for example Computacenter. From Computacenter's viewpoint, it is in the position of Figure 4-7, but, in the big world, it is sitting between the ultimate customer and Computacenter's own underpinning contractors (who would be subcontractors as far as Tradeteam is concerned).
You could of course continue this concatenation ad infinitum (there's another good word and even some Latin for you!). At the bottom of Figure 4-8, what you see as subcontractors would have their own contractors too. At the top end of the chain, Tradeteam as a business has its own customers (pubs and breweries) for whom Tradeteam is itself an outsourced service provider. Somewhere above all of this are you and me who've popped down to the pub for a quiet beerâit's enough to drive you to drink, isn't it?

Exercise 4-1: Service Level Agreement Contents
Now you should have a clear picture of SLAs, OLAs, and UCs, and I hope you can see how the SLA is crucial and that it is underpinned by OLAs and UCs. You should also have an idea of what an SLA contains. I suggest you get yourself a piece of paper and list as many specific things as you can that you believe should be found in an SLA; I gave you earlier the definition of SLA, and (always being helpful) I'll add that an SLA should include a description of the IT service, of service level targets, and of the specific responsibilities of the parties to the agreement. Take about ten minutes to scratch your head and produce your list. My suggested answer is at the end of this chapter.
Have you done the exercise? Yes? Good, then let's move on.

I see Service Level Management as having five major themes. Three you've encountered already: SLAs, OLAs, and UCs. The other two are service reviews and service improvement plans.
Service Reviews
These typically take place at various management levels and frequencies. You'd expect the service manager and the customer's management representative to meet on a monthly basis, the service owner and the equivalent customer manager to meet quarterly, and an annual top-level review to take place between the appropriate higher management grades. Whatever the management level, each meeting should review the performance against targets, consider the impact and cost of breaches, note the recommendations and actions of subordinate reviews, look ahead to future plans and their impact, and provide inputs to the service improvement plan (or service improvement program, if you prefer). These reviews will be informed by appropriate reports of which a common style is the service level agreement monitoring (SLAM) chart, as shown in Figure 4-9.

Figure 4-9   SLAM chart
SLAM charts provide an attractive, visual representation of achievement against target. Red indicates a target breached, amber indicates a target that was nearly breached, and green indicates a target met with reasonable comfort; what would constitute "nearly breached" and "reasonable comfort" would be specified in the appropriate SLAs. These color-coded charts are sometimes called red-amber-green (RAG) charts.
Service Improvement Plan
This is a formal plan to implement improvements to an IT service (or a process for that matter). It should conform to the service provider's continual service improvement policy and program (see Chapter 7).
Service Level Agreement Structures
Good questions to ask are, how many SLAs should you have, and how should you arrange them? You know that there's going to be some common ground between them, and you don't want to create a bureaucratic nightmare. ITIL helps you work through this conundrum by giving some useful guidance.
There are two basic SLA structures: service-based and customer based.
â¢  Service based   Here you have an SLA for each service, notwithstanding the number of different customers using it. One service, lots of customers.
â¢  Customer based   You guessed it! You have an SLA for each customer, notwithstanding the number of different services shared between several customers. One customer, lots of services.
You can readily see that going for just one or the other of these two structures would lead to a great deal of duplication, nugatory administrative work, and an increased risk of things getting out of alignment. In practice, you find that service providers have adopted a multilayer structure.
Multilayer Structure   At the top you have corporate-layer matters that apply to all customers; the SLA for the e-mail service would be a typical example. Beneath the corporate layer you have a set of customer-layer SLAs that cover the services used uniquely by each individual customer plus a reference both to the corporate-layer SLAs and to the service-layer SLAs for any services shared with other customers. Finally, you find the service-layer SLAs for those services that I've just mentioned, in other words, those that are shared by two or more customers. This multilayer structure is the one adopted by many organizations because it is clearer and administratively more efficient.
Summary of Service Level Management
By this stage of discussing Service Level Management I often find that delegates' eyes are becoming glazed over. So, let's get back to the basics. Wake up at the back there! Service level agreements (SLAs) are between the service provider and the customer (the customer can be internal or external). Operational level agreements (OLAs) are between teams and groups within the service provider's own organization. For underpinning contracts (UCs), the clue is in the name; they are contracts, in other words, legally binding agreements between a third-party and its customer. Thus, OLAs and UCs are straightforward, but SLAs are a little more complex. Picking up on the concept of service provider types (see Chapter 1) I see there being three equivalent types of SLA.
â¢  Type I SLA   This is the classic SLA between an internal service provider and its internal customers. Tradeteam would have SLAs between the IS department and the depots, the finance department, and so on.
â¢  Type II SLA   These are SLAs between a shared services unit (a Type II service provider as described in Chapter 1) and the Type I service providers in the business units that are receiving the service and that are under the umbrella of the top-level business. These SLAs should not be contractual. This is because the service provider and the business units are within the same organization.
â¢  Type III SLA   These are the contractual SLAs that are typically found in the appendixes to contract documents. They are not stand-alone contracts in themselves, but their provisions are upheld by the contract of which they are part.
Earlier in your consideration of this process I mentioned that you must ensure that the Service Level Management (SLM) and Business Relationship Management (BRM) processes are aligned and coordinated. Now that you've looked at SLM in some detail, it should be helpful to compare BRM and SLM. See Table 4-1.

Table 4-1   BRM and SLM Compared
Capacity Management
You'll now examine the four processes that cover the aspect of value creation that is defined as warranty; those four processes are Capacity Management, Availability Management, IT Service Continuity Management, and IT Security Management. You'll start with Capacity Management.
The purpose of the Capacity Management process is to "ensure that the capacity of IT services and of the IT infrastructure meets the agreed capacity and performance-related requirements in a cost-effective and timely manner. Capacity Management is concerned with meeting both the current and the future capacity and performance-related needs of the business."
I'd like to highlight a few words in the previous quotation.
â¢  ". . . agreed . . ."   The capacity requirements should not be dreamt up by the service provider alone, nor should the business abdicate its responsibilities and leave this to the service provider to do. The outline capacity requirements and related costs should have been identified in Service Strategy, specifically in the Demand Management process if you remember. In Service Design you are going to review those in detail, and in Service Level Management, your skilled negotiators will have agreed on detailed capacity requirements with the customer. Capacity Management has a vital, expert role in that negotiation at the conclusion of which the agreed-on capacity aspects will be documented in the SLAs.
â¢  ". . . performance-related . . ."   In ITIL when you talk about performance, you almost invariably link it to Capacity Management.


EXAM TIP    If you see the word performance in an exam question, think capacity.

â¢  ". . . cost-effective and timely . . ."   Capacity costs moneyâsometimes a lot of money. Good service management practice requires you to justify what you spend on providing capacity. You need to make sure you maximize the return on investment (ROI). You also want to ensure that the right capacity is in the right place at the right time. You don't want to spend money unnecessarily early, but you don't want to overlook a developing capacity requirement or miss an opportunity for a discount-price purchase and then end up having to make an expensive panic buy.
â¢  ". . . current and the future . . . needs . . ."   How clearly is your crystal ball working? Capacity Management needs to have good communication with Business Relationship Management and Service Level Management to get the earliest possible indication of future needs.
Subprocesses of Capacity Management
Capacity Management can be complex; to help you understand it better, ITIL considers it within three, hierarchical subprocesses.
â¢  Business Capacity Management   This ensures that Capacity Management is aligned to business plans and strategy, translating requirements into services and infrastructure. An example is a logistics business expanding and building more depots that will significantly impact the amount and location of the IT resources needed to deliver services. The Business Capacity Management subprocess and the Business Relationship Management process need to work closely together.
â¢  Service Capacity Management   Working within the context of Business Capacity Management, Service Capacity Management ensures that the services themselves underpin the business processes (facilitating those all-important outcomes) and keeps in focus the end-to-end performance of operational services and their associated workloads. The Service Capacity Management subprocess and Service Portfolio Management process need to work closely together and also with the other processes in Service Design.
â¢  Component Capacity Management   At its heart, Capacity Management is one of the most technical of ITIL processes. It ensures there is an appropriate technical understanding of all the components of the infrastructure, and it employs techniques of data analysis and tuning to get the maximum value from them. Component Capacity Management relies on the information held in the configuration management system (CMS) and should work closely with Service Operation regarding capacity-related aspects of the live environment.
Reactive and Proactive Activities
As in every process there is a number of activities, which in Capacity Management fall under two broad headings: reactive and proactive.
In Capacity Management reactive activities are
â¢  Monitoring, measuring, reporting, and reviewing the current performance of services and of components. The raw data will be captured in the Service Operation phase of the lifecycle and then passed to Capacity Management for processing and analysis.
â¢  Responding to occurrences in the live environment where activity against preset thresholds triggers the intervention of Capacity Management. An example of such a threshold would be disk utilization reaching 80 percent. You'll be looking specifically at these sorts of occurrences in Event Management in Chapter 6.
â¢  Responding to and assisting with any other specific performance issues.
In Capacity Management proactive activities are
â¢  Analyzing performance data and associated trends and taking appropriate action to preempt developing performance issues.
â¢  Employing techniques such as mathematical modeling and application sizing to estimate the impact of changes in IT services and their components.
â¢  Ensuring that capacity-related infrastructure changes are budgeted, planned, and implemented in a timely fashion.
â¢  Tuning services and components to optimize performance. An example would be to balance the load on data circuits. However, there is only so much benefit to be gained from tuning; once you've achieved as perfect a balance as you can, you may not be able to avoid having to spend money to increase total capacity.
â¢  Following technological developments to identify new advances that should be pursued.
â¢  Producing and maintaining the capacity plan (there's more on this in a moment).
Demand Management
I mentioned in Chapter 3 during your brief consideration of the Demand Management process that you'd be revisiting it when you got to Capacity Management. That moment has arrived.
The first point to make is that, in contrast to Demand Management in Chapter 3, what I'll cover now is in the syllabus for the ITIL Foundation exam.
Those patterns of business activity (PBAs) that you met in Chapter 3 can show some extreme fluctuations, whether that be over a daily, weekly, monthly, or annual period. The impact could be that, to meet the peaks, you would have to invest a lot of money in resources that would be underutilized for most of the time. It's similar to the challenge facing the London Underground subway, which has to provide a lot more trains during the rush hour than for the rest of the time.
To try to keep a lid on costs, the service provider needs to work with its customers to see whether some reasonable changes to business practice could help smooth out those peaks. However, an ideal result may not be possible. In that case, it may mean that the business would have to accept some constraint on its activities during "prime time" unless it was prepared to pay a lot of money to avoid doing so. Under those circumstances, it could be agreed that higher charges would be levied at peak times (as some energy companies do) to dissuade users from taking up the service, or some physical constraint could be applied such as limiting the number of concurrent logons to a particular application. However, whatever method is employed, it must be agreed on with the customer because it affects their service. The employment of such a constraint should be formally recorded and reviewed periodically to see whether some relaxation has become possible.
Capacity Plan
Capacity Management focuses on producing the capacity plan, which is used to help manage the resources needed to deliver IT services, so it's quite important! The production of the capacity plan is often aligned with the service provider's budget cycle because it forms the basis for inputs to the financial plan. A capacity plan should include the following:
â¢  Details of the current and historic levels of resource utilization and service performance.
â¢  Projections for changes in capacity to meet future service needs.
â¢  The assumptions on which the plan is founded. Business-related assumptions should be provided to the service provider by the customer. If the customer doesn't know what their future business is going to look like, how can the service provider be expected to know better?
â¢  A set of recommendations based on the varying possible scenarios of business developments and available finance. These recommendations should comprise a set of costed options.
The capacity plan is an extremely useful tool for the IT director (or whoever is considered to be "top management" in this context). The capacity plan sits alongside the service portfolio as a valuable tool for managing current and planned resources. It is also valuable in circumstances such as those that can arise when finance directors announce that budget cuts are necessary. In the absence of an agreed-on capacity plan, IT directors have found themselves not just advising but actually making decisions that have a business impactâdecisions that should properly be made by the customer of the service whose outcomes will no longer be facilitated as well as they have been! Because the capacity plan in conjunction with the service portfolio clearly links service assets to the business outcomes, it puts the onus for making decisions with a business impact where they belong, with the business.
Conclusion
To wrap up Capacity Management, you can see that it is quite a technical process and that it is crucial to ensuring the right resources are in the right place at the right time to enable services to be delivered at a performance level that the business requires. In other words, it makes a vital contribution to the warranty of a service. The process itself is a careful balancing act: supply against demand; cost against resources needed.
Availability Management
An intimate bedfellow of Capacity Management is Availability Management, the second of the four processes you're examining that cover the aspect of value creation that is defined as warranty. Availability Management has a number of themes common to Capacity Management; therefore, if you feel some wording here is similar to that used previously, don't be surprised!
The purpose of the Availability Management process is to "ensure that the level of availability delivered in all IT services meets the agreed availability needs and/or service level targets in a cost-effective and timely manner. Availability Management is concerned with meeting both the current and the future availability needs of the business."
As I did for the previous process, I'd like to highlight a few words in the this definition:
â¢  ". . . agreed . . ."   The availability targets should not be imposed by the customer nor by the service provider. The outline availability requirements and related costs should have been identified in Service Strategy and documented in the customer's service level requirements. In Service Level Management you take those SLRs and negotiate and agree on appropriate availability targets, which should be relevant and achievable. You then document them in the SLAs.
â¢  ". . . cost-effective and timely . . ."   The higher the level of availability required, the higher the cost; as with capacity, you need to make sure you maximize the value of your investments. You also want to ensure that changes to availability are introduced in alignment with the business requirements and that you gain the benefit of improved availability as soon as resources permit.
â¢  ". . . current and the future . . . needs . . ."   I hope you haven't put away your crystal ball yet! Business Relationship Management and Service Level Management should be keeping open good communication with Availability Management to give notification as early as possible of any changes that will affect availability-related resources and targets.
The Four Aspects of Availability
In achieving the purpose of Availability Management, ITIL asks you to consider four aspects.
â¢  AâAvailability   This means the ability of a service or a component to perform its agreed-on, documented function when required.
â¢  RâReliability   This is how long a service or component can perform its function without interruption. In other words, how long does it work before it breaks? You can increase reliability by adding resilience to failure.
â¢  MâMaintainability   This is how quickly and effectively a service or component can be returned to its agreed-on functionality after failure. In other words, how quickly, efficiently, and effectively can you fix it when it does break?
â¢  SâServiceability   This is a more ITIL-specific word. It refers to the ability of a supplier (a third party) to meet the contractual targets for availability, reliability, and maintainability. This takes you back to the definition of service, doesn't it? If you outsource a service, you now become the customer and so availability, reliability, and maintainability of that which has been outsourced becomes a specific risk. As a customer, you do not own the specific, detailed risks; they are now the contractor's. But you are still, of course, interested in the performance of the service; you are interested in serviceability.


EXAM TIP    In the previous list you have a helpful acronym, ARMS, for these four aspects. Remember ARMS and you won't forget the essentials of availability.

Other Important Principles
There are also other important principles regarding Availability Management that you need to consider.
â¢  There are two levels of availability: service availability and component availability. Service availability is focused on the end-to-end service as experienced by the user and the customer; component availability concentrates on the links in the chain that together provide service availability.
â¢  Service availability is directly linked to customer satisfaction, specifically, the targets in SLAs and those published in the Service Catalog.
â¢  How the service provider reacts to failures is a key factor. Most reasonable people understand that sometimes things break. If it is clear to them that the service provider always takes swift action to restore service, customer satisfaction may not be impaired. Of course, you do get the "odd bod" who's never satisfied, but that's life.
â¢  Availability can be truly improved only when you understand the business. You should ask yourself what targets are important to the business and which ones aren't? By all means have excellent component availability, but ensure that service availability is your primary focus.
â¢  Availability is only as good as the weakest link. This underpins the previous point. To improve service availability, you need to have effective, focused component availability.
â¢  Prevention is better than cure. If you can become proactive rather than reactive, that'll be clearly a good thing.
â¢  It's always more expensive to retrofit availability. This goes for all areas of Service Design. Making corrections at this lifecycle stage involves minimal cost, probably no more than an amendment to a specification or plan. Once you've acquired, built, and tested the necessary configuration, let alone rolled it out, significant changes can be expensive and disruptive.
Reactive and Proactive Activities
In common with Capacity Management, Availability Management has reactive and proactive sides to it.
In Availability Management reactive activities are:
â¢  Monitoring, measuring, reporting, and reviewing the current live availability data relating to services and components. The raw data will be captured in the Service Operation phase of the lifecycle and then passed to Availability Management for processing and analysis.
â¢  Responding to and assisting with any availability-related issues in the Service Transition and Service Operation lifecycle stages.
In Availability Management proactive activities are:
â¢  Analyzing reliability and maintainability data and associated trends and taking appropriate action to preempt developing availability issues
â¢  Employing techniques such as risk analysis, component failure impact analysis, fault-tree analysis, and the expanded incident lifecycle (more details are given later in the chapter)
â¢  Ensuring that availability-related infrastructure changes are budgeted, planned, and implemented in a timely fashion
â¢  Following technological developments to identify on the market new components offering improved reliability and maintainability
â¢  Producing and maintaining the availability plan
Risk Analysis
I mentioned risk analysis in Chapter 1, and I said that you undertake risk assessment in a number of processes in ITIL; a really important one is, of course, Availability Management. I'm sure you'll remember that ITIL defines risk as "uncertainty of outcome" and that the three steps you take are identification, analysis, and management.
In Availability Management you have to identify all the resources and capabilities that enable your services and note where risk is to be found; you're going to look for such things as single points of failure, poor skills, and unreliable resources (I'll be mentioning some relevant techniques). You can then analyze those weaknesses to measure them, ascertain the impact of situations that are likely to arise regarding them, and prioritize the vulnerabilities you have found; you are going to be particularly interested in identifying the vital business functions. A good example of a vital business function is the automated teller. The vital business function as far as the customer is concerned is getting their hands on the money. In comparison, the little piece of paper that gives you your balance is just a "nice to have."
Question: Who decides what constitutes a vital business function?
Answer: The customer (in discussion with the service provider).
You can then take the appropriate management steps: to remove the risk entirely or, if it is unavoidable (a frequent situation), to mitigate the risk to an acceptable level.
For example, you may decide that having a single data circuit for an important service is too high a risk. You would then invest in a duplicated circuit so that if one circuit breaks, the other can carry the load until the break is fixed. Here you are adding resilience to failure. Do you remember that I mentioned this when considering the acronym ARMS?
Many service providers are required by their customers to deliver what is called high availability. With so much activity taking place online these days, there is often a business need for 100 percent 24/7 service: the ultimate in warranty. If customers are prepared to pay the bill to achieve this, the service provider had better make sure that their risk management is pretty good!
You'll take a further look at risk management when you come to IT Service Continuity Management.
Component Failure Impact Analysis
A useful technique for helping to identify high-impact areas of failure is component failure impact analysis (CFIA). However, before you can undertake CFIA, you need to ensure you have accurate information on either the planned configuration, the live configuration, or both. Keep that in mind for when you look at configuration management in the Service Transition stage of the lifecycle. Typically a CFIA requires the creation of a matrix such as in Figure 4-10.

Figure 4-10   Component failure impact analysis
On one axis you list the configuration componentsâconfiguration items (CIs) as you call themâand on the other the services supported by them. It's a bit like the customer view of the Service Catalog where you can see which business processes will be impacted by the loss of a specific service. In CFIA you want to identify which specific services will be impacted by the loss of a particular configuration item. You can then apply your "management" element of Risk Management to do something about it.
Fault-Tree Analysis
Complementary to CFIA is fault-tree analysis (FTA), which helps you particularly to identify single points of failure (SPOFs). FTA uses Boolean logic, as in Figure 4-11.

Figure 4-11   Fault-tree analysis
Here you can see that for the payroll service to fail you would need to have to suffer a shortage of disk space that coincides with a period of unattended operations. The logic is that if a shortage of disk space were to arise during attended operations, it would be dealt with and failure would be prevented, and obviously if no disk space issue were to arise during unattended operations, then there would be no service failure either.
Drilling down further, you can then see that shortage of disk space could arise from either high volumes of data or a failure in archiving (in other words, a failure to release extra disk space). It isn't necessary for both circumstances to arise to experience a failure; either will suffice (although you could have both on a bad day!).
In contrast, the situation of unattended operations would result from only two coincidental and concurrent problems: staff shortage and staff sickness. You could cope with either but not with both at the same time.
FTA is a technique that is particularly valuable during Service Design in helping you "design in" availability for new or changed services. It doesn't provide a solution, but it highlights where the challenges lie.
Expanded Incident Lifecycle
This technique is a good example of reactive availability management because it uses incident data, which was originally captured in live operations and has then been processed for relevance before presentation to availability management.
Availability Management will then analyze this information, as shown in Figure 4-12.

Figure 4-12   Expanded incident lifecycle
As an example, you could consider a particular make and model of printer that the customer uses widely.
From all the relevant incident records you can calculate how long, on average, a printer runs before a failure occurs. This calculation is the Mean Time Between Failures (MTBF).
You can also calculate how long, on average, it takes to restore normal service after a printer failure. This calculation is known as the Mean Time to Restore Service (MTRS).
A further calculation you can make is the average length of time between one failure and the next one, notwithstanding how long the MTRS may be. This calculation is called the Mean Time Between System Incidents (MTBSI).
You can think of the MTBF as being the uptime, a measure of reliability, and the MTRS as being the downtime, a measure of maintainability. The MTBSI indicates how often you get disruption no matter how quickly you can fix it and, as such, is another measure of reliability.
There are five sequential elements that comprise downtime: the time it takes to detect a relevant incident, the time to diagnose the fault, the time to repair whatever has broken, the time to recover (in this case) the printer back to the configuration, and, finally, the time to restore normal service (including restoring any lost data and clearing any backlogs). If you can remember DDRRR, you should be able to remember these five elements.
Availability Management can then consider each element and recommend improvements such as autodetect, diagnostic scripts, prepositioning spares, configuration guidance, and restoration checklists.
The aim of this technique is to improve uptime (MTBF). Paradoxically, if you improve just the downtime (MTRS), the MTBSI could get worse. Your printers break more frequently, but you can fix them faster!
I've covered a number of different measurements that are used within Availability Management, but what are the measurements that are used frequently to express the availability actually experienced and what availability measurements are of interest to customers?
Measuring Availability
The "classic" availability measure is percentage availability. But percentage of what? You can measure the availability of components as a percentage of the planned uptime, but the fact that a host server has been up 100 percent is of little relevance to the customer if the data network has been down 5 percent during that time. In my "ten commandments," I declared that you must measure service at the point of delivery, and that is what you should do.
A good way of measuring end-to-end availability is by examining the incident records because each incident should indicate a possible loss of service and should record how long it took before normal service was restored (think back to the expanded incident lifecycle previously). You can then calculate the percentage of unplanned downtime, report it, and try to improve it.
But is a percentage figure the most useful measure you could have? Unplanned downtime that occurs during periods of quiet demand (for example, late Friday afternoon when many may have gone home) has far less impact than unplanned downtime that hits during "prime time." If you have good incident records, you should be able to capture the number of users affected and for how long. Then you can calculate the number of man-hours lost. You can even take that further and translate it into lost productivity, which would enable you to calculate the sum of money that the outage has cost the customer. That's a powerful metric. If the same outage occurs frequently and each time it causes a loss of productivity of, say, $30,000 (about Â£20,000) but you could prevent it by spending, say, $15,000 (about Â£10,000) on a permanent improvement, it should be a "no brainer," shouldn't it?
Percentage figures are always going to be important when calculating and reporting the availability of the components that form the links in the chain of end-to-end availability, but service providers and customers should give thought to what is the best measure of end-to-end service.
One final thought in carrying out these calculations: you do not have to aim to achieve an accountancy level of accuracy (although if you're following Six Sigma, you may not be able to avoid it). You need sufficient accuracy to make informed management decisions and to be able to monitor improvement. Be careful not to inadvertently turn Availability Management into an advanced MBA assignment!
IT Service Continuity Management
Some of you may remember Donald Rumsfeld, the erstwhile U.S. Secretary of Defense who, in a reply to a question in 2002 regarding the lack of evidence linking the government of Iraq with weapons of mass destruction, said, ". . . because as we know, there are known knowns; there are things we know we know. We also know there are known unknowns; that is to say we know there are some things we do not know. But there are also unknown unknownsâthe ones we don't know we don't know. . . ."
How true! You can add to that a fourth category, the "unknown known," that which you don't acknowledge that you know.
What's all this got to do with IT Service Continuity Management (ITSCM)?
First, let's go back to Capacity Management and Availability Management. There you've been planning for the expectedâfor "known knowns" as Rumsfeld put it. In contrast, ITSCM is about planning for the unexpected and certainly the unwelcomeâfor Rumsfeld's "known unknowns" in fact. Then, if your ITSCM is sufficiently flexible, you may be able to cope with some of the "unknown unknowns." However, if you suspect you've got some "unknown knowns," I think you'd better make a note to yourself to pay attention when you get to Knowledge Management in Chapter 5!
I'd also like to make it clear that I'm not talking just about disaster recovery (DR), important though that is; DR is part of ITSCM, which is a much broader subject.
The purpose of ITSCM is to support the overall business continuity management (BCM) arrangements by managing the risks that could seriously affect critical IT services and to agree on minimum service levels that would apply in contingencies.
ITSCM requires you to do the following:
â¢  Create ITSCM plans that support the BCM plans
â¢  Participate in business impact assessment
â¢  Perform risk assessment and management
â¢  Provide advice and guidance on ITSCM aspects to other areas
â¢  Implement the agreed-on service continuity mechanisms and arrangements
â¢  Assess the impact on the ITSCM plan of all changes
â¢  Work with Supplier Management to negotiate and agree on recovery contracts
Back in Availability Management, you undertook risk analysis where you examined your services and their components, looked at likely events and their potential impact, and then took appropriate action. In Availability Management, anything that was likely to happen and that would impact services should be addressed. In ITSCM you look at events that are unlikely but not inconceivable and that would have sufficient impact on services to make contingency planning advisable. This is illustrated in Figure 4-13.

Figure 4-13   Impact and likelihood
I must confess that as a past military contingency planner this is one of my favorite processes!
Figure 4-14 shows the process workflow.

Figure 4-14   IT Service Continuity Management process workflow
The first and most important point to repeat is that you don't do ITSCM in isolation. It must be done in full alignment with the business whose processes your services are supporting. As elsewhere in ITIL, it is for the customer, the business, to decide priorities and to provide financial resources. A responsible business will, of course, meet the IT service provider halfway to ensure that the most cost-effective plans are agreed on.
As you can see from Figure 4-14, ITSCM comprises three sequential stages: initiation, requirements and strategy, and implementation. The fourth stage is ongoing operation and, as such, never ceases.
Initiation
Perhaps this is where an awful truth dawns and you and the business realize how vulnerable you are to unexpected events. It's time to take action: to agree on a policy, to set the scope, to form a project, and to get some resources. All this should be done in conjunction with Business Continuity Management (BCM). If there's no BCM, it could be time for the IT director to make an appointment to see the chief executive officer (CEO)!
Requirements and Strategy
This is where you get into the detailed work. In particular, the service provider should participate in a business impact analysis (BIA) with the customer, in other words, a risk analysis.
Here you should decide which services are critical (back to those vital business functions you encountered in Availability Management). Then you can consider the various unexpected and unwelcome events that might hit you. Such contingencies often include high-order communications failure, a major fire, or serious flooding; other contingencies could be as follows:
â¢  Terrorism (an outrage itself or a reaction to a terrorist threat, such as an office evacuation, for example).
â¢  Widespread staff sickness (H5N1 bird flu strikes the United Kingdom)
â¢  Effects of a cyberattack (this is becoming more of an availability issue these days)
â¢  Lottery win (if one of your data center shifts has a lottery syndicate and they win Euromillions, don't expect to see them again any time soonâit has happened!)
You can produce your own list, of course, taking inspiration from the plots of Hollywood disaster movies. However, there's not a lot you could do about an asteroid striking the earth and killing all known life (there's a really "high-impact" event for you!).
Having identified your critical services and having agreed on the list of possible contingencies and their likelihood of coming to pass, you can then decide what to do about them. Some services you may decide to forego in an emergency because you may be able to work without them for a period or you could use some sort of limited fallback. Other services may merit greater degrees of protection, especially high-availability services where the high cost would be justified. Less critical services could be covered by some sort of disaster recovery arrangement involving perhaps an ongoing contract with a specialist disaster recovery supplier.
Implementation
Having decided what you are going to do, now you do it. You introduce the risk mitigation steps you've agreed on, you award the contracts for disaster recovery, you ensure that appropriate staff maintain up-to-date skills to cover emergency shortages, and you test the arrangements you have made. Once you are satisfied with your arrangements, you can then publish your ITSCM plan.


EXAM TIP    ITSCM, in common with Service Level Management (SLM), has a close interest in contracts, but these two processes do not negotiate contracts. All contract negotiation is done in Supplier Management.

Ongoing Operation
It would be foolish not to keep your plan up-to-date. As changes to the live configuration and live services are made, you must update the ITSCM plan, and you must continue to ensure that all stakeholders are aware of its existence and its whereabouts. There should be regular tests of the plan to check that it remains feasible, and this should be part of formal review and audit.
If you do all this, you should be confident that if you need to invoke the ITSCM plan, it will work.
The following are other relevant points regarding ITSCM:
â¢  In many respects in ITSCM you are designing a parallel universe to the live environment. It's a parallel universe that you hope you'll never actually have to inhabit. However, it is too late to consider ITSCM when the fire services are damping down the smoldering remains of your data center!
â¢  In that vein, one of the most important activities in ITSCM is to get the customer, the business, to engage in it and to provide the necessary resources.
â¢  It can be helpful to ongoing awareness and education to ensure that appropriate ITSCM entries are included in the service catalog (all views of it) and in the service level agreements (SLAs).
â¢  There is a lot more about ITSCM in the main ITIL volume, Service Design, and there is also an international standard for BCM: ISO 22301.
Information Security Management Process
You are now at the fourth of your processes that comprise warranty: Information Security Management (ISyM). This is very much a prevalent topic in the world of IT management, and ITIL does not attempt to provide an alternative view of it. However, it is a topic that needs to be woven into the IT service management arrangements that you are making.
The purpose of ISyM is to align IT security with business security and to ensure that the IT security aspects always match the agreed-on needs of the business. In this, ISyM mirrors the way ITSCM aligns with BCM.
ISyM requires you to understand the following:
â¢  The business security policy and plans.
â¢  Current and future business operations, plans, requirements, and their associated security aspects.
â¢  Legislative and compliance requirements.
â¢  IT security management risks and their management.
â¢  The need to produce and maintain an information security policy that is aligned to the business security policy. The information security policy should not be a secret document because its provisions need to be understood by all stakeholders. However, the way its provisions are implemented and monitored may well be confidential.
â¢  The security controls necessary to support the policy.
â¢  The need to ensure that third parties abide by the policy.
â¢  The need to manage all security breaches and incidents.
â¢  The need to ensure that ISyM is integral to all ITIL processes.
IsyM can be considered as having three aspects: confidentiality, integrity, and availability. These happily form the memorable initials CIA, even though this has little to do with an organization just off the Washington Beltway in Langley, Virginia.
Confidentiality   This is about making sure that only those with a justifiable need to see certain data or to use certain services can do so.
Integrity   You should ensure that data and services are complete and uncorrupted so that you can be confident in their accuracy.
Availability   You've already met this word in a number of different contexts, so a less ambiguous term would be accessibility, but ITIL specifies availability, so there you are. This is the flip side to confidentiality. It is about making sure that those who do have a need to see certain data or use certain services can actually do so. If security is too tight, it can easily become "business prevention"!
Other Points to Remember
The following are other relevant points regarding Information Security Management:
â¢  It can also be considered relevant to Availability Management (in ITIL v2, security formed a second S in those aspects of availability set out earlier, giving you the acronym ARMSS).
â¢  ISyM is planned in Service Design and should be tested thoroughly in Service Transition. The way it is designed should ensure that live IT security management events and activities can be monitored effectively in the Service Operation lifecycle stage.
â¢  Many of the policies of ISyM planned in Service Design are executed in Service Operation by the Access Management process.
â¢  Make sure that contracts require third parties to conform to the ISyM policy.
â¢  There is a lot more about ISyM in the main ITIL volume, Service Design, and there is also an international standard for IT security: the ISO 27000 series.
Supplier Management Process
You've now reached the eighth and last process in Service Design: Supplier Management.
Suppliers are, of course, Type III service providers, and you may have a large number of them. In Service Design you've already seen how Service Level Management and ITSCM have close links with Supplier Management and that ISyM is relevant too. In fact, whenever you make a decision to outsource a service, including support arrangements, you involve Supplier Management.
The purpose of Supplier Management is to obtain a seamless quality of service from suppliers that provides value for money in meeting the agreed-on needs of the business and ensuring that suppliers meet their contractual obligations.
Supplier Management requires you to do the following:
â¢  Act in accordance with the business's contracts management policy and produce a supplier policy that can be implemented and enforced.
â¢  Maintain a supplier and contract management information system (SCMIS); you'll come back to this in the Knowledge Management process in Chapter 5.
â¢  Categorize suppliers and contracts and undertake risk assessments.
â¢  Negotiate and manage contracts through the contract lifecycle including evaluating and selecting suppliers, and awarding and terminating contracts as necessary.
â¢  Maintain relationships with suppliers including reporting and managing performance and resolving contract disputes and inputs to continual service improvement. (All contracts should include an obligation on suppliers to participate in their customer's continual service improvement program.)
â¢  Ensure that subcontracted suppliers are selected and managed openly by the prime supplier in the best interest of the customer.
ITIL defines four supplier categories as follows:
â¢  Strategic   Involves senior managers and the sharing of confidential information for long-term plans (for example, a worldwide data network service)
â¢  Tactical   Involves significant commercial activity and business interaction (for example, server maintenance)
â¢  Operational   Involves the supply of operational products or services (for example, the hosting of a minor website; these services would be managed by a comparatively junior manager)
â¢  Commodity   Involves the provision of low-value and readily available products or services (for example, printer consumables)
Supplier Management at the ITIL Foundation level is in essence a straightforward process. You'll be looking specifically at outsourcing in the Service Transition lifecycle stage in Chapter 5.
Roles in Service Design
You'll remember the point I made in both Chapter 1 and Chapter 3 that, while ITIL does not tell us how to organize ourselves specifically, it does give valuable guidance in each lifecycle stage in the form of sets of roles with associated responsibilities. I also pointed out that you can use these sets as checklists to make sure you're covering everything. These points are as true in Service Design as in any other stage of the Service Lifecycle.
I've shown the specific Service Design roles in the organization chart in Figure 4-15. Again, don't forget that this chart is only for illustrative purposes; it is not a model.

Figure 4-15   Roles in Service Design
The generic responsibilities of Service Owner, Process Owner, and Process Manager are set out in Chapter 1. For the specific responsibilities of each of the roles shown in Figure 4-15, you will need to refer to the ITIL publications themselves.
Tools in Service Design
Again, the comments I made on tools at the end of the Service Strategy lifecycle stage in Chapter 3 are equally relevant here. Technology can be useful in Service Design in the following areas:
â¢  Hardware design
â¢  Software design
â¢  Environmental design
â¢  Process design
â¢  Data design
Tools help speed up the whole design work, ensuring that standards and conventions are followed, enabling modeling and simulation, running "what if" scenarios, checking and correlating interfaces and dependencies, modeling processes, validating designs, and ensuring consistency.


EXAM TIP    ITIL views tools as being extremely useful in a wide variety of applications. If you get a complex exam question asking "Which of the following would be assisted by technology?" followed by a list of options, the answer is likely to be "All of them" unless there are any obviously absurd options in the list.

Chapter Review
I hope you found that, after the high-level considerations of Service Strategy, you are now dealing with some more familiar concepts. Nevertheless, I also hope you see how those high-level concepts are developed further in Service Design, including the following: how the service portfolio is expanded in part into the service catalog, how the activities of the Business Relationship Management process (along with the service catalog) form the basis for an effective Service Level Management process, how the processes of Financial Management and Demand Management define the constraints for those Service Design processes that comprise warranty (indeed, how the concept of utility balanced with warranty is crucial to effective, detailed planning in Service Design), and, finally, how the service specification passed from Service Strategy to Service Design forms the basis for the all-important service design package (SDP) passed on by Service Design to Service Transition.
Effective design is achieved by recognizing the importance of not only the five aspects of holistic service design but also the four, equally important areas that need to be considered for successful service design, the four Ps of Service Design. If you can't remember them, take a look at the "Quick Review" section.
I also hope that you can now appreciate how Service Design looks forward to the rest of the service lifecycle, which is reflected in the contents of the SDP. There is a lot of expertise to be found in the functions involved in Service Design; that expertise will be further exploited in Service Transition and Service Operation, with everything, of course, conforming to the principles of continual service improvement. CSI of Service Design is powerfully informed by feedback from Service Transition and Service Operation.
Let's also review the processes you've encountered and how they link together.
Design Coordination ensures that all the activities of the Service Design lifecycle stage (including the relevant elements of projects and programs) are aligned and that they conform to the set policies and standards. In doing so, this process will help deconflict demands for resources.
Under the umbrella of Design Coordination, the Service Catalog Management process not only provides a valuable picture of customer-facing services and how they're underpinned by technical and supporting services but also provides the foundation for effective Service Level Management (SLM). In SLM, the formal SLAs and OLAs are negotiated, agreed on, and signed, along with the maintenance of a close liaison with Supplier Management regarding the negotiation of underpinning contacts.
Feeding SLM with expert inputs are the four processes that cover warranty: Capacity Management, Availability Management, IT Service Continuity Management, and IT Security Management. Capacity Management and Availability Management are planning for the expected; IT Service Continuity Management is planning for the unexpected (in terms of the service lifecycle I hope you'll never actually roll out the continuity services!). IT Security Management is of ever-increasing importance and is a crucial element of all processes throughout the lifecycle.
Supplier Management covers everything to do with actual contracts. Wherever in the service lifecycle you deal with third parties, you must remember that those involved in Supplier Management are crucial stakeholders.
In the next chapter, you'll be examining Service Transition. Without the good work that should now have been completed in Service Design, it is difficult for Service Transition to be effective and, in turn, for Service Operation to deliver the value envisaged in Service Strategy.
Quick Review
Here are the key concepts and terms you've encountered in this chapter. Read through this list; if anything seems unfamiliar or you can't readily describe it, read the relevant section again.
â¢  The purposes of Service Design
â¢  The five aspects of holistic Service Design:
1.  The new or changed services themselves
2.  Management systems and tools value (such as Service Portfolio)
3.  Technology architectures and management architectures
4.  Processes
5.  Measurement methods and metrics
â¢  The four Ps of Service Design: people, processes, products, and partners
â¢  The service design package (SDP)âthe "blueprint" for the rest of the service lifecycle for the service concerned
â¢  Process: Design Coordination
â¢  Process: Service Catalog Management (an essential preliminary before you can tackle Service Level Management)
â¢  Process: Service Level Management (SLAs, OLAs, and a stakeholder in UCs); SLM takes feeds from nearly all ITIL processes
â¢  Process: Capacity Management (comprising three sub-processesâBusiness Capacity Management, Service Capacity Management, and Component Capacity Managementâand the capacity plan)
â¢  Process: Availability Management (ARMS plus MTBF, MTRS, and MTBSI)
â¢  Process: IT Service Continuity Management (contingency planning)
â¢  Process: IT Security Management (confidentiality, integrity, and availability, plus the IT security policy)
â¢  Process: Supplier Management (underpinning contractsâclose relations with Service Level Management and IT Service Continuity Management)
â¢  Tools: the design of hardware, software, environment, processes, and data
Projects and programs should conform to the Service Design policies and the business requirements.
You should never forget the concepts of utility and warranty.
Answer to Exercise 4-1
The following is my suggested content of a typical SLA (Type I, Type II, or Type III). You can use this list as the basis for deciding what would be appropriate for an OLA.
â¢  Parties to the agreement   These are essentially the service provider and the customer. Specific posts should be shown (avoid using the actual names of individuals because people come and go!).
â¢  Signatories, signatures, and dates   This is the place for named individuals; the more elevated in the hierarchy the better.
â¢  Description   This is based on the description in the Service Catalog.
â¢  Validity   Start and end dates of the agreement itself; review dates are covered later.
â¢  Scope (inclusions and exclusions)    Examples are geographical or organization limitations.
â¢  Responsibilities   This is crucial and should include responsibilities of both parties. The service provider would be responsible for delivering the service as defined in the SLA. Customers and users should be equally required to abide by the SLA, particularly with reference to an obligation for the customer to provide adequate resources to that end and to ensure that all users are properly trained and supervised.
â¢  Service hours   It is vital that there is no room for ambiguity, especially when the hours are other than 24/7. Do seasonal extended hours need to be agreed on permanently to meet expected patterns of business activity (such as pre-Christmas retail activity)? Are support hours different from service hours? How are requests from either the service provider or the customer to extend hours temporarily to be dealt with?
â¢  Service availability   Classically   this is expressed as a percentage of service hours, but there are alternative measurements that are explored in the Availability Management process.
â¢  Reliability   This is the minimum acceptable length of time (in service hours)   the service should run without interruption. Reliability is explored further in the Availability Management process.
â¢  Customer/user support   This is based on the Service Catalog entry. Where support hours differ from service hours and when levels of support may vary depending on the calendar, this should be specified here. An important aspect will be the prioritization rules that apply to this service.
â¢  Contact points and escalation   The importance of the Service Desk as the single point of contact for the users should be reiterated here, and the opportunity can be taken to give a cross-reference to the SLA for the Service Desk service. This area must align with the Service Catalog entry.
â¢  Service performance   Workload limits and maximum transaction response times can be set out here as well as targets such as the minimum acceptable incident resolution performance (such as 95 percent of all incidents must be resolved within the target time agreed on in the prioritization rules for this service).
â¢  Change management   The first and most important statement here will be that this SLA is a formal document subject to the provisions of the service provider's change management policy. Here should be listed the stakeholders who comprise the change authority for this service (you'll explore this further in Chapter 5). This should also include arrangements for interim, temporary changes (such as changes to service hours to extend them to meet business backlogs or to truncate them for major releases to be completed by the service provider).
â¢  Service continuity   In certain contingencies, different arrangements may have to be put in place for this service. The details can be given either here or by a cross-reference to a separate continuity SLA.
â¢  Security   Security awareness is a vital aspect. Reference should be made here to the information security policy and to any specific security matters regarding the service in question. This section sets out the rules for granting and removing user access rights to the service and any service components (such as applications).
â¢  Service reporting and review   This includes full details of the reports to be produced: who produces them, who receives them, the report content, the format, and the frequency. It also includes when and where review meetings will take place and who should attend.
â¢  Batch turnaround times   This section is applicable when the service produces bulk outputs such as electricity bills for external customers.
â¢  Charging   As discussed in Financial Management, ITIL sees charging as optional, but if this is a Type III SLA, charges will invariably be made by the service provider. Where charges are made, this is where the agreed-on tariffs and the charging procedures should be detailed. Penalty charges can also be covered here (although care should be taken about them because issuing penalties can be unhelpful to promoting constructive provider-customer relations).
â¢  Glossary   This section gives you a useful opportunity to define the agreed-on meaning of specific terms and concepts. Cross-reference can also be made to a formal glossary document published elsewhere.
â¢  Amendment record   SLAs are "living documents" that should be under continual review. Any changes to the SLA should be controlled by a formal change request (often called a request for change [RFC]). You should record here the RFC number and relevant details for every such change.
Questions
Here's another set of questions, 20 this time, for you to tackle. Now that I've covered two stages of the service lifecycle, I trust that you can see that the questions are becoming broader. That broadening will continue as you journey on. As they say, enjoy!
1.  Which one of the following is an objective of Design Coordination?
A.  To provide a single source of consistent information on all operational services
B.  To record service level requirements
C.  To review, measure, and improve the performance of all Service Design activities and processes
D.  To align service level agreements and underpinning contracts
2.  Which of the following statements about the Supplier Management process is correct?
A.  Supplier Management negotiates service level agreements (SLAs).
B.  Supplier Management maintains information in a supplier and contract management information system.
C.  Supplier Management decides whether a service should be outsourced.
D.  Supplier Management negotiates operational level agreements (OLAs).
3.  Which one of the following is not a purpose of Availability Management?
A.  To ensure that service availability matches the targets in the service level agreement (SLA)
B.  To assess the impact of changes on the availability plan
C.  To consider how quickly a service can be returned to its agreed-on functionality
D.  To ensure business continuity plans are negotiated
4.  Which of the following is the best description of a service level agreement?
A.  A written agreement between the service provider and the customer defining key targets and the responsibilities of both parties
B.  An agreement between a supplier and the customer about response and fix times
C.  An agreement between two service providers regarding service targets
D.  An agreement between two functions in a service provider regarding service targets
5.  Which one of the following is not a subprocess in Capacity Management?
A.  Component Capacity Management
B.  Service Capacity Management
C.  Business Capacity Management
D.  Continuity Capacity Management
6.  Which process is responsible for reviewing operational level agreements?
A.  Service Level Management
B.  Supplier Management
C.  Availability Management
D.  IT Service Continuity Management
7.  Which of the following should be elements of a service design package (SDP)?
i.  Service level requirements (SLRs)
ii.  A plan for the transition of the service
iii.  Criteria for deeming tests to be successful
iv.  An assessment of the readiness of the organization to use the service
A.  i and iii only
B.  i and ii only
C.  ii and iii only
D.  All of the above
8.  Who should be able to read the information security policy?
A.  Information security management staff only
B.  All customers, users, and IT staff
C.  Senior managers only
D.  IT executives and the Information Security Management process owner only
9.  Which one of the following is the best definition of reliability?
A.  The level of risk that would impact a service
B.  The availability of a service component
C.  How long a service component can perform its function without failing
D.  The level of service provided by a third party
10.  Which one of the following is the best description of the four Ps of Service Design?
A.  The areas to be considered to achieve holistic service design
B.  The aspects covered by Supplier Management as "partners"
C.  The four steps in Service Level Management
D.  The four major areas to be considered during service design
11.  Which one of the following processes would be most likely to provide expertise in resolving issues regarding the performance of services and components?
A.  Capacity Management
B.  Supplier Management
C.  Service Catalog Management
D.  Availability Management
12.  Which of the following aspects of Service Design should also be considered when designing a new or changed service?
i.  Measurement methods and metrics
ii.  Technology and management architectures
iii.  Processes
iv.  Management systems and tools
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  All of the above
13.  Which two processes would be principally involved in negotiating and agreeing on disaster recovery contracts?
A.  Service Level Management and Availability Management
B.  Service Level Management and Supplier Management
C.  Supplier Management and IT Service Continuity Management
D.  Service Level Management and IT Service Continuity Management
14.  Which of the following are valid types of SLA structures?
i.  Service-based SLA structure
ii.  Priority-based SLA structure
iii.  Customer-based SLA structure
iv.  Multilayer SLA structure
A.  iv only
B.  i, ii, and iii only
C.  i, iii, and iv only
D.  All of the above
15.  Which of the following activities is part of the Service Level Management process?
i.  Designing the business element of the configuration management system
ii.  Monitoring service performance against SLA targets
iii.  Negotiating contracts with third-party service providers
iv.  Conducting review meetings at agreed-on intervals
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  ii and iv only
16.  Which one of the following processes is concerned with managing risks to services?
A.  Service Portfolio Management
B.  Availability Management
C.  Service Catalog Management
D.  Design Coordination
17.  Which one of the following is the correct list of the four Ps of Service Design?
A.  Planning, perspective, position, and preparation
B.  People, partners, products, and problems
C.  People, processes, products, and partners
D.  People, problems, processes, and partners
18.  Which one of the following is not a recognized layer in a multilayer SLA?
A.  Corporate layer
B.  Service layer
C.  Customer layer
D.  Configuration layer
19.  Which one of the following is not a responsibility of Service Catalog Management?
A.  Ensuring that the SLAs are kept up to date
B.  Ensuring that all live services are recorded in the Service Catalog
C.  Ensuring that it includes all services that are being transitioned or have been transitioned into the live environment
D.  Ensuring that the contents of the Service Catalog are accurate and up to date
20.  Which of the following areas would be assisted by the use of appropriate technology?
i.  Hardware design
ii.  Software design
iii.  Environmental design
iv.  Process design
A.  All of the above
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  ii and iv only
Answers
1.  C. The other three answers are all good things to do in Service Design, but they aren't objectives of Design Coordination.
2.  B. SLAs and OLAs are negotiated in Service Level Management, while decisions whether to outsource would be high-level decisions. Supplier Management would participate in the implementation of the decision.
3.  D. Business continuity plans are important, but negotiating them is not a purpose of Availability Management.
4.  A. Option B bypasses the service provider, option C is either nonsensical or possibly illegal, and option D is a description of an operational level agreement (OLA).
5.  D. There is no such thing as Continuity Capacity Management in ITIL.
6.  A. This should not have been a difficult question.
7.  D. The SDP contains a lot of good things. I gave a longer list earlier in this chapter.
8.  B. The information security policy usually should not be a confidential document. Of course, the methods and techniques used in applying it are a different matter.
9.  C. Did you remember the acronym ARMS? Option A is not relevant, option B is the A part of ARMS, and option D alludes to serviceability (if it alludes to availability at all).
10.  D. You need to know not only what the four Ps are but also their purpose.
11.  A. When you see the word performance, it is a good indication that Capacity Management is relevant.
12.  D. I hope you recognized that this question is about the five aspects of holistic service design.
13.  C. The negotiation of contracts is the responsibility of Supplier Management, and in this case, IT Service Continuity Management is the other process because disaster recovery is involved.
14.  C. There is no priority-based SLA structure in ITIL.
15.  D. Option "i" is pretty meaningless; option "iii" is part of Supplier Management.
16.  B. This should not have been a difficult question.
17.  C. If you got this one wrong, refer to the opening part of this chapter.
18.  D. I hope you picked out the "joker" without too much angst.
19.  A. Ensuring that SLAs are kept up to date is a responsibility of Service Level Management.
20.  A. A theme you'll come to recognize in ITIL is that tools are viewed as extremely useful; the answer "All of the above" is likely to be the correct answer unless something absurd has been included in the question.








CHAPTER 5
Service Transition
In this chapter, you will
â¢  Learn how your new or changed services together with all their service components move through assessment, initial authorization, build, test, packaging, release, and deployment, and into early life support in the live environment
â¢  Understand how that movement is managed by each of the eight processes of the Service Transition lifecycle stage
â¢  See how the Transition Planning and Support process oversees all that takes place in this lifecycle stage; how Service Asset and Configuration Management (SACM) puts into practice the concepts of Knowledge Management; and how control is exercised by Change Management, supported by Release and Deployment Management, Service Validation and Testing, and Change Evaluation
â¢  Explore the roles and responsibilities specific to this stage
â¢  Learn how technology can help you

Armed with the agreed-on service design package (SDP) for your new, changed, or soon-to-be-retired service, you can now get transition moving. You're going to acquire things, award contracts, build things, change things, test things, and finally either roll things out into a fully supported live environment or close down, under control, a service and recover and redeploy any redundant assets. Alongside all that, you're going to develop mature systems for the management of knowledge and configuration data, in other words, systems that are valuable not only in Service Transition but also throughout the service lifecycle. Furthermore, you are also going to develop policies for activities that will be executed in the Service Operation lifecycle stage (particularly from Configuration Management, Change Management, and Release and Deployment Management).
Also, you're not going to forget your good friends, utility and warranty. In Service Transition you're able to check that you're actually creating a tangible promise regarding the agreed-on functionality (utility, of course) and that the promise will be deliverable in the live environment (warranty). You're coming off the drawing board and moving into the workshop. However, you can still modify your new or changed services to a certain extent (flexibility is always important), but if you do, it must be under change control, which implies it is done in agreement with the customer. Furthermore, any such changes need to be carefully assessed because if that change would have a significant impact on the SDP, it may have to be referred back to Service Design (or even to Service Strategy).
The Purpose of Service Transition
The purposes of Service Transition (objectives, if you prefer) can be considered under the following categories:
â¢  Plan and manage service changes efficiently and effectively. This is achieved through the eight processes of Service Transition.
â¢  Manage risks. Whenever change is happening, there is risk; there is "uncertainty of outcome." I suspect that you have experienced the disruption caused by poorly managed change, usually caused by a failure to identify and manage risk.
â¢  Successfully deploy releases into supported environments. Absolutely! Too often new things are released into live environments not only without any preparation (extra resources, training, documentation, and so on) but also without the live environment even being aware that something new was arriving. If the live environment has not been adequately prepared for something new, it is unlikely that the release will be successful, so why do some people try to do it that way?
â¢  Manage expectations. You hope that your work in the Service Strategy and Service Design lifecycle stages has already prepared the ground. The Service Portfolio and the Service Catalog, along with the activities of Business Relationship Management and Service Catalog Management, should have ensured that. Now you can involve customers and users more directly (in user acceptance testing and in pilot schemes, for example). You want to build excitement to ensure that users will want to exploit the new or changed services as soon as they can get their hands on them.
â¢  Create business value. If what you deliver to the live environment at the conclusion of Service Transition does not create the agreed-on and documented business value, then the service provider has failed. There are no two ways about that, I'm afraid.
â¢  Gain knowledge. If you create an effective knowledge management system, then the whole of the service lifecycle, not just Service Transition, is going to benefit hugely.
Outsourcing
During Service Strategy and Service Design you will have been developing a model for the way these new or changed services will be delivered. It is in Service Transition that you either set up the necessary contracts for those services (or elements of services) that are to be outsourced or change those arrangements. It is worth remembering that when you outsource a service or part of a service, you then become the customer (take another look at Figure 4-8). You then are wanting your outcomes facilitated by services for which you don't want to own the specific, detailed costs and risks.
You can consider the following sourcing options regarding changes to service provision:
â¢  Transferring services from internal provision to an external supplier (traditional outsourcing).
â¢  Transferring services from one existing external supplier to another one (seeking service improvement or supplier consolidation perhaps).
â¢  Bringing a service back in-house ("re-insourcing").
â¢  Moving to a partnership arrangement (could be just co-sourcing, which means outsourcing specific elements of a service while retaining the remainder of the elements in-house, or developing a major partnership with some sort of integrator).
â¢  Using multiple suppliers (co-sourcing or multisourcing). This increases the service level management and supplier management challenge.
â¢  Agreeing on a joint venture with another service provider.
â¢  Merging with or acquiring other service providers.
â¢  Exploring the whole gamut of offshoring, far-shoring, near-shoring, downsizing, up-sizing, and "right-sizing" (and maybe even capsizing!).
Service Transition Processes
The eight processes described next were briefly outlined in Chapter 2, but I'll remind you how they fit together.


EXAM TIP    It's worth repeating the tip I gave in Chapter 4. If you can remember the eight processes that belong to Service Transition, it will help you place the other 18 in their rightful places. It's a bit easier here because two of the processes are not in the syllabus for the ITIL Foundation exam; those are the Service Validation and Testing process and the Change Evaluation process.

Transition Planning and Support, as its name implies, is largely focused on the Service Transition stage of the service lifecycle (similar to Strategy Management and Design Coordination in the two earlier lifecycle stages). Applicable throughout all five stages of the lifecycle, the Knowledge Management process and the Service Asset and Configuration Management (SACM) process provide the detailed knowledge and information that is essential to effective service management. These two processes are located in the Service Transition lifecycle stage because this is where the majority of configuration build and modification takes place. However, it is not a good idea to undertake configuration management on any aspect that is not yet under change control; otherwise, your configuration information is likely to be out of date and inaccurate. Therefore, Change Management is a crucial process not only for that reason but also to manage the actual build, test, and delivery to the live environment of new or changed services and all their components. That delivery to the live environment is managed in detail by the Release and Deployment Management process. Change Management, and to some extent Release and Deployment Management, is given valuable support by the Service Validation and Testing process and the Change Evaluation process.
Now let's get to the processes individually.
Transition Planning and Support
This process works for Service Transition in a way similar to how Strategy Management and Design Coordination work for their respective lifecycle stages. The purpose of Transition Planning and Support is, as its title implies, to provide overall planning for the Service Transition lifecycle stage and to coordinate the resources required. That planning and coordination applies equally to relevant programs and projects as to any other activities.
To meet that purpose, Transition Planning and Support should do the following:
â¢  Plan and coordinate Service Transition resources, including those required by relevant projects, thus ensuring that multiple transitions can proceed concurrently.
â¢  Guide major changes through Service Transition.
â¢  Establish in Service Operation new or changed services within the agreed-on cost, quality, and timescale.
â¢  Establish new or improved management systems and tools, technology and management architectures, processes, measurement methods, and metrics. Where have you come across this list and the preceding bullet point before? Yes! These are the five aspects of holistic service design (from Chapter 4) that you are now putting into effect in Service Transition.
â¢  Provide clear and comprehensive transition plans to ensure alignment between business change and service transition.
â¢  Identify, manage, and control risks across the seven Service Transition processes.
â¢  Monitor and improve the performance of the Service Transition lifecycle stage.
However, the Transition Planning and Support process does not carry out the detailed planning for changes and releases themselves (although the process should make sure that such planning is carried out in accordance with the service provider's policies).
Knowledge Management
Knowledge is power, isn't it? If you don't have adequate, relevant knowledge, it is practically impossible to manage effectively. Also, beware the "knowledge is power" artists. In other words, beware those who possess valuable knowledge but are unwilling to share it; these are the ones who say implicitly, "I have the knowledge and you don't, so I have the power!" ITIL highlights the need both for high-quality knowledge and for it to be shared.
The purpose of Knowledge Management is defined in ITIL as sharing perspectives, ideas, experience, and information; ensuring that these are available in the right place at the right time to enable informed decisions; and improving efficiency by reducing the need to rediscover knowledge.
To meet that purpose, the Knowledge Management process has to do the following:
â¢  Improve the quality of management decisions by ensuring that reliable and secure data, information, and knowledge are available and thereby enable the service provider to drive up quality and drive down cost.
â¢  Ensure that service management data, information, and knowledge are gathered, analyzed, stored, shared, used, and maintained.
â¢  Create and maintain a system for the secure storage of appropriate data, information, and knowledge. This system is known as the service knowledge management system (SKMS).
From this list it should be clear that Knowledge Management is a process that is a powerful asset throughout the service lifecycle, not just in Service Transition.
Moreover, as you read on you'll soon be able to appreciate how powerful an asset Knowledge Management can be if it has the benefit of the comprehensive and accurate configuration data that is to be found in a mature configuration management system (CMS). On the other hand, your knowledge pool may be "unstructured" (shall I say) and found in a variety of informal spreadsheets, old tea-stained hard-copy lists, and a collection of individual wikis. If that's what you've got, I guess it's still better than nothingâat least you'll be aware of the associated quality concerns. The only way from there should be upward!
There are now a couple of important concepts you need to consider: the data-information-knowledge-wisdom (DIKW) model and the service knowledge management system.
â¢  Question   Where have you come across the concept of information versus knowledge before?
â¢  Answer   In Chapter 3, where assets were being viewed as either resources (including information) or capabilities (including knowledge).
The Data-Information-Knowledge-Wisdom Model
Figure 5-1 shows the DIKW model diagrammatically. This model shows how data is the basis for knowledge. It is vital that you select the right data, organize it into meaningful information, and then process and analyze that information to produce valuable knowledge. You can then exercise your innate wisdom to make informed decisions. Of course, it won't guarantee you make the right decision, only that you'll have had the benefit of available knowledge! Information (and the data from which it is derived) is a resource and comparatively easy to acquire. In fact, you may find you have more data than you can manage. There's that concept of Big Data, isn't there? However, you have to know how complete and accurate the data is that you're going to use because it will affect the accuracy of information and hence the accuracy of knowledge and, ultimately, the quality of the decisions you'll make. You may already have the benefit of a mature CMS.

Figure 5-1   The DIKW model
Knowledge is a capability. You can't just go out and acquire it. It is information that has been analyzed, tailored, and presented for management. You need to be confident that what is presented is accurate and complete. Of course, you might not be able to have 100 percent accurate and complete knowledge, but at least if you know its level of accuracy and completeness, you can assess its worth and make your decisions accordingly. If, on the other hand, you think your knowledge is 100 percent accurate but it isn't, you're almost bound to make the wrong decision.
The journey from data to information to knowledge can be helped by technology. Wisdom, however, is the preserve of humans, for the moment (but perhaps we need to keep an eye on developments in artificial intelligence?).
The Service Knowledge Management System
Management requires access to a wide range of information. Some of that information will come from internal sources such as configuration management databases (CMDBs) and service management tools; other information will come from sources external to the IT department (patterns of business activity, for example), and yet further information will come from the big outside world (such as weather and climate data).
The service knowledge management system is the concept that encompasses all this. It contains everything you know about everything you need to know about. It is a collection of identifiable repositories and systems whose content and quality are known. Figure 5-2 shows the SKMS diagrammatically.

Figure 5-2   Service knowledge management system
At the core of the SKMS are the configuration management databases that together form the CMS. The CMS approximates to a logical model of the infrastructure, and you'll look at it in more detail in the "Service Asset and Configuration Management" section next.
To create your SKMS, you add alongside the CMS other information including project information, staff skills, supplier capabilities, and so on.


EXAM TIP    Consider the SKMS as being like a Russian nesting doll. The CMDBs are the smallest dolls; they then fit inside the CMS, which, in turn, fits inside the SKMS. Examiners love asking questions that ascertain whether you clearly understand the hierarchical relationship between CMDBs, the CMS, and the SKMS.

I've always had a question mark in my mind about whether Knowledge Management can really be considered a process. It is certainly a crucial concept or discipline. However, ITIL views it as a process, so it has to be accepted as such.
Service Asset and Configuration Management
In ITIL versions 1 and 2 Service Asset and Configuration Management (SACM) was known simply as Configuration Management (sometimes described as being asset management gone mad!), but ITIL version 3 expanded its name to what we have now: Service Asset and Configuration Management. I guess the reason behind that change was to emphasize that configuration management is more than just about what you've got and where it is; it's about all these configuration items that comprise the assets that enable service management to be the strategic asset that it is. That name change also gives you a powerful acronym: if your staff won't do configuration management, SACM!
The purpose of SACM is to ensure that the assets necessary to deliver services are controlled and that accurate and reliable information about those assets is readily available. In doing that, SACM is a vital part of knowledge management.
The following are other factors that need to be considered regarding SACM:
â¢  Do not begin SACM until you have adequate change control in place for the areas where you are going to introduce it.
â¢  It is the relationships established and documented between configuration items that differentiate a CMS from a simple asset list.
â¢  You need to identify, control, record, report, audit, and verify services and other configuration items (CIs) including their various attributes and relationships with each other.
â¢  You need to maintain accurate information on CIs in a CMS, not just up-to-date information but relevant historic details too.
â¢  SACM helps ensure that only authorized components are used in the infrastructure.
â¢  SACM helps ensure that only changes that are authorized are introduced.
â¢  SACM supports all other processes in all other stages of the service lifecycle. SACM itself can be viewed as a mundane process; its true and immense value is what it enables other processes to do. It is the Great Enabler!
Key Concepts and Definitions in SACM
The following are crucial concepts and definitions in SACM:
â¢  Configuration items   CIs are any components or other service assets that need to be identified and managed. In essence, CIs are the individual records in your CMDBs. For example, if you have 100 PCs in an office, there would be 100 separate CI records, one for each PC. However, it does get more complicated, as you will now see.
â¢  Categories   You can usually assume that hardware items would be CIs, and that's perfectly correct. However, CIs can be any components or service assets. Take a moment to think what other things could be CIs. How about software (proprietary applications, system software, in-house software, and so on)? How about people (customers, users, technical staff, service desk staff, and so on)? Don't forget documentation, server rooms, and business locations. The list is long, and you should not be afraid to include everything that is relevant to the management of services.
â¢  Levels   How much detail do you need to keep on your CIs? If you don't hold sufficient detail, the information may not be useful; if you hold unnecessary detail, you give yourself a possibly wasteful administrative task. Do you need to know about every chip on every motherboard of every PC? That's unlikely. It depends on the level of detail at which you want to manage. If desktop maintenance is outsourced, you may need to know only about how many PCs you have and their memory and hard drive sizes, but the outsourced service provider would need to know the finer-grained detail such as the manufacturer and model of the hard drives.
â¢  Naming   You have to decide what you are going to call your various components. To reduce the risk of confusion, you need to have clarity and consistency. You've already got your categories, which is helpful. But do you call PCs PCs? Do you differentiate them from Macs? Do you just call them all workstations? What about laptops, tablets, PDAs, iPads, iPods, and so on? It's always best to use general descriptions whenever possible and avoid proprietary names at a high level. Here is an example of descending hierarchy: hardware > user item > portable > laptop > make > model, and so on.
â¢  Labels   Every CI must have a unique identity (otherwise you'll get duplicate records, which would be very confusing), and you need to label the actual CIs so that you know which one is which. You have to decide first what format of unique identity you're going to have and then what sort of label you're going to use. Hardware may not be too difficult. You can take up an asset number from a list, produce a label and stick it on a PC, and record the details in the CMDB. But what about software? You could label the media (just don't put the label on the shiny side of the CD!), but you often have only electronic copies. How about people? You could use employee numbers, but what about those who need access who aren't employees such as contractors, visitors, and so on? How do you label all these different people? SACM doesn't give you an all-inclusive answerâdeciding the best answers for your particular circumstances is your job as a manager.
â¢  Attributes   Attributes are the things you know about particular CIs. Three universal attributes are, of course, the description (name) of the CI, its unique identity, and its location. The other attributes depend on the type of CI. For a PC, the make, model, memory, and hard drive size would be typical attributes. For people you'll need their full name, their position, where they fit in the organizational structure, their skills and training, and so on. You can consider attributes as being the fields in the individual CI records in your CMDB. However, because a CMDB is by definition a relational database, some attributes can be recorded in a relational way. For example, if you have a standard PC, you would probably have a specification for it. Thus, there would be no need to repeat a lot of standard detail within the CI record for each PC; that detail would be obtained by a link to the CI for the relevant specification.
â¢  Configurations   You can usefully group together all the CIs for a specific area and create a higher-level CI to which they can all be linked by a relationship. In doing this, you create a specific configuration CI, which enables you to manage those defined areas better.
â¢  Baselines   A baseline is essentially a snapshot of a particular area of the CMS at a point in time. Baselines can enhance the usefulness of the configurations you have defined by enabling comparisons to be made. For example, you could baseline all the printers covered by a maintenance contract at the start of the contract and then plot all the changes that have taken place subsequently. Another example would be the baseline you could take before a change was made; if the change had to be backed out, you could then take another baseline and compare it with the original state to check that everything has been put back correctly.
â¢  Configuration management system   As you now know (I hope!), the CMS is part of the SKMS that you encountered in Knowledge Management. It is the essential set of tools, data, and information without which SACM would be almost impossible and all other ITIL processes would be seriously impaired. It contains the definitive information on all the CIs you have identified as requiring management. In the CMS, that can also include information on incidents, problems, changes, releases, known errors, and the like. But remember, the CMS is the record; the CIs will be found in actual use or stored in appropriate repositories.


EXAM TIP    An individual service provider can have only one SKMS and one CMS but can have multiple CMDBs.

â¢  Definitive media library (DML)   The DML is one of those specialized repositories. It is a secure store where you find the definitive, authorized versions of all software CIs, including license and software documentation. Nothing should be placed or replaced in the DML until it has completed successfully a quality check to ensure it is what it says it is, it is complete, and it is uncorrupted. Although the DML is a single logical store, it can comprise a number of physical locations including electronic stores. Its contents are recorded in the CMDBs. You'll come across the DML again in Release and Deployment Management.
The Five Principal Activities of SACM
The five principal activities of the Service Asset and Configuration Management process are as follows:
â¢  Planning and management   This includes planning how to introduce and then develop SACM, considering such topics as resources required, the size and the variety of potential CI types, CI levels, and management tools. It may be a good idea to kick off SACM by having a formal project. I've provided a few tips on introducing SACM in the section "Getting Started with SACM."
â¢  Identification   This includes designating the CI types, agreeing on naming conventions, deciding unique identities and labeling, and defining appropriate CI attributes.
â¢  Control   SACM would be pointless without a means of exercising control; no sooner would you have captured the information than it would risk becoming out of date as things changed. However, you don't have to recruit an army of clerks cum police officers to do this; you can tap into those processes whose activities actually result in changes and ensure that the CMS is updated as part of those activities. Those processes include Change Management, Release and Deployment Management, and Incident Management.
â¢  Status accounting   Every CI has its own lifecycle. Software is developed, approved, released, and withdrawn. PCs are specified, ordered, received, configured, installed, repaired, enhanced, retired, and disposed of. Standard status codes need to be agreed on, and each CI's status needs to be updated as changes, releases, and incidents take place. Status accounting enables you to see the historic record of each CI.
â¢  Verification and audit   You may have an excellent asset discovery tool, first-class software management, and high-quality control processes, but you must still carry out verification and audit to determine how effective those controls are (especially to identify any weaknesses). Do all the CIs in the CMDBs physically exist in their recorded status, and are all the physical CIs recorded accurately in the CMDBs? You don't necessarily have to do an ongoing 100 percent stock take; you can carry out percentage sampling from the results of which you can decide whether more detailed investigations are justified.
Example Extract of a Configuration Model

Figure 5-3 is an example taken from a CMDB; it is a small extract that nevertheless shows the relationships between CIs and hints at how powerful a tool a CMDB can be. I talk you through this model in the video Extract from a CMDB: Configuration Model (Example) (see Appendix D).

Figure 5-3   Extract from a CMDB: configuration model (example)
A Troika of Processes
There is a particularly close relationship between the three processes of Service Asset and Configuration Management, Change Management, and Release and Deployment Management. You shouldn't try to do configuration management without appropriate control mechanisms in place; the activities in Change Management and in Release and Deployment Management provide those control mechanisms. Equally, for the Change Management process and the Release and Deployment Management process to be efficient and effective, they need the accurate and up-to-date configuration information that SACM provides. If you like exotic mental pictures, think of these three processes as a troikaâa troika of horses galloping together across the snowy prairies of central Russia with Dr. Zhivago in charge!
Getting Started with SACM
Numerous worthy books have been published about configuration management, CMDBs, and so forth, but I think it is useful to have a clear, pragmatic approach to introducing configuration management before getting caught up in lots of fascinating detail.
It's usually pretty obvious that you need to know what assets you have, where those assets are, and what condition they're in. Your Finance department may well have an asset register that it uses for financial management purposes such as calculating depreciation and so on. However, configuration management requires something more advanced than that.
But before rushing out and buying a configuration management tool, it is worthwhile spending some time thinking about what you need to do. In other words, you should carry out the first activity in SACM: planning and management.
It's impossible to introduce comprehensive SACM overnight; you must plan a manageable program to roll it out in a sensible timescale. I suggest your priorities should be guided by the relative amount of pain you're experiencing in the various areas for which you are responsible. You should examine those areas and identify where configuration management would be most beneficial; in doing that, you'll probably begin to identify the assets you want to make CIs. However, before going any further, you must establish what control mechanisms are in place. If there's already adequate control over a specific area, then you can start. If control is weak, you must tighten it up first.
You can now start the next activity: identification. You must designate the CI types, agree on naming conventions, decide on unique identities and labels, and define appropriate CI attributes. You need to get the naming conventions right because you risk being stuck with them once you get going. The other aspects can be developed as you go along, but it is obviously better to build in flexibility where you can. Now it's time to start collecting information and populating your first CMDB.
But what form should your CMDB take? It may be tempting to launch straight into using an existing tool. I suggest that to begin with you should avoid getting over-sophisticated. I've found it better to start with a Microsoft Excel spreadsheet or a Microsoft Access database and a limited set of CIs until the SACM process and its associated control processes have settled down and have proved their worth. Then it'll be time to migrate to a professional tool and to roll SACM out across the infrastructure.
If you do it this way, you're much more likely to be successful, to make early converts to the benefits of SACM, and to avoid falling embarrassingly flat on your face!
Change Management
"Now this is more like it," I hear you say. Yes, you're now getting to what many people think ITIL is really aboutâmanaging change, alongside managing incidents and providing a service desk.
Of course, by now you realize that there is more to ITIL than that, but such a realistic view does not detract from the importance of Change Management. However, what do I mean by Change Management? Some organizations would contend that they indeed "do" change management when what they really "do" is change administration. It's not a bad idea, but that's not Change Management. Equally, others realize the importance of protecting the live environment, but what they call change management is really more like release and deployment management.
You're going to get a full appreciation not only of what Change Management means but also how it links closely with the Service Asset and Configuration Management process and the Release and Deployment Management process (do you remember the exotic mental picture of that troika I gave you in SACM?).
Purpose of Change Management
Change can be defined as the addition, modification, or removal of anything that could have an effect on IT services, and the purpose of the Change Management process is to control the lifecycle of all changes, enabling beneficial changes to be made with minimum disruption of IT services.
As I've done for other processes, I'd like to highlight a few words in the previous description:
â¢  ". . . control . . ."   Control means governance, not just administration of change. You're going to have a clear change policy with equally clear roles and responsibilities (do you remember RACI from Chapter 1?) and appropriate empowerment. You'll be looking particularly at the role of the change manager.
â¢  ". . . lifecycle . . ."   Changes have their own lifecycle; some have short lives, while others have long lives.
â¢  ". . . all changes . . ."   It's that word all again. All changesâlarge, medium, and smallâare subject to Change Management. However, that doesn't mean you impose some highly bureaucratic process on every change regardless of its nature; you need to tailor your process to achieve maximum control with minimum administrative pain.
â¢  ". . . beneficial changes . . ."   If a change doesn't bring any benefit, why would you be doing it? Mind you, the benefit may not always be some positive return on investment (ROI) but rather the introduction of compliance to some legal, regulatory requirement where the benefit could be in keeping the business running and the chief executive officer (CEO) out of jail!
â¢  ". . . minimum disruption . . ."   Introducing a change almost invariably causes some sort of disruption. You may have agreed-on periods of scheduled downtime permanently set in the operational diary to provide windows for rolling out changes, but that scheduled downtime is itself still a disruption to the facilitation of customer outcomes; it permanently reduces availability. Even more disruptive is the additional planned downtime that could be needed for, say, a major rollout. Worse still is the chaos that ensues whenever changes fail. You may not be able to eliminate disruption, but you should remove unnecessary disruption and minimize that which is unavoidable.
To meet the purpose of the process, Change Management needs to do the following:
â¢  Respond to the triggers that initiate change; broadly these triggers come from new business requirements, operational failures, and improvement initiatives.
â¢  Ensure that changes are recorded, evaluated, authorized (or rejected), prioritized, planned, tested, implemented, documented, and reviewed. Figure 5-4 shows the process flow.

Figure 5-4   The change process (generic)
The Scope of Change Management
It is crucial to appreciate how wide the scope of Change Management is. At one extreme I'm talking about the massive changes associated with major programs and projects; these are the sort of changes that arise from significant service improvements and realignments and that affect the Service Portfolio. At the other extreme, you have all those minute-by-minute day-by-day changes that take place in the operational environment and all sizes of change in between these extremes.
Change Management is also relevant throughout the service lifecycle, not just in Service Transition. For example, changes to the Service Portfolio, the Service Catalog, service level agreements (SLAs), processes, and so on, should all be subject to Change Management. Change Management also sets the policy for other processes such as Release and Deployment Management and, in Service Operation, Request Fulfillment.
Within that wide scope it is convenient to classify each change as belonging to one of three types.
Types of Change These are the three basic types of change as currently defined by ITIL:
â¢  Emergency changes These are specifically to address an unforeseen operational emergency, including security threats and vulnerabilities, where the situation is such that unless the change is made rapidly, the business that is being supported will stop (if it hasn't already done so) or be seriously compromised. Please note that emergency changes must still follow documented procedures and should not be confused with high-priority normal changes or standard changes.
â¢  Normal changes These are changes that have some unique quality about them that brings some uncertainty and thus a higher risk; it's a risk that therefore merits close control. The change process is designed around this type of change, and, as such, normal changes should be considered the default type of change. Emergency changes and standard changes follow appropriate, agreed-on, and documented variations on the flow of normal changes.
â¢  Standard changes These are the familiar day-by-day changes that are well-understood and low risk; therefore, the full rigor of the normal change process is unnecessary. You should aim to let these standard changes flow as freely as possible, minimizing bureaucracy and rapidly satisfying the needs of your customers.
All three types of change follow the same sequence of activities (you saw these activities in Figure 5-4). However, emergency changes must proceed as fast as possible (testing may even have to be curtailed or even bypassed in certain circumstances). Standard changes also should proceed quickly, but that speed should be the result of predefined, delegated authority and predefined, specific steps that minimize bureaucracy and speed up the change service. Normal changes, of course, require full control. These three types of change are discussed in greater detail later in this section.

Exercise 5-1: Why Changes Fail and How Effective Change Management Can Improve Matters
Now that I've covered the general principles of Change Management, it's time to consider some practicalities.
The objective of this exercise is to consider how and why changes fail. Once you've established those reasons, you can then see how an effective change management process can improve matters.
Your task is to list as many reasons as you can think of for why changes fail. Such failed changes are those that are late, exceed the budgeted cost, don't deliver the promised functionality, don't meet the promised performance level, or are difficult to support in the live environment.
Give yourself ten minutes to produce your list before you read on.
Answer to Exercise 5-1 (Part 1) I hope you've got some of the following on your list:
â¢  The changes had a wider impact than was foreseen.
â¢  There was insufficient money to acquire the resources needed.
â¢  The resources required were unavailable.
â¢  There was a disagreement between stakeholders on who should authorize the change.
â¢  Testing was poorly planned and poorly conducted.
â¢  The change was incompatible with other changes being made concurrently.
â¢  The users were not ready.
â¢  The support organization had neither the necessary resources nor the expertise.
â¢  Higher management applied pressure to roll out the change prematurely.
You may, of course, have been able to think of some other reasons too, which may be as valid as the ones I've listed here. I'm afraid I can't address those specifically (obviously!).
Toward the end of the chapter (in the "Chapter Review" section) is Part 2 of this answer, where you'll look at how your understanding of Service Transition and the service lifecycle enables you to analyze these reasons for failure.

Change Process Flow
Change Management is a good example of a process that meets the formal definition you encountered in Chapter 1. Do you remember the definition of a process? A process is a set of coordinated activities combining resources and capabilities to produce an outcome that creates value for the customer.
You may also like to remind yourself of the generic process model you saw in Figure 1-2 and of the four characteristics of a process, which are, of course, as follows:
â¢  It responds to a specific event. Something happened that sets it off; there is a defined trigger.
â¢  It is measurable. Metrics should include such elements as performance, cost, quality, duration, and productivity.
â¢  It produces a specific result. The true value of the process is found here, and the result must be identifiable.
â¢  It delivers its result to a defined customer (or user) in a way that meets their expectations.
Figure 5-4 shows the process flow.
Now work your way through these steps (my commentary is in the context of normal changes).
Initiation The first coordinated activity in the process is initiation. Each change has to start somewhere. It could be initiated by a program or a project; it could come from a continual service improvement (CSI) initiative, a service review meeting, an e-mail to the change manager, a service request, and so on. Possible triggers could include the following:
â¢  Legal or regulatory requirements
â¢  Organizational changes
â¢  Revised policies and standards
â¢  Proactive service improvement after activity and performance analysis
â¢  New service
â¢  Updates to existing services in the Service Portfolio
â¢  Changes to sourcing
â¢  Technological innovation
â¢  Service failures
At this point, the priority of the change should be first addressed. The Change Management process should include prioritization rules to ensure that the correct priority of one change in relation to other changes is clear; this is vital to ensure that resources go first to the most urgent needs. The Transition Planning and Support process will oversee this prioritization, which will be reviewed as the change progresses through the Change Management process.
Initial Review   Before too much resource is expended, an initial review should be completed to make sure that the proposal is realistic. For proposals coming from programs and projects or from a controlled source such as a service request, this review would be little more than a quality check; therefore, it is good practice to route change initiatives through a preliminary process before invoking formal change management.
The review would also check the prioritization and check that the proposal has been recorded in the CMS. This initial review could be performed by the change manager's staff, and an appropriate appeal procedure would be needed.
Raise RFC   Following a successful initial review, the formal change controlâthe request for change (RFC)âwould be raised and recorded. Some organizations use different names for a formal change control; examples include CRQ (for "change request") or MADC (for "moves, adds, deletions, changes"). In this book I'll be using RFC, which is the most commonly used term.
Every RFC should have a clear sponsor and owner. The owner, in conjunction with the sponsor, should ensure that the following aspects are addressed. These aspects are known as the seven Rs of change:
â¢  Raised   Who initiated the change?
â¢  Reason   What is the rationale for the proposal?
â¢  Return   What are the specific benefits (this may be an amplification of the reason)?
â¢  Risks   What are the uncertainties, and how is it envisaged that they should be managed?
â¢  Resources   What financial, technical, and human resources are needed, and has their provision been agreed on?
â¢  Responsible   Who is the owner, and who is the sponsor? Who is actually going to ensure that building, testing, initiation, and review will be carried out?
â¢  Relationship   What is the relationship with other changes? Are there some mutual benefits? Is some de-confliction required?
It sometimes comes as a surprise to the sponsors and owners of changes that it their responsibility to provide answers to these seven Rs; Change Management is there to run the process, and it will have neither the expertise nor the resource to perform the detailed work. However, the Change Management team should be an invaluable source of advice and assistance.
One crucial aspect that the change manager would ensure at this stage is that all the relevant stakeholders have been identified and recorded, particularly those who comprise the change authority for the change in question. You'll look more closely at the change authority later in the chapter.
Assess and Evaluate   This activity analyzes the change and prepares it for authorization. For simple changes, this may be straightforward. However, in more complex circumstances, this may require a formal evaluation that will need formal work orders to be raised. Every stakeholder would be entitled to be consulted and to express their view; those stakeholders who comprise the relevant change authority would expect to have a power of veto. For example, the owner of a service that is affected by the change in question would be entitled to prevent a change from being made that would have an unacceptable impact on the customers of that service.
Authorization to Proceed   The results of the evaluation would be presented to a decision-making body, which would normally be the change advisory board (CAB). I'll be covering the CAB in more detail later in the chapter. If the CAB is satisfied, it will give authority for build and test to start; if it is not satisfied, it will notify the sponsor and owner of the change, giving its reasons. It would then be up to the sponsor and owner either to rework the change to address the CAB's concerns or to appeal the CAB's decision.
Build and Test   The one organization least involved here would be the Change Management team! Who actually builds and tests any particular change would have been specified in the RFC and its supporting change record; otherwise, the change should not have been authorized. Also, here the Service Validation and Testing process has a vital role to play. Covering the work and resources needed will probably require formal work orders to be raised by the change sponsor and owner.
Authorization to Implement   An assessment of the test results would be presented to the CAB, which, if satisfied, will give authority for implementation. If the CAB is not satisfied, it will again notify the sponsor and owner of the reasons, and the sponsor and owner would need either to rework the change to address the CAB's concerns or to appeal the CAB's decision.
When the CAB is satisfied with the build and test, it now has a particularly important job to do; it is responsible for scheduling the change. The CAB will know the available windows, what other changes are going to be implemented, what relevant resources are available, and so on. The CAB will then decide where the change will appear in the change schedule (CS), and if any planned, additional downtime is needed, the CAB will ensure that information on any additional downtime is published in the projected service outage (PSO) document.
Implementation   This is where the Release and Deployment process is invoked, acting as a subprocess to Change Management. However, the arrival of any change into Release and Deployment should not come as a surprise to that process! It is to be hoped that appropriate preparatory work would already have been completed. Indeed, the CAB should have satisfied itself that that was the case before authorizing implementation.
Remediation   Every change should include the steps to be followed in the event that the change cannot proceed to full, successful implementation. This should include a back-out plan (which should have been tested) and a clear signal to the release team of when a change is going to be irreversible once started or may become so when a "point of no return" is reached. There should also be a reference to the relevant part of the IT service continuity plan because, in the worst case, it may be necessary to invoke it!
Review   When implementation is considered to have been competed satisfactorily, all changes must be reviewed. This review normally takes place after an agreed-on period has elapsed from completion of successful rollout. For comparatively straightforward changes, this review may be completed by the Change Management team. For more complex situations, this may require a formal review for which formal work orders will need to be raised.
Closure   Before an RFC can be closed after implementation, the results of the review must be recorded and considered; it is particularly important that any lessons learned have been recorded in the change record and cross-referenced to a formal continual service improvement (CSI) initiative. This is another responsibility suitable for the CAB.
If the CAB is satisfied with the review, it will give authority for closure. If the CAB is not satisfied, it will again notify the sponsor and owner of the reasons. No doubt further management discussions would then take place to decide what further action was needed such as remove the change, record a known error (see Problem Management in the Service Operation lifecycle stage), raise a get-well RFC, or put a CSI initiative in the CSI register. Living with it should not be an acceptable decision.


EXAM TIP    The final activity in the lifecycle of a change is closure, not review. Also, don't forget that the related Release and Deployment activity will itself need to have been successfully reviewed and closed before the RFCs related to it can also be closed.

Configuration Management Aspects
As you have seen, each RFC and its associated change record are configuration items in the configuration management system. The record for each RFC should be kept up to date as the RFC moves through the activities of the process. Being in the CMS enables each RFC to be linked to other related RFCs, releases, infrastructure components, and so on, thus providing an extremely valuable source of accurate management information.
Emergency Changes
As you already appreciate, poorly managed change can often be disruptive, but such disruption can be minimized by having a sound change process that is properly enforced. Such discipline is even more important when an emergency occurs because in such situations panic can set in and ill-considered decisions can be made. As I often say, "There is rarely a situation so bad that the wrong decision can't make it worse!"
The Emergency Change process should be clear in defining who are the people authorized to declare an emergency change; arrangements should be made to ensure that at least one such individual is at all times available to make that decision. This is the equivalent of the initiation and initial review steps for a normal change.
Emergency changes often seem to arise outside normal working hours.


EXAM TIP    The theory is that if an emergency arises during normal working hours, it is considered by the regular change advisory board if the board happens to be meeting at that time.

Outside normal hours, an emergency RFC should be raised by the on-call change manager who will work with the initiator and relevant, available specialists to consider the options and decide on the best course of action. This temporary group would be defined as an emergency change advisory board (ECAB) and would act as the CAB does until the emergency change is implemented at which point this particular ECAB would dissolve. The review of the emergency change would be carried out subsequently by the CAB.
The ECAB will take a view on how much testing should be done. There may be little or no time available, and vital business may have stopped, in which case testing could be forgone completely. However, there is usually an opportunity to conduct some testing in crucial areas even if comprehensive testing would take too long. It may also be advisable to follow up the emergency RFC with a less urgent one to ensure that no hidden issues have been introduced inadvertently during the rush.
All relevant documentation still has to be completed although this can be done retrospectively to avoid delaying the implementation of a solution to the emergency.
Finally, it is my experience that while all changes should be prioritized in accordance with agreed-on procedures, that doesn't guarantee that changes are presented for consideration by initiators in a timely fashion. Therefore, it is also important to differentiate between true emergency changes and late changesâchanges that someone forgot to initiate at the correct time! Such changes unnecessarily bring higher risk and, usually, inefficiency in the use of resources as well as interfering with genuine emergency changes.
Standard Changes
Standard changes will almost invariably follow a set of predefined steps controlled by an automated workflow. They are often initiated through a menu-driven front end that checks the authority of the initiator, selects the relevant workflow, and controls the subsequent activity. Such activity is recorded in the CMS, and an audit trail is created for record purposes.
Examples of applying a standard change process include the deployment of specific software (such as Microsoft Project to a laptop), the upgrade of an existing user's workstation, and the setting up of a new starter with their workstation in a newly created post, such as in the example in Figure 5-5.

Figure 5-5   Standard change process flow
The following are the features of a standard change:
â¢  There is a defined, documented trigger.
â¢  Risks are low and well-understood.
â¢  The tasks within the change are well-known, proven, approved, and documented.
â¢  Authorization is effectively given in advance during the initiation of the change.
â¢  Where budgetary approval is needed, it is built into the workflow.
â¢  There is an automated workflow based on an agreed-on change model.
â¢  Such changes are often initiated in the Service Operation lifecycle stage through the Request Fulfillment process.
Change Advisory Board
The crucial role of the change advisory board has already been mentioned, and most organizations have CABs that meet on a regular basis. However, it is essential that you have a clear understanding of how a CAB should operate and who should be its members.
What a CAB shouldn't be is a talking shop where every aspect of every change is chewed over until all the participants lose the will to live (I have attended such forums in the past!). What should happen is that the whys and wherefores of each change to be considered should have already been thrashed out between the stakeholders and agreement reached beforehand. That enables the CAB meeting to focus on confirming that the requirements of the process have been met, on giving a go/no-go decision on each change, and on scheduling the implementation of each change.
CABs should meet on a regular basis (weekly meetings are the norm), and in a large and complex organization there may be multiple CABs based on business units, geography, or technologies. However, there should be one top-level CAB, and all CABs should conform to the same change process. Membership usually comprises the change manager as the chairperson, plus the "usual suspects" (Service Desk Manager, Capacity Manager, IT Security Manager, and so on), plus other members as appropriate (the owners of the services affected, customer representatives, and so on). Furthermore, it should not be necessary for all participants to be present throughout the meeting; those with an interest in only one or two changes need to be present only for those items of discussion.
The inputs to a CAB meeting will include the minutes of the previous CAB meeting, any ECAB activity, new changes for consideration, changes ready for implementation, change reviews completed since the previous meeting, and any improvement initiatives. The CAB will handle those inputs, assessing, prioritizing, and authorizing the changes on its agenda. Out of the CAB meeting will come new minutes, authorized changes, rejected changes, an updated change schedule document, and an updated PSO document.
It is important to understand clearly the limits on the role of the change manager. It is not part of that job to act as some sort of omnipotent oligarch, granting or withholding approval of changes on some sort of personal whim. The change manager is the protector and enforcer of the change process, ensuring that stakeholders are correctly identified and can play their role. The change manager ultimately confirms that approvals are given by the appropriate change authorities. In doing so, the change manager protects the interests of every stakeholder, ensuring the good governance that was mentioned in Chapter 1.
Finally, those responsible for building, testing, releasing, and deploying changes will know that their work is properly authorized when they see the change manager's formal stamp of approval on the RFCâan authority that confirms that the process has been followed correctly for that particular change.
Change Authority
From the previous discussion, you might consider that the CAB itself is the change authority, but that's not strictly true; the CAB is theoretically an advisory body that makes recommendations. Nor is the change manager always the authority; the change manager's approval merely enables the change to move to the next activity in the process once the previous, relevant activities of the process have been successfully completed. The actual authority for any particular change depends on what sort of change is being considered.
Change authorities can comprise a particular role, a particular person, or a particular group or team; those people or groups would be among the stakeholders for any particular change. Those who constitute the change authority for any change should be documented in the specific RFC, and it is the responsibility of the change management team to do so when the RFC is raised (do you remember that requirement from the "Raise RFC" activity in the workflow?).
Change authorities can be drawn from any management level and may even be the executive board or the IT steering group. More often authority is delegated to the CAB, to the change manager, or, for standard changes, even to comparatively junior management levels.
Change Models
Change models are essentially the predefined steps that should be taken for handling a particular category of change. There would normally be a number of change models, each one being a configuration item in the configuration management system and, thus, being themselves subject to change control.
Change models can range from the simple (such as that for changing a password) to the complex (such as a major software upgrade). For standard changes you would expect the model to be highly detailed, covering all angles. For normal changes, models could not be so detailed because of the unique qualities of such changes. Change models could also be useful when emergency changes arise where they could provide welcome guidance and a valuable checklist at a time when clear thinking is crucial.
Change Documents
The following are documents specific to the change process:
â¢  Request for change   This is the formal change proposal; it's the vehicle by which the change is managed.
â¢  Change record   This amplifies the RFC and records relevant information about the change throughout its lifecycle.
â¢  CAB minutes   The CAB holds formal meetings and it is appropriate for its work to be recorded, showing who was present, what was discussed, and the rationale behind the decisions that were reached.
â¢  Change schedule   This publicizes the changes to be implemented, the dates for implementation, and any other relevant information that would be useful to IT staff, customers, users, and the Service Desk.
â¢  Projected service outage   This notifies IT staff, customers, users, and the Service Desk of any changes to normal service availability resulting from the planned implementation of changes.
Roles
A full set of Service Transition roles is provided in the "Roles in Service Transition" section later in this chapter. However, it is worth reiterating the responsibilities of the change manager.
â¢  To chair the change advisory board
â¢  To manage the change process
â¢  To ensure compliance with the change process
â¢  To ensure that the outputs from the process are produced to the appropriate quality and at the necessary time
To be able to discharge those responsibilities, the change manager needs to be properly empowered and to be supported by top management and by the Transition Planning and Support process.
Release and Deployment Management
You're taking yet another step closer toward the live world. This process provides the final opportunity to get things right before your new or changed services (or new or changed components of a service) hit the business. If you haven't got it right, that'll be the moment you'll find out! That is, of course, one of the reasons why many organizations have strict procedures regarding releasing new things into the live environment. However, whether those strict procedures amount to Release and Deployment is another matter, but at least those organizations have made a start.
For background information you should find it useful to know that ITIL v1's equivalent process was called Software Control and Distribution Management. In ITIL v2 it became Release Management, reflecting that it is more than just software that gets released. ITIL v3 expanded the concept to Release and Deployment Management because how you actually get all the components of a release into what is usually a widely dispersed configuration is as critical as any of the other aspects of the process.
I also hope you remember that, in common with Change Management, the Release and Deployment Management process links closely with that other horse in your troika: Service Asset and Configuration Management. In addition, as you've already seen, Release and Deployment is itself a close bedfellow of Change Management.
The definition of a release is "one or more changes to an IT service that are built, tested and deployed together." The purpose of the Release and Deployment Management process is to plan, schedule, and control the build, test, and deployment of releases, as well as to deliver new functionality required by the business while protecting the integrity of existing services.
Again, I'd like to highlight a few words from the previous description:
â¢  ". . . plan, schedule . . ."   The planning and scheduling of releases are crucial and done under the higher-level guidance provided by Change Management.
â¢  ". . . control . . ."   Control again means governance and not just administration of, in this case, releases and deployments. You should have a clear Release and Deployment policy with equally clear roles and responsibilities that have appropriate empowerment.
â¢  ". . . build, test . . ."   While each change will itself have been built and tested, it also has to be built as a release and tested as such. Moreover, often more than one change is released at the same time. Therefore, those changes have to be bundled together as a package, which has to be built and tested as a whole.
â¢  ". . . deployment . . ."   The final step is to roll out releases into the live environment using whatever deployment mechanisms you have.
â¢  ". . . deliver new functionality . . ."   This means to provide enhanced utility in the live environment, enabling the outcomes that your customers seek to be facilitated even more effectively.
â¢  ". . . protecting . . . existing services . . ."   It would be all very well to successfully roll out something new, but if that success then disrupts existing services (other than as planned and published in the PSO), that is unacceptable.
Scope of Release and Deployment Management
Earlier you saw how, as ITIL has evolved, the scope of this process has become more holistic, covering such aspects as the following:
â¢  Physical assets (servers, data networks, and so on)
â¢  Virtual assets such as virtual servers or virtual storage, including those in the cloud
â¢  Applications software and system software (the original scope of this process)
â¢  Relevant documentation
â¢  Training for users and IT staff
â¢  Supporting services, including all related contracts and agreements
â¢  Ensuring appropriate testing is completed (the actual testing is carried out as part of the Service Validation and Testing process)
To meet its purpose within that scope, the Release and Deployment process needs to do the following:
â¢  Produce and maintain a Release and Deployment policy
â¢  Produce and maintain individual Release and Deployment plans
â¢  Define, create, and test release packages
â¢  Maintain the integrity of the live environment
â¢  Deploy software from the DML only
â¢  Track the progress of releases in conjunction with the SACM process
â¢  Ensure each release has a tested plan for backout/uninstallation
â¢  Manage organizational and stakeholder change
â¢  Ensure that the services being deployed deliver the agreed-on utility and warranty
â¢  Record and manage deviations, risks, and issues
â¢  Ensure successful completion of the transfer of skills and knowledge to customers, users, and Service Operation functions
Secure Repositories
From the days of ITIL v1 it has been recognized that all software that is released into the live environment must originate from a quality-assured source. That concept was expanded in ITIL v2 to include definitive items of hardware. Thus, you have two types of secure repository: the definitive media library and an area for holding definitive hardware items. Both of these types of repository form part of the configuration management system, and their contents are recorded in appropriate configuration management databases. You may recall that the DML was mentioned in Service Asset and Configuration Management.
Definitive Media Library   The DML provides secure storage for definitive, master copies of all software (application software, system software, and so on). Access to the DML is strictly controlled, and the DML may comprise a number of separate repositories, physical and electronic. Any software entering or reentering the DML must pass through a quality check to ensure that it is what it says it is, that it is virus-free, and that it is complete. This ensures that everyone can have confidence that software originating from the DML is of the highest possible quality. No one should ever use software from any other source (websites of dubious provenance, a DVD found in the top drawer of a programmer's desk, and the like!).
Software should remain in the DML for as long as it is potentially useful. For example, older versions can sometimes be invaluable in problem investigation or when a retired service is to be resurrected.
It is also permissible to hold software specifications and software license documentation in the DML (but be aware that the ultimate proof that you are licensed for any specific piece of software is a cleared invoice from a licensed seller or reseller!).
Definitive Spares   In ITIL v2 this was called the Definitive Hardware Store, but I rarely came across an organization that had one. In an effort to better reflect reality, ITIL v3 uses the term hardware spares, but I still find that unhelpful. As a logistician, the word spares means to me items such as motherboards, keyboard keys, power leads, and so on. I think what ITIL v3 means is unallocated items of hardwareâspare hardware if you like.
Not many organizations can afford to buy examples of hardware just to sit on a shelf gathering dust and to keep that array of hardware up to date as new makes and models of PCs, laptops, and servers, and so on, are introduced. However, some organizations maintain what is called a float of unallocated but preconfigured hardware from which items can be swapped out for broken ones, with the broken ones then being fixed and placed in the float for future needs. Organizations may also find they have unallocated items that are the result of a business downsizing or the upgrade and replacement of otherwise serviceable items. Rather than dispose of those assets immediately, it may be prudent to retain them when a further need could still be contemplated.
Basic Release and Deployment Process
A basic version of the Release and Deployment process workflow is shown in Figure 5-6. The steps can be explained as follows:

Figure 5-6   Release and Deployment process
Plan and Prepare   In accordance with the Release and Deployment policy, determine the RFCs that will comprise the release in question, ensure they are authorized for implementation, check that the resources needed are available, and publish the plan for this release. Planning should include the completion of the training of users and support teams (sometimes forgotten!) and the readiness of the organization to accept the release.
Build and Test   Put together all the components of the release, remembering that it may comprise a number of connected RFCs alongside other RFCs that have no relationship one to another. Testing should ensure that there is no incompatibility in the mixture of RFCs. The deployment mechanisms should also be tested.
Service Testing and Pilots   Ensure that what is going to be delivered will, as a whole, provide the promised utility and warranty. This may involve running a pilot in the live environment (involving a limited number of live users in a limited geographical area).
Plan and Prepare Deployment   Software will originate from the DML, and mechanisms must be in place for its distribution to its live locations; such mechanisms often include some means of automatic deployment. Supporting documentation may follow a similar route. However, hardware requires physical distribution, which will need to be coordinated with software deployment.
Transfer, Deploy, Retire   Put the plan into effect. A service itself may be transferred from one service provider to another, hardware and software will be deployed, and redundant services and hardware and software will be retired and recovered.
Early Life Support   During early life support, specialist, experienced resources will supplement the operational teams, while new or changed services settle in the live environment. Early life support should be carefully planned and should continue until the new service targets are being met consistently and the operational support organization has become capable of supporting the new or changed service by itself. That should be the criteria for withdrawing early life support, not "that's your two weeks overâwe're off now!"
Review and Close   As you'll no doubt appreciate by now, in ITIL nothing is over until it has been reviewed, its success confirmed, and its lessons learned. Only then can it be formally closed.
Phased Releases   It is common for releases to require deployment to be phased over time, over geographical areas, or indeed over both. Planning, preparation, and control are even more vital in a phased release, and sound configuration management is essential to maintain control over what is a constantly changing picture.
Service Validation and Testing
This process is not in the syllabus for the ITIL Foundation exam, but a brief consideration of it is helpful for a full understanding of the service lifecycle.
The purpose of Service Validation and Testing is, in essence, to ensure that what has been built meets the specification and will deliver the intended utility and warranty. Testing should be performed under both the Change Management process and the Release and Deployment process.
Those involved in Service Validation and Testing should, of course, be different people from those involved in Release and Deployment.
Change Evaluation
This is another process that is not in the syllabus for the ITIL Foundation exam, but again a brief consideration of it is helpful for a full understanding of the service lifecycle.
The purpose of Change Evaluation is to assess the likely performance of the new or changed service, comparing predicted performance against actual performance and identifying and managing risks and issues. Change Evaluation helps set stakeholder expectations and is particularly valuable in assisting Change Management to decide whether changes should be authorized to proceed to the next activity in the change process lifecycle.
Roles in Service Transition
Don't forget the point I made in Chapters 1, 3, and 4 that, while ITIL does not tell us how to organize ourselves specifically, it does give valuable guidance in each lifecycle stage in the form of sets of roles with associated responsibilities. It's also worth repeating that you can use these sets as checklists to make sure you're covering everything. These points are as true in Service Transition as in any other stage of the Service Lifecycle.
I've shown the specific Service Transition roles in the organization chart shown in Figure 5-7. Again, don't forget that this chart is only for illustrative purposes; it is not a model.

Figure 5-7   Roles in Service Transition
The generic responsibilities of Service Owner, Process Owner, and Process Manager are set out in Chapter 1. For the specific responsibilities of each of the roles shown in Figure 5-7, you will need to refer to the ITIL publications themselves.
Tools in Service Transition
In addition to the general comments on tools that I made at the end of the Service Strategy lifecycle stage in Chapter 3, technology can be particularly useful in Service Transition in the following areas:
â¢  System, network, and application management
â¢  Integrated ITSM tools covering configuration, change, and release and deployment
â¢  Discovery and audit tools
â¢  Software distribution and management
â¢  Service dashboards and reporting
â¢  Document and records management
â¢  Collaboration tools
â¢  Test and test management
Chapter Review
The title Service Transition says essentially what this lifecycle stage is about. It's about how new or changed services (and their components) should move from the drawing board to the live environment. Each new or changed service may or may not be part of a formal program or project, and it is undoubtedly useful to create programs and projects to give specific developments a defined scope and focus for management purposes. However, that shouldn't mean that such new or changed services follow a separate, parallel world of transition away from all the other changes that are taking place. The organization's policy for programs and projects should invariably conform to the organization's Service Management policy and come under the coordination and control of the Transition Planning and Support process. This is vital because Service Transition covers such a wide area that it is essential there is a single point of control where competing demands can be managed and standards maintained. That is accomplished by the Transition Planning and Support process to which both project-related and nonproject work must comply.
In contrast to the Transition Planning and Support process, which is naturally focused on internal aspects of the Service Transition lifecycle stage, the Knowledge Management process is applicable throughout the service lifecycle. However, it resides in Service Transition because that is where building, testing, and training are focused and, therefore, where valuable knowledge is being acquired to the greatest extent; that's why there's the concept of the Service Knowledge Management System.
Within the SKMS are the various repositories, databases, and management information systems that comprise the configuration management system that is at the center of the Service Asset and Configuration Management process. SACM again is valuable throughout the service lifecycle but, considered in my view as "applied knowledge management," it too resides in Service Transition. However, the development of SACM should not run ahead of the areas subject to formal Change Management; otherwise, there will not be a mechanism to keep those SACM records up to date.
Change Management is, of course, at the center of Service Transition. Change can be defined as moving from one defined state to another. You should use the information in SACM as the source for defining those states (do you remember baselines?). This is another example of the symbiotic relationship between Change Management and SACM.
Whatever the origin of changes, in the Change Management process they are formally recorded as requests for change and move along a lifecycle of approval, build, test, authorization, implementation, and review and closure. You have seen how change advisory boards have a central role to play in the progression and management of changes. However, for process efficiency, it is crucial to avoid unnecessary bureaucracy, so you categorize changes as either emergency, normal, or standard. Emergency changes require rapid attention and can merit the conscious taking of increased risk; standard changes follow well-known paths and are of low risk; and normal changes have unique aspects that require closer control, but, even here, unnecessary bureaucracy should be avoided. Moreover, although standard changes will be defined by Change Management in the Service Transition lifecycle stage, they will usually be executed as part of the day-by-day activity in Service Operation.
Effective Change Management is helped by both the Change Evaluation process and the Service Validation and Testing process (but remember that these two processes are outside the current scope of the ITIL Foundation exam) and, of course, the Release and Deployment process.
The Release and Deployment process has its own policies and procedures and controls the definitive media library (DML), which is the approved source for all software. The Release and Deployment process also acts a subprocess to Change Management because one of its drivers is the set of the RFCs passed to it for implementation and it reports back to Change Management on the progress of releases into the live environment. Release and Deployment is not only a vital source of information to SACM but also uses the valuable information in SACM for planning and control purposes. So, you can expand your symbiotic relationship into a threefold model.
â¢  SACM and Change
â¢  Change, and Release and Deployment
â¢  SACM, and Release and Deployment
It is helpful when comparing RFCs and releases to be aware that the scope of any particular RFC can be defined by the number of CIs affected by it and that the scope of any particular release can be defined by the number of RFCs it comprises.
The ultimate proof of the effectiveness of Service Transition is when a decision is made that early life support can be concluded. If the new or changed service then runs smoothly, the aim has been achieved. True value has been delivered with utility and warranty in balance. However, if on the withdrawal of early life support the service falls flat on its face, it's time to initiate some Continual Service Improvement (CSI)!
Quick Review
Here are the key concepts and terms you've encountered in this chapter. Read through this list; if anything seems unfamiliar or you can't readily describe it, go back and read the relevant section again.
â¢  The purposes of Service Transition.
â¢  Process: Transition Planning and Support (controlling this lifecycle stage).
â¢  Process: Knowledge Management (a concept crucial throughout the service lifecycle).
â¢  Process: Service Asset and Configuration Management (SACM). This is essential to processes throughout the lifecycle but particularly to Change Management and to Release and Deployment Management.
â¢  Process: Change Management. This is the heart of Service Transition, controlling the move from one defined state to another. Changes are put into three types: emergency, normal, and standard. Standard changes are usually executed in Service Operation.
â¢  Process: Release and Deployment Management. This applies quality control over software management and performs the activities comprising the implementation stage of the change workflow.
â¢  Out-of-scope processes: Service Validation and Testing, and Change Evaluation.
â¢  Tools.
â¢  Projects and programs should conform to the Service Transition policies and processes.
â¢  Concepts of utility and warranty should never be forgotten.
Answer to Exercise 5-1 (Part 2)
This is the list I provided earlier. I suggest you spend a moment going through it and consider how you think applying the best practice in the service lifecycle would help.
â¢  The changes had a wider impact than was foreseen.
â¢  There was insufficient money to acquire the resources needed.
â¢  The resources required were unavailable.
â¢  There was a disagreement between stakeholders on who should authorize the change.
â¢  Testing was poorly planned and poorly conducted.
â¢  The change was incompatible with other changes being made concurrently.
â¢  The users were not ready.
â¢  The support organization had neither the necessary resources nor the expertise.
â¢  Higher management applied pressure to roll out the change prematurely.
The following sections highlight my thoughts.
Changes Had Wider Impact
As accurate an assessment as possible of the scope of any change should be made from the beginning, from initiation. But it is when the RFC is raised that the scope needs to be fully assessed. Do you remember the fourth R of change? Risksâwhat are the uncertainties, and how is it envisaged that they should be managed? You should identify from the Service Catalog the services that will be impacted directly by the change, and using the Service Catalog's relationships between services, you can identify other services that may be affected. Moreover, you can drill down further. I mentioned earlier that the scope of a change can be defined by the number of CIs affected by it. A good configuration management system will provide not only information on the CIs that will be impacted directly but also those CIs where a knock-on effect may be experienced.
Insufficient Money
This may be related to poor assessment of the scope, the result of a failure to appreciate the resources needed and their cost, an assumption that someone else would look after the funding, or a combination of these and other factors. Remember the third R? Returnâwhat are the specific benefits? This implies that an accurate cost-benefit analysis should be completed before the RFC is approved.
Resources Unavailable
Was the fifth R addressed properly? Resourcesâwhat financial, technical, and human resources are needed, and has their provision been agreed on? This vital aspect is the responsibility of the owner of the change (which could be the initiator or the sponsor), who should also ascertain whether the resources needed actually exist and can be made available in the necessary timeframe. The change management team and the CAB should help by checking that the RFC includes a credible, agreed-on resource plan. However, there is always a possibility that things may change subsequently. A higher-priority or emergency change may arise and claim precedence over the resources needed. That new, higher-priority change may have been unforeseeable and its impact unavoidable. But sometimes such a new change is the result of a weakness in the change process. For example, a major stakeholder of another change may be given a precedence that is not really justified (they shouted louder?), or the unnecessarily late notification of a business-critical requirement may force the process to turn it into an emergency change, which then demands precedence.
Disagreement Between Stakeholders
If it is not clear, agreed-on, and documented as to who exactly comprises the change authority for a particular change, there is always the risk of such arguments. However, disputes can still occur within the change authority, so it may be helpful to identify clearly those members who have a power of veto (such as the Service Owner) and those who don't. Ultimately, the disagreement should go to the CAB for resolution.
Testing Was Poorly Planned and Poorly Conducted
It should be mandatory that comprehensive test plans are agreed on, tests are completed, and evidence of success is documented. The Service Validation and Testing process provides valuable guidance, the Change Management process should require that process to be followed, and the Transition Planning and Support process should oversee conformance. Don't forget the sixth R. Responsibleâwho is the owner, who is the sponsor, and who is actually going to ensure that building, testing, initiation, and review will be carried out?
Change Was Incompatible
Remember the seventh R? Relationshipâwhat is the relationship with other changes? Are there some mutual benefits? Is some de-confliction required? This is one of the crucial responsibilities of the change advisory board. However, the CAB needs to be provided with accurate information, particularly regarding the scope of the changes it is considering.
Users Not Ready
The management of user expectations and the arrangements for their training should have been included in the resources needed for the change and documented in a resource plan. The CAB should have ensured that such elements were in the RFC. Providing awareness and delivering actual user training should then have been completed by Release and Deployment within the implementation activity of Change Management.
Rolled Out Change Prematurely
If this happens and then the change fails, who gets the inevitable blame? Was higher management a formal part of the relevant change authority, did they participate in a meaningful way in the progress of the change and the assessment of risk, and do they understand the principles of IT service management? When Service Transition achieves maturity, the circumstances leading to an unwise, premature rollout will be recorded, and the cost of the resulting failure will be captured. That will provide the evidence that compliance and audit will need to ensure that responsibility sits with the real decision maker and lessons are learned for the future.
Questions
Here's another set of questions, 20 this time, for you to tackle.
1.  Which one of the following statements regarding standard changes is not correct?
A.  They are low risk.
B.  They usually follow a change model.
C.  They take precedence over normal changes.
D.  They are approved by a delegated authority.
2.  Which one the following roles would be responsible for packaging, building, testing, and deploying new or changed services?
A.  The Service Catalog manager
B.  The configuration analyst
C.  The Transition Planning and Support manager
D.  The Release and Deployment manager
3.  Which of the following types of change would not normally be directly relevant to the Change Management process?
A.  Changes to the data center configuration
B.  Revision of existing service level agreements (SLAs)
C.  The retirement of a service
D.  Changes to corporate strategy
4.  Which of the following statements regarding the configuration management system (CMS) is correct?
A.  There should not be more than one CMS.
B.  There should not be more than one configuration management database (CMDB).
C.  The service knowledge management system (SKMS) is an integral part of the CMS.
D.  The CMS should contain project plans and the user skills register.
5.  What one of the following is a responsibility of the emergency change advisory board (ECAB)?
A.  To handle all high-priority changes
B.  To evaluate emergency changes and to decide whether they should be approved for implementation
C.  To review all emergency changes after release
D.  To prevent changes being implemented during busy periods
6.  Which one of the following is the best source of accurate information regarding the components of any service?
A.  The definitive media library (DML)
B.  The service level agreement (SLA) structure
C.  The configuration management system (CMS)
D.  The change record
7.  For which of the following is Service Transition a source of guidance?
i.  Retiring services
ii.  Deploying new services
iii.  Outsourcing services
iv.  Transferring services from one provider to another
A.  i and iii only
B.  i and iv only
C.  ii and iii only
D.  All of the above
8.  Which of the following is a correct statement with regard to the service knowledge management system (SKMS)?
A.  The SKMS and the configuration management system (CMS) are the same thing.
B.  The CMS is part of the SKMS.
C.  If you have a CMS, there is no need for an SKMS.
D.  The CMS is controlled and documented; the SKMS is purely conceptual.
9.  Which of the following could be found in the definitive media library (DML)?
i.  Copies of proprietary software
ii.  License documentation
iii.  Software specifications
iv.  The release schedule for software
A.  i and iii only
B.  i and iv only
C.  i, ii, and iii only
D.  All of the above
10.  Which one of the following statements is not correct regarding a change model?
A.  A change model can be used for emergency changes.
B.  A change model provides the steps to be followed when handling a particular type of change.
C.  A standard charge almost invariably uses a change model.
D.  Escalation procedures should not be part of a change model.
11.  Which of the following areas are relevant to Release and Deployment Management?
i.  Producing plans for release and deployment
ii.  Ensuring that the progress of releases can be tracked
iii.  Checking the quality of software
iv.  Authorizing changes
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  All of the above
12.  Which of the following are examples of tools that might be appropriate to Service Transition?
i.  A software license management tool
ii.  A software deployment tool
iii.  Testing and validation tools
iv.  Management systems and tools
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  All of the above
13.  Which one of the following is the correct list of activities in Service Asset and Configuration Management (SACM)?
A.  Planning, identification, control, status accounting, validation, and testing
B.  Planning, identification, control, financial accounting, verification, and audit
C.  Planning, identification, control, status accounting, verification, and audit
D.  Planning, identification, change, status accounting, verification, and audit
14.  Which of the following is among the benefits of Service Transition?
i.  Better use of assets across projects and changes
ii.  A higher volume and proportion of successful changes
iii.  The more cost-efficient design of new services
A.  iii only
B.  All of the above
C.  i and ii only
D.  None of the above
15.  Which one of the following is not a Service Transition process?
A.  Service Level Management
B.  Change Evaluation
C.  Knowledge Management
D.  Service Asset and Configuration Management
16.  Which of the following roles could be members of the change advisory board (CAB)?
i.  Capacity manager
ii.  Service Desk manager
iii.  Service owner
iv.  Change manager
A.  iv only
B.  i, ii, and iii only
C.  iii and iv only
D.  All of the above
17.  Which one of the following is the correct list of the four Ps of Service Design?
A.  Planning, perspective, position, and preparation
B.  People, partners, products, and problems
C.  People, processes, products, and partners
D.  People, problems, processes, and partners
18.  Which one of the following is not an element in the DIKW model?
A.  Wisdom
B.  Design
C.  Knowledge
D.  Information
19.  When can early life support be considered successfully completed?
A.  When a preset date after implementation has been reached
B.  When the project manager says so
C.  When service targets are being met consistently and the new service is being supported by Service Operation teams
D.  When service targets have been confirmed and the project team has withdrawn its support
20.  Which of the following are outputs from the change advisory board (CAB)?
i.  Projected service outage (PSO) documentation
ii.  Approved RFCs
iii.  Meeting minutes
iv.  Change schedule
A.  All of the above
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  ii and iv only
Answers
1.  C. Options A, B, and D are correct statements. Precedence among changes should be determined by priority.
2.  D. The clues are the word deploying in the question and the word Deployment in the answer. Deployment is not in the list of responsibilities for the other three posts.
3.  D. Changes to corporate strategy are outside the remit of ITIL (although they would be important and, in due course, could require changes in the Service Portfolio).
4.  A. This style of question needs careful thought by examinees ensuring they are clear about correct and incorrect statements. In this case, option A is true, while options B, C, and D are all false. It may help to put check marks and x's where appropriate against the statements on the question paper.
5.  B. This is the book definition. Not all high-priority changes are going to be emergency changes. Emergency changes are reviewed by the main CAB; the ECAB is not about preventing change.
6.  C. Information on components is found in configuration management databases (CMDBs) in the configuration management system (CMS).
7.  D. Don't forget that there's more to Service Transition than just deploying new services.
8.  B. In the Knowledge Management hierarchy, the CMS forms part of the SKMS. Options A, C, and D should be readily identified as incorrect.
9.  C. A release schedule would not be kept in the DML.
10.  D. Escalation procedures are part of a change model. This is an example of a question where you need to spot the word not in option D.
11.  B. The authorization of changes is, unsurprisingly, the responsibility of Change Management.
12.  D. As mentioned in Chapter 4, tools are viewed as extremely useful; the answer "All of the above" is likely to be the correct answer to these questions unless something absurd has been included.
13.  C. These are the five principal activities as set out in the section on SACM.
14.  C. The word design in answer "iii" is the clue to spotting the joker, and indeed, the more cost-efficient design of new services is a benefit of the Service Design lifecycle stage.
15.  A. This was not a difficult question I hope! Service Level Management is, of course, a Service Design process; the rest are all Service Transition processes.
16.  D. Anyone with a stake in a change should be represented on the CAB.
17.  C. Again, this was not a difficult question I hope! Planning, perspective, position, and preparation are four Ps but not the ones in Service Design, so you can rule out option A. In option B problems is the joker, as it is in option D.
18.  B. Check the steps in Figure 5-3.
19.  C. This is the only acceptable answer. Presetting a date would be just a best guess, as would be the project manager's declaration. Option D is unsatisfactory because the project team should withdraw its support only once service operations can provide the necessary support.
20.  A. These are valuable outputs.








CHAPTER 6
Service Operation
In this chapter, you will
â¢  Learn how your services actually deliver value to customers
â¢  Understand how the processes in Service Operation work together to support those services and enable the users to maximize the value they gain from those services
â¢  Explore how the functions in Service Operation perform many activities across all service management processes, but particularly the Service Operation processes, to deliver specific value to customers and users
â¢  See how the evidence that is collected in Service Operation provides the information that is essential to effective Continual Service Improvement
â¢  Investigate the roles and responsibilities specific to this stage
â¢  Understand how technology can help you

Effective and efficient Service Operation is your goal. This is the lifecycle stage where you want to be able to see the valueâfirst envisioned in Service Strategy; planned in detail in Service Design; and built, tested, and deployed in Service Transitionâactually being delivered. You should be gathering evidence to show that utility and warranty, now in actual practice, are balanced and are creating the value that was specified earlier and, where that is not happening, to initiate improvement action.
If you've bought this book and come straight to this chapter, I think I can understand why. In any organization it is often what is happening today that is of primary concern. It's the old clichÃ© that if you're surrounded by alligators, it's easy to forget you're there to drain the swamp! If the business is creaking and groaning because of continual IT failures, you've got to get that issue resolved before spending too much time on the niceties of strategy. But, while it's true that "you are where you are," you need to make sure that the decisions you take on what to do about it are the correct ones. As I've said before, rarely is a situation so bad that a wrong decision still can't make it worse. Your decisions are more likely to be the correct ones if you can appreciate how you got here in the first place and thus learn to avoid repeating your previous mistakes. If you've jumped to this chapter, you may find it useful to look at the section "Chapter Review" and then go back to Chapter 1 to learn about the building blocks of IT Infrastructure Library (ITIL) and the context, the big picture, of the service lifecycle.
In fact, every reader might want to consider doing that as a useful piece of revision.
The Purpose of Service Operation
The purposes of Service Operation (its objectives, if you prefer) can be categorized as follows:
â¢  Deliver and support agreed-on IT services. Doing this will foster customer and business satisfaction and help build trust and confidence.
â¢  Minimize the impact of failure. Achieving perfection by completely eliminating all failure is practically unachievable and would be prohibitively expensive, although, as you have seen in Availability Management, you can add resilience to reduce the risk of failure impacting the user. Nevertheless, things will break, and then you need to fix them quickly while helping the users to carry on working as best they can.
â¢  Control access to services. Your policy on IT security was set in Service Design and then tested and released in Service Transition. In Service Operation, you execute the activities that deliver that policy.
The Scope of Service Operation
As the introduction to this chapter implies, Service Operation covers the following:
â¢  Services   The live services (of course)
â¢  Processes   The five processes of Service Operation
â¢  Event Management
â¢  Incident Management
â¢  Problem Management
â¢  Request Fulfillment
â¢  Access Management
â¢  People   Users, customers, suppliers, IT technicians, applications specialists, service desk staff, and so on, in their organizational and functional groups
â¢  Technology   The technology through which the services are delivered and the tools you use to manage the support of those services
Principles of Service Operation
The two key principles in Service Operation are balance, and communication.
Balance
Balance in Service Operation is dependent initially on what has been delivered as the result of the work in Service Strategy, Service Design, and Service Transition. Service Operation should seek to improve balance in the light of experience while maintaining balance as things change. There are four elements to be considered.
â¢  Internal IT versus external business   If you focus too much on the technology, you can fail to meet the business needs; on the other hand, you can focus too much on what the business requirement is and fail to ensure you are technically capable of meeting it.
â¢  Stability versus responsiveness   It is generally a good idea to create a stable platform on which services can be delivered. Indeed, stability may be vital at critical business periods; however, changing business requirements must not be ignored. On the other hand, while responding to changing business needs is usually a good thing, if you are continually pushing through change after change, it may result in unstable technology and unreliable services.
â¢  Quality versus cost   High quality often means high cost; concentrating on achieving the highest possible quality (going for a "Rolls Royce solution") may waste money that could be better spent elsewhere, and it may result in an over-spend. On the other hand, if the business (the customer) won't invest adequate money in IT service management, it probably won't receive the quality of service it needs. Are the agreed-on service levels achievable; are they affordable?
â¢  Reactive versus proactive   Some service providers may conceive their job to be purely reactive, or they may be so busy "firefighting" that they can't see that a little bit of proactive work may win them some respite. Purely reactive organizations doom themselves to running fast to stand still; they fail to appreciate that becoming more proactive would reduce the amount of reactive work they find themselves doing. The customer is not going to receive an optimal service, and the business strategy is not going to be supported adequately. On the other hand, if the service provider becomes absorbed with being as proactive as possible, day-to-day emergencies may become ignored, and unnecessary changes may be introduced with a resultant waste of resources and higher risk.
Communication
Good communication is vital in every lifecycle stage but particularly so in Service Operation. This is the lifecycle stage where you can see most communication taking place: within the service provider's organization but particularly between the service provider and the users. The breadth of communications in Service Operations covers the following:
â¢  Communication with users and customers
â¢  Communication within and between operational teams
â¢  Communication between operational shifts
â¢  Performance reporting
â¢  Communication with projects and programs
â¢  Communication related to changes, releases, and deployments
â¢  Communication related to failures, exceptions, and emergencies
These principles of balance and communication are not examinable but are important to a full understanding of Service Operation and its place in the service lifecycle.
Service Operation Processes
The five processes described below were briefly outlined in Chapter 2. It is helpful to remember that a characteristic they share is that they execute the policies and plans that will have been developed, agreed on, documented, and tested in Service Design and Service Transition. If that work was not completed satisfactorily, these processes won't operate to best effect, in which case you'll have an opportunity for some continual service improvement!
Event Management
Lots of things happen in the live environment, and anything that is significant needs to be identified and analyzed before you leap into action. Therefore, Event Management is an important process in Service Operation in helping you monitor what is happening and to take appropriate steps.
The purpose of Event Management can be put simply as being able to manage events throughout their lifecycle. However, in contrast to, say, a normal change for example, the life of any event is usually comparatively short.
To meet its purpose, Event Management should do the following:
â¢  Detect all changes of state that have a significance for any specified configuration item (CI) including IT services. That significance does not have to be particularly great.
â¢  Identify the type of event that has been detected and take appropriate action.
â¢  Trigger other appropriate Service Management processes or Service Operation action as necessary.
â¢  Capture performance information for comparison against design specifications including service level agreement (SLA) targets.
â¢  Provide inputs to service assurance and Continual Service Improvement activities.
Event Management monitors and controls configuration items (CIs) such as technical components, environmental conditions, software (licensing and usage), and security CIs. It seeks to check that components that should remain in a steady state are remaining steady while checking that other components, whose characteristics are expected to change as conditions change, are varying within the set performance parameters.
Definition of an Event
As implied earlier, the ITIL definition of an event is a change of state that has significance for the management of a CI or IT service. Of course, an IT service should be a CI anyway, but I'll let that minor example of a tautology pass.
Types of Event
Events come in three colors: green ones, amber ones, and red ones, which are described as follows:
Informational   These are the green ones, the ones you like to see. They show that everything is operating as it should. For example, authorized users are successfully logging in, automated housekeeping activities are proceeding normally, and data transfers are being completed on time and without errors. You can look at the shift operations log and see a reassuring sequence of check marks in all the boxes. Lovely.
Warning   An indicator light has turned to amber; something is not quite right. Typically you set a threshold so that you will receive a warning in time to take action before a failure occurs. For example, you could set a disk utilization threshold at 80 percent to alert you to any potential, developing capacity issue. If that threshold is breached only occasionally, you may not worry, but if that breach is occurring with increasing frequency and disk utilization is then tending to stay high, some capacity management action may be needed.
Exception   A red lightâtrouble! Maybe you didn't take prompt enough action in response to an amber light and now performance is being unacceptably impacted. More likely, something has broken and needs to be fixed. Perhaps a user account has been locked out unexpectedly or some unlicensed software has been detected and the situation needs to be investigated and "regularized" (as my bank manager used to say to me regarding my bank overdraft in past days).
Definition of Alert
Here is another ITIL definition you need to learn: an alert is a warning that a threshold has been reached, something has changed, or a failure has occurred.
If the occurrence (the change in state) is expected, it would be informational; if it's a threshold that's been reached, it would be a warning; and if it's a failure, it would be an exception. Alerts are often generated by automated monitoring tools and are used either to enhance the monitoring of a particular CI or configuration or to trigger some human intervention.
Subsequent Action
Informational events are complete in themselves, but the records that are produced will reside within the configuration management system (CMS) as potentially valuable information. Warnings may also be recorded in the CMS, but such warnings often will trigger Problem Management to undertake prompt investigation of the underlying cause in order to prevent actual failures from occurring. Exceptions will often trigger the Incident Management process (and, in turn, the Problem Management process) or may invoke Change Management or Request Fulfillment.
Incident Management
This is one of the pivotal processes in ITIL, but there's more to it than just fixing things when they break. In particular, you need to understand the relationship between Incident Management and Problem Management and how good Incident Management provides valuable information both for Problem Management and for Continual Service Improvement.
The purpose of the Incident Management process is to restore normal service operation as quickly as possible and minimize the adverse impact on business operations, thus ensuring that agreed-on levels of service quality are maintained.
As we've done before, let's examine this definition.
â¢  ". . . normal service . . ."   Normal service needs to be defined somewhere. Where do you think that should be? Yes, in the relevant service level agreement. Of course, if you haven't got an SLA or if its contents are inadequate, there's going to be plenty of scope for dispute and argument.
â¢  ". . . as quickly as possible . . ."   No ifs, no butsâas quickly as possible. If something breaks and you can fix it straightaway, you should do so. The SLA may say something like, "95 percent of all incidents are to be fixed in four hours," but that should not be misinterpreted as meaning every such incident should be fixed in four hours. Each individual incident should be fixed as soon as possible, and when you come to review performance over, say, a month, you would want to see that if you had, say, 100 such incidents, at least 95 were fixed within four hours. Some may have been fixed much faster; others may have taken much longer. And let's be as clear as we can about "as quickly as possible." Take this example: a particular device fails and restoring it to normal operation requires the replacement of a component, but that component is not immediately available because the factory that makes it in Japan has just been inundated by a tsunami and it will be six months before production resumes. Therefore, it will be at least six months before normal service can be resumed, and that is "as quickly as possible," which is disappointing but inescapable. However, I would hope that the organization had some sort of workaround or alternative to keep the service going pending the return of full, normal operation!
â¢  ". . . minimize the adverse impact . . ."   You can minimize the impact in two ways. First, an efficient and effective incident process will in general restore normal service faster than a chaotic, undocumented process. Second, good incident management works in conjunction with Problem Management to provide effective temporary workarounds to restore service while an underlying cause is being resolved.
â¢  ". . . agreed-on levels of service quality . . ."   You looked at the service level agreement when you examined previously the wording normal service. Here you return to the SLA, which is where the agreed-on levels are documented, often as specific targets. To meet the purpose of the process, Incident Management needs to do the following:
â¢  Have and follow standardized methods and procedures
â¢  Provide visibility of incidents and clear communication paths
â¢  Enhance the perception of the process in the eyes of the customer, increase user satisfaction, and strengthen participation in the process
â¢  Align the priorities used in the process with agreed-on business priorities
Scope of Incident Management
In simple terms, the scope of Incident Management covers any event or occurrence that disrupts or could disrupt the delivery of a service. That is summed up in the definition of incident, which is an unplanned interruption to an IT service or a reduction in the quality of an IT service or the failure of a CI that has not yet impacted an IT service.
As you did earlier with the purpose of Incident Management, let's examine a few words in this definition of incident.
â¢  ". . . unplanned . . ."   The relevant SLA should specify the agreed-on service hours; therefore, if the interruption occurs outside those planned, agreed-on hours, then it may not be an incident. For example, if a user contacted the service desk to report that they couldn't log on but the time was outside planned hours, that would not be an incident. But you shouldn't forget to take into account any temporary extension of agreed-on hours or any reduction in those hours (do you remember in Change Management you publish a projected service outage [PSO] notification?). Nevertheless, if a CI has actually failed, even outside agreed-on service hours, it is still an incident, but the priority at that time would be lower than for a failure that was actually impacting a service.
â¢  ". . . IT service . . ."   It is IT services that you manage, again implying that there should be relevant SLAs.
â¢  ". . . reduction in the quality . . ."   The service need not have failed completely. The relevant SLA should specify elements such as the level of the maximum acceptable response time. If those maximum acceptable levels are not being met, an incident should be logged.
â¢  ". . . failure of a CI that has not yet impacted an IT service."   In Availability Management, you seek to improve reliability by increasing resilience, typically by duplicating such infrastructure components as data circuits or disk arrays. If one of those duplicated components fails, the service should be unaffected; that's the point of the duplication. However, you will have lost your resilience and that needs to be restored, so an incident of the appropriate priority would still be logged.
I have found a useful, straightforward way of defining an incident as being when something is not working as specified.
Incident Process Activities
As you may recall from Chapter 1, the Incident Management process is a classic example of an ITIL process (see Figure 6-1). Can you remember the definition of a process? It's a set of coordinated activities combining resources and capabilities to produce an outcome that creates value for the customer.

Figure 6-1   Incident Process activity flow
You'll now consider each of those activities, and I'll point out where they match the four characteristics of a process. Please don't tell me you've forgotten them!


EXAM TIP    You are almost guaranteed a question that requires you to demonstrate a knowledge and appreciation of these four characteristics. If you need to, take another look at Chapter 1.

Detection   This is the triggerâthe first characteristic of a process. Something has to kick the process off, and that something is an occurrence that appears to be an incident; perhaps something has broken. Detection can take place in four main ways.
â¢  This can happen in Event Management, particularly when exceptions are detected and the occurrences are passed to Incident Management for action.
â¢  Autodetect can alert Operations Management that failures have occurred (in perfect theory this may be considered as Event Management, but the point is to fix things as quickly as possible; Event Management adds no value if the failure is obvious).
â¢  Technical staff may identify anomalies that may not yet have impacted services but that merit immediate attention.
â¢  Users may experience issues that they may believe are symptoms of incidents.
Notification   When an incident-like occurrence is detected, the appropriate function should be notified in accordance with the Incident Management process. In ITIL that function is invariably the Service Desk. You'll learn more about the Service Desk later. There is a wide range of possible ways to notify the Service Desk.
â¢  Directly from Event Management
â¢  E-mail from remote technical staff and users
â¢  Telephone call from users or technical staff (the classic method!)
â¢  Through a support website (which may usefully be part of an integrated service management tool)
â¢  Personal walk-up visit to the Service Desk (the service desk analyst's least favorite)
The choice of which routes should be available should be negotiated and documented in the SLAs.
Logging   The Service Desk is responsible for logging incident-like occurrences, and from this point these occurrences become visible to all who have appropriate access to the incident management tool (a bit tricky if you're using a system of Post-it Notes; it's usually better to have something a little more sophisticated!).
The Service Desk operator (often called an analyst) will raise and start to complete an incident record using the information supplied, eliciting as necessary any additional details. A good tool will provide a template to assist in recording the information with quality and consistency.
Categorization and Classification   It is now possible for the Service Desk to identify whether the occurrence is really an incident or is something else. It may actually be a request for service. For example, a user needs some advice or guidance with an application, or a printer needs the replenishment of a consumable (it's out of paper or toner, perhaps). The Service Desk will take action regarding such occurrences by invoking the Request Fulfillment process.
You are now left with real incidents that can be classified further. An important classification is to determine the service that is affected in order to invoke the relevant SLA. The Service Desk can then use the provisions of the SLA to determine whether "normal service" has been interrupted and to apply the correct priority.
Prioritization   You need to set the priority of each incident as soon as that can sensibly be done. Prioritization provides the Service Desk with the relative urgency of each incident, which helps ensure that the more urgent incidents are addressed before those of lesser urgency. It would be a misuse of resources to embark upon a detailed investigation and analysis of a low-priority incident when a high-priority issue may be sitting awaiting classification.
Prioritization is based on balancing two elements: impact and urgency.
â¢  Impact   The effect on the business
â¢  Urgency   How long it will be before the impact is felt significantly
At Table 6-1 is an example of a typical priority coding system.

Table 6-1   Example of a Typical Priority Coding System
The definition of what constitutes major, severe, or minor impact, as well as high, medium, or low impact, would be in the relevant SLAs.
The priority codes should have a common meaning in terms of a target fix time throughout all SLAs, as shown in Table 6-2.

Table 6-2   Example of Typical Fix Targets Related to Priority Codes
For example, a fault is detected in the finance application that would cause the end-of-month process to fail. That would have a business impact of major, but if it were discovered at the beginning of the month, the urgency would be low, and a priority of 3 would be allocated; therefore, incidents with a priority code of 1 or 2 would take precedence. However, if the incident remained unresolved, its urgency would climb to medium as the end-of-month deadline approached, and therefore its priority code would need to be raised from 3 to 2. As time progressed, it would claim increasingly greater precedence over incidents of lower priority as it became more urgent to get the incident fixed.
Of course, if the appropriate resource is available (in other words, the person isn't working on other incidents), then an incident should be worked on without delay and irrespective of its priority. Incident Management requires normal service to be restored as quickly as possible. Why would you not want to fix something if you could? Prioritization is needed when there are competing demands for the same resource; high priority should not be some sort of virility symbol to make a customer or user feel important ("I demand a priority 1!").
Nevertheless, the Incident Management process should provide clear guidance on what constitutes a major incident and who can declare one. Major incidents merit particular attention, and a special subprocess should be invoked when a major incident is identified. I'll cover that in the section "Major Incident" later in the chapter.
Initial Investigation and Diagnosis   You've weeded out the service requests, and you've escalated major incidents to a special team, which now leaves the Service Desk with the bulk of the remaining occurrences, which are all incidents.
In an ideal world, the Service Desk would now investigate each incident and quickly reach a diagnosis for which it already has a resolution on the shelf and with which it can proceed to restore normal service. Job done! Great stuff! Actually, it is surprising how close to this ideal world you can get if you have an effective Incident Management process supported by sound Problem Management and a capable service management tool.
If, however, the Service Desk can't achieve a quick resolution, it should not spend too long on in-depth analysis; such analysis would not usually be within the Service Desk's capabilities. The Service Desk cannot reasonably be expected to match the expertise of every specialist group; it should concentrate on what it does best: logging, categorizing, prioritizing, and communicating. If the Service Desk cannot quickly diagnose and fix a fault because it doesn't have the expertise or authority, it should escalate the issue.
Escalation   There are two types of escalation: hierarchical and functional. Incidents may require either or both sorts.
â¢  Hierarchical   This is when an incident is referred up the management chain, usually for two reasons (again it can be for either reason or for both).
â¢  Everything may be under control, but it may be helpful to let higher management know what's going on. For example, an important executive who is known to be impatient may be suffering some sort of IT issue (a broken laptop, perhaps), and, while the incident is being handled exactly according to the SLA and its target, it may still be prudent for the Service Desk to escalate the incident hierarchically to the IT director to preempt the phone call that the important executive is about to make! Meanwhile, the incident should proceed as normal to resolution.
â¢  To fix a particular failure, it may be necessary to obtain special expertise or buy a replacement component. If the specific expert is devoted to a high-priority project, it may be necessary to approach higher management to obtain their release to resolve this particular incident. (The SLA and the project should allow for this; if they don't, it's something else for Continual Service Improvement.) Buying a replacement component may need budgetary authorization, which may need higher-level budgetary approval. It would be sensible, however, to have an appropriate level of budgetary delegation to, say, the service desk manager for this purpose.
â¢  Functional   This is the most common type of escalation. It occurs when the Service Desk itself does not have the expertise necessary to resolve an incident and needs to send the incident to the appropriate specialists. These specialist areas are sometimes referred to as resolver groups. Resolver groups can be many and varied; they can be internal or external, referred to as second line or third line, and may even refer incidents to and from each other. Typically the Service Desk would functionally escalate application-related incidents to the Applications Management function, technical issues to the Technical Management function, and so on.
Whatever type of escalation takes place, there are two crucial points to bear in mind.
â¢  All escalations should take place in accordance with the relevant service level agreements (SLAs), or the relevant operational level agreements (OLAs), or any relevant underpinning contracts, and the Incident Management process. If a shortcoming is detected in any of these, the issue should be formally referred to Continual Service Improvement (CSI).
â¢  The Service Desk owns all incidents throughout their lives, from logging to resolution. Several resolver groups may be involved, and the terms for their involvement should be documented in the relevant SLAs, OLAs, and underpinning contracts, but the Service Desk should be empowered to track and monitor incidents as they pass through the incident lifecycle and should be able to hasten progress. There should never be the slightest doubt as to who owns any particular incident; it is always the Service Desk. Equally, if anyone seeks information about an incident, it is to the Service Desk they should direct their inquiry.
Completion of Investigation and Diagnosis   Incidents that have been successfully diagnosed by the Service Desk will by now have proceeded directly to resolution and recovery. Other incidents, once they have arrived at the appropriate resolver group, will have their investigation and diagnosis completed.
Resolution and Recovery   The diagnosis and the appropriate fix will be passed to this process activity where whoever is responsible for applying the fix returns a failed component to a working state (that component could be an item of hardware, a software module, or perhaps even a user who made an error!). However, before normal service can be restored, it may be necessary first to recover the configuration that has been affected and then to restore any lost data. Finally, the service itself can be restored, and it's quite a good idea to get the Service Desk to tell the good news to the affected users so they can get back to normal work without delay.
Review and Closure   As you know by now, in ITIL you always review things before you close them. In Incident Management, that is the responsibility of the Service Desk. Regardless of the resolver group that may have carried out the investigation and diagnosis and regardless of the person who performed the fix, the incident is passed back to the Service Desk; after all, the Service Desk does own all incidents, doesn't it?
The Service Desk will first check with the initiator of the incident that normal service has been restored. That is necessary because it cannot be guaranteed to have happened. For example, the broken component may have been fixed, but data has not been recovered, or it could be as simple as the users not being told that service had been restored.
The Service Desk will then check that the incident process has worked effectively and that all the appropriate fields in the incident record have been completed (including a meaningful narrative, not just "Fixed OK" or the like). Any valuable feedback should be passed to Continual Service Improvement. Finally, the Service Desk will add some suitable closure statement or coding to indicate the actual failure plus an underlying cause code (indicating such areas as hardware failure, inadequate testing, poor user training, and so on). These closure statements and codes provide invaluable evidence to Problem Management (as you will learn about later in the chapter) and to many other processes in the service lifecycle (do you remember the feedback loops in Figure 2-2?). You may also remember the expanded incident lifecycle in Figure 4-12, which depends on this valuable data. You can see how the activities of the Incident Management process have a parallel in the five steps of the expanded incident lifecycle: Detect â Diagnose â Repair â Recover â Restore.
Meanwhile, I haven't forgotten about the four characteristics of a process that were listed in Chapter 1. I've already mentioned the "trigger" at the start of this section. "Measurable" applies to all the activities I've just covered; targets for each of them should have been specified in SLAs, OLAs, and underpinning contracts; those targets should be measurable, and the performance data should be captured. The "specific result" is the restoration of normal service and the "defined customer" is the user or group of users affected by the incident.
Major Incident
During the prioritization activity, you may find that the impact and urgency of an incident merits it being designated a major incident. It is a good idea for the Incident Management process to have predefined criteria to assist in speedy designation. Of course, in reality, the service desk may be experiencing an incident "blizzard" of multiple calls, and the IT director may have business operations on the phone immediately! Nevertheless, to keep control in such a situation, it is sound practice to limit the formal declaration of a major incident to higher supervisory or management levels such as the service desk shift supervisor, the service operations shift supervisor, and management grades above them.
Many organizations have ready-prepared plans to handle major incidents when they occur and to bring together a major incident team of appropriate specialists to manage the issue; these specialists can be drawn from whatever are the appropriate, available resources including those designated for Problem Management.
Notwithstanding the formation of a special team, the Service Desk still owns the incident and should be allowed to play its crucial role in communication between the major incident team and the users and customers.
Incident Models
At the beginning of this section on Incident Management, I listed four aspects that are crucial to achieving the purpose of the process. Those four aspects are as follows:
â¢  Have and follow standardized methods and procedures
â¢  Provide visibility of incidents and clear communication paths
â¢  Enhance the perception of the importance of the process in the eyes of the customer, increase user satisfaction, and strengthen participation in the process
â¢  Align the priorities used in the process with agreed-on business priorities
Those four aspects are greatly assisted by having incident models and a suitable support tool, ideally as part of an integrated IT service management tool suite.
An incident model is a set of predefined steps for handling a particular type of incident. The service desk should have a generic model for handling the initial logging and categorization of incidents. Once the service that has been impacted has been identified, the model for that service should be invoked and then, according to the symptoms elicited by the service desk, appropriate diagnostic scripts could be presented for the service desk analyst to follow. Well-designed diagnostic scripts help the service desk to gather the relevant details not only to enable the correct resolver group to be identified but also to provide that resolver group, on functional escalation, with all relevant information to enable investigation and diagnosis to start immediately. As experience and confidence is gained, it is possible to empower the service desk to implement a fix from the diagnostic script without having to disturb the specialist second-line or third-line team concerned. That's real good practice, isn't it?
Incident Matching
Another powerful use of an integrated IT service management tool is in a subprocess called Incident Matching. This subprocess links Incident Management and Problem Management, and you'll look at it in more detail in the next section. However, its particular value to Incident Management comes during the service desk's investigation and diagnosis activity when it seeks to match the symptoms of the incident with recorded known errors and workarounds. When a match is found, the service desk can apply the workaround to restore normal service without any delay.
Problem Management
The concept of Problem Management is not always clearly understood, probably because it is a close associate of Incident Management and some people get the two confused. Incident Management is about fixing things quickly (and you may not be too fussy about how you do that in an emergency). In contrast, Problem Management is about getting to the ultimate truth and putting in place a lasting fix. Therefore, the two processes have markedly different imperatives. Incident Management is fire-fighting. Problem Management demands detailed analysis of all relevant data and the reaching of the correct conclusion; accuracy is usually more important than speed. Indeed, Problem Management can make good use of techniques such as "brainstorming," Kepner and Tregoe, and Ishikawa analysis.
The purpose of the Problem Management process is to manage problems through their lifecycle, seeking to minimize the adverse impact of incidents and problems caused by underlying errors and to prevent recurrence of incidents related to those errors.
Once more, as I've done before, let's examine a few words in the previous definition.
â¢  ". . . lifecycle . . ."   Problems move through a series of activities similar to those of the Incident Management process, and there are strong links with Incident Management during investigation and diagnosis.
â¢  ". . . minimize the adverse impact . . ."   Clearly, incidents, by definition, have adverse impacts, and Problem Management provides workarounds to restore normal service, quickly thus minimizing that impact. Incidents are often related to underlying causes; Problem Management seeks to identify such causes even before an incident occurs and, if the cause can't be removed immediately, to have a workaround ready in anticipation.
â¢  ". . . underlying errors . . ."   These are key to Problem Management. Event Management and Incident Management can provide evidence, or at least symptoms, of the existence of these underlying errors, and that can trigger reactive Problem Management; Problem Management itself should also seek to identify underlying errors proactively.
â¢  ". . . prevent recurrence . . ."   Here is where the real value of Problem Management is to be found. If you can prevent incidents from happening in the first place, you eliminate disruption and thus maximize the availability and the value of your services.
Scope of Problem Management
As you saw earlier, Problem Management covers the diagnosis of the root cause of incidents (or potential incidents). It can be triggered either in reaction to Event Management and Incident Management or by its own proactive initiatives. It maintains information about problems, workarounds, and resolutions, and it is responsible for ensuring that resolutions are implemented. Implementation should be through the Change Management and Release and Deployment processes (Problem Management would, typically, be the sponsor of relevant RFCs; see Chapter 5). Moreover, proactive Problem Management takes you up to where Availability Management or Capacity Management takes over responsibility (see Chapter 4). Furthermore, Problem Management as a whole is firmly embedded in the concept of Continual Service Improvement, which you'll examine more closely in Chapter 7.
Basic Concepts of Problem Management
As you now appreciate, one of ITIL's great strengths is the set of clear definitions it gives you. Here are the four crucial definitions used in Problem Management:
â¢  Problem   A problem is the unknown underlying cause of one or more incidents (I would expand that definition to include potential incidentsâdo you remember your Warning type of event?)
â¢  Workaround   A workaround is a way of reducing or removing the impact of an incident pending an eventual permanent fix. A re-boot is a classic workaround; you may have no idea of the underlying cause, so you still have a problem, but you have a way of restoring normal service even if you don't really know how it works.
â¢  Known error   A known error is the next best thing to a full, permanent resolution. It indicates that you have both an identified underlying cause and a workaround. You would also expect to see a cross-reference to the RFC that should have been raised as soon as a suitable permanent fix has been agreed on.
â¢  Known error database (KEDB)   The KEDB is a particularly valuable repository of knowledge and should form part of the configuration management system. It is usual for the details of problems, workarounds, and known errors to be in the KEDB. However, it is important that actual known error records can be differentiated from problem records. If you have identified the underlying cause of one or more incidents but you still don't have a workaround, you don't have a known error; you've still got a problem (literally!).
In the KEDB you can change the status of a record to show its progress from problem to known error. But here's a question for you: can an incident ever be converted to a problem?
The answer is absolutely clear: no, never!
When an incident is open, it indicates that normal service is being interrupted; therefore, it is essential that when normal service is resumed, perhaps by using a workaround, the incident is closed. Otherwise, its continuing open status would be misleading. Of course, the associated problem/known error record would stay open and would remain so until the permanent fix has been rolled out (the completion of that rollout would be indicated by the relevant RFC and its associated release being successfully completed and reviewed). Moreover, an accurate and complete picture will be available because incident records, problem records, and known error records are part of your mature CMS, which will show the relationships between them.
Incident Matching
I mentioned this subprocess during the section "Incident Management" and said that its purpose is to match the symptoms of an incident with any similar recorded known errors and workarounds and, when a match is found, to enable the service desk (or a technical team) to apply the workaround to restore normal service.
Clearly, this is a valuable activity, but its success depends on there being a mature Incident Management process and a mature Problem Management process, supported by an effective CMS and an effective service management tool.
Records in the KEDB should have relational links to all relevant past incidents, and these KEDB records should hold key information in defined and standardized fields against which the Incident Management process can attempt to match the symptoms that the service desk has elicited regarding the live incident that is being handled.
Without mature processes, and support tools, incident matching remains a hit-and-miss activity dependent on the personal knowledge and intelligence of those who may be involved. In ITIL you should be seeking consistency, quality, and the sharing of valuable knowledge. No individual heroics should be needed!
Process Initiation
The Problem Management process flow is similar to the Incident Management process flow, but in both processes it is crucial to define and keep under review exactly who are those empowered to initiate Problem Management, particularly when the process is first formally introduced. In theory every incident has an underlying cause, but having a problem record raised for every incident would probably overwhelm the support organization. At first it is usually wise to restrict the initiation of Problem Management to appropriate, trained, and experienced roles such as service desk supervisors or members of second-line and third-line resolver groups.
Problem Models
I'm sure you've noticed by now that ITIL loves to have models that provide a set of predefined steps to follow when handling a particular type of occurrence. This approach applies equally to Problem Management where it can be useful to have standard operating procedures and checklists to help those engaged in investigating what can be complex and puzzling issues.
Major Problem Review
What constitutes a major problem should be defined in the Problem Management process and would probably be closely aligned to the definition of a major incident as mentioned in the Incident Management process. When something with major impact, high urgency, and complexity has occurred, I suggest that the niceties of whether it's a major incident or a major problem are purely academic. Whatever it is called, it should be resolved speedily, and then a review (a postmortem of some sort) is required.
The purpose of a major problem review is to answer these five questions:
â¢  What was done correctly?
â¢  What was done incorrectly?
â¢  What could be done better in the future?
â¢  How can a recurrence be prevented?
â¢  What, if any, was the involvement of third parties?
Most emphatically, a major problem review should not be used as an opportunity to allocate blame (although, disappointingly, that is often exactly what happens!).
Request Fulfillment
Request Fulfillment is a straightforward and valuable process. It is concerned with handling requests from users and, in so doing, can deliver value directly and swiftly to those users, enhancing not only their efficiency and effectiveness but also their perception of the worth of the service provider, particularly of the service desk.
The purpose of the Request Fulfillment process is to manage the lifecycle of all service requests from users.
Service requests generally have comparatively short lifecycles, and the important words here are all and users. Users can ask for such things as Internet access, a password reset, service information, a standard change, advice and guidance, a CSI suggestion, and so on; the potential list is long and depends on many factors such as the business being supported, the complexity of the services being provided, and the skill level of the users. Requests from users should not bypass this process; that can lead to users not being responded to in a consistent manner and IT specialist staff members being distracted from their important, specific tasks to do what is in reality work for which the service desk was established.
You should also note that if customers (as defined in Chapter 1) have requests to make in their capacity as customers, such requests being of a managerial nature, they should be handled by either the Business Relationship Management or Service Level Management process. However, if someone whose role includes being a customer has an individual issue, they would then be acting as a user and should use the Request Fulfillment process in the same way as all other users.
To meet the purpose of the process, Request Fulfillment needs to do the following:
â¢  Increase user (and customer) satisfaction. The users' satisfaction would be increased directly, and the customers' satisfaction would also be increased because the satisfaction of the users they represent would have been enhanced.
â¢  Provide access to a set of standard services, often through a web-based menu.
â¢  Provide information and guidance, ranging from simple questions such as "What are the contact details of a particular stakeholder?" to more complex ones such as "How can I do pivot tables in Excel?"
â¢  Handle complaints, comments, and (don't forget) compliments. It can be pleasantly surprising to find that if you provide users a chance to give you a "strawberry" rather than a "raspberry," they will often do so.
The following are other points to make about Request Fulfillment:
â¢  The process is about handling requests from users, not satisfying all of them. Some requests should be submitted as change requests, for example.
â¢  Request models should be used in conjunction with a suitable integrated service management tool to enable requests to be handled speedily and consistently.
â¢  All requests should be recorded because they provide valuable evidence of the needs of users. For example, if the service desk is getting requests from users for information that should be in the telephone directory, is that because the telephone directory is out of date or that the service desk is the first place users think of contacting when they need information? It could be both, of course. Management should be pleased that the service desk has a good reputation in the eyes of the users. In this particular case, management may decide to abandon the traditional telephone directory and rely instead on the accurate and complete data in your high-quality CMS!
â¢  Service requests can act as the trigger for other processes and activities. For instance, line managers could be empowered to submit a request for a standard change to provide a new starter with their laptop, network logon, and e-mail access. Service requests can also be the trigger for the Access Management process.
â¢  As you have already seen, service requests can start off in the Incident Management process where they need to be identified as such at an early stage and passed to the Request Fulfillment process.
â¢  Event Management can be the trigger for Request Fulfillment when an exception is found. For example, if an unlicensed but valid piece of software is found on a laptop, the Request Fulfillment process could be triggered to regularize the matter either by removing the software or by registering the detected installation and allocating a license.
Some legacy ITSM tools handle both service requests and incidents within the same workflow. This situation is far from ideal but can be encountered. That's an opportunity to make a suggestion through the Request Fulfillment process into the CSI register, perhaps!


EXAM TIP    Not all service requests can be fulfilled, only those for which provision has been made in the process. Indeed, if you were to listen in to requests being made by users to service desk analysts, you may consider some requests to be rather rude if not physically impossible!

Access Management
Most organizations are only too well aware of the need to control access to services and information. In the IT Security Management process in Chapter 4, you came across the principles expressed with the initials CIA: confidentiality, integrity, and availability (or accessibility as I prefer it). Access Management is the process that executes the policy set out in IT Security Management.
The purpose of the Access Management process is to provide the rights for users to be able to use a service or group of services.
To meet that purpose, Access Management should do the following:
â¢  Operate in accordance with the policies set out in IT Security Management
â¢  Grant access to services where approved
â¢  Change access rights when necessary
â¢  Remove access rights when instructed to do so
â¢  Ensure changes to access rights are completed in accordance with the process
â¢  Oversee access to services (often done in conjunction with Event Management)
As mentioned in Request Fulfillment, Access Management is often triggered by a service request. Access Management can also be triggered by Change Management or Release and Deployment Management, particularly for mass changes.
The activities of Access Management usually include enrolling, changing, or deleting users with regard to access groups. These activities may be performed within whatever functions management deems to be appropriate. Some formal training material suggests that Access Management is not usually a separate function; where Access Management takes place is a decision for individual service providers so long as the appropriate roles and responsibilities are clear, agreed on, and documented.
Service Operation Functions
It was in Chapter 2 that you last considered together all the functions that ITIL gives you although I have mentioned them in passing since then. Can you remember the definition of a function? If that definition eludes you at the moment, may I refresh your memory: a function is a unit of organization specialized to perform certain types of work and responsible for specific outcomes.
Functions perform the activities that are specified in processes and thereby support or develop those all-important services that are your ultimate focus.
The Service Desk and IT Operations Management are two functions that clearly belong to the Service Operation stage of the service lifecycle. Applications Management and Technical Management have a wider relevance in the lifecycle but, for clarity and convenience, are also placed in Service Operation.
Service Desk
The Service Desk is a crucial concept in Service Management, and the contribution of this function to the delivery of effective services to customers cannot be over emphasized. Regrettably, specialist teams sometimes disparage the depth of knowledge of Service Desk staff; those specialists are ignoring the fact that the Service Desk has to cover all aspects of all live services as well as needing to have interpersonal skills that are not always to be found in those specialist teams.
The purpose of the Service Desk function is to provide a single, central point of contact for all users of IT services. Any user who has an issue with an IT service should have no doubt as to whom they should contact; they should contact the Service Desk.
In what processes do you think the Service Desk has a role to play? The most obvious ones are Incident Management and Request Fulfillment. But also remember that Incident Management is not the exclusive preserve of the Service Desk; other functions need to get involved too, particularly in functional escalation and in providing diagnostic scripts. Equally, while the Service Desk handles all service requests, it may pass requests on to other functions for ultimate fulfillment.
The benefits of an effective Service Desk are as follows:
â¢  Improved customer perception and satisfaction through the effective support of the services provided to users
â¢  Improved visibility of issues and a greater consistency of support by providing a single point of contact for help, guidance, information, and communication
â¢  Speedy restoration of service to users in the event of failure, reducing the negative impact on the business
â¢  Improved speed and quality in the handling of service requests from users
â¢  More effective teamwork throughout the service provider's organization (the work of the Service Desk should help reduce the distraction of specialist teams; moreover, its monitoring of incident activity through the provisions of operational level agreements should help knit together the different elements of the organization)
â¢  Better management and control of the infrastructure, through the Service Desk's involvement in the activities of the CMS
â¢  Sharper focus on service provision including a proactive approach to service improvement
â¢  The capture of comprehensive management information that is relevant and accurate
Service Desk Activities
The Service Desk performs the following activities:
â¢  Logging and categorizing incidents and service requests
â¢  Prioritizing incidents
â¢  Investigating and diagnosing first-line incidents, resolving incidents, and restoring service whenever possible
â¢  Escalating incidents functionally and/or hierarchically when appropriate
â¢  Escalating service requests functionally and/or hierarchically when appropriate
â¢  Keeping users informed at all times, not just regarding individual incidents and service requests but generally regarding the status of services and future plans
â¢  Closing formally all incidents and service requests (and any other similar contacts)
â¢  Contributing to keeping the CMS up to date
â¢  Communicating both to the user community and within the service provider's organization
â¢  Conducting user and customer satisfaction surveys
Service Desk Staff Attributes
Staff should be selected carefully for work on the Service Desk. Their training should be as thorough and professional as for any other post in the service provider's organization, and they need appropriate support tools, supervision, and management. It is common practice for the Service Desk to provide entry-level positions for new staff; however, while some newcomers can develop into excellent service desk analysts, others may not have the same flair!
Effective service desk staff members possess the following attributes:
â¢  Sound business awareness and knowledge
â¢  Technical awareness
â¢  Interpersonal skills, including cultural sensitivities, empathy, and patience
â¢  Communication skills, including active listening
â¢  A methodical and unflustered approach
â¢  Acceptance of ownership
â¢  (Foreign) language skills (where relevant)
Service Desk Structures
Service Desks have evolved over time. When it first became evident that users would benefit from having some central, single point of contact, the help desk came into being. Help desks originally may have been little more than a telephone number for people to call when they needed assistance. However, the value of help desks was quickly appreciated and the assistance provided soon expanded, and they became better organized. As help desks began to provide more than just a break/fix service, they were retitled Service Desks. It's worth emphasizing that Service Desks should not be perceived by the users as just being simple call centers.
Service Desk structures have evolved over the past few years as follows.
Local Service Desk   In the beginning, help desks (or early Service Desks) tended to be located physically close to the users they supported. This type of Service Desk still exists in certain places, and Figure 6-2 shows its structure.

Figure 6-2   Local Service Desk
Centralized Service Desk   As the benefits of Service Desks came to be appreciated, so did the benefit of concentrating expertise in one location rather than having it dispersed over a number of sites. A centralized Service Desk provides benefits by making better use of resources, enabling better supervision, improving consistency, and capturing a wider range of management information. Figure 6-3 shows a centralized Service Desk. Simple centralized Service Desks don't need sophisticated technology; voice communication was sufficient originally, although all Service Desks can benefit from an effective integrated IT service management tool.

Figure 6-3   Centralized Service Desk
Virtual Service Desk   As technology developed, it became possible for the resources of a centralized Service Desk to be located wherever convenient rather than in one physical location. There would still need to be one central record, but the functionality of the service desk tool and voice communications could be provided wherever any particular member of the service staff happened to be, even at home. To the user, however, the Service Desk was still evident as a single point of contact. Figure 6-4 shows a virtual Service Desk structure.

Figure 6-4   Virtual Service Desk
Follow-the-Sun Service Desk   The ultimate type of Service Desk, which combines features of local, centralized, and virtual service desks, is the follow-the-sun Service Desk. This type of Service Desk arose when international organizations with offices around the world realized they could provide a 24/7 Service Desk service by coordinating their resources, as shown in Figure 6-5.

Figure 6-5   "Follow-the-sun" Service Desk
In this example, you have an organization with three service desks: one in the United Kingdom, one in California, and one in China. The UK Service Desk provides the Service Desk service worldwide from 8 a.m. to 4 p.m. UK time; when the United Kingdom closes for the day, it will be 8 a.m. local time in California when the US West Coast Service Desk takes over for a further eight hours, by which time it will be 8 a.m. in China when that Service Desk will assume responsibility until it is again 8 a.m. in the United Kingdom when the daily cycle restarts.
As you can see, these Service Desks are local to their continental locations, are probably centralized or virtual within that geographical area, share a central global record, and would be virtual in that the users worldwide would still perceive the service as coming from one central, single point of contact.
There are, of course, some drawbacks to the follow-the-sun type of Service Desk, all of which would need to be satisfactorily addressed.
â¢  Who owns incidents? An axiom of Incident Management is that all incidents are owned by the Service Desk, but here which Service Desk is it? Is it the one where the incident was logged? Does ownership get transferred every eight hours? What are the risks of live incidents being forgotten between the Service Desks?
â¢  There needs to be a clear handover/takeover between the individual service desks, not just regarding incident ownership but in ongoing initial investigation and diagnosis.
â¢  Cultural factors may further complicate matters. For example, there would be different bank holidays around the world.
â¢  There needs to be close management of the quality of supervision to ensure consistency and conformance to the process. Establishing rapport between people of different cultures would be a further aspect the Service Desk management would need to tackle.
â¢  Language could be an issue. It should not be assumed, arrogantly, that English would be the language; what about Spanish or Mandarin Chinese or a mixture (or, indeed, other languages)? Ensuring the Service Desk staff members possess adequate language skills would be vital.
ITIL cannot give you a set of all-encompassing answers to these questions. The answers all depend on the specific circumstances: you have to adopt ITIL and then adapt it!
Specialist Service Desk Groups   Specialist Service Desk groups are not so much a separate type of Service Desk but more a useful internal variation on the usual first-line organization. These specialist groups can be formed when there is sufficient specialist work to make the establishment of first-line specialists worthwhile and to avoid the risk of delay that would otherwise occur if a high proportion of incidents were having to be escalated functionally to second-line events. Care should be taken, however, to ensure that there was sufficient specialist work to keep these specialists busy. Highly qualified staff members are unlikely to find that a predominant diet of password resets is going to provide them with high job satisfaction.
IT Operations Management
Like the Service Desk, the IT Operations Management function clearly belongs in the Service Operation stage of the service lifecycle. Essentially IT Operations Management is concerned with the ongoing management and maintenance of an organization's IT infrastructure. It carries out the activities involved in the day-to-day running of the IT infrastructure with the purpose of providing a stable platform on which services can be delivered to meet the agreed-on business needs. IT Operations Management divides into two subfunctions: IT Operations Control and Facilities Management.
IT Operations Control
IT Operations Control is the focus for the minute-by-minute, day-by-day activities that monitor how the infrastructure is performing. It covers the carrying out of the necessary housekeeping and administrative tasks. IT Operations Control often takes the form of a control room (sometimes called an operations bridge [shades of the Starship Enterprise] or network operations center) where visitors can view operations management staff going about their business in a purposeful but unhurried manner.
The IT Operations Control activities cover the following:
â¢  Monitoring the state of the infrastructure, including the performance of activities in the Event Management process, via console management.
â¢  Scheduling jobs in accordance with agreed-on timetables and standard operating procedures.
â¢  Performing backups (scheduled and ad hoc) and restores. This should include regular checks that backups and restores continue to work properly; it is embarrassing when you try to perform a restore for real and you find it won't work!
â¢  Managing bulk outputs such as hard-copy production (although the need for this is dropping with more and more outputs to users being "paperless," at least so far as the service provider is concerned).
â¢  Performing various maintenance activities on behalf of the Technical Management and Applications Management functions.
Facilities Management
Facilities Management is the other subfunction in IT Operations Management and is concerned with the physical environment in which the IT infrastructure is operating; it's the physical environment encompassing the following:
â¢  Data centers, server rooms, and the like
â¢  Power supplies
â¢  Air conditioning
â¢  Physical control of access
In carrying out those responsibilities, Facilities Management would have a close relationship with IT Operations Control in the monitoring of the physical environment.
ITIL also contends that the Facilities Management subfunction could be responsible for the coordination of large projects such as data center or server consolidation. There can be no doubt that Facilities Management would have an important part to play in such projects, but I would expect that the relevant project plans would specify what the precise responsibilities of Facilities Management would be.
Please note that this description is of the ITIL Facilities Management function, which should not be confused with a typical facilities manager or organization that deals with office support such as kitchens, office lighting, waste disposal, cleaning, and so on.
Technical Management
The Technical Management function provides technical resources not only to the Service Operation stage of the service lifecycle but also to the Service Design stage, to service testing, to Release and Deployment, and, of course, to Continual Service Improvement. In doing so, it plays two roles.
â¢  It is the keeper (the custodian as ITIL calls it) of technical knowledge and skills.
â¢  It is the source of the actual technical resources needed to support the entire service lifecycle.
Technical Management aims to help in the planning, implementation, and maintenance of a stable technical infrastructure by doing the following:
â¢  Producing a well-designed, highly resilient, flexible, and cost-effective technical platform (ITIL uses the term cost-effective topologyâsee Chapter 4, "Design Topology")
â¢  Providing guidance to IT Operations Management on the ongoing execution of operational activities
â¢  Using an appropriate level of technical skills to keep the technical infrastructure in the best condition (ITIL uses the word adequate for the requisite level of technical skillâa rather equivocal word perhaps!)
â¢  Bringing those technical skills to bear without delay for the swift investigation, diagnosis, and resolution of any technical failures that might occur
Technical infrastructure is deemed to include networks, servers, mainframes, operating systems, desktop, middleware, database, and so on.
Applications Management
The Applications Management function is a close bedfellow of the Technical Management function. Applications Management not only supports and maintains operational applications but also plays an important role in the Service Design stage of the service lifecycle, in service testing, and, of course, in CSI. In doing so, it plays two roles.
â¢  It is the keeper (the custodian as ITIL calls it) of technical knowledge and skills relating to the management of applications (the appearance of the word technical here is not a cut-and-paste error).
â¢  It is the source of the actual application resources needed to support the entire service lifecycle.
A particular decision to which Applications Management makes an important contribution is to decide whether an application should be developed in-house or acquired externally.
Applications Management aims to help in the identification of software requirements and in the design, deployment, support, and improvement of applications by doing the following:
â¢  Designing applications that are resilient and cost-effective
â¢  Ensuring that applications contribute to delivering the required functionality (utility, remember?)
â¢  Using an appropriate level of applications-related technical skills to keep operational applications in the best condition
â¢  Bringing those applications-related technical skills to bear without delay for the swift investigation, diagnosis, and resolution of any application failures that might occur
It should be noted that there is a difference between Applications Management and Applications Development. Applications Development is focused on the design and construction of application solutions, a one-time activity (utility). In contrast, Applications Management is focused on the ongoing oversight, operational management, and improvement of applications (both utility and warranty).
Roles in Service Operation
In Chapters 1, 3, 4, and 5, I made the important point that, while ITIL does not tell us how to organize ourselves specifically, it does give valuable guidance in each lifecycle stage in the form of sets of roles with associated responsibilities. Remember that you can use these sets as checklists to make sure you're covering everything. These points remain as true in Service Operation as in any other stage of the Service Lifecycle.
I've shown the specific Service Operation roles in the organization chart in Figure 6-6. Again, don't forget that this chart is only for illustrative purposes; it is not a model.

Figure 6-6   Roles in Service Operation
The generic responsibilities of Service Owner, Process Owner, and Process Manager are set out in Chapter 1. For the specific responsibilities of each of the roles shown in Figure 6-6 you will need to refer to the ITIL publications themselves.
Tools in Service Operation
Service Operation has always been a fruitful area for the exploitation of tools. However, you should not lose sight of the importance of integrating the tools used in Service Operation with the tools used elsewhere in the Service Lifecycle. In particular, the performance evidence that can be captured in Service Operation is especially valuable; you'll consider that further in the next chapter.
The following are specific areas where tools are particularly useful in the Service Operation stage of the service lifecycle:
â¢  Self-help functionality   Providing users with web-based menu-driven functionality is a much appreciated facility. Users can have their various routine service requests fulfilled speedily; such requests can cover the initiation of standard changes, password resets, ordering consumables, access to online help, and so on.
â¢  Workflow and process control   The Service Operation processes are particularly suitable for workflow tools.
â¢  Configuration management system   The CMS and its associated tool are valuable in every stage of the service lifecycle. Much of the automation of Service Operation activities is dependent on a CMS. For example, when logging an incident, the Service Desk will benefit from having instant access to accurate user information, service level agreements, workarounds, and relevant configuration records.
â¢  Control of the user workstation   The well-established ability to take remote control of the user's workstation continues to be a valuable means for the Service Desk to resolve incidents and to provide on-the-job user training.
â¢  Diagnostic scripting   The value of workflow and process control can be enhanced significantly by built-in diagnostic scripts. Carefully written scripts, provided by second-line and third-line experts, can enable the first-line Service Desk to emulate some of that specialist expertise, empowering the Service Desk to resolve incidents it would not otherwise be able to do with its necessarily broad rather than in-depth technical skills. Moreover, even if the Service Desk cannot resolve some incidents, a good diagnostic script can help the Service Desk to capture and record the relevant symptoms thereby not only speeding up the start of the work of specialist teams but also identifying correctly the actual resolver group to which the incident should be escalated functionally.
â¢  Dashboards and reporting   Most people are familiar with the electronic wall boards that can be seen at the Service Desk and the operations bridge giving real-time information on the performance of the infrastructure and the level of Service Desk activity.
Chapter Review
Whatever the potential value of the other stages in the service lifecycle, Service Operation provides the moment of truth. This, the live environment, is an unforgiving world where however persuasive previous arguments may have been you may now receive a salutary reality check! Moreover, because it is the real world, Service Operation can be the source of incontrovertible evidence of where things are going right and where things are going wrong. It's up to you to make best use of that opportunity to capture valuable management information.
From Service Strategy through Service Design and Service Transition, you should have been checking continually that what you were conceiving, designing, and creating was actually going to produce maximum value for the resources available. I'm sure you've not forgotten Figure 3-1. Now, in Service Operation, you have a chance to see whether you are achieving maximum value. Event Management and Incident Management are good sources of objective evidence, while the satisfaction surveys carried out by the service desk will give a more subjective view. But please don't dismiss that subjective view. If your users think your services are rotten, then it could well be that those services are indeed rotten or that your management of your users' expectations is rotten!
As you've seen throughout the service lifecycle, processes don't work in isolation. Figure 6-7 shows not only the interactions between the Service Operation processes but also, as an example, how the change process from Service Transition has important interactions.

Figure 6-7   Service Operation interactions
Working through Figure 6-7, note the following points:
â¢  Event Management detects those significant occurrences that you have defined as such. In doing so, it provides a measure of the health of Service Operation and can act as the trigger for other Service Operation processes.
â¢  Incident Management is an important process that can be triggered by the "exceptions" detected by Event Management.
â¢  Users can, of course, trigger Incident Management themselves by logging incidents directly with the service desk.
â¢  Problem Management is typically driven by the incidents that arise and for which an underlying cause and a workaround need to be found. Problem Management can also be triggered directly from Event Management, for example when a threshold is reached and a warning event requires investigation of the underlying cause even though an incident has not yet occurred.
â¢  Problem Management provides the Incident Management process with information on the analysis of ongoing issues and, more particularly, workarounds that will enable the Service Desk to restore normal service pending the final resolution of the underlying cause.
â¢  Incident Management can trigger Change Management (a process outside Service Operation) if a failure occurs for which the cause is obvious and normal service can be restored only by a change of an appropriate priority, possibly even an emergency change.
â¢  Problem Management, as you have seen, triggers Change Management by raising a request for change to provide permanent resolutions to the causes of incidents or potential incidents.
â¢  Event Management itself can trigger Change Management directly, for example if an exception is detected that needs to be regularized. Such an exception could be the detection of unlicensed software.
â¢  One of the early activities carried out by the service desk in Incident Management is to weed out user contacts that are actually service requests rather than failures and to pass them to the Request Fulfillment process.
â¢  As for Incident Management, users can trigger the Request Fulfillment process themselves and should be encouraged to do so when appropriate rather than treating everything as an incident.
â¢  Event Management itself can trigger Request Fulfillment directly. In the example regarding Change Management given earlier, if there were an appropriate standard change that could achieve the requisite regularization, it would be sensible to follow it rather than invoke the full jurisdiction of Change Management.
â¢  In the case of standard changes, the process steps followed in Request Fulfillment will have been determined under Change Management.
â¢  Access Management is frequently triggered by Request Fulfillment as the means of fulfilling service requests regarding users' access rights.
â¢  Some RFCs spawn large numbers of inputs to Access Management. It may be convenient to deal with these in batches directly with Access Management rather than as numerous, individual service requests.
Something new to you in the Service Operation lifecycle stage is the consideration of these four ITIL functions: Service Desk, IT Operations Management, Technical Management, and Applications Management. Functions perform the activities in the processes you have carefully designed and introduced. For example, the Service Desk performs a number of the activities in the Incident Management process, but the Technical Management and Applications Management functions will also need to get involved when incident resolution requires their specialist capabilities.
Clearly, incident resolution ("firefighting") and the minute-by-minute maintenance of a stable infrastructure are the prime objectives of Service Operation. However, there is also much to be gained in capturing valuable evidence from the Service Operation processes, evidence that can be fed back not only into the Service Operation processes and functions themselves but also into the other service lifecycle stages. For example, while incident records provide the indispensable input to Problem Management, those incident records may also be valuable evidence of shortcomings earlier in the service lifecycleâinadequate testing or design that is not fully holistic, perhaps. You'll examine that further in Chapter 7.
Quick Review
Here are the key concepts and terms you've encountered in this chapter. Read through this list, and if anything seems unfamiliar or you can't readily describe it, go back and read the relevant section again.
â¢  The purposes of Service Operation
â¢  Process: Event Management (detecting occurrences of significance and doing something about them)
â¢  Process: Incident Management (fixing things quickly when they break)
â¢  Process: Problem Management (getting to the truth behind incidents and ensuring cost-effective resolutions are introduced)
â¢  Process: Request Fulfillment (handling promptly a range of predefined requests from users)
â¢  Process: Access Management (executing the policies of the IT Security Management process of Service Design)
â¢  Function: Service Desk (the single point of contact for all users)
â¢  Function: IT Operations Management (divided into two subfunctions: IT Operations Control and Facilities Management)
â¢  Function: Technical Management
â¢  Function: Applications Management
â¢  Tools
Service Operation is where the value (the balance between utility and warranty) should actually be delivered.
Questions
Here is another set of 20 questions for you to tackle.
1.  Which one of the following descriptions is the best example of a workaround?
A.  The second-line team makes a number of attempts to restore service and one attempt seems to work, but they don't know which one.
B.  The user undertakes some other work, while the Service Desk handles the incident that's been reported.
C.  The Service Desk temporarily reassigns prints to an alternative shared printer while a broken printer is being fixed.
D.  A data circuit has failed, resulting in response times being slower than the target in the SLA. While the incident is being resolved, the users continue working as best they can.
2.  Which one the following is the best description of an incident model?
A.  A desktop job aid provided for each service desk analyst
B.  A documented set of steps to be followed when dealing with a specific type of incident
C.  An example of a typical incident used for training purposes
D.  An incident that can be resolved by the Service Desk
3.  Which of the following is the best description of an event?
A.  A formal presentation by the service provider to launch a new service
B.  An occurrence of significance regarding a specific configuration item (CI)
C.  When a workaround has to be employed to restore normal service
D.  An occurrence where a preset threshold has been breached
4.  Which one of the following is the best description of a major problem review?
A.  A major problem review is usually conducted by the problem manager and is held to learn lessons and improve future arrangements.
B.  A major problem review is usually conducted by the service desk manager with the service desk staff to go through the issues provided by the second-line and third-line teams.
C.  A major problem review is called by the IT director to apportion blame and to initiate appropriate disciplinary action through the HR department.
D.  A major problem review is usually conducted by the change manager and takes place as part of the next regular change advisory board (CAB) meeting held after the resolution of the problem.
5.  Which one of the following is the best action that Problem Management should take when a workaround has been found?
A.  Close the problem record and put the details of the workaround in all the relevant incidents.
B.  Take no action until the underlying cause has also been found.
C.  Update the open problem record with the details of the workaround and, if any related incidents are open, inform incident management that a workaround is now available.
D.  Immediately raise a high-priority request for change (RFC) to have the workaround documented and to hasten the investigation of the underlying cause of the related incidents.
6.  Which one of the following is not a purpose of the Service Operation stage of the service lifecycle?
A.  To complete user acceptance testing
B.  To monitor the performance of configuration items in the live environment
C.  To deliver value to users and customers day by day
D.  To manage the technology and applications being used to deliver services
7.  Which of the following statements regarding Problem Management are correct, if any?
i.  It must submit through Change Management any RFCs required for the permanent resolution of faults.
ii.  It provides valuable management information regarding the costs of resolving and preventing problems.
A.  i only
B.  ii only
C.  Both statements
D.  Neither statement
8.  Which one of the following is the purpose of the Request Fulfillment process?
A.  Ensuring that all service requests are fulfilled promptly
B.  Ensuring that all change requests are handled correctly
C.  Handling service requests from users
D.  Handling requests from customers for changes to service level agreements (SLAs)
9.  Which of the following are correct regarding the Service Desk?
i.  Service desk analysts try to restore normal service as quickly as possible.
ii.  The Service Desk handles service requests and incidents.
iii.  It is an IT Infrastructure Library (ITIL) function.
iv.  It is a Service Operation process.
A.  i and iii only
B.  i and iv only
C.  i, ii, and iii only
D.  All of the above
10.  Which one of the following statements is not a benefit of using an incident model?
A.  It helps in achieving consistency in the handling of specific types of incidents.
B.  It helps provide faster resolution of incidents.
C.  It ensures all incidents are easy to resolve.
D.  It helps in the capture of valuable management information.
11.  Which of the following statements regarding the Service Desk are correct?
i.  The Service Desk is a function that provides communication between IT and the users for all operational matters.
ii.  The Service Desk should own the Problem Management process.
iii.  The Service Desk is a process that provides communication between IT and the users for all operational matters.
iv.  The Service Desk should own all incidents throughout their lifecycle.
A.  iv only
B.  i, ii, and iii only
C.  i and iv only
D.  All of the above
12.  Which of the following should be managed as an incident?
i.  A user reports to the Service Desk that an application is running very slowly.
ii.  A member of second-line support cannot access a service during published service hours.
iii.  A segment of the data network fails but there is no impact on services.
iv.  A user cannot access during published service hours a service to which they have been correctly enrolled.
A.  iii only
B.  i, ii, and iii only
C.  ii, iii, and iv only
D.  All of the above
13.  To what does the term IT Operations Control refer?
A.  The processes and functions of the fourth stage in the service lifecycle
B.  Overseeing the technical and applications management functions
C.  Overseeing and monitoring of operational events and activities
D.  The functionality of an IT Service Management tool that facilitates the activities of Service Operation
14.  Which processes of Service Operation are missing from this list?
i.  Incident Management
ii.  Problem Management
iii.  Request Fulfillment
A.  Service Desk and IT Operations Management
B.  IT Security Management and Access Management
C.  Event Management and Access Management
D.  Facilities Management and IT Operations Management
15.  Which one of the following is the best description of the purpose of Facilities Management?
A.  To manage utility services such as network printing
B.  To manage the physical IT environment
C.  To perform procurement management
D.  To oversee the facilitation of customer outcomes
16.  Which of the following statements about functions are correct?
i.  They may use tools.
ii.  One organizational group may undertake more than one function.
iii.  Functions are more difficult to implement than services.
iv.  Their four characteristics are: trigger, measurable, specific result, and specific customer.
A.  i only
B.  i, ii, and iii only
C.  i and ii only
D.  iv only
17.  A monitoring tool has detected a failure within the technical infrastructure. How soon should incident management be invoked?
A.  Only once a service has been impacted
B.  If a workaround is available no action is needed
C.  Immediately
D.  Only once a user reports an issue to the Service Desk
18.  Which one of the following is the correct sequence of activities for handling an incident?
A.  Identification, logging, investigation, categorization, prioritization, diagnosis, resolution, recovery, closure
B.  Identification, logging, diagnosis, categorization, prioritization, investigation, resolution, recovery, closure
C.  Identification, logging, categorization, prioritization, investigation, diagnosis, resolution, recovery, closure.
D.  Identification, logging, categorization, investigation, diagnosis, prioritization, resolution, recovery, closure
19.  Which one of the following is a benefit of using an incident model?
A.  Problems become easier to diagnose.
B.  It prevents certain types of incidents from recurring.
C.  It ensures that all incidents are easy to resolve.
D.  It helps achieve speed, consistency, and accuracy.
20.  Which of the following statements regarding Problem Management are correct, if any?
i.  Problem Management can help the Service Desk by providing workarounds to accelerate incident resolution.
ii.  Problem Management is always more important than Incident Management.
A.  i only
B.  ii only
C.  None of the above
D.  All of the above
Answers
1.  C. This question requires you to think carefully about the definition of workaround. I hope you excluded option A fairly quickly (they appear to be unsystematic); option B is not an IT workaround, and option D doesn't improve the situation at all, let alone restore normal service.
2.  B. The key phrase here is "set of steps to be followed." None of the other statements contains any similar words.
3.  B. I hope you eliminated option A and option C fairly easily (option A is not an event relevant to Service Operation, while option C is a service restoration); option D is an event, but it is a specific type of eventâa warning (an amber light has come on).
4.  A. This shouldn't have been too difficult. Option B is too narrow in scope, and the Service Desk manager should not be taking a lead in Problem Management activities; these reviews should not turn into the "blame game" that option C envisages, while the Change Manager should not be usurping the Problem Manager's responsibilities as option D implies.
5.  C. If you got this wrong, go back and reread the Problem Management section. The correct steps should be taken promptly without unnecessary duplication of records and without precipitate action.
6.  A. This an example where you can test your answer by turning the question around and checking that options B, C, and D are purposes of Service Operation. User acceptance testing is, of course, part of the Service Transition lifecycle stage.
7.  C. You may have found "i" to be obviously correct (Problem Management should follow the change process just like every other process); "ii" is also correct because the requests for change should include cost-benefit information as part of their justification.
8.  C. This is the book definition. Option A implies that all requests, however daft, will be fulfilled; option B is related to change requests, not service requests; and option D would have to be a change request.
9.  C. I hope you were able to spot quickly that answer "iv" included the word process when, of course, the Service Desk is a function.
10.  C. This is another example where you can test your answer by turning the question around and checking that options A, B, and D are benefits of using an incident model.
11.  C. Option "ii" is clearly wrong (the Service Desk's involvement in Problem Management should be strictly limited), and "iii" states that the Service Desk is a process when it is, of course, a function.
12.  D. These are all examples of my "rule of thumb" that something is not working as specified.
13.  C. You should have been able to eliminate the other options fairly easily. Option A implies it is the whole of lifecycle stage, not just one function among others. Option B implies that technical and applications management are subordinate to it; it would be useful, as option D states, if the functionality of an IT Service Management tool were to facilitate the activities of Service Operation, but that's not what the term means.
14.  C. If you've remembered your processes and functions and where they fit in the lifecycle, this question is easy. The Service Desk and IT Operations Management are both functions. IT Security Management is a Service Design process, and Facilities Management is also a function, not a process.
15.  B. This is another straightforward question. It is the management of the physical IT environment. Options A and C may be relevant to the business, but they're not Facilities Management, while option D sounds impressive but is actually meaningless.
16.  C. You may have had to think carefully about this question. You should then have been able to eliminate "iii" and "iv" fairly easily since there is no evidence that functions are more difficult (whatever that means anyway) and "iv" gives the four characteristics of a process (which I'm sure you have engraved on your memory).
17.  C. If something is broken, you should fix it as soon as you can.
18.  C. A careful and logical reading of the four options should have led you to the correct answer. In option A, the investigation takes place before the incident has even been logged. In option B, diagnosis is being done before investigation, while option D leaves prioritization until after investigation and diagnosis.
19.  D. You should have been able to eliminate the other options fairly easily. Incident models would have no direct impact on problem diagnosis and could not prevent incidents from recurring; and, while they may help in incident resolution, they won't help resolve all incidents.
20.  A. Option "ii" can be eliminated after just a moment's thought; the word always here is a help.








CHAPTER 7
Continual Service Improvement
In this chapter, you will
â¢  Learn how Continual Service Improvement (CSI) permeates all aspects of the service lifecycle
â¢  See how effective CSI requires high-quality evidence-based knowledge dependent on a system of sound measurements and metrics
â¢  Understand that CSI requires you to be able not only to plan each improvement you want to make and to implement those plans but also to check what you have achieved, take action to consolidate those improvements, and then prepare for the next improvement step
â¢  Examine the roles and responsibilities specific to the CSI stage of the service lifecycle
â¢  Learn how technology can help you

At this point in the book I hope I don't need to emphasize further the central importance of Continual Service Improvement (CSI) in the service lifecycle. That emphasis has been there from the beginning: CSI was the ninth in my ten commandments in Chapter 1, and in that introductory chapter, it was given a specific mention not only in the generic process model but also in the generic roles that I described.
Subsequently, Chapter 2 gave me an opportunity to amplify the importance of CSI in the context of the whole service lifecycle; that amplification should have helped you appreciate how the theme of CSI is woven throughout the subsequent stages. I hope you noticed in particular how the Design Coordination process and the Transition Planning and Support process each have an important role in promoting CSI within the Service Design and Service Transition lifecycle stages. Moreover, please don't forget the crucial CSI activities in the Service Level Management process, namely, service reviews and the service improvement program. Reviews are, of course, a vital part of CSI; you also came across important reviews in the Change Management process and the Release and Deployment process.
Finally, always remember the importance of evidence in helping you decide where your CSI efforts should be best directed and how the effect of those efforts can subsequently be verified. Such evidence can be captured throughout the service lifecycle, but it is particularly convincing when it originates from the live environment, in other words, from the Service Operation stage of the lifecycle. There's nothing like having accurate, complete, and up-to-date information from the real world to support your proposals.
The Purpose of Continual Service Improvement
Put simply, the purposes and objectives of CSI are as follows:
Reviewing the following:
â¢  Management information and trends to ensure that services are meeting agreed-on service levels and achieving the desired results
â¢  Existing deliverables for appropriateness
â¢  Business trends and priorities and business projections
Periodically conducting the following:
â¢  Customer satisfaction surveys
â¢  Maturity assessments against the process activities and associated roles
â¢  External and internal service reviews to identify CSI opportunities and to make recommendations
â¢  Internal audits, verifying employee and process compliance
â¢  Reviews of existing deliverables for appropriateness
â¢  Reviews of business trends and priorities, and keeping abreast of business projections
Measuring and identifying the value created by CSI improvements
The Principles of Continual Service Improvement
At this moment I would like you to pause . . . thank you . . . and consider a great man. This is a man whose genius in the 1950s was not recognized in his home country, the United States (or in Europe for that matter). He thus went to Japan, and the rest, as they say, is history.
I am of course referring to the late, great Dr. W. Edwards Deming (born in 1900 in Sioux City, Iowa; died in 1993 in Washington, D.C.). He was the Quality Man. If you now want to stand for one minute with your head bowed in tribute to his memory, please feel free.
The Deming Cycle (Plan-Do-Check-Act)
Continual Service Improvement in ITIL best practice is based on an interpretation of the Deming cycle. That interpretation envisages a closed-loop feedback system consisting of a cycle of four activities, Plan-Do-Check-Act, as depicted in Figure 7-1.

Figure 7-1   The Deming cycle
â¢  Plan   Establish and define the objectives and processes that are needed to deliver the results that accord with the expected output (the target or goals). An appropriate baseline should be documented.
â¢  Do   Implement the plan, execute the processes, produce the deliverables, and collect relevant data for analysis in the subsequent Check and Act activities.
â¢  Check   Study the relevant data captured in the earlier Do stage and compare it with the expected results (the targets or goals from Plan) to ascertain any differences. Identify any deviation in implementation from the Plan stage. Documenting this enables the identification of trends over several Plan-Do-Check-Act cycles, and analysis of the data converts it into the information necessary for Act.
â¢  Act   Where Check has shown that the plan that was implemented in Do has achieved an improvement on the original situation (the baseline documented in Plan), then the new situation becomes the baseline for the next Plan-Do-Check-Act cycle. However, where Check shows that the plan implemented in Do is not an improvement, then the original baseline remains current. In either case, if Check showed a difference from that expected (whether better or worse), then there are lessons to be learned, which suggests further Plan-Do-Check-Act cycles will be needed.


EXAM TIP    You can be almost guaranteed a question on the Deming cycle in the examâbe prepared!

Continual Service Improvement Register
Do you remember the CSI register being mentioned during Chapter 1 in the list of the responsibilities of the generic process manager role, where it was described as essentially a huge to-do list? You'll now look at this important tool in more detail.
The CSI register exists to record all potential improvement opportunities, and every stakeholder should be encouraged to submit entries. However, you would expect most entries to originate from processes such as Service Level Management and Problem Management where management reviews should always be identifying such opportunities. Nevertheless, because CSI is an important element in all services, processes, and roles, the potential sources of CSI initiatives are widespread, and every effort should be made to capture all good ideas (even if they may seem a little "wacky" at first reading!). The size of the CSI register should not be viewed as an issue; a good CSI register may well have more than 500 entries in it.
One of the great benefits of having a CSI register is to have visibility of all improvement ideas and to be able to see them alongside other improvement initiatives that may be found either in requests for change (RFCs) that may be awaiting authorization or in entries in risk registers and project issues logs. Having this visibility enables related ideas to be identified and cross-referenced so that, while individual elements may be difficult to justify, a combination of similar elements may be worthwhile. If you don't have this visibility, you may be missing some golden opportunities!
However, a CSI register has to be structured correctly to record the essential details consistently and to enable easy search and cross-reference. Each record in the CSI register should include the following:
â¢  Description (a brief outline of the proposal, especially its benefit)
â¢  Scale of the proposal (small, medium, large)
â¢  Timescale (short-term, medium-term, long-term)
â¢  Resources required (cost estimate)
â¢  Originator/sponsor
â¢  Cross-references (other CSI entries, RFCs, and so on)
The CSI register should be owned by the CSI Manager, who should produce the necessary procedures for controlling and reviewing its content.
Continual vs. Continuous
A meteorologist may refer either to continual rain or to continuous rain, but what's the difference? In our perception, the difference may seem academic if we're getting just as wet! However, continuous rain implies the rain is relentlessâthat it is ceaseless. In contrast, continual rain may seem never-ending, but there are, in fact, moments of respite. The Deming cycle implies continual improvement rather than continuous improvement. From a distance, the effort may appear continuous, but on closer examination, it can be seen that there are moments of consolidation before the next improvement cycle begins.
Continual Service Improvement Is Not a Project
An equally important principle is that Continual Service Improvement is not a project-like activity that you indulge in only from time to time. CSI is more a way of life. Nevertheless, to achieve a specific step-change, it may be useful to run a specific initiative and to follow project principles, but CSI itself is not a project.
Continual Service Improvement Process
You've now come to the one and only process in Continual Service Improvement and, indeed, the last process in the service lifecycle: the Seven-Step Service Improvement process.
Seven-Step Service Improvement Process
The purpose of the Seven-Step Service Improvement process is to define and manage the steps needed to identify, define, gather, process, analyze, present, and implement improvements.
To meet that purpose, it should do the following:
â¢  Identify opportunities for improving services, processes, tools, and so on
â¢  Seek to reduce the cost of providing services
â¢  Identify what needs to be measured, analyzed, and reported
â¢  Review continually all service achievements
â¢  Understand what to measure, understand why it is being measured, and carefully define what a successful outcome is
The seven steps are as follows:
â¢  Step 1   Define the vision and the strategy for improvement, particularly the business needs, and the tactical and operational goals.
â¢  Step 2   Define what is to be measured. Start by defining what measurements are needed and then identify what measurements can be made. There will probably be a gap between the two; closing that gap could be something for your CSI register! However, don't fall into the trap of measuring things just because you can; if that measurement is inappropriate or irrelevant, it could be misleading or, at best, a waste of valuable resources.
â¢  Step 3   Gather the data relevant to what you are measuring.
â¢  Step 4   Process the data to prepare it for analysis. This is an activity that turns it from pure "data" into information.
â¢  Step 5   Analyze the information to identify trends, compare it to targets and norms, and see not only where improvement is possible but also where it is needed. The analysis of information converts it into knowledge.
â¢  Step 6   In this stage, management can produce their assessment of the knowledge that has been gained and produce appropriate service improvement plans.
â¢  Step 7   Do it! Implement the agreed-on improvements.
I hope you noticed how this Seven-Step Service Improvement process reflects both the data-information-knowledge-wisdom (DIKW) model described in the Knowledge Management process (see Chapter 5) and the Deming cycle.
Here is how the DIKW model is reflected in Seven-Step Service Improvement:
â¢  Data   Reflected in steps 1, 2, and 3
â¢  Information   Reflected in step 4
â¢  Knowledge   Reflected in step 5
â¢  Wisdom   Reflected in steps 6 and 7
The Seven-Step Service Improvement process aligns with the Deming cycle as in Table 7-1.

Table 7-1   Alignment Between Deming and the Seven-Step Service Improvement Process
The Continual Service Improvement Approach
Alongside the Seven-Step Service Improvement process is the complementary CSI approach, which is a version of a classic improvement model, as you can see in Figure 7-2.

Figure 7-2   The CSI approach
This approach is particularly useful when drawing up a "road map" for an improvement program. It can be used both as a single top-level model and as a set of linked subordinate models for each stage.
There are six sequential questions each with related activities, as follows:
1. What is the vision? Understand the high-level business objectives and align your business and IT strategies. Winston Churchill in the early, dark days of World War II talked of "moving on to sunlit uplands"; there was no doubt that he had a vision!
2. Where are we now? Produce an objective assessment of the current situation regarding business, organization, people, process, and technology (remember that those last three elements together comprise IT Service Managementâsee Chapter 1). Tell the story "warts and all" because it is from this point that improvement is going to be measured. Don't forget to take a baseline!
3. Where do we want to be? Of course, you'd like to realize your vision straightaway. However, in reality that is not going to be possible, so you have to define an achievable step on the way toward it based on agreed-on priorities, specific goals, and realistic timescales. This step must result in the setting of clear, specific targets.
4. How do we get there? This is the crucial stepâwhat are you actually going to do? How exactly are you going to achieve the improved levels of service you defined in step 3? Having agreed on the necessary action, you must then get on with it; the time for talking is over!
5. Did we get there? Have the actions you took in step 4 resulted in your meeting the targets set at step 3? Are the necessary metrics and measurements now in place, is process compliance high, and are business priorities and objectives being met? This a good point to take another baseline.
6. How do we keep the momentum going? This is not the time to rest on your laurels! The improvements you've made need to be embedded, and your success should be the spur for the next round of improvement.
So, having completed step 6, off you go again, starting with step 1; you now need to check that the previous vision is still valid. At step 2, you'll find that the baseline you took previously at step 5 will be a major ingredient in redefining "Where are we now?" You then continue with all the subsequent steps, repeating the cycle until in due course you achieve the vision in step 1. Time for a party!
I'm sure you've noticed how the CSI approach parallels the Deming cycle: Plan (steps 1, 2, and 3), Do (step 4), Check (step 5), Act (step 6).


EXAM TIP    Examiners find asking questions on the CSI approach an almost irresistible temptation.

Measurement and Metrics
There are actual reasons why you monitor and measure services and processes; monitoring and measuring are not just some mysterious and mystical centuries-old tradition! There are four such reasons.
â¢  To validate previous decisions (to provide evidence that the previous decisions were the correct ones to have been taken)
â¢  To direct activities by setting targets that need to be met (this is the reason for most monitoring and measuring)
â¢  To justify a course of action (to provide evidence proving that a particular course of action is needed)
â¢  To intervene (to initiate corrective action such as performed in Event Management when a preset threshold is reached)
Baselines
In the Service Asset and Configuration Management (SACM) process in Chapter 5 you learned that a baseline is essentially a snapshot of a particular area of the configuration management system (CMS) at a point in time. Therefore, if you want to create baselines, you must have an appropriate CMS in place (if you don't have a CMS, perhaps you should put a high-priority entry in your CSI register!).
Baselines are important because, as you have already seen in the CSI approach, you need to take baselines to establish a starting point for improvement activity. You can then take a baseline at the end of the improvement activity to show what has changed and what improvement has been achieved. Baselines can provide an accurate picture of services, processes, or any other configuration items (CIs) for any area you may want to define. It is useful to make such defined baselines as individual CIs in their own right in order to ensure that baselines are documented appropriately, recognized, and accepted (and not subject to unauthorized subsequent change).
Metrics, KPIs, and CSFs
Tell me, where have you encountered measurement methods and metrics before? If you answer by referring to the five aspects of holistic service design, give yourself a gold star! If you have no idea what I'm writing about, please go back to the Service Design lifecycle stage in Chapter 4 to refresh your memoryâdon't forget examiners like asking questions about holistic service design.
In fact, measurement and metrics have already been mentioned on a number of occasions because they are fundamental to effective IT service management. In the Continual Service Improvement lifecycle stage you examine the principles of measurement and metrics to ensure they are used to best effect throughout the service lifecycle.
It's time for some definitions.
Metric
A metric is a measure that is captured and reported on to help manage an IT service, a process, or an activity. ITIL sees there being three basic types of metric:
â¢  Technology metrics   These are component-based or application-based such as server availability and application performance. With modern technology these metrics are usually easy to obtain and often come as part of the standard package when the technology is acquired.
â¢  Process metrics   These are used to help determine the "health" of a process and are crucial to process improvement. In practical terms, to capture process metrics, it is essential to be using an adequate tool that provides process workflow management.
â¢  Service metrics   These are the crucial metrics because, ultimately, you must measure service from end to end because that is how your users and customers experience those services. Some service metrics can be obtained directly through technology, such as monitoring the response times experienced by users. However, the most important service metrics are obtained by analyzing data captured by a service management tool. For example, the analysis of high-quality incident data will tell you about the number of service outages as actually experienced by the users and, therefore, by the business. If you can then present that information as knowledge expressed in terms of hours of lost productivity or, even better, as an estimated financial cost, you can make a convincing case for service improvement because the resulting business benefits will have been clearly stated.
Critical Success Factor
A critical success factor (CSF) is something that must happen if an IT service, process, plan, project, or other activity is to succeed. Each critical success factor should be supported by related key performance indicators (KPIs), but don't get too ambitious to begin with; two or three KPIs per CSF will do for starters.
Key Performance Indicator
A key performance indicator is a metric that is used to help manage an IT service, process, plan, project, or other activity. KPIs can be either quantitative (for example, cost information) or qualitative (for example, customer satisfaction).
Figure 7-3 depicts the relationship between these three terms.

Figure 7-3   CSFs, KPIs, and metrics
Key performance indicators tend to be the focus for measuring improvement, and there is nothing intrinsically wrong with that. However, difficulties arise when KPIs are mandated without careful thought. Such poorly selected KPIs not only may be inappropriate and misleading but also may promote management behaviors that lead to results contrary to the original intention. For example, setting rigid KPIs for the performance of hospital accident and emergency departments in the United Kingdom led to patients being held in ambulances outside busy departments to avoid starting the clock of the official waiting time for treatment until the department itself became free; that's good for the statistics but hardly in the best interests of the patients waiting for hours in the ambulances!
As implied in Figure 7-3, appropriate KPIs are determined only after you have clear critical success factorsâthemselves dependent on a clearly stated objectiveâand knowledge of the available metrics. To help you here, you can make use of steps 1 and 2 of the Seven-Step Service Improvement process.
Let me give you a simple example of how objectives, CSFs, KPIs, and metrics could be related to each other.
Objective   To improve the quality of IT support provided to the business
Critical Success Factor   To increase the effectiveness and efficiency of the Service Desk
Metrics   The elapsed time for an incident to be correctly categorized and to be escalated to the appropriate resolver group
Key Performance Indicators   A reduction in the average time taken for incidents to be categorized and an increase in the percentage of incidents escalated to the correct resolver group
I hope you agree that the previous is sensible and reasonable. However, a prerequisite would be to have (among other good things) a service desk function, an incident management process, defined support groups, and operational level agreements (OLAs). Is it time to brush up on that CSI approach?
A Cautionary Thought
When considering measurement and metrics, it is worthwhile bearing in mind the wise observation of our old friend Dr. W. Edwards Deming. As one of his Seven Deadly Diseases of Management, he said, "The fifth deadly disease is management by use only of visible figures, with little or no consideration of figures that are unknown or unknowable." (https://www.deming.org/theman/theories/deadlydiseases)
That's always worth remembering!
Implementing Continual Service Improvement
We could have another argument here about whether you can actually "implement" (CSI)âit's not a productâbut I think we're better off leaving that for a later occasion. Let's agree for the moment that I'm going to talk about putting CSI into practice.
The first step is for someone who is adequately empowered to make a conscious decision to do it and then to define what is meant by CSI, to make a feasible plan, to get some resources, and to get started. There may be a temptation here to call in some high-powered external management consultants who will be reassuringly expensive. You can then expect them to spend a considerable time on and off your premises, taking up a lot of valuable staff hours in interviews and meetings, and to produce a beautifully presented report. That impressive report will tell you, in essence, that you need to address four areas.
â¢  You need to improve your firefighting, not only in its performance and support of users but also in gathering the basic evidence for service improvement.
â¢  You need to get control over changes (including releases to the live environment) because this area is a common cause of issues and another good potential source of data for CSI.
â¢  Your configuration management has significant areas of weakness that reduce the effectiveness of change management and, indeed, of all other ITIL processes.
â¢  Your focus is on managing technology rather than managing services. Therefore, you need to address the definition of your services in order to produce a service catalog (thus having a sound basis for negotiating service level agreements) and to underpin all future CSI.
In Chapter 8 you'll find further amplification of this suggested approach.
So, this summary is pretty much what you'll get from your consultants. Can I have my $60,000 (Â£40,000), please?
Meanwhile, please forgive my flippancy! It is, of course, always a good idea to carry out some sort of benchmarking, and in large, reasonably mature organizations, this sort of expenditure may be justified and could include formal Capability Maturity Model Integration (CMMI). For your information, CMMI is a process improvement approach developed by Carnegie Mellon University and the Software Engineering Institute (SEI), and now promoted by the CMMI Institute.
Nevertheless, in many cases not only will it be absolutely clear where difficulties are being experienced and where essential work needs to be done, but also it will be clear that no one has a bottomless bag of gold to pay for expensive consultancy. Under those circumstances, you'll have to do it yourself. But don't be daunted by the prospect (this is Continual Service Improvement, don't forget). You do what you can with the resources available. You achieve some small improvement that gains you some "headroom" to do a little more CSI, you then do a little bit more CSI and gain more headroom, and so on, until you reach your vision. Get a copy of the CSI approach in front of you and get started! Remember, you're engaging in a practical CSI initiative, not a master's thesis.
Next Actions
You have now reached the point where you can set up the "first cut" of a documented and meaningful Service Desk function (and associated incident process), a change process, a Service Asset and Configuration Management process, and a Service Catalog. Now is also when it is worthwhile to implement a carefully selected integrated service management tool not only to support these four initial areas but also to facilitate ongoing development. I've provided some thoughts on tool selection in Chapter 8.
Having established a firm foundation, you can now build on it. You can define and document your IT Operations Management function, align it with the Service Desk, and integrate these two functions with the Event Management, Incident Management, and Request Fulfillment processes. You can link SACM and Change Management (but remember, don't do SACM until Change Management is in place!). Furthermore, having cataloged your services, you can begin to negotiate SLAs and OLAs and start to align them with existing underpinning contracts. From this negotiation and alignment activity, you can set appropriate targets for use in Service Operation.
At this level of maturity you are now in a position to finalize your major Service Transition processes by integrating Release and Deployment with the SACM and Change processes. Moreover, you will be capturing valuable performance data that not only will enable meaningful Problem Management to take place but also will inform the four processes of Service Design that comprise warranty (remember that?). Those four processes are, of course, Availability, Capacity, IT Service Continuity, and IT Security. Furthermore, these four processes make vital contributions to the SLA and OLA negotiations and the rest of the Service Level Management (SLM) process activities.
Meanwhile, your work on the Service Catalog and in the Service Level Management process will enable you to finish bridging the gap between the business on one side and the technology on the other. You can complete your Service Portfolio.

You'll find an animated diagram illustrating this approach in the video The CSI Approach (see Appendix D).
Further Actions
You can now take a moment to congratulate yourself on a job well doneâbut only for a moment! You're committed to Continual Service Improvement, aren't you? It's a job for life, so you'd better get on with it.
So, making all this actually happen needs leadership and management. You may recall that when you considered Service Design, you were introduced to those four aspects that must be addressed in that context, in other words, the four Ps: people, processes, products, and partners. To make CSI work, you particularly need to think seriously about the people aspect. In this aspect you should find useful the guidance provided by Dr. John P. Kotter (born 1947), the Konosuke Matsushita Professor of Leadership, Emeritus, at the Harvard Business School, no less.
Kotter's Eight Steps
Kotter provides an eight-step approach to transformation that is relevant to CSI (and there's a lot more about this in the main book, ITIL Continual Service Improvement). Here's an outline of those eight steps:
Step 1: Create a Sense of Urgency   People need to be convinced of the need to do it, and that work must start now. There is often an inertia that needs to be overcome.
Step 2: Form a Guiding Coalition   Top management needs to create and empower a defined and capable group whose members should have the respect of most stakeholders and must share the sense of urgency.
Step 3: Create a Vision   This should be sensible and have a clear aim. This, of course, parallels the first steps in the Seven-Step Service Improvement process and in the CSI approach you encountered earlier. You can find similar parallels in the subsequent steps.
Step 4: Communicate the Vision   If the vision is sensible and the aim is clear, it is vital to communicate it clearly to capture the hearts and minds of those who will be affected by it. If the vision is not sensible and the aim is not clear, go back to the beginning and think again!
Step 5: Empower Others to Act on the Vision   The more people there are who get involved the betterâso long as they share the vision, of course. But they each need to be given an appropriate level of empowerment that should be balanced against the need to coordinate their work.
Step 6: Plan For and Create Quick Wins   The sooner some tangible benefits can be demonstrably achieved, the greater the credibility of the plan. CSI should envisage both short-term and long-term benefits, informed by the analysis of the initiatives in the CSI register. But try not to talk about "low-hanging fruit"âthat metaphor has already been used.
Step 7: Consolidate Improvements and Produce More Change   This is the classic Act stage of the Deming cycle. Improvements that are achieved must become embedded in the services and processes as well as in the management and organization. There must be no recidivism!
Step 8: Institutionalize the Change   The culture of the service provider must be one where Continual Service Improvement has become a way of life; it has become instinctive.
Roles in Continual Service Improvement
All roles in IT service management should include clear statements of responsibility toward Continual Service Improvement, but there are some specific CSI roles, of which the most important is that of the CSI Manager.
CSI Manager
This role is essential. The CSI Manager needs to be of sufficient seniority in the organization and to have the necessary empowerment to apply a positive influence at all managerial levels to ensure support is given and resources are provided to achieve the CSI aims. The CSI Manager should be at the right hand of top management.
Other CSI Roles
To the CSI manager role can be added three additional, specific CSI roles: CSI process owner, CSI process manager, and reporting analyst, as shown in the organization chart in Figure 7-4.

Figure 7-4   Roles In Service Operation
You'll also notice that, because CSI ranges across the whole of the service lifecycle, all roles should be considered as coming under CSI's remit.
Furthermore, as I've mentioned in the previous chapters, while ITIL does not tell us how to organize ourselves specifically, it does give valuable guidance in each lifecycle stage in the form of sets of roles with associated responsibilities. The four roles in CSI can similarly serve as a useful checklist to make sure you're covering everything.
Finally, don't forget that to see the specific responsibilities of each of the roles shown in Figure 7-4 you will need to refer to the ITIL publications themselves.
Tools in Continual Service Improvement
All the tools used in the service lifecycle have a value in Continual Service Improvement, and CSI should play an important role in helping ensure that the best tools are acquired and subsequently implemented and developed to best effect. ITIL lists the following as areas where tools have a specific value for CSI:
â¢  Systems and Network Management
â¢  Event/Incident/Problem Management
â¢  Service Request Fulfillment
â¢  Knowledge Management
â¢  Performance Management
â¢  IT Security Management and Financial Management
CSI itself looks to use these tools for data gathering, monitoring, analysis, and reporting as well as assisting in determining the efficiency and effectiveness of all IT service management processes.
Chapter Review
Continual Service Improvement is at the heart of the service lifecycle and of the processes and functions that comprise it. Achieving sustained success and ongoing improvement is dependent on adopting, adapting, and putting into practice the ITIL guidance regarding CSI. It is crucial not to be too ambitious in short timescales, especially at the beginning. CSI is not a one-off project; it is more a way of life, for now and for the future. It starts with a realization of the fact that "we are where we are," and that is the place from where improvement begins. Your initial improvement steps may be small, but each step will buy you a little more room and a little more resource for further improvement. You should be confident that the pace will steadily accelerate as you learn more about your capabilities and about CSI too.
An early activity in CSI is to ensure that relevant data is being captured in order not only to identify the areas where improvement appears to have the most potential beneficial but also to provide evidence of the improvements that have been achieved. This activity starts in Service Operation but should expand to encompass all stages of the lifecycle, including CSI itself, as soon as resources permit.
The path you take with CSI should be based on the well-proven concepts of the Deming cycle, especially how that cycle is applied in the Seven-Step Service Improvement process and the CSI approach. In following this path, you should take care that you have a clearly defined objective against which you can set agreed-on critical success factors (CSFs) and related key performance indicators (KPIs) based on appropriate metrics chosen from the measurements you can make. You should encourage all stakeholders to embrace CSI, and you should capture all their CSI initiatives in a CSI register where all initiatives can be seen, assessed, cross-referred, and prioritized. The guiding principle is to have visibility of all ideas.
In deciding the priorities for CSI, it is useful to have an accurate picture of your level of IT service management maturity. For many organizations, that level may be easy to determine from the pain that is being felt; typically the areas of Incident Management, Change Management, Configuration Management, and Service Level Management would be ripe for improvement. More developed and complex situations may justify a formal assessment such as that carried out by a Capability Maturity Modeling Integration project.
Whatever the path that is decided and the plans that are made, it will be people who will carry them out. You must have an appropriate organization that includes the all-important role of CSI Manager, and you need to follow an effective transformation approach, such as that provide in Kotter's eight steps.
Quick Review
Here are the key concepts and terms you've encountered in this chapter. Read through this list; if anything seems unfamiliar or you can't readily describe it, go back and read the relevant section again.
â¢  The purpose and principles of Continual Service Improvement, particularly the Deming cycle (Plan-Do-Check-Act)
â¢  The Seven-Step Service Improvement process and the CSI approach
â¢  Measurements and metrics
â¢  Implementing CSI and achieving improvement across the service lifecycle
â¢  Maturity assessment
â¢  Kotter's eight steps to transforming your organization
â¢  Roles and responsibilities
â¢  Tools
CSI drives forward all stages of the service lifecycle and ensures that the creation of maximum value (the balance between utility and warranty) is behind all the aims you set.
Questions
Here's a set of ten CSI-specific questions for you to tackle.
1.  The model known as the CSI approach comprises a number of steps. Which of the following activities is associated with the step "Where are we now?"
A.  Perform a baseline assessment
B.  Understand the vision
C.  Gather the data
D.  Document the service level requirements
2.  Which one of the following is the correct list of activities in the Deming cycle?
A.  Plan-Do-Check-Act
B.  Check-Plan-Do-Act
C.  Plan-Act-Do-Check
D.  People-Processes-Products-Partners
3.  Which of the following is not a type of metric described in the Continual Service Improvement lifecycle stage?
A.  Compliance metrics
B.  Process metrics
C.  Technology metrics
D.  Service metrics
4.  Which one of the following is not a stage of the service lifecycle?
A.  Service Optimization
B.  Service Operation
C.  Service Transition
D.  Service Strategy
5.  What one of the following is the correct order of the activities of the Seven-Step Service Improvement process?
A.  Define the vision; define what is to be measured; gather the data; process the data; analyze the information; perform a risk assessment; produce improvement plans
B.  Define the vision; define what is to be measured; gather the data; process the data; analyze the information; implement improvement plans; review the vision
C.  Define the vision; define what is to be measured; gather the data; process the data; analyze the information; produce improvement plans; implement the improvement plans
D.  Define the vision; define what is to be measured; gather the data; process the data; analyze the information; negotiate service level agreements (SLAs); implement the CSI register
6.  Which of the following statements regarding key performance indicators (KPIs) and metrics are correct?
i.  There should be more than one KPI for each critical success factor.
ii.  You can have quantitative KPIs and qualitative KPIs.
iii.  The most important use of KPIs is in annual staff performance reviews.
iv.  Service metrics should measure the end-to-end service.
A.  iv only
B.  i and ii only
C.  i, ii, and iii only
D.  i, ii, and iv only
7.  In which stages of the service lifecycle is Continual Service Improvement (CSI) particularly important?
A.  Service Transition and Service Operation.
B.  Service Design and Service Operation.
C.  Service Strategy and Service Operation.
D.  It is equally important in every stage.
8.  On which of the following aspects of IT service management does Continual Service Improvement (CSI) provide guidance?
i.  Improvement of process efficiency and effectiveness
ii.  Measurement and metrics
iii.  Better alignment of services to business needs
iv.  Checking that deliverables are still appropriate
A.  i and iii only
B.  i and iv only
C.  i, ii, and iii only
D.  All of the above
9.  Which is the second activity of the Continual Service Improvement approach?
A.  Set measurable and achievable targets
B.  Create a guiding coalition
C.  Gather the data
D.  Carry out a baseline assessment
10.  Which of the following is an activity in the Seven-Step Service Improvement process?
A.  Keep the momentum going
B.  Plan
C.  Analyze the information
D.  How do we get there
Answers
1.  A. Option B is step 1, option C comes from the Seven-Step Service Improvement process, and option D comes from the Service Level Management (SLM) process in Service Design.
2.  A. This should have been easy. Options B and C contain all the right words but in the wrong order; option D is the four Ps of Service Design (see Chapter 4).
3.  A. I hope you spotted the joker without trouble. Compliance Metrics is an invention; the other three are those listed in the section "Metrics, KPIs, and CSFs."
4.  A. This was not difficult I hope. The two valid stages not mentioned are, of course, Service Design and Continual Service Improvement.
5.  C. The other options include activities that are not part of the Seven-Step Service Improvement process.
6.  D. Many organizations set KPIs as staff performance targets, but that is not relevant to ITIL.
7.  D. CSI is equally applicable throughout the service lifecycle.
8.  D. Again, the applicability of CSI is wide.
9.  D. Option A is step 3, option B is one of Kotter's eight steps, and option C comes from the Seven-Step Service Improvement process.
10.  C. Options A and D are from the CSI approach, and option B is from the Deming cycle.








CHAPTER 8
IT Service Management in the Real World
In this chapter, you will
â¢  Hear some real-world stories to illustrate important aspects that I covered earlier
â¢  Receive not only some specific guidance regarding how to tackle common challenges but also my recommended approach to specific, important service management projects

Real-World Stories
These stories are based on my experience over recent years; only the names have been changed to protect the innocent (or to keep me out of court!).
Fun with Finance
The terms fun and finance don't always go together, but some of my experiences have tickled my sense of the absurd.
Internal Charging
Noncommercial organizations sometimes decide that they need to introduce an internal charging policy (on top of the usual budgeting and accounting disciplines that ITIL rightly states are compulsory). The reason given for this is typically to exercise better financial management and to increase cost awareness.
My job was in one of the internal customer business units, and I was essentially the overseer of the services being provided to that business unit. It was an uncomfortable position, particularly because the boss of the business unit and the boss of the internal service provider each thought I worked for them, not for the other! They obviously hadn't heard of my commandment, "Thou shalt have clear roles and responsibilities."
The top finance director had decided to introduce internal charging from the start of the subsequent financial year, including presenting internal invoices and actual internal cash transfers to the internal service provider. This necessitated much preparatory negotiation (often ill-tempered) alongside the setup of appropriate bureaucratic administrative mechanisms.
On the due date the new charging system was introduced, and relationships between the service provider and the internal customer became increasingly fraught, culminating in the service provider declaring that they had got their original sums wrong and would have to increase charges across the board by 10 percent with immediate effect.
I'll leave you to picture the scene in your imagination! The lesson, of course, is to be extremely suspicious of any plans to introduce quasi-commercial methods into noncommercial relationships. Often the cost of setting up and running the charging mechanisms outweighs any resulting savings, and the impact may be to destroy trust between the service provider and the customerâthe antithesis of what ITIL is about.
I sought and found a new job, in the commercial world!
Working with the Finance Department
It is clearly crucial for an IT department to work closely and harmoniously with the finance department. To do that, IT service management professionals need to appreciate the imperatives and concerns of those in the finance department.
â¢  Access to financial systems such as Oracle Finance needs to be controlled carefully. The owners of the IT Security Management and Access Management processes need to work closely with the head of finance to promulgate policies and to manage adherence to them. HR should also be involved to ensure that job descriptions include specific responsibilities and that appropriate disciplinary mechanisms are in place to back up the policies. I chaired monthly meetings between the outsourced Oracle Finance service provider, the outsourced IT service desk provider, the internal finance department, and the IT department process owners.
â¢  The finance department has to monitor expenditure against budget, looking particularly at the individual cost centers. Unfortunately, the official cost centers rarely seem to align neatly with the IT department's various areas of cost, and some finance people also like to see revenue expenditure smoothed throughout the financial year. Within the IT department I created my own subordinate codes within the official ones to monitor at the level of detail I required while maintaining my ability to double-check the finance department's outturn figures. Fortunately, we had good configuration management, and our records were more up to date than those of the finance department. I also explained patiently that where we had just a single cost center that covered just one service and for which we were billed annually, it was not possible for me to "smooth" expenditure over the whole year!
Beware Apollo, the Project Manager
Project managers need to be strong personalities but should temper their drive and determination with a coherent appreciation of the service management lifecycle within which their project is runningâwhether they like that or not.
A new warehouse management system (WMS) was going to be introduced using technology that promised to provide improved efficiency and safety in warehouse operations. I was pleased to see that, unlike many other projects with which I had been previously involved, post-rollout support and subsequent development of the new system had been included in the scope of the project.
However, the project had not ascertained the existing support arrangements beyond establishing that a centralized IT service desk existed. The project then assumed that the service desk could be left to work out itself how to take on support of the WMS, although the project did realize that some form of early life support would be needed. The support manager made regular efforts to get the project manager to provide full details regarding such aspects as how the WMS was to be supported; what additional service desk resources would be required; the provision of incident, problem, change, and release models; and configuration information. All that was received in reply was a querulous response that made it clear the project manager considered that these arrangements were the support manager's responsibility. The support manager protested that this approach was unrealistic but was ignored not only by the project manager but also by the IT director who seemed more interested in the technical matters. To the surprise of no one in the support organization, the rollout and subsequent support efforts were disorganized, fractious, and unpredictable, and they caused significant stress on support staff who were trying to do their best despite having received no training and only a grudging amount of early life support.
That unsatisfactory experience demonstrates the crucial need for projects to run within the control of the service lifecycle, thereby ensuring that adequate financial resources are agreed on in Service Strategy, that a Design Coordination process oversees the design work and checks that a comprehensive and high-quality service design package is passed to Service Transition, and that a Service Transition Planning and Support process provides assurance that building and testing covers not only the new WMS service but also all the necessary support arrangements. This, of course, necessitates the owners of the Design Coordination process and the Transition Planning and Support process being given sufficient empowerment to discharge their responsibilities. It is crucial that when a project manager shows an inclination to use the management techniques of the Greek god Apollo, you apply service management best practices to bring the deity down to Earth and maintain proper control.
Outsourcing Occasions
When a decision is made to outsource services, the main driver is often to save money. However, I should hope that an equally important reason would be to reduce risk where the internal service provider doesn't have the necessary skills and experience to deliver those services itself and believes it would be uneconomic to do so. But beware! When services are outsourced, while some risks may be reduced, new risks will arise because a degree of management control will have been outsourced too. Here are two cases that illustrate some of the new challenges that may appear.
Rollicking Review Meetings
I'd just taken up my new post and was looking forward to the first monthly review meeting with our outsource contractor who was providing service desk, fulfillment, and desktop support, plus server administration and management services.
Agenda Item 1   I was very encouraged. Handed out by the service delivery manager (SDM) were copies of the monthly report, spiral bound on good-quality paper, in full color and containing attractive chartsâeven exploded pie diagrams. "This is a really professional job," I thought to myself.
I spent a few minutes examining this document after which I looked up and I said to the SDM that I was pleased to see that when incidents were closed, a short statement of the cause was recorded and that I presumed these statements came from a predefined list. The SDM confirmed that was so. I then asked the SDM how many statements were on this list. After much head scratching and whispered asides with colleagues, the SDM replied that it was about 1,500! I followed up by asking whether one of those statements was "miscellaneous." The SDM then had the good grace to look embarrassed and admitted that more than 60 percent of all closed incidents were indeed being closed as "miscellaneous." Everyone rapidly agreed that I was correct in saying that this situation was unhelpful to effective Problem Management.
I discovered that the list contained 1,500 closure statements because it was a consolidation of all the closure statements that had been agreed on with every customer of their service desk service. Therefore, I constructed my own list of closure statements (some 50 in all) and instructed the SDM that these were the only statements I now wanted used regarding my incidents. There was no "miscellaneous" option; if an analyst was unsure which particular statement should be applied, the statement "management review" would be used, and the service desk manager could then either improve the guidance to the service desk analysts or raise a change request for a new statement to be added to the list.
The next monthly meeting came round and, again, a beautifully produced report was distributed. I examined it carefully and then looked up at the SDM, sighed heavily, and remarked that what I'd wanted was my 50 statements to be used instead of, not in addition to, the existing 1,500 statements. "Ah," the SDM replied.
Having overcome that issue, I then suggested that my own team should carry out a percentage quality check of the closure statements being selected by the service desk analysts and that we should institute a penalty points system linked to the individual's bonus payments. If a statement had been selected that was correct, no penalty would apply. If a statement was selected that was close but not quite correct, one penalty point would be given. If the analyst had chosen a statement that, while it was on my list, was quite clearly incorrect, two penalty points would result. But, if the analyst had chosen a statement that wasn't on my list at all, the sanction would be three penalty points.
Quickly the accuracy rate rose from little more than 60 percent to 95 percent, but, more importantly, really effective Problem Management could start.
You may be interested to see my table of approved closure statements (see Figure 8-1).

Figure 8-1   Incident closure statementsâexample
But whatever processes and specifications you put in place, remember that little may actually happen unless you apply good "governance" (see Chapter 1). ITIL is not a substitute for proper leadership, management, and supervision.
Agenda Item 2   "But there's no denying," said the SDM, "that the number of incidents coming to the service desk exceeds the maximum workload set out in the contract. We'll have to charge you extra for the extra workload."
I immediately adopted the "management technique of procrastination" and said I would need to examine the figures and the contract before I could agree.
The next meeting came round, and we got to Agenda Item 2 again. "You're quite right," I said, "the incident rate is exceeding the contractual limit, and on that basis, you can send us a bill for the extra work. However, I notice that you're failing to meet the incident resolution targets in the contract and that, quite coincidentally, the penalty I can apply for your failure is about the same as the amount you want to charge me for the extra work. How about we work together to reduce the incident rate to below the contractual limit, thus enabling you to meet the resolution target? You won't then be looking to charge me more money, I won't be looking to apply contractual penalties, and, far more importantly, the users and the business will suffer less disruption and will be better supported." It was agreed that this was a good idea!
The management of outsourcing contracts can easily become a confrontational, testosterone-fueled experience. That is usually unhelpful in the long run. It is far better to nurture a professional relationship where the contract itself rarely has to be produced for routine matters and where a real and mutually beneficial partnership operates.
Now watch out for Agenda Item 3 and Agenda Item 4 that you'll be meeting soon!
A New and Improved Contract?
I was appointed to a small, part-time project team that was to review and make recommendations for a new outsourced contract for the service desk, desktop support, and fulfillment needs of the Type II service provider (shared service unit) with which my business unit had a Type I/Type II relationship, as one among a number of such business units (there was no service level agreement [SLA] with the Type II provider, but that's another story!). The main reason for the change was dissatisfaction with the current contractor's hardware support (to avoid confusion, let's call this contractor Contractor A).
We got started with enthusiasm, applying both our experience and our ITIL knowledge (a number of us held the ITIL v2 Managers Certificate). We produced a set of detailed, objective selection criteria and held a series of meetings and presentations with potential supplier organizations (Contractor A was not considered). We followed up with further meetings and negotiations with a short list of three.
We documented our conclusions and recommendations in a comprehensive report that went to the high-level decision maker (the "great man"). Our unanimous recommendation was that Contractor B was clearly the best and should be awarded the contract.
A week or two later we were summoned to meet the "great man" who commended us on the professional and rigorous approach we had taken and on the quality of the report. In fact, he couldn't have done better himselfâexcept that we had not picked Contractor C, which was the contractor he wanted.
So, Contractor C was duly awarded the contractâand immediately subcontracted the hardware support to Contractor A! As a result, the users continued to receive unsatisfactory hardware support with the added drawback that now the hardware support contractor was not even under the direct management control of the provider of their customer-facing service.
The moral here is that you must be alert to the risks of unexpected and unwelcome subcontracting; it may be a good idea to include in the main contract a clause that prevents the contractor from subcontracting without your specific agreement. It may also be politically prudent and could save you a lot of effort if, before you begin such a project, you could ascertain what the "great man" wants to see as your answer!
Configuration Conundrums
Having a good Service Asset and Configuration Management (SACM) process is essential for effective and efficient service management. Here are three true stories that illustrate that reality.
What's This Server For?
The business had been formed by the spinning off of a function that was not a core activity of the parent company. Several years later, the IT infrastructure of the new business had been disaggregated from that of the parent company (although a close relationship between the two businesses had continued).
The new business had created an effective configuration management process and a comprehensive and accurate configuration management system (CMS). The technical support manager now wanted to tidy up the infrastructure and remove any remaining equipment that had been inherited originally and that was no longer required by the new business.
Sitting in a rack in the server room was a server that was not on the CMS because it had not been procured by the new business, there was no known purpose for the server within the configuration, and there was no sign of ownership. However, the server was still powered up and connected to the data network, which was linked to the original parent company.
Options for dealing with this server ranged from "Unplug it and sling it in the garbage skip" to "We'd better check with the parent company because it's probably theirs and disposal (in accordance with the Waste Electrical and Electronic Equipment Directive, of course) will be their responsibility." The parent company was a little surprised by the news of this server and said they would check. The answer came back almost immediately: "Please don't touch itâit's the authentication server for our entire network, and it seems we've forgotten that it's still on your premises!"
Further comment from me should be superfluous.
Agenda Item 3
We're back to that meeting I covered in the section "Outsourcing Occasions," but the subject has now moved on.
When I took over my new job, one of the first questions I asked was where to find the inventory of all the IT infrastructure components. I was told that a lot of information had been gathered for the relatively new support contract and that the original documentation should be somewhere around. It wasâin a number of tea-stained manila folders that were sitting in a plastic tray under my desk. I did not have much chance to examine this potential treasure trove before the first monthly review meeting took place.
"Now, what about the configuration management service you're supposed to be providing?" I asked innocently. "Ah, yes," said the SDM, "I'll bring the details to the next meeting."
So when the next meeting came round and Agenda Item 3 was reached, the SDM handed me a floppy disk (it was a few years ago), which he told me contained the configuration management database (CMDB). I was fascinated and, after the meeting, lost no time in looking at what was on this disk. Disappointingly, it was a set of Microsoft Excel spreadsheets recording exactly what was to be found on the lists in the tea-stained manila folders under my desk.
I rapidly came to the conclusion that I would have to re-insource the configuration management service, saving money on the contract and regaining control of this essential element. It is an important consideration that whatever the level of outsourcing, a CMS is still essential to enable the business-facing service provider to perform the requisite level of service management.
Agenda Item 4
One aspect that was being done really well when I arrived was access management. My own staff operated an effective "user enrollment" system to validate and maintain user identities and access groups, although the actual enrollments were performed by the outsourced service provider under their server administration and management responsibilities.
A benefit of this clear process with associated roles and responsibilities was that the IT department's records tended to be more up to date than those of the central HR function because when new employees arrived at a remote site, the first action there was to give them access to the services they needed to do their jobs. Of course, the other side of the coin was that remote sites tended to be dilatory in notifying the IT department when employees left. One reason for that delay was when the employee concerned had specific, unique access rights. In those circumstances, our suspicions were alert to the danger of a degree of impersonation taking place, despite clear company instructions that such impersonation would be considered a disciplinary matter.
You may recall that one of the five activities of the Configuration Management process is Validation and Audit; in this context at work I would ask the outsourced service provider to send me every morning a list of the overnight account lockouts. I would then call the manager at the remote sites listed and ask them to explain. The usual response was that the individual concerned had specific access rights and either was on leave or was working days, so when the night shift needed to carry out an activity for which no one present had the necessary permissions, they had tried to use this individual's identity, failed, and succeeded merely in locking the account. The result was a highly embarrassed local manager, a reduction of attempted impersonations, and an increase in the reputation of IT department for its omniscience and diligence!
Nevertheless, we accepted that there was always going to be some delay in our receiving notification of departing staff from remote sites, so it was important to know the impact of this on the accuracy of our CMS. To ascertain that, whenever I visited a remote site, I would always take with me from the CMS an extract listing all the registered users and check its content with the local administrator. As a result, I knew that at any one time the number of registered users would be about 10 percent higher than the number of actual users. This was not an ideal situation, but at least we knew the facts.
This case also illustrates that for management information to be useful it does not necessarily have to be 100 percent complete and accurate, just so long as you know the level of any inaccuracies and omissions. In this context, you may recall the data-information-knowledge-wisdom (DIKW) model in Chapter 5.
It Was a Quiet Day in the Office When . . .
The IT director was away on vacation, but there was still a gentle hum of work going on when the telephone rang in the Technical Support departmentâit was the data center reporting that they had suffered a complete power failure! My team immediately contacted the service desk to inform them of this major incident just as the expected "incident blizzard" started to hit them.
"What's going on?" shouted the development manager across the office. "Just finding out," replied the technical manager, patiently.
Let me summarize the subsequent story.
The data center staff reported that they were investigating with all urgency and would keep us informed. The development manager said to the technical manager that we should invoke our contingency plan immediately to cut over to the standby data center. The technical manager said we should wait until we knew the facts because power could be restored quickly and all would be well. The development manager was unhappy with this approach and said that we had spent a lot of money on our contingency arrangements, including switching between data centers every three months to ensure ongoing familiarity and confidence. The technical manager agreed that the arrangements were sound and well-practiced but pointed out that once we had started to cut over there was no way back and it would take four hours for the job to be completed, whereas it was quite possible that the current power problem could be resolved much more quickly. Essentially, the choice was either to initiate a guaranteed four-hour outage with some risk or to be patient for the moment and to see what happens. The argument bounced to and fro for a little while until the telephone rang again. It was the data center reporting that they had found and fixed the power fault and that all services were coming back on line nicely.
Apart from this being another example of the effective use of the management technique known as positive procrastination (or not leaping to precipitate action), this experience showed us that we needed to clarify the continuity plan invocation rulesâwhat are the various scenarios that could occur and the guidelines to go with them, and who should be the IT director's deputy in these matters when the IT director is not available?
Have We Got a Problem?
This was a really interesting assignment in which I was engaged. I'd already been involved in a number of service management transformation initiatives, but this particular client's business was rather special: it was providing secure hosting for high-profile customers. To that end there was a major focus on the Event Management process that frequently (and typically) served as the trigger for Incident Management and Problem Management.
The organization was staffed by highly qualified and intelligent people (some with PhDs) with a large number of new graduates. The practical challenge was to coordinate the efforts of these individual specialists who were not innately followers of process! They presented an unusual challenge because they required both convincing philosophical arguments of why processes had to be followed and a convincing basis for the definitions used in ITIL.
Much time was spent debating the difference between an event, an incident, a problem, and a Continual Service Improvement (CSI) initiative in the context of their specific business. I enjoyed particularly a discussion regarding what we called the "wobbly fence" hypothesisâa situation where, for example, a weakness was identified in the infrastructure that was considered to be a possible future cause of failure, but it was as yet uncertain when that point of failure would be reached.
After debate it was agreed that, in theory, a problem record should be raised and all related event management warnings cross-referred to it. The problem record would appear in the known error database (KEDB), and appropriate, prioritized investigation would take place and be visible to all interested parties. The next challenge was the tendency of the brilliant but inexperienced younger staff to raise a problem in every case, thus swamping the process and tending to obscure the "real" incidents and problems.
My suggested approach was that the authority to raise a formal problem (or an incident) should be restricted to a group of experienced managers so that when a more junior member felt that an incident or a problem needed to be raised, they would submit a request (a type of service request) to the appropriate member of that group. At the time of submission, the originator would prioritize it to ensure it received prompt attention when needed. The decision maker would then decide to either raise a problem, raise an incident, or raise a record for the CSI register; or the decision maker could take the originator quietly to one side to review the actual necessity for any action including reviewing the priority the request was given! Here, of course, the decision maker was playing a useful continual service improvement role in the education and guidance of staff.
This is also a good example of the well-known ITIL maxim of "adopt and adapt" in action. If you've adopted and introduced an effective Request Fulfillment process, why not adapt it for any useful purpose.
Common Challenges
In this section I'll cover four particular areas where managers are often too involved in the details of trying to keep the business supported to have time to see a broader picture.
"IT Is Just More Overhead"
Business executives' main focus is on the performance of the business and ensuring that finances are kept under control. They don't always have an understanding of the importance of IT service management (although it would be hugely advantageous if they did!).
As a consequence, there is a risk of IT, and IT service management (ITSM) in particular, being viewed as an inescapable overhead cost rather than a strategic asset, which this book has shown that it is. For the good of the business concerned, it is crucial that ITSM professionals recognize that decision makers may well have this view and that they will make decisions, particularly about outsourcing, based on an excessively narrow perspective. To counter that misconception, ITSM must ensure that these decision makers receive and understand appropriate reports showing how the delivery of IT services adds value to the business and how cost effective is the management of the infrastructure and support of the users. Continual Service Improvement is the key to this, and the head of IT should ensure that the role of CSI Manager is undertaken by someone with the appropriate skill, resources, and empowerment to make this happen.
Does the IT Director Have to Make Business Decisions?
Another unfortunate consequence of IT being viewed as overhead, or as being just another cost center, can occur when the finance director decides that budgets must be cut. That decision may be fair enough in itself, and IT directors should expect to have to play their part by making cost savings in areas under their direct control. However, the lion's share of the costs in IT are related to the services that IT provides to its customers. If the IT director makes cuts to the funding of those services, such cuts will inevitably have an impact on the business. After all, for whom are those services being provided? If the service lifecycle is being managed properly, any unnecessary services or services where demand had reduced would have already had their resources disposed of or redeployed.
Therefore, the challenge from the finance director to cut costs should go primarily to the customers of the IT services and should require them to consult with the IT director to determine what options there are regarding changes to business processes and to determine their impact in budgetary terms both for the business area concerned and for the cost of the supporting IT services. This may well require a loosening of SLA targets and a reduction in service hours; such changes are those for which the business must accept primary responsibility, not for the IT director to impose.
I Need to Get Started NowâToday!
There's usually a lot to do to improve services, and in the next section I'll be providing some guidance on a straightforward yet structured approach that I've used, but here's an example of the initiative I took to get things started.
The situation was that, while there was some contractual and SLA-like documentation around, the documentation was far from comprehensive, it was often not followed by the practitioners, and many processes and procedures were undocumented. The area where I felt some basic improvement would be most fruitful was with the main outsourced contractor. We were yet to enjoy mature incident and problem management, and unsatisfactory support situations were constantly arising. After some discussion, the following Quality Issues Log (QIL) procedure was introduced.
As the customer's representative, I was empowered to raise an auditable observation whenever I perceived something unsatisfactory occurring regarding the service being delivered. The observation would be recorded and passed to the contractor's service delivery manager who would investigate and would place the QIL in one of three categories.
â¢  Category 1   There was a relevant process in place, but it wasn't followed.
â¢  Category 2   There was a relevant process in place, but it was inadequate.
â¢  Category 3   There was no process in place.
We would then discuss and agree on the appropriate action for each category, as follows:
â¢  Category 1   The relevant managers and supervisors would ensure that the process was followed correctly in the future.
â¢  Category 2   The nature of the inadequacy would need to be identified and then addressed. Appropriate action could include such aspects as review and amendment of the process or identification of the need for additional resources.
â¢  Category 3   Further investigation was needed to ascertain whether this was covered by the contract and, if so, to produce a process or, if not covered by the contract, to consider a contract amendment if justifiable.
Is Your Change Manager Considered Omnipotent?
The role of Change Manager is crucial. Poorly managed changes are a frequent cause of service disruption and the subsequent avoidable waste of resources, which is why it's obviously important to have an effective and efficient Change Management process. However, the role of the Change Manager in the process is sometimes not fully understood.
Every change must be properly authorized before it can proceed to build and test and subsequently to release. Whoever constitutes that relevant authority should be specified in the request for change (RFC). Using change models can be very helpful here, and of course, for standard changes a change model should almost invariably be followed.
Whoever has the role of Change Manager should be the manager of the change process (but not necessarily the Process Owner). As such, the Change Manager chairs the change advisory board (CAB), which does what it saysâit advises the Change Manager on what to do about the changes upon which it deliberates. But ultimately the Change Manager is there to run the process, make sure that all practitioners comply with it, and take a lead in related continual service improvement.
Therefore, the Change Manager is not some omnipotent oligarch who approves or rejects changes on a capricious whim. If a change has proceeded correctly through the process (with all stakeholders having had their say, with those comprising the specific change authority having given their approval, and with the CAB having decided upon scheduling), the Change Manager has no option other than to provide the official stamp of approval. On the other hand, if some stakeholders try to bypass the process, the Change Manager would be required to withhold approval.
Moreover, those who would be responsible for build, test, and release would not have to check for themselves that the correct stakeholders had been consulted and the necessary approval given; the very presence of the Change Manager's official approval provides that guarantee.
In this respect, the Change Manager is like Her Majesty the Queen in the British Constitution. If a bill passes all its stages in the Houses of Parliament, it then goes for Royal Assent at which point it becomes an Act of Parliament; it becomes a law. Her Majesty cannot withhold Royal Assent under those circumstances. However, if, say, the Prime Minister decided that it was all too tedious for a particular bill to have to go through parliament and that would be much easier to pop down to Buckingham Palace and get the Queen to give it Royal Assent without all that parliamentary fuss, the Queen would rightly refuse, because it would be unconstitutional. So, Her Majesty the Queen has the role of Change Managerâalbeit with rather more majesty than most!
How Many Hours Is This Going to Take?
It is important to manage customers' expectations if you want to achieve high levels of customer satisfaction. Therefore, it is important to ensure that all the ingredients of each service are sensibly and clearly defined. Wherever something is not clearly defined, you shouldn't be surprised when other people fill the gap that's left with their own conception (or misconception!).
First, what do I mean by service hours as opposed to support hoursâare they the same thing? These terms should be defined in a glossary and in the relevant agreements (SLAs, OLAs, and underpinning contracts). Service hours are usually the times when a particular service should be available to its users, whereas support hours are the times when support (Service Desk, Second Line, Third Line, and so on) is available. Ideally, support hours should not be less than service hours for any particular service, but it may be agreed on by the business, perhaps because of financial constraints, that the business is prepared to take the risk of having a service, which, if it breaks outside support hours, may not be restored as quickly as it would like. That, of course, would be reflected in the SLA. On the other hand, just because service hours have ended does not mean that support hours no longer applyâincident and problem investigation and resolution should continue as specified under "Support Hours" in the SLA.
You also need to be careful about the pattern of hours. Clearly, if the hours are 24/7/365, that's no issue. But if you mean Monday to Friday (in other words, normal working days), are you including all public holidays, or are you excluding any (Christmas Day, for example) or any other special days for that matter.
But what about incident resolution targets? Should the clock be stopped outside of support hours? The answer is that good ITIL response: "It depends."
First, remember that the aim of Incident Management is "to restore normal service as quickly as possible"âif something breaks and can be fixed straightaway, then it should be fixed there and then. Often, of course, the necessary resources aren't immediately available, so the incident has to take its place in the queue in accordance with its priority. Whether the clock gets stopped is a matter for negotiation, agreement, and documentation. However, it should not be stopped for reasons such as "awaiting a reply"; if relevant support hours for that particular support group are running, then so should the clock.
This is why incident resolution targets in SLAs are worded along the lines of, "For this priority, 95 percent of all incidents are to be fixed in four hours." Such wording does not mean that there's "a four-hour fix target." It means that at the service review meetings, when performance metrics are presented showing how many relevant incidents occurred and how many were fixed within four hours, for a hundred incidents, no more than five should have taken longer than four hours to fix; the SLA target would then have been met.
As far as users are concerned, when an incident occurs, the normal service they reasonably expect to enjoy will have been interrupted, and their clocks will continue to run regardless of what the service provider does.
Listen, This Is a Major DisruptionâI Want a "Sev 1"
Service providers and their customers like to clearly identify the most critical failures that occur. Often such failures are given a formal severity level of which the highest is Severity One (often referred to as a "Sev 1"). Such failures are then given precedence over all other work.
However, the priority of an incident should not be viewed as a symbol of the status of the individual user concerned. As you know, priority is a reflection of impact and urgency, and the priority given to any particular incident should be derived from the specific guidance provided in the SLA. But what should the service desk do when a user insists that higher priority should be given, perhaps a priority higher than the top priority permitted in that particular SLA?
To foster good relationships, it is good practice for service providers to try to avoid having to give a direct "no" to their customers. In this sort of situation, it may be helpful for the SLA to allow for a higher priority to be allocated if the business insists that it is justified. After all, it is the business's outcomes that the service provider is there to facilitate. However, because such preferential treatment would come at a cost, it would be prudent to have an agreed-on tariff for such circumstances. Thus, the service desk analyst could say that the user could certainly have a higher priority but could the user please provide their cost center code so that the appropriate recharge could be made. I suspect that most users would agree to accept the priority that was originally allocated!
Service Management Improvement
If you have plenty of resource available, you can allocate as much of it as you want to Continual Service Improvement; however, resources are usually scarce, but you can still achieve much with a comparatively limited amount. Nevertheless, in the context of large and complex government organizations or in multinational companies, CSI projects could be expected to be of an equivalent size to the organization itself. Yet, even in those circumstances, taking as simple an approach as possible may yield more immediate improvement than a highly sophisticated and expensive arrangement. Indeed, while there is no doubt that in relatively mature and large examples formal Capability Maturity Model Integration (CMMI) may be justified, I would suggest that, to begin with, something more straightforward could often produce faster results. That would certainly be the case with organizations of a more modest size.
As you saw in Chapter 7, essentially there are four themes for improvement that could be addressed.
â¢  Firefighting reduction   In other words, gaining management control of incident activities, leading to improvements in Event Management, Request Fulfillment, and Problem Management practices
â¢  Control of change   Change Management itself along with Release and Deployment Management; this would also encompass user access control
â¢  Asset and configuration control   The progressive introduction of Service Asset and Configuration Management, but to be undertaken only as fast as the scope of change control expands
â¢  Service definition   Moving from the management of service components (infrastructure, applications and contracts, and so on) to the definition of services within a Service Catalog as a prerequisite for the negotiation and introduction of service level agreements
Progress should be made in parallel on all four of these work streams as resources permit, with the aim of achieving a defined level of maturity. That level could be, for example, one where CMMI would be worthwhile or where the disciplines of working toward an ISO 20000 accreditation would become practicable and worthwhile. However, before I get too far ahead of myself, it could be useful to produce a CSI approach model such as in Figure 8-2.

Figure 8-2   CSI approachâa generic top-level model
Regarding each of the four streams, I suggest that the following activities should be undertaken:
Firefighting Reduction
Many service providers are quite good at firefightingâthey've probably had lots of practice! The following are the activities I recommend:
â¢  Review whatever tool you already have to ensure its available functionality is being used to best effect. Unless it is hopelessly inadequate, don't get too concerned about replacing it with a new tool yet.
â¢  Make sure the existence and contact details of your Service Desk are known by all users.
â¢  Introduce an incident coding system (such as that as described in the section "Agenda Item 1" earlier) for use at both initial incident categorization and on closure. This will enable the capture of the crucial evidence that is essential for so many other processes to be effective (especially Problem Management).
â¢  Look for any evidence that users and support staff are bypassing the incident process. Is your Verification and Audit in the Configuration Management process identifying changes to CIs without a matching incident or change record? You should also ensure that your incident process is handy to use, that everyone is aware of its existence, and that everyone understands that they must follow it. The rest is then a management and supervisory responsibility.
Control of Change
Most service providers are already working hard to manage change effectively. If the existing Change Management process and Release and Deployment process are working well, give yourselves a pat on the back and apply Continual Service Improvement to keep them that way. Otherwise, consider the following:
Administration or Management?   You may have RFCs and release controls being raised and their progress being recorded, but are they actually being managed? Is it clear who precisely is empowered to authorize changes, releases, and deployments? Are post-implementation reviews being conducted? Are the impacts and the risks of every change, release, and deployment being properly assessed?
Types of Change   Are all changes being correctly categorized, and is the effectiveness of that categorization being monitored? Are too many changes being categorized as normal, thus generating excessive bureaucracy and tempting people to bypass an unwieldy process? On the other hand, are too many changes being handled as standard changes when they actually have unique aspects about them that means they are higher risk and merit closer control? Emergency changes should be comparatively rare. Look at the emergency changes to see how many are actually "late" changes where a sponsor failed to notify change management promptly as soon as the need for a change was identified. Don't forget that changes (and releases and deployments) should be prioritized; emergency changes take precedence over all others and should be raised only when the business is already in crisis or soon will be if the change is not made almost immediately.
Link with Incident Management   Once you've got incident management running properly, it becomes possible to identify incidents that relate to changes that have caused unplanned disruption to services. Change management can then initiate appropriate investigation to identify the cause (inadequate impact assessment, poor risk management, insufficient resources, pressure to roll out prematurely, and so on) and initiate appropriate improvement measures.
Link with Configuration Management   If you attempt to introduce configuration management for areas not yet under change control, you are going to waste resources because no sooner would you have populated your configuration management databases than the installations, moves, and deletions that take place in those areas of the live environment would render your CMDBs progressively out of date. You should aim to extend the Change Management and SACM processes in step with each other. However, if out of necessity you have to do change management without configuration management, you can, but it won't be as efficient and effective. Moreover, once these two processes are working in conjunction, the verification and audit activity of the Configuration Management process will identify areas where Change Management (and Release and Deployment Managementâand not to forget Incident Management) procedures have been eluded or evaded.
Asset and Configuration Control
An old but, nevertheless, true axiom is
â¢  You cannot manage what you cannot control;
â¢  You cannot control what you cannot measure;
â¢  You cannot measure what you cannot define.
Therefore, if you are going to attempt to perform service management, you need to define what it is you are trying to manage, which is why you need the Service Asset and Configuration Management (SACM) processâas ITIL names it. But before rushing off to buy a specialist tool and construct your CMS, you should consider the following:
Link with Change and Release and Deployment Management   As mentioned in the section "Control of Change" earlier, don't attempt to introduce the SACM process in areas not yet under change control. And don't forget that these three processesâChange, Release and Deployment, and SACMâwork extremely well together, and you benefit hugely when they do.
Where Are We Now?   As the first step, you should establish exactly what configuration information is already held, by whom, in what format, and to what level of completeness and accuracy. This could vary between detailed and accurate information on all laptops (for example) and a miscellaneous, uncontrolled collection of individual wikis. Nevertheless, establishing the level of knowledge is essential for you to agree on a coherent plan to roll out formal SACM.
Tools   It would be unrealistic to attempt to do SACM using a set of index cards. If you already have a service management tool that offers reasonable configuration management functionality, then use it. However, setting up a Microsoft Excel table or a Microsoft Access database would be a perfectly sensible early, preparatory step. You could upload your configuration data to something more powerful later.
What and When   I recommend applying formal SACM first to those areas where the greatest benefit can be achieved in the shortest time. Not only would this bring those "quick wins" you are always anxious to gain but also it would prove the concept and demonstrate the value of what you are doing. A good example would be a major retailer who was suffering constant failures regarding the electronic point-of-sale (EPOS) devices in their shops. Initially the retailer wasn't sure exactly how many of these devices they had and where they were; of course, if your EPOS device isn't working, you can't take customers' paymentsâsomething rather crucial for a retailer! Their efforts brought rapid benefits. Having proved the concept, gained confidence, and secured the necessary resources, you can then proceed at a manageable pace until the scope of SACM and the scope of Change Management are in alignment.
Identification   It may seem obvious that you should call things by what they are. However, once you set up your naming conventions and a related hierarchical structure, it gets difficult to change it. Top-level categories are clear: hardware, software, people, documentation, and so on. However, under hardware what do you call the devices that individuals use? If you set up lists under proprietary names such as iPads, Macs, iPhones, or whatever, you'll soon have an unwieldy set of second-level categories. I would suggest that under hardware you set up a category such as "user items" (alongside printers, servers, and so on) and then break that category down to subcategories such as "workstations," "portables," and so on. What you actually choose will depend on your particular situation.
Unique Identity   Of course, every configuration item must have a unique identity, but this again needs some preparatory thought. Most hardware can be given a label showing its identity in your CMS, but labels can become detached, so it's worthwhile ensuring that the record itself includes, say, the manufacturer's serial number and the electronic identity of the item (where such exists). But what about CIs whose size and shape precludes them being labeled or where physical labeling is impossible such as with soft versions of software or a sensitive matter such as with people (and what unique identity would you use for people anyway)? Each organization must determine its own solution to these challenges.
Service Definition
Organizations that are comparatively early in their journey toward mature service management tend to be focusing their attention on specific items of hardware, system software and applications, or configurations of them. Certainly all these resources merit sound management in their own right, but service management requires the focus to be on the outcomes achieved by the management of these components; service management is concerned with "facilitating the outcomes customers want to achieve"âthe definition you encountered in Chapter 1.
That focus on specific components and configurations is then often reflected in the style of any service level agreements that may have been produced. The sort of SLA you should be aiming to negotiate and agree on should focus on the service itself and with the individual components of that service being identified not in the SLA but in the CMDBs within the CMS. But before you can start developing such SLAs, you must first define your services and list them in your Service Catalog.
I find a good starting point is to examine existing contract and application software documentation (or where documentation is poor, talk to the relevant stakeholders that you can identify) and check any existing SLAs. Your incident records may also be a useful source by looking at individual incidents and asking the question "What was the user trying to do here?" In other words, what was the particular business process that was being "facilitated" when the issue arose?
Having gathered that information, you can produce a first-cut business/customer service catalog, which initially need not be anything more complicated than a matrix showing services and the business/customer departments that use them (see the example in Figure 4-1 in Chapter 4).
You can then validate and develop its contents, use it as a basis for developing your Service Portfolio, and set up your SLAs and SLA structure. At the same time, you can produce the technical or supporting service catalog that is the other side of the catalog "coin" and from which you can develop your operational level agreements and align them and the SLAs with your underpinning contracts.
Summary
I have kept this description of these four work streams deliberately simple and generic because I want to provide straightforward guidance; I want to avoid giving any impression that there could be "one-size-fit-all" approach. Like ITIL itself, this section contains guidance, and leaders and managers are strongly recommended to adopt it and then add their own details to adapt it to their specific needs.
Tool Selection
One of the most tempting courses of action to take when embarking on an effort to improve service management is to go out and buy a new service management tool (if you've got the money!). I strongly recommend that you pause for thought before getting that purchase order signed. Never forget that old but true saying: "A fool with a tool is still a fool!"
Many organizations already have some sort of IT service management tool; it may be obsolete regarding the technology it uses, and in comparison to others, it may not be the sharpest tool now available. However, the great advantage it has is that it's the one you have and, probably, the one you know most about. That being the case, it would be worthwhile to review how it has been implemented and to see whether all its functionality is being used and used to its best effect. This is also an excellent opportunity to undertake some focused continual service improvement of your service definitions and of your processes, particularly identifying where your processes have been made to fit the tool rather than the tool to support your processes. This review will enable you to produce a set of detailed criteria not only for exploring improvement of the existing tool but also for the selection of a new tool.
The determination and documentation of these selection criteria are the foundations for successful tool selection. You should begin by exploring the market to ascertain particularly the following:
â¢  The tools that are available
â¢  The functionality that is being offered
â¢  To what level each tool could be considered an integrated service management tool (how far do they combine discovery capability, software management, deployment management, and so on, alongside the usual incident, change, and service level management functionality?)
â¢  The technology platforms required and available (hosted solutions, software as a service, and so on)
â¢  Pricing models (by functionality modules, number of "seats," and the like)
â¢  Support options
â¢  Industry reputation of the potential suppliers (consult existing clients)
â¢  Future viability of potential suppliers
â¢  Future plans of the potential supplier (might they be looking to expand their business so that, while currently a welcome partner, your relative importance as a customer could be diminished by the arrival of a new and bigger customer?)
How much time you spend on this will depend on the urgency of your need and the resources available to undertake the research. Avoid the temptation to turn your work into a full-blown review of the market (unless you're looking to sell the product of your research to others!).
The next stage is to divide your criteria into two sets: essential and desirable.
The essential criteria are those that any tool must meet in their entirety to be given further consideration. Each criterion would have a binary assessment: a clear yes or no. For example, such criteria could be "incident workflow separate from request fulfillment" or "total cost below $xxxxxx." Any tool for which the answer to these questions is not an unequivocal yes would be excluded from further consideration. However, you may need to be flexible with your criteria. If your criteria are too demanding, you may end up with too few potential tools on your short list; conversely, your list may be impossibly long, in which case you may need to tighten up your criteria.
Your desirable criteria need to be put into an order that reflects your prioritization of your requirements. With these desirable criteria, your assessment will not be a straight yes or no but some sort of valueâprobably involving costed options. This is where you can apply the Pareto principle, or the 80/20 rule. It is unlikely that any particular tool will meet 100 percent of your desirable criteria, so the tool you select will be the one that meets all your essential criteria and that best meets your desirable criteria, not just in terms of the absolute number but in terms of the relative importance of the ones it does meet.
However, do not apply the 80/20 rule to your essential criteria; that's where the 100/0 rule applies!
It is advisable to discuss and agree on all these essential and desirable criteria with the relevant stakeholders before going out formally to potential suppliers.
Once you have an agreed-on set of essential criteria, you can produce a shortlist of potential suppliers, all of whom meet your minimum requirement. You can then use your prioritized desirable criteria to score your short list and make your final choice; in doing so, you will have produced an audit trail to show what you did, what criteria were used, and on what basis the final decision was reached.
The main ITIL book ITIL Service Design provides some detailed guidance in Chapter 7.2, where you'll find a mention of a rather more sophisticated selection method: MoSCoW analysis (which stands for "Must have, Should have, Could have, and Won't have").
The Continual Service Improvement Register
Continual service improvement is a fundamental part of the service lifecycle, and the more parlous the state of service management the greater the imperative of getting on with improvement. Furthermore, CSI does not have to be a super-sophisticated activity to be useful; it is often quite obvious what needs to be improved. However, improvement won't happen just by thinking about it; you should record all the initiatives that arise, categorize them, prioritize them, and so on. Indeed, you should create and use a CSI register.
You've already been introduced to the CSI register in Chapter 7, but a few more words on the subject may be useful.
Table 8-1 shows a generic specification for a CSI register entry format.


Table 8-1   CSI Register Entry Format
Here is more information about the fields in Table 8-1:
â¢  Serial   Every record must have a unique identity.
â¢  Status   Any temptation or pressure to close entries prematurely should be resisted. Be careful to avoid choosing metrics and KPIs that might drive behavior down that route.
â¢  Description and Benefit   These need to be kept as concise as possible; maintain supporting details in an appropriate controlled document (which will be a configuration item in its own right) held in a suitable repository such as SharePoint.
â¢  Generic Area   Name of the relevant customer-facing services, supporting services, or processes. If this is not clear, you may want to raise another CSI record to have the documented scope of services and processes reviewed and revised!
â¢  Repository   This is the physical location where the supporting details are to be found, and the register entry should include their location within it.
â¢  Date Raised and Target Date   These are self-explanatory.
â¢  Benefit Rating, Urgency, Resources Estimate, and Breadth of Impact   These four ratings are crucial to achieving as objective an assessment as possible. The CSI Manager will need to draft, negotiate, agree on, document, and introduce definitions and guidelines that are appropriate to the particular service provider concerned.
â¢  Originator   This is the person who had this bright idea in the first place.
â¢  Sponsor   If this is not obvious or the likely sponsor is unwilling to take ownership, the CSI Manager may need to ask top management (the IT director or equivalent) to nominate (see also the section "The International Standard: ISO/IEC 20000").
â¢  Cross-Reference and CSI Cross-Reference   Clear cross-referencing is essential, as covered in a moment.
â¢  Review and Reviewer   It is likely that all entries will be reviewed several times; therefore, it may be necessary to maintain a separate list of reviews with entries cross-referred to the CSI register.
â¢  Date Closed   There is no argument that an entry should be closed when it has been subsumed by another entry (but beware of any subsequent disaggregation). Otherwise, be careful to ensure that entries are closed only when the improvement initiative has been fully and successfully implemented.
â¢  RFC Number   This is a crucial cross-reference, as explained in a moment.
The CSI register should be owned and maintained by whoever has the role of CSI Manager. Ideally, the CSI register should be part of a comprehensive, integrated service management tool to help ensure its consistency, quality, and visibility to all stakeholders. However, at an early stage of maturity, a simple Microsoft Word document or Microsoft Excel spreadsheet will suffice so long as adequate control can be exercised over its update and visibility.
The CSI register sits alongside the entries in any existing risk registers and the records in the known error database (KEDB), the latter being owned by Problem Management, as I'm sure you remember. Where appropriate, all these records should be cross-referenced, not only within the CSI register but between the CSI register and the risk registers and the KEDB. As and when RFCs are raised against these entries, the RFC number should be cross-referenced to the originating register or KEDB record because subsequent action should take place under the control of the RFC. However, such CSI register entries should not be closed until the RFC has been successfully implemented and the benefit of the improvement has been realized.
The International Standard: ISO/IEC 20000
I've saved the best until last!
The IT Infrastructure Library and ISO/IEC 20000 are very close in concept with a significant overlap. However, there is a fundamental difference of approach, which is expressed best in the words of Dr. Don Page, one of the gurus of IT service management: "ITIL is documented common sense whereas ISO 20000 is auditable common sense."
As you saw in Chapter 1, when seeking sources of best practice, the highest-quality sources and the most valuable are found in recognized standards, such as ISO 20000 (the "IEC" bit tends to get dropped in general parlance). Therefore, when you are considering your vision for the future quality of your service provision, it would make sense to set meeting the ISO 20000 requirements as your ultimate goal. You may not be able even to contemplate actually achieving all of them at this moment, but you can use them as a readymade, clear set of aspirations. When you create your top-level service improvement approach model, achieving ISO 20000 accreditation could be your vision, and "Where do we want to be?" could be the definition of an achievable step toward achieving that vision.
Moreover, having ISO 20000-style aspirations gives your auditors something certain against which to assess you. Now, before you run for cover at the mention of auditors, let me tell you that I have found auditors to be extremely useful when trying to drive forward service improvement. If your plans are sensible and adequately documented, the auditors will tend to be on your side, and their observations can add huge weight to any bids you make for resources for service improvement.
Of course, you may be embarking on a project to achieve formal ISO 20000 accreditation because that has been mandated by the executive board. If so, rejoice! Achieving ISO 20000 accreditation will require the introduction of the necessary management disciplines to achieve high levels of service provision. It does that by requiring evidence to be produced, not just good intentions.
Within the scope of this section, it is impossible to provide the detailed guidance necessary for setting up and running a successful ISO 20000 accreditation project. However, I believe an overview of the structure and disciplines of ISO 20000 will be useful.
ISO 20000 is based on the Deming cycle of Plan-Do-Check-Act you encountered in Chapter 7. In essence, it requires the creation of a service management system (SMS) that reflects the principles of governance considered in Chapter 1: fairness, transparency, and conformance to policies and legislation. The following are the main areas of ISO 20000:
â¢  The SMS
â¢  The design and transition of new or changed services
â¢  Relationship processes
â¢  Service delivery processes
â¢  Control processes
â¢  Resolution processes
SMS
The SMS includes the nomination and empowerment of a "top management" individual along with not only a clear statement of the commitment of management to "planning, establishing, implementing, operating, monitoring, reviewing, maintaining and improving the SMS" but also the production of evidence that supports that commitment. There must also be a clear definition of the business objectives and the service objectives that are derived from them (Service Strategy in action). These objectives are then linked downward through the supporting processes. Furthermore, acting on behalf of top management, a suitably skilled and empowered management representative must be appointed (this job is similar to that of CSI Manager). The SMS must also cover roles and responsibilities, documents and records management, resource management, and the application of continual service improvement.
From this discussion, I hope you can see that providing proof to an auditor of the existence of a credible SMS is fundamental to gaining an ISO 20000 accreditation. However, this should not be viewed as a "box ticking" exercise. The efficient and effective delivery of IT services, based on well-managed assets, is dependent on the existence of a controlling SMS.
New and Changed Services
This aspect covers those areas for which you exercise management through the service portfolio and the service catalog, encompassing the relevant activities of Service Strategy, Service Design, and Service Transition. Program and project management form a major part of this aspect.
Relationship Processes
These are the Business Relationship Management and Supplier Management processes.
Service Delivery Processes
The processes are
â¢  Service Level Management
â¢  Capacity Management
â¢  Service Continuity and Availability Management (ISO 20000 combines these two ITIL processes)
â¢  Information Security Management
â¢  Budgeting and Accounting (charging is outside the scope of ISO 20000)
â¢  Service Reporting (a discrete process, reflecting the importance of measurement and metrics)
Control Processes
The processes are
â¢  Configuration Management (the equivalent of SACM in ITIL v3)
â¢  Change Management
â¢  Release and Deployment Management
Resolution Processes
The processes are
â¢  Incident and Service Request Management (ISO 20000 combines these two ITIL processesânot recommended by ITIL, so be careful!)
â¢  Problem Management
Achieving ISO 20000 Accreditation
So, even if you're not looking to achieve formal ISO 20000 accreditation now, taking an ISO 20000 approach will help you immensely in achieving worthwhile and provable service improvements. And you never knowâyou may find yourself at the ISO 20000 level almost without noticing it. But when you do, don't be shy; you should blow your own trumpet on what you've achieved!
Chapter Review
In this chapter, I've shared a variety of IT service management experiences. Here is a list summarizing the topics that have been covered:
â¢  Finance (charging)   Be careful if you're planning to introduce full charging for services delivered internally.
â¢  Finance (policies)   Remember that while the service provider and its finance department share many common areas of interest, the imperatives may be different, and the service provider has to act in accordance with the organization's financial policies and procedures.
â¢  Project management   It must be absolutely clear that projects and programs, and all involved in them (including project managers), are subject to the organization's service management policies and its application of the service lifecycle.
â¢  Outsourcing (process maturity and quality)   Does your contractor understand the crucial need to capture performance evidence, especially in the incident process? Are they able to use your specific incident closure codes? Is the implementation and functionality of their service management tool acceptable?
â¢  Outsourcing (penalties)   Applying penalty charges might not always achieve what you want.
â¢  Outsourcing (the business's objectives)   Make sure that the business executives give you a full picture of their objectives before you embark on any detailed work; be ready to challenge those objectives if you consider that they are flawed.
â¢  Configuration Management   Good service management is seriously impaired unless you have good configuration management. Work with partners to encourage Type II service providers to match your standards and ensure Type III service providers are contractually obliged to do so.
â¢  IT Service Continuity Management (ITSCM)   Ensure you have identified all the various situations in which the invocation of a service continuity plan may be considered and ensure you have in place detailed guidance, especially regarding who makes the decision and what are the criteria they should consider.
â¢  Service Operation processes   Ensure you have coordinated closely the processes of Event Management, Incident Management, Problem Management, Request Fulfillment, and Access Management.
â¢  Business Relationship Management   Ensure that in practice the business actually does take responsibility for making business decisions and doesn't let such decisions default to the IT service provider.
â¢  Capability Maturity Model Integration (CMMI)   Don't be tempted to make this your first step in continual service improvement: start by appointing someone as an empowered CSI Manager and let them begin with the areas of greatest pain and greatest potential for significant improvement (an example of applying the CSI approach was provided); leave CMMI for later.
â¢  Change Management   Make sure that all stakeholders understand that the person with the role of Change Manager is there to manage the process and to ensure that appropriate action is taken in the event of any noncompliance; in other words, you want to ensure good governance.
â¢  SLA targets   Ensure all stakeholders understand what targets actually mean.
â¢  Incident prioritization   Ensure that everyone, users especially, understands that prioritization is based on impact and urgency and that the prioritization of any specific incident must be based on criteria agreed to during the negotiation of the relevant SLA.
â¢  CSI   When starting out, there are essentially four parallel paths to be followed (firefighting, change control, configuration, service definition); get these addressed first before worrying about sophisticated ongoing CSI arrangements.
â¢  Tool selection   Be as objective as possible using clear criteria.
â¢  CSI register   This is a crucial tool to be introduced as soon as possible, remembering that in essence it is a big "to-do" list and that usually the more entries in it the better.
â¢  ISO/IEC 20000   I gave you a brief overview of this standard.
Questions
Here are 11 questions for you to tackle.
1.  A user contacts the service desk to report a fault. Where would the service desk analyst look for the prioritization criteria?
A.  The known error database (KEDB)
B.  The relevant service level agreement
C.  The service portfolio
D.  The configuration management system (CMS)
2.  A major fault has occurred that would appear to justify the invocation of an agreed-on IT Service Continuity arrangement. Who would make the decision?
A.  The Service Desk Manager
B.  The Business Relationship Manager
C.  The IT Operations shift leader
D.  The occupant of the job specified in the IT service continuity plan or their deputy
3.  Which of the following would you expect to see in a contract, including the service level agreements within it, for an outsourced service desk service?
i.  Specification of agreed-on incident closure codes
ii.  Penalty charges and service credits
iii.  Specification of the format and content of the regular review meetings
A.  i and iii only
B.  All of them
C.  ii only
D.  ii and iii only
4.  Which one of the following is optional in Financial Management?
A.  Charging
B.  Accounting
C.  Budgeting
D.  Costing
5.  What one of the following statements is correct about the relationship between IT service management and projects or programs?
A.  Project managers must always be able to override the decisions of the change advisory board (CAB).
B.  Projects or programs should align their activities with the service lifecycle.
C.  There is no overlap between IT service management and projects until the project has rolled out into the live environment.
D.  In any conflict for resources, projects always take precedence over day-to-day service management needs.
6.  Which one of the following are not processes in the Service Operation stage of the service lifecycle?
A.  Change Management, Release and Deployment Management, Technical Management
B.  Event Management, Incident Management, Problem Management
C.  Incident Management, Request Fulfillment, Access Management
D.  Event Management, Request Fulfillment, Access Management
7.  Who of the following could be members of the change advisory board (CAB)?
i.  Service Desk Manager
ii.  Business representatives
iii.  Capacity Manager
iv.  Service owners
A.  i only
B.  iv only
C.  All of them
D.  i, iii, and iv only
8.  Which one of the following statements regarding the continual service improvement (CSI) register is false?
A.  Entries should be categorized as having a benefit rating such as high, medium, or low.
B.  Entries should be cross-referred to identify common themes or configuration areas.
C.  Entries should be closed only when either the initiative has been implemented or the entry has been subsumed by another entry.
D.  The number of entries should be kept to a reasonable minimum to ensure that focus can be maintained.
9.  An SLA target that states that 95 percent of all incidents for a particular service and priority are to be resolved within four hours means:
A.  The service desk has four hours to get back to the user.
B.  The service desk must get back to the user within four hours in 95 percent of cases.
C.  Normal service must be restored within four hours in 95 percent of these incidents.
D.  A four-hour fix is applicable.
10.  Which one of the following statements is correct?
A.  Service Asset and Configuration Management (SACM) is independent of the Change Management process and the Release and Deployment Management process.
B.  Service Asset and Configuration Management (SACM), Change Management, and Release and Deployment Management are all very closely linked.
C.  It is important to have Service Asset and Configuration Management (SACM) working before starting with Change Management.
D.  While Service Asset and Configuration Management (SACM) is closely associated with Change Management, it does not have any relevance to Release and Deployment Management.
11.  Other than Service Level Management, which processes should be involved in the development of service level agreements (SLAs)?
i.  Capacity Management
ii.  Availability Management
iii.  IT Service Continuity Management
iv.  Strategy Management
v.  IT Security Management
A.  i, ii, and iii only
B.  i, ii, and v only
C.  i, ii, iii, and v only
D.  All of the above
Answers
1.  B. The KEDB contains problem and known error records, the service portfolio list the services but would not contain this detail, and the CMS would record the existence and location of the SLA but not necessarily its contents.
2.  D. It is unlikely that the Service Desk Manager or the Business Relationship Manager would make such a decision; the IT Operations shift leader could be so empowered but not in all cases.
3.  B. These are all important elements to have in a contract for an outsourced service desk service.
4.  A. Budgeting and accounting are obligatory. In ITIL, costing is not an activity nor a concept that is an equivalent of budgeting, accounting, and charging.
5.  B. The situations in options A, C, and D may be encountered but are examples of very poor practice.
6.  A. The Change Management process and the Release and Deployment Management process are Service Transition processes; Technical Management is a Service Operation function.
7.  C. Representation on the CAB should be available to all relevant stakeholders.
8.  D. A well-designed and properly managed CSI register would easily accommodate many hundreds of entries.
9.  C. The other options are misinterpretations of the statement.
10.  B. It is important to understand that these three processes are mutually supportive and must work closely together to achieve maximum effectiveness.
11.  C. The link between Strategy Management and Service Level Management is tenuous. In contrast, the other four processes comprise warranty and are crucial contributors to producing effective SLAs.








APPENDIX A

Implementation
The important subject of implementation was discussed in Chapter 7, and explored further in Chapter 8 in the section titled "Service Management Improvement." I hope you agree that because the IT Infrastructure Library (ITIL) is not a product or a tool, you cannot "implement" it as such, but I hope you also agree that what you actually implement is a coherent and controlled continual service improvement (CSI) approach based on the creation and ongoing development of a service management system (SMS). ISO 20000 provides an invaluable definition of what an SMS is and what it comprises.

However, in this book, I want to give practical guidance alongside covering the academic material in the exam syllabus. To that end I hope you found the "Service ManÂ­Â­Â­agement Improvement" section of Chapter 8 relevant and useful. Here in Appendix A, Figure A-1 illustrates that approach; this figure is presented dynamically with an associated commentary in the video Implementation Overview (see Appendix D).

Figure A-1   Implementation overview








APPENDIX B

ITSM Qualifications Structure
Figure B-1 shows the formal ITIL qualifications structure, which comprises a set of linked courses with associated examinations. Candidates must first pass the ITIL Foundation exam, which is a prerequisite for taking further examinations. Those examinations cover ITIL Practitioner, a selection of Lifecycle and Capability areas, and the Managing Across the Lifecycle course (MALC).

Figure B-1   Qualifications structure
Successful completion of each examination earns the candidate a specific number of credit points, and when at least 22 points have been earned, you are awarded the status of "ITIL Expert," so long as the MALC has been successfully taken and there has been no unacceptable overlap between Lifecycle and Capability courses. For more details, you should visit www.axelos.com/qualifications/itil-qualifications.
ITIL Experts may then want to move on to the ITIL Master qualification which is obtained through a written submission and candidate interview; credit points are not relevant to this award. Details can be found at www.axelos.com.
Credit points are earned as follows:
â¢  Foundation examination (3-day course): 2 points
â¢  Practitioner examination (3-day course): 3 points
â¢  Lifecycle examinations (3-day course each): 3 points
â¢  Capability examinations (5-day course each): 4 points
â¢  MALC examination (5-day course): 7 points
Thus, successful completion of the Foundation exam (2 points), the five Lifecycle exams (5 Ã 3 = 15 points), and the MALC exam (7 points) would earn 22 points and the award of ITIL Expert; this permutation is the most efficient route to achieve that.
Although the length of the relevant courses is given above, attending formal training courses, while strongly recommended, is not a prerequisite for taking ITIL examinations.








APPENDIX C

Instant ITIL Expertise
Service management is a serious subject. Integrating IT and the business, driving up quality, and driving down cost are serious aims. However, you should never take yourself or this sort of subject too seriously. Moreover, a little whimsy can often highlight a serious point and enliven an otherwise dry subject. Furthermore, sound knowledge can help you unmask charlatansâthose who talk impressively but lack a full, professional understanding.
It is in that spirit I offer you this bluffer's tool. Use it responsibly!
ITIL Buzz-Phrase Generator
The IT Infrastructure Library (ITIL) presents a challenge both to experienced practitioners and to aspiring service management professionals. Busy people cannot always find the time to become as familiar with the guidance as they would like. Also, newcomers often seek to display a depth of understanding that usually can be achieved only by many years of assiduous training and experience.
However, help is at hand! Here is a simple-to-use tool that will help hard-pressed practitioners bypass many of the difficulties that up to now have obstructed their path to ITIL excellence.
My ITIL Buzz-Phrase Generator (Figure C-1), when used skillfully, enables practitioners to display an instant expertise on matters pertaining to IT service management, especially Service Strategy, investing everything they write or say on this subject not with any particular meaning but with a proper ring of decisive, progressive, knowledgeable authority. Simply follow my easy-to-use instructions.

Figure C-1   ITIL Buzz-Phrase Generator (with acknowledgments to Sir Ernest Gowers, The Complete Plain Words)
Instructions for Use
Select three separate numbers each in the range 0 to 9 inclusive and read the phrase from the appropriate columns and rows in Figure C-1. Then carefully insert the resulting phrase in your next ITIL document or pronouncement to enhance its impact.








APPENDIX D

About the Download
The downloadable media that comes with this book includes
â¢  Practice Questions   Total Seminars' Total Tester Practice Exam Software, with 200 practice questions
â¢  Video Training   Video MP4 clips provide detailed examples of key certification objectives in audio video format direct from the author of the book.
This e-book includes Total Tester practice exam software. The Total Tester software can be downloaded and installed on any Windows computer and must be installed to access the Total Tester practice exams.
To download the Total Tester, simply click the link below and follow the directions for free online registration.
http://www.totalsem.com/0071842136d
System Requirements
The software requires Windows Vista or higher; current or prior major release of Chrome, Firefox, Internet Explorer, or Safari; and 30 MB of hard disk space for full installation.
Installing and Running Total Tester
Once you've downloaded the Total Tester software, double-click the Launch.exe icon. From the splash screen, you can install Total Tester by clicking the Install Practice Exams button. This will begin the installation process. Create a program group named Total Seminars and put an icon on your desktop. To run Total Tester, go to Start | Programs | Total Seminars or double-click the icon on your desktop.
To uninstall the Total Tester software, go to Start | Control Panel | Programs And Features, and then select the Total Tester program you want to remove. Select Remove and Windows will completely uninstall the software.
About Total Tester
The Total Tester practice exam software helps you test your knowledge as you study. Total Tester provides you with a simulation of the actual exam. Exams can be taken in either Practice or Final mode. Practice mode provides an assistance window with hints, references to the book, an explanation of the answer, and the option to check your answer as you take the test. Both Practice and Final modes provide an overall grade and a grade broken down by certification objective. To take a test, launch the program and select ITIL Exam Guide from the Installed Question Packs list on the left. Select Practice Exam or Exam Simulation or create a custom exam.
McGraw-Hill Professional Media Center Download
To access the other available downloads visit McGraw-Hill Professional's Media Center by clicking the link below and entering this e-book's 13-digit ISBN and your e-mail address. You will then receive an e-mail message with a download link for the additional content.
http://mhprofessional.com/mediacenter/
This e-book's ISBN is 9780071842136.
Technical Support
For questions regarding the Total Tester software download or operation of the Total Tester Software, visit www.totalsem.com or e-mail support@totalsem.com.
For questions regarding the e-book content or the McGraw-Hill Professional Media Center, please e-mail customer.service@mheducation.com. For customers outside the United States, e-mail international_cs@mheducation.com.








GLOSSARY

Each of the five main IT Infrastructure Library (ITIL) books includes their own detailed glossary of ITIL terms, and readers may also find useful the Dictionary of IT Service Management Terms, Definitions, and Abbreviations published by the itSMF UK.
This book provides a glossary focused on specific information aimed at candidates for the ITIL Foundation examination. The glossary is divided into three parts.
â¢  Essential Definitions   This gives the six crucial ITIL definitions with which candidates must be familiar.
â¢  Explanation of Common Terms   This is a tabulated and cross-referenced list of those terms that are used frequently in service management and that candidates must fully understand. Each term is explained in as clear English as is possible.
â¢  Index of Stages, Processes, Functions, and Concepts   This is an alphabetical list of each of the lifecycle stages, processes, functions, and concepts, and in which chapter of this book they can be found. Candidates should have an accurate and complete understanding of each of these.
Essential Definitions
Service
A service is a means of delivering value to customers by facilitating outcomes customers want to achieve without the ownership of specific costs and risks.
Service Management
Service management consists of a set of specialized organizational capabilities for providing value to customers in the form of services.
IT Service Management
IT service management is the implementation and management of quality IT services that meet the needs of the business. IT service management is performed by IT service providers through an appropriate mix of people, process, and information technology.
Process
A process is a structured set of coordinated activities that together achieve a specific objective (for example, Incident Management).
Function
A function is a unit of an organization specialized to perform certain types of work and responsible for specific outcomes (for example, the Service Desk).
Role
A role is a set of responsibilities defined in a process and assigned to a person or team (for example, a service desk analyst).
Explanation of Common Terms
attribute    Information about a configuration item (CI).
availability    Ability of a configuration item (CI) to perform its function when required.
baseline    Snapshot of the configuration management database (CMDB).
business    The corporate entity that's having its outcomes facilitated (covers both public and private enterprises).
capabilities    Intangible assets.
change advisory board (CAB)    A body that advises the Change Manager.
configuration item (CI)    Any component of the IT infrastructure.
configuration management database (CMDB)     A database containing information on configuration items (CIs) throughout their lifecycle.
configuration management system (CMS)    A set of tools and databases, principally configuration management databases (CMDBs).
continual service improvement (CSI) register    A formal "to-do" list of ideas for service improvements.
customer    The person with whom service level targets are agreed on.
early life support    The final stage of release that lasts until agreed-on service level targets are achieved consistently.
emergency change    A change required to prevent or resolve a business crisis.
event    An occurrence of significance.
incident    An unplanned interruption to an IT service.
known error    A problem with a documented root cause and a workaround.
maintainability    The speed and ease with which a broken configuration item (CI), including services, can be fixed. See also mean time to restore (MTRS).
mean time between failures (MTBF)    The average time elapsed between a configuration item (CI), including services, being restored and the configuration item (CI), including services, failing again.
mean time between system incidents (MTBSI)    The average time elapsed between occurrences of failure of a configuration item (CI), including services.
mean time to restore (MTRS)    The average time taken to restore a configuration item (CI), including services, to normal.
normal change    Any change that has some unique quality.
operational level agreement (OLA)    An agreement within a business's internal IT organization underpinning service level agreements (SLAs).
owner    A nominated individual or group empowered to exercise accountability for a specific configuration item (CI).
priority    Relative importance.
problem    The cause of one or more actual or potential incidents.
release    Roll out into the live environment.
reliability     The ability of a configuration item (CI), or service, not to fail. See also mean time between failures (MTBF) and mean time between system incidents (MTBSI).
request for change (RFC)    A formal proposal for a change, particularly for a normal change.
resilience    The ability of a configuration item (CI) to resist the impact of failure.
resources    Tangible assets, which are relatively easy to acquire.
root cause    The underlying cause identified in one or more problems.
service catalog    A detailed list of all services either live or in transition.
service design package    The "blueprint" passed from Design to Transition.
service knowledge management system (SKMS)    The configuration management system (CMS) plus other relevant tools and knowledge sources.
service level agreement (SLA)    A formal agreement between service provider and customer.
service portfolio    The complete set of all services through the lifecycle, from conceptual to retired.
service provider    An organization providing services to customers.
service request    A request from a user (or end user) for a standard change, for information, or for advice.
serviceability    Availability, reliability, and maintainability of a service as provided by a supplier.
standard change     Relatively common, low-risk changes that follow a predefined change model.
supplier    A third-party service provider.
underpinning contract     A formal contract with a third party that underpins service level agreements (SLAs) or operational level agreements (OLAs).
user (or end user)    A person who uses IT services to help them perform their business function.
utility    The promised functionality of a service.
warranty    The ability of a service to provide its promised functionality.
workaround    Expedient, documented action to restore service pending the implementation of a permanent fix.
Index of Lifecycle Stages, Processes, Functions, and Concepts












INDEX

Please note that index links point to page beginnings from the print edition. Locations are approximate in e-readers, and you may need to page down one or more times after clicking a link to get to the indexed material.
A
academic research as best practices source, 8
Accept approach for risk management, 19
acceptance criteria in Service Design package, 64
Access Management process, 32, 167
accounting in Financial Management for IT Services, 50
accreditation, ISO/IEC 20000, 235
achievable targets in Service Level Management, 71
Act activity in Plan-Do-Check-Act, 191
activities
Access Management, 167
Availability Management, 84
Capacity Management, 80
Change Management, 121-125
Design Coordination, 65
Incident Management, 155-156
IT Operations Control, 173-174
Plan-Do-Check-Act, 191
in processes, 13-15, 32
RACI matrices, 18
risk management, 19-20
Service Asset and Configuration Management, 116-117
Service Desk, 168-169
Seven-Step Service Improvement, 194
Strategy Management, 46
Transition Planning and Support, 110
advisors as best practice enablers, 8
alerts, 153
analysts
CSI, 203
Incident Management, 157
analytics in Service Strategy, 53
Analyze activity in risk management, 19
Andrews, Thomas, 30
anomalies in Incident Management, 156
applications in Service Strategy, 44
Applications Management function, 36, 175-176
assess and evaluate step in Change Management, 124
assets
CSI, 227-228
Service Strategy, 43-45
attributes in Service Asset and Configuration Management, 115
authorization to implement step in Change Management, 124-125
authorization to proceed step in Change Management, 124
autodetection of incidents, 156
automation in Service Strategy, 53
availability
Information Security Management, 93
measuring, 88-89
Availability Management process, 33
aspects, 83
overview, 82-83
principles, 83-84
reactive and proactive activities, 84
risk management, 85-92
Service Catalogs link, 67
Avoid approach for risk management, 19
B
baselines
CSI, 195-197
Deming Cycle, 191
Service Asset and Configuration Management, 115-116
BCM (business continuity management), 89-91
Benefit field in CSI register, 231-232
Benefit Rating field in CSI register, 231-232
best practices
description, 6-7
enablers, 8
sources, 7-8
BIA (business impact analysis), 91
Breadth of Impact field in CSI register, 231-232
BRM (Business Relationship Management) process, 33
ISO/IEC 20000, 235
Service Level Management, 72, 78
Service Strategy, 48-49
budgeting
Financial Management for IT Services, 50
ITSM cuts, 221
Build and Test step
Change Management, 124
Release and Deployment Management, 133
business, defined, 9
Business Capacity Management process, 79
business case in Financial Management for IT Services, 50-51
business continuity management (BCM), 89-91
business impact analysis (BIA), 91
Business impacts section in business case, 51
Business Relationship Management (BRM) process, 33
ISO/IEC 20000, 235
Service Level Management, 72, 78
Service Strategy, 48-49
business requirements in Service Design package, 62
business service catalogs, 68
business value in Service Transition, 108
C
CABs (change advisory boards), 124-125, 128-129, 222
capabilities
Service Design, 60
Service Strategy, 44-45
Capability Maturity Model Integration (CMMI), 200, 224
Capacity Management process, 33
capacity plans, 81-82
Demand Management, 81
overview, 78-79
reactive and proactive activities, 80
Service Capacity Management link, 80
subprocesses, 79-80
categories
Incident Management, 157
Service Asset and Configuration Management, 114
centralized Service Desks, 170-171
CFIA (component failure impact analysis), 85-86
change advisory boards (CABs), 124-125, 128-129, 222
change authorities, 128-129
change documents, 129
Change Evaluation process, 34, 36, 134
change in CSI, 202, 226-227
Change Management process, 34
change advisory boards, 128
change authorities, 128-129
change documents, 129
change models, 129
configuration management aspects, 126
Emergency Change, 126
failures, 121-122, 138-140
flow, 122-125
overview, 119
purpose, 119-120
roles, 130
SACM linked to, 227
scope, 120-121
Standard Change, 127
Change Managers, 222
change models, 129
charging in Financial Management for IT Services, 50
Check activity in Plan-Do-Check-Act, 191
Churchill, Winston, 195
CIs (configuration items)
component failure impact analysis, 85-86
Service Asset and Configuration Management, 114
classification in Incident Management, 157
closure
Change Management, 125
Incident Management, 160-161, 214-215
Release and Deployment Management, 134
CMMI (Capability Maturity Model Integration), 200, 224
CMS (configuration management system)
Service Asset and Configuration Management, 116
Service Capacity Management link, 80
Service Operation, 177
SKMS, 112-113
comments in Request Fulfillment, 166
commodity category in Service Design, 94-95
common terms, 252-254
communication
Service Catalogs, 67
Service Operation, 151-152
compatibility in Change Management, 140
complaints in Request Fulfillment, 166
complementary frameworks, 5-6
completion of investigation in Incident Management, 160
compliments in Request Fulfillment, 166
component availability, 83
Component Capacity Management process, 80
component failure impact analysis (CFIA), 85-86
concepts, index of, 254-256
confidentiality in Information Security Management, 93
configuration
CSI, 227-228
issues in real-world story, 216-218
SACM. See Service Asset and Configuration Management (SACM) process
configuration items (CIs)
component failure impact analysis, 85-86
Service Asset and Configuration Management, 114
configuration management
change control linked to, 226
Change Management, 126
configuration management system (CMS)
Service Asset and Configuration Management, 116
Service Capacity Management link, 80
Service Operation, 177
SKMS, 112-113
contingencies in business impact analysis, 91
continual improvement vs. continuous improvement, 193
Continual Service Improvement (CSI) stage
actions, 201-202
approach, 195-196
asset and configuration control, 227-228
change control, 226-227
Change Management, 125
Deming Cycle, 191-192
description, 28-29
firefighting reduction, 224-226
implementing, 200-201
Incident Management, 160
Kotter's eight steps, 202
measurement and metrics, 196-199
overview, 189-190
principles, 190-193
processes and functions overview, 31-34
purpose, 190
questions, 206-209
register, 192, 231-232
review, 204-205
roles, 203-204
service definition, 228-229
Service Portfolio Management, 48
Seven-Step Service Improvement, 193-194
summary, 36
Titanic, 30
tools, 203-204
contracts in Service Level Management, 73-76
control in Service Asset and Configuration Management, 116-117
control processes in ISO/IEC 20000, 235
coordination in Service Design, 60
core services, 42
costs
Availability Management, 82
Capacity Management, 79
Change Management, 139
service, 9-10
Service Design, 60
Service Operation, 151
critical success factors (CSFs), 198
Cross-Reference field in CSI register, 232
CSI. See Continual Service Improvement (CSI) stage
CSI Cross-Reference field in CSI register, 232
CSI Managers, 192, 203
cultural factors in Service Desk, 173
custodians in Applications Management function, 175
customer based SLAS, 77
customer satisfaction in Request Fulfillment, 166
customer service catalogs, 68
customers
best practice enablers, 8
Change Management, 122
expectations, 223
stakeholders, 12
D
dashboards in Service Operation, 177
data center power failure story, 218-219
data-information-knowledge-wisdom (DIKW) model
Knowledge Management, 111-112
Seven-Step Service Improvement, 194
Date Closed field in CSI register, 232-233
Date Raised field in CSI register, 231-232
defined customers
all processes, 14
Change Management, 122
Definitive Media Library (DML)
Release and Deployment Management, 132
Service Asset and Configuration Management, 116
definitive spares, 132
Demand Management process, 33, 36, 51-52, 81
Deming, W. Edwards, 190-191, 199
Deming Cycle, 191-192
Deploy step in Release and Deployment Management, 134
deployment
process. See Release and Deployment Management process
Service Transition, 108
Description field in CSI register, 231-232
Design Coordination process, 65
detection
Expanded Incident Lifecycle, 88
Incident Management, 156-157
diagnosis
Expanded Incident Lifecycle, 88
Incident Management, 159-160
diagnostic scripting, 177
DIKW (data-information-knowledge-wisdom) model
Knowledge Management, 111-112
Seven-Step Service Improvement, 194
disaster recovery (DR) in ITSCM, 89
DML (Definitive Media Library)
Release and Deployment Management, 132
Service Asset and Configuration Management, 116
Do activity in Plan-Do-Check-Act, 191
documentation, 5
documents, change, 129
DR (disaster recovery) in ITSCM, 89
Drucker, Peter, 11
E
early life support in Release and Deployment Management, 134
ECABs (emergency change advisory boards), 126
effectiveness, 5
efficiency axiom, 5
efficiency of effort in Service Design, 60
80/20 rule in tool selection, 230
emergency change advisory boards (ECABs), 126
Emergency Change process, 126
emergency changes, 121
employees as best practice enablers, 8
enabling services, 42
end-to-end availability, 88
end users as stakeholders, 12
enhancing services, 42
escalation in Incident Management, 159-160
Event Management process, 152-153
events
actions, 153
alerts, 153
Change Management, 122
definition, 152
types, 153
exception events, 153
expanded incident lifecycle, 87-88
expectations
Change Management, 140
customer, 223
service, 11
Service Transition, 108
F
Facilities Management function, 174
failure severity levels, 223-224
fault-tree analysis (FTA), 86-87
financial capital in Service Strategy, 44, 49-51
financing stories, 211-212
firefighting reduction, 224-226
follow-the-sun Service Desks, 171-173
forward-compatible design in Service Design, 60
four P's of Service Design, 61-62
FTA (fault-tree analysis), 86-87
functional escalation in Incident Management, 159-160
functional requirements in Service Design package, 62-63
functions
defined, 14-15
index of, 254-256
service lifecycle, 30-36
Service Operation, 167-176
future needs
Availability Management, 82
Capacity Management, 79
G
Generic Area field in CSI register, 231-232
glossary
common terms, 252-254
essential definitions, 251-252
governance, 19
guiding coalitions in CSI, 202
H
hierarchical escalation in Incident Management, 159
holistic service design, 60-61
I
IBM computers, 2
identification
asset and configuration control, 228
Service Asset and Configuration Management, 116
Identify activity in risk management, 19
impact
business case, 51
Change Management, 139
Incident Management, 154, 157-158
Problem Management, 162
risk management, 19-20
implementation overview, 243
implementation step in Change Management, 125
incident management
change control linked to, 226
outsourcing, 214-216
Service Desk, 172
Incident Management process, 32
activities overview, 155-156
categorization and classification, 157
completion of investigation and diagnosis, 160
detection, 156-157
escalation, 159-160
incident matching, 162
incident models, 161-162
initial investigation and diagnosis, 159
logs, 157
major incidents, 161
notifications, 157
overview, 153-155
prioritization, 157-158
RACI matrices, 18
resolution and recovery, 160
review and closure, 160-161
scope, 155
incident matching
Incident Management, 162
Problem Management, 164
industry practices, 7-8
information and guidance in Request Fulfillment process, 166
information in Service Strategy, 44
Information Security Management (ISyM) process, 34, 92-94
informational events, 153
infrastructure in Service Strategy, 44
initial investigation in Incident Management, 159
initial review step in Change Management, 123
initiation step in Change Management, 122-123
integration, 5
integrity in Information Security Management, 93
internal charging story, 211-212
internal experience for best practices, 8
internal IT vs. external business in Service Operation, 151
Introduction section in business case, 51
ISO/IEC 20000 standard, 233-235
ISyM (Information Security Management) process, 34, 92-94
IT Operations Control function, 173-174
IT Operations Management functions, 32, 173-174
IT Service Continuity Management (ITSCM) process, 34, 89-92
IT service management (ITSM)
budget cuts to, 221
defined, 11-12
vs. ITIL, 1
misconceptions, 220-221
ITIL Buzz-Phrase Generator, 247-248
ITIL Foundation exam, 245
ITIL overview
axioms, 5
best practices, 6-8
characteristics, 4
complementary frameworks, 5-6
definitions, 9-17
governance, 19
heritage, 1-2
instant expertise, 247-248
vs. ITSM, 1
misapprehensions and misconceptions, 3-4
organization, 17-18
qualifications structure, 245-246
questions, 21-23
review, 20-21
risk, 19-20
Ten Commandments, 4-5
tools, 20
version 1, 2
version 2, 2
version 3, 3
ITSCM (IT Service Continuity Management) process, 34, 89-92
ITSM (IT service management)
budget cuts to, 221
defined, 11-12
vs. ITIL, 1
misconceptions, 220-221
K
KEDB (known error database), 163-164
key performance indicators (KPIs), 198-199
knowledge
Service Strategy, 45
Service Transition, 108
Knowledge Management process, 34
DIKW model, 111-112
Service Knowledge Management System, 112-113
Service Transition, 110-111
Seven-Step Service Improvement, 194
known error database (KEDB), 163-164
known errors in Problem Management, 163
Kotter's eight steps, 202
KPIs (key performance indicators), 198-199
L
labels in Service Asset and Configuration Management, 115
language factors in Service Desk, 173
levels of detail in Service Asset and Configuration Management, 114
levels of service quality in Incident Management, 154
lifecycle stages, index of, 254-256
local Service Desks, 169-170
logs in Incident Management, 157
Lyons' Electronic Office (LEO), 2
M
maintainability aspect in Availability Management, 83
major incidents in Incident Management, 161
major problems in Problem Management, 165
MALC (Managing Across the Lifecycle course), 245-246
Manage activity in risk management, 19-20
management
Service Asset and Configuration Management, 116
Service Strategy, 44-45
Service Transition, 108
management architectures in Service Design, 61
management information systems and tools in Service Design, 61
management technique of procrastination, 215, 219
Managing Across the Lifecycle course (MALC), 245-246
matrices, RACI, 17-18
Mean Time Between Failures (MTBF), 87-88
Mean Time Between System Incidents (MTBSI), 87-88
Mean Time to Restore Service (MTRS), 87-88
measurement methods and metrics
availability, 88-89
Change Management, 122
CSI, 196-199
processes, 14
Service Design, 61
Methods and assumptions section in business case, 51
minutes for change advisory boards, 129
Mitigate approach for risk management, 20
models
change, 129
Incident Management, 161-162
Problem Management, 164-165
monitoring
financing, 212
Service Level Management, 72
MoSCoW analysis in tool selection, 230
MTBF (Mean Time Between Failures), 87-88
MTBSI (Mean Time Between System Incidents), 87-88
MTRS (Mean Time to Restore Service), 87-88
multilayer SLAs, 77
N
naming in Service Asset and Configuration Management, 115
negotiations in Service Level Management, 72
network operations centers, 173
new and changed services in ISO/IEC 20000, 234-235
normal changes, 121
normal service in Incident Management, 154
notifications in Incident Management, 157
O
OLAs (operational level agreements)
Incident Management, 160
Service Level Management, 73
operational category in Service Design, 94-95
operational level agreements (OLAs)
Incident Management, 160
Service Level Management, 73
operational requirements in Service Design package, 63
operations bridges in IT Operations Management functions, 173
opportunities in Service Strategy, 42
organization in Service Strategy, 45
organizational readiness assessment in Service Design package, 63
Originator field in CSI register, 231-232
outcome, defined, 11
outsourcing
Service Transition, 108-109
stories, 213-216
ownership
CSI, 203
defined, 9
P
Page, Don, 233
Pareto principle in tool selection, 230
partners in Service Design, 62
patterns of business activity (PBAs), 52, 81
people
Service Design, 61
Service Strategy, 44-45
performance in Capacity Management, 79
phased releases, 134
Plan and Prepare step in Release and Deployment Management, 133
Plan and Prepare Deployment step in Release and Deployment Management, 133-134
Plan-Do-Check-Act activities, 191-192
plans
Service Asset and Configuration Management, 116
Service Design, 60
policies in Service Design, 60
positive procrastination, 215, 219
power failure story, 218-219
prioritizing
failures, 223-224
Incident Management, 157-158
problems, 219-220
proactive activities
Availability Management, 84
Capacity Management, 80
Service Operation, 151
Problem Management process, 32
concepts, 163-164
incident matching, 164
initiation step, 164
major problems, 165
models, 164-165
overview, 162-163
scope, 163
problems, prioritizing, 219-220
process managers, 16-17
process owners, 16
process practitioners, 17
process quality in Service Design, 60
processes
CSI metrics, 198
defined, 13-14
index of, 254-256
Service Design, 64-95
service lifecycle, 30-36
Service Operation, 152-167
Service Strategy, 45-52
Service Transition, 109-134
procrastination, positive, 215, 219
products in Service Design, 61
project managers, 212-213
projected service outages from change, 129
Q
QIL (Quality Issues Log) procedure, 221-222
quality
vs. cost, 151
Incident Management, 154-155
Service Design, 60
Quality Issues Log (QIL) procedure, 221-222
quick wins in CSI, 202
R
RACI (Responsible, Accountable, Consulted, and Informed) matrices, 17-18
RAG (red-amber-green) charts, 77
reactive activities
Availability Management, 84
Capacity Management, 80
Service Operation, 151
real-world stories
configuration issues, 216-218
financing, 211-212
outsourcing, 213-216
project managers, 212-213
review meetings, 213-216
subcontracting, 216
Recommendations section in business case, 51
recovery in Incident Management, 160
recurrence prevention in Problem Management, 163
red-amber-green (RAG) charts, 77
register, CSI, 192, 231-232
Release and Deployment Management process, 34
change linked to, 227
overview, 130-131
scope, 131-132
secure repositories, 132
steps, 133-134
reliability aspect in Availability Management, 83
remediation step in Change Management, 125
reporting
Service Level Management, 72
Service Operation, 177
reporting analysts, 203
repositories in Release and Deployment Management, 132
Repository field in CSI register, 231-232
Request Fulfillment process, 32, 165-167
requests for change (RFCs)
Change Management, 123-126, 129
Change Managers, 222
resilience in Service Design, 60
resolution processes
Incident Management, 160
ISO/IEC 20000, 235
resolver groups in Incident Management, 159-160
resources
Change Management, 139
Service Strategy, 44
Resources Estimate field in CSI register, 231-232
Responsible, Accountable, Consulted, and Informed (RACI) matrices, 17-18
responsiveness
Incident Management, 154
Service Operation, 151
results in Change Management, 122
Retire step in Release and Deployment Management, 134
return on investment (ROI), 50-51
Review field in CSI register, 232-233
review meetings stories, 213-216
Reviewer field in CSI register, 232-233
reviews
Change Management, 123, 125
Incident Management, 160-161
Release and Deployment Management, 134
Service Level Management, 72, 76-77
RFC Number field in CSI register, 232-233
RFCs (requests for change)
Change Management, 123-126, 129
Change Managers, 222
risk management
activities, 19-20
availability, 88-89
component failure impact analysis, 85-86
expanded incident lifecycle, 87-88
fault-tree analysis, 86-87
ITSCM, 89-92
overview, 85
Service Transition, 108
Risks and contingencies section in business case, 51
risks, service, 9-10
RMS Titanic, 29-30
ROI (return on investment), 50-51
roles
Change Management, 130
CSI, 203-204
defined, 15
RACI matrices, 18
Service Design, 95
Service Operation, 176-177
Service Strategy, 52-53
Service Transition, 135-136
rollouts in Change Management, 140
Rumsfeld, Donald, 89
S
SACM. See Service Asset and Configuration Management (SACM) process
schedules for change, 129
scope
Change Management, 120-121
Incident Management, 155
Problem Management, 163
Release and Deployment Management, 131-132
Service Operation, 150
SDP (Service Design package), 62-64
secure repositories in Release and Deployment Management, 132
security in Service Design, 60
Security Management in Service Catalogs, 67
SEI (Software Engineering Institute), 200
self-help functionality in Service Operation, 177
Serial field in CSI register, 231-232
server issue story, 217
service
defined, 9-11
expectations, 11
Service Asset and Configuration Management (SACM) process, 34
activities, 116-117
CSI, 227-228
key concepts and definitions, 114-116
overview, 113-114
process relationships, 118
real-world stories, 216-218
starting with, 118
service availability in Availability Management, 83
service based SLAs, 77
Service Capacity Management process, 79-80
Service Catalog Management process, 33
alternative views, 69-71
business and customer, 68
definition, 66
overview, 66
purpose, 66-67
simple, 68
technical and supporting, 69
Service Catalog section in Service Portfolio Management, 46-47
service definition, 228-229
service delivery processes in ISO/IEC 20000, 235
service descriptions in Service Catalogs, 67
Service Design package (SDP), 62-64
Service Design stage
Availability Management, 82-89
Capacity Management, 78-82
description, 27, 29
Design Coordination, 65
holistic, 60-61
Information Security Management, 92-94
IT Service Continuity Management, 89-92
overview, 59
principles, 61-62
processes and functions overview, 31-34, 61, 64-65
purpose, 60
questions, 100-105
review, 96-98
risk management, 85-92
roles, 95
Service Catalog Management, 66-71
Service Design package, 62-64
Service Level Management, 71-78
summary, 35
Supplier Management, 94-95
Titanic, 30
tools, 96
Service Desk
activities, 168-169
benefits, 168
Incident Management, 157-160
staff attributes, 169
structures, 169-173
service hours, 223
service improvement plans, 77
Service Knowledge Management System (SKMS), 112-113
service level agreement monitoring (SLAM) charts, 76-77
service level agreements (SLAs)
contents, 76
Incident Management, 160
processes, 33
sample, 98-100
Service Level Management, 72
structures, 77-78
Service Level Management (SLM) process, 33, 71-72
operational level agreements, 73
service improvement plans, 77
service level agreements, 72, 77-78
service reviews, 76-77
underpinning contracts, 73-76
service level requirements (SLRs), 63
service lifecycle, 25
CSI, 28-29
description, 25-26
index of stages, 254-256
processes and functions, 30-36
questions, 37-39
review, 36-37
RMS Titanic, 29-30
Service Design, 27
Service Operation, 28
Service Strategy, 27
Service Transition, 27-28
stages summary, 29
service management
defined, 11
history, 1-2
service management system (SMS)
ISO/IEC 20000, 234
Service Design, 60
service metrics in CSI, 198
Service Operation stage
Access Management, 167
Applications Management, 175-176
balance, 150-151
communication, 151-152
description, 28-29
Event Management, 152-153
Incident Management, 153-162
IT Operations Management, 173-174
overview, 149
principles, 150-152
Problem Management, 162-165
processes and functions overview, 31-34, 152, 167
purpose, 150
questions, 181-187
Request Fulfillment, 165-167
review, 178-180
roles, 176-177
scope, 150
Service Capacity Management link, 80
Service Desk functions, 168-173
summary, 35-36
Technical Management, 174-175
Titanic, 30
tools, 177
service owners, 15
Service Pipeline section in Service Portfolio Management, 46
Service Portfolio Management process, 33, 46-48
service program in Service Design package, 64
service provider types, 12
service reviews in Service Level Management, 76-77
Service Strategy stage, 41
assets, 43-45
Business Relationship Management, 48-49
capabilities, 44-45
Demand Management, 51-52
description, 27, 29
Financial Management for IT Services, 49-51
processes and functions overview, 31-34, 45
purpose, 41-42
questions, 55-57
resources, 44
review, 54-55
roles, 52-53
Service Portfolio Management, 46-48
Strategy Management, 45-46
summary, 35
Titanic, 30
tools, 53
value creation, 42-43
Service Testing and Pilots step in Release and Deployment Management, 133
service transition plans in Service Design package, 63-64
Service Transition stage
Change Evaluation, 134
Change Management, 119-130
description, 27-29
Knowledge Management, 110-113
outsourcing, 108-109
overview, 107
processes and functions overview, 31-34, 109-110
purpose, 108
questions, 141-147
Release and Deployment Management, 130-134
review, 136-138
roles, 135-136
Service Asset and Configuration Management, 113-118
Service Validation and Testing, 134
summary, 35
Titanic, 30
tools, 136
Transition Planning and Support, 110
Service Validation and Testing process, 34, 36, 134
serviceability aspect in Availability Management, 83
Seven-Step Service Improvement process, 193-194
severity levels for failures, 223-224
simulation in Service Strategy, 53
single points of failure (SPOFs), 86
skills in Service Design, 60
SKMS (Service Knowledge Management System), 112-113
SLAM (service level agreement monitoring) charts, 76-77
SLAs. See service level agreements (SLAs)
SLM. See Service Level Management (SLM) process
SLRs (service level requirements), 63
Smith, Sydney, 9
SMS (service management system)
ISO/IEC 20000, 234
Service Design, 60
Software Control and Distribution Management process, 130
Software Engineering Institute (SEI), 200
specialist Service Desk groups, 173
specific results from processes, 14
SPOFs (single points of failure), 86
Sponsor field in CSI register, 231-232
stability vs. responsiveness, 151
staff attributes in Service Desk, 169
stakeholders
Change Management process, 140
types, 12-13
Standard Change process, 127
standard changes, 121
standards
best practices, 7
ISO/IEC 20000, 233-235
Service Design, 60
status accounting in Service Asset and Configuration Management, 117
Status field in CSI register, 231-232
strategic category in Service Design, 94-95
Strategy Management process, 36, 45-46
subcontracting real-world story, 216
Supplier Management process, 34
ISO/IEC 20000, 235
Service Design, 94-95
suppliers
best practice enablers, 8
stakeholders, 13
support hours, 223
supporting service catalogs, 69
T
tactical category in Service Design, 94-95
Target Date field in CSI register, 231-232
targets in Service Level Management, 71
Technical Management function, 36, 174-175
technical platform in Service Catalogs, 67
technical service catalogs, 69
Technical Support, 250
technology architectures in Service Design, 61
technology as best practice enabler, 8
technology metrics in CSI, 197
testing Change Management, 140
three-view service catalogs, 70
timeliness
Availability Management, 82
Capacity Management, 79
Incident Management, 154
Titanic, 29-30
tools
asset and configuration control, 227
CSI, 203-204
overview, 20
selecting, 229-230
Service Design, 96
Service Operation, 177
Service Strategy, 53
Service Transition, 136
topology in Service Design, 63
Total Tester exam, 249-250
Tradeteam, 12
training and education
best practices, 8
Change Management, 140
Service Desk, 169
Transfer approach for risk management, 20
Transfer step in Release and Deployment Management, 134
Transition Planning and Support process, 110
transition plans in Service Design package, 63-64
triggers
Change Management, 122
Incident Management, 156
processes, 14
two-view service catalogs, 69-70
Type I service providers, 12
Type I SLAs, 78
Type II service providers, 12
Type II SLAs, 78
Type III service providers, 12
Type III SLAs, 78
U
underlying errors in Problem Management, 163
underpinning contracts (UCs) in Service Level Management, 73-76
urgency
CSI, 202
Incident Management, 157
Urgency field in CSI register, 231-232
user profiles in Demand Management, 52
user satisfaction in Request Fulfillment, 166
users as stakeholders, 12
utility in value creation, 42-43
V
value
Service Strategy, 42-43
Service Transition, 108
value of investment (VOI), 51
verification and audit in Service Asset and Configuration Management, 117
virtual Service Desks, 171
vision in CSI, 195, 202
vital business functions in risk management, 85
VOI (value of investment), 51
W
warehouse management system (WMS) story, 212-213
warning events, 153
warranty in value creation, 42-43
White Star Line, 30
workarounds in Problem Management, 163
workflow and process control in Service Operation, 177
workstations in Service Operation, 177



